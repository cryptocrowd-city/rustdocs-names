var N=null,E="",T="t",U="u",searchIndex={};
var R=["cfg_if","UnicodeXID","choice","result","ConstantTimeEq","ConditionallySelectable","ConditionallyNegatable","ConditionallyAssignable","ConditionallySwappable","Choice","errorkind","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","rand_core","Implement `fill_bytes` by reading chunks from the output…","try_from","try_into","borrow_mut","rand_core::block","to_owned","clone_into","type_id","next_u32","next_u64","fill_bytes","try_fill_bytes","from_seed","seed_from_u64","from_rng","rngcore","blockrng","blockrng64","formatter","description","stderror","ErrorKind","BlockRng","BlockRng64","BlockRngCore","SeedableRng","borrow","typeid","demangle","trydemangleerror","Demangle","TryDemangleError","scopeguard","should_run","Strategy","ScopeGuard","lazy_static","This returns the underlying value if it is `Some` or the…","ctoption","Returns a `None` value if the option is `None`, otherwise…","conditional_select","CtOption","byte_slice_cast","dst_type","byte_slice_cast::Error","Trait for converting from a byte slice to a slice of a…","Trait for converting from an immutable slice of a…","Trait for converting from a mutable slice of a…","Trait for converting from a byte `Vec<u8>` to a `Vec<T>`…","FromByteSlice","ToByteSlice","ToMutByteSlice","FromByteVec","AsSliceOf","AsMutSliceOf","AsByteSlice","AsMutByteSlice","IntoVecOf","IntoByteVec","to_string","fromhexerror","fromiterator","FromHexError","split128","ppv_lite86","Generate only the basic implementations necessary to be…","ppv_lite86::x86_64","instance","vec128_storage","vec256_storage","vec512_storage","default","RotateEachWord32","RotateEachWord64","UnsafeFrom","LaneWords4","MultiLane","StoreBytes","SseMachine","Avx2Machine","deref_mut","memory_units","round_up_to","memory_units::wasm32","memory_units::target","byte_size","ordering","partial_cmp","RoundUpTo","Zeroizing","into_inner","constant_time_eq","environmental","Look up a given hash into the bytes that hash to it,…","Check for the existance of a hash-key.","contains","Remove a datum previously inserted. Insertions can be…","PlainDBRef","HashDBRef","AsPlainDB","integer_sqrt","IntegerSquareRoot","parity_wasm::elements","Function","parity_wasm::elements::RelocationEntry","Offset of the value to rewrite.","Index of the function symbol in the symbol table.","Function table index.","Linear memory index.","Index of the data symbol in the symbol table.","Addend to add to the address.","peek_size","Returns size of the module in the provided stream.","serialize","codesection","typesection","importsection","globalsection","exportsection","tablesection","datasection","elementsection","memorysection","functionsection","customsection","Functions signatures section reference, if any.","namesection","Functions signatures section mutable reference, if any.","importentry","with_entries","entries_mut","tabletype","memorytype","globalentry","entries","exportentry","elementsegment","datasegment","List of all data entries in the section (mutable).","valuetype","resizablelimits","external","field_mut","internal","globaltype","initexpr","instruction","Empty expression with only `Instruction::End` instruction.","List of instructions used in the expression.","List of individual instructions.","instructions","An i32 initializer expression that computes the offset at…","offset_mut","indexmap","deserialize","modulenamesubsection","functionnamesubsection","localnamesubsection","module_mut","functions","locals_mut","The name of this module.","A map from function indices to a map from variables…","Deserialize names, making sure that all names correspond…","name_mut","ID of the section containing the relocations described in…","Name of the section containing the relocations described…","parity_wasm","elements","signature","New builder for export entry","modulebuilder","section","functionbuilder","signaturesbuilder","importbuilder","exportbuilder","globalbuilder","New signature builder","with_callback","return_type","Finish current builder","New builder chained with specified callback","signaturebuilder","funcbody","with_signature","init_expr","value_type","valuetypebuilder","Finalize current builder spawning resulting struct","parity_wasm::builder","varuint32","into_iter","varuint64","importcounttype","tableelementtype","varuint7","varint32","varint64","varuint1","blocktype","functiontype","brtabledata","relocsection","relocationentry","tabledefinition","tableentrydefinition","CountedListWriter","BrTableData","Unparsed","ImportCountType","ValueType","BlockType","TableElementType","Instruction","RelocationEntry","CountedList","CountedWriter","CustomSection","TypeSection","ImportSection","FunctionSection","TableSection","MemorySection","GlobalSection","ExportSection","CodeSection","ElementSection","DataSection","FunctionType","GlobalType","TableType","ResizableLimits","MemoryType","ImportEntry","ExportEntry","GlobalEntry","Instructions","ElementSegment","DataSegment","NameSection","ModuleNameSubsection","FunctionNameSubsection","LocalNameSubsection","RelocSection","Deserialize","Serialize","FunctionDefinition","TableDefinition","TableEntryDefinition","ModuleBuilder","SignatureBuilder","TypeRefBuilder","SignaturesBuilder","FuncBodyBuilder","FunctionBuilder","ImportBuilder","MemoryBuilder","TableBuilder","ExportBuilder","ExportInternalBuilder","GlobalBuilder","DataSegmentBuilder","VarUint32","VarUint64","frombase58error","FromBase58Error","FromBase58","with_capacity","smallvec","Constructs a new `SmallVec` on the stack from an `A`…","extend_from_slice","as_mut_slice","size_hint","from_iter","intoiterator","next_back","ExtendFromSlice","Gets the contents of the cell, initializing it with `f` if…","once_cell","A value which is initialized on the first access.","Creates a new empty cell.","Gets the reference to the underlying value. Returns `None`…","Sets the contents of this cell to `value`. Returns…","get_or_init","Consumes the `OnceCell`, returning the wrapped value.…","Creates a new lazy value with the given initializing…","Forces the evaluation of this lazy value and returns a…","once_cell::unsync","once_cell::sync","oncecell","OnceCell","Encode the hex strict representing `self` into the…","InvalidHexCharacter","alloc_zeroed","allocerr","nonnull","Behaves like `alloc`, but also ensures that the contents…","cannotreallocinplace","A pointer type for heap allocation.","Compares and returns the minimum of two values.","Compares and returns the maximum of two values.","PartialEq","PartialOrd","Performs the conversion.","The type returned in the event of a conversion error.","arguments","Formats the value using the given formatter.","A struct to help with `fmt::Debug` implementations.","enumerate","max_by_key","Returns the element that gives the maximum value from the…","min_by_key","Returns the element that gives the minimum value from the…","Lexicographically compares the elements of this `Iterator`…","Determines if the elements of this `Iterator` are equal to…","Determines if the elements of this `Iterator` are…","Checks if the elements of this iterator are sorted using…","successors","The type of the elements being iterated over.","IntoIter","is_empty","Method which takes an iterator and generates `Self` from…","Required trait for constants used in pattern matches.","Returns the [ABI]-required minimum alignment of a type.","Returns the [ABI]-required minimum alignment of the type…","discriminant","An integer that is known not to equal zero.","The resulting type after applying the `-` operator.","Performs the call operation.","Used for indexing operations (`container[index]`) in…","index_mut","The lower bound of the range (inclusive).","The upper bound of the range (exclusive).","Reads the value from `src` without moving it. This leaves…","Overwrites a memory location with the given value without…","Copies `count * size_of::<T>()` bytes from `src` to `dst`.…","The resulting type after concatenation","An iterator over subslices separated by elements that…","An iterator over the subslices of the vector which are…","from_raw_parts","Forms a slice from a pointer and a length.","Performs the same functionality as [`from_raw_parts`],…","Converts a reference to T into a slice of length 1…","Returns a shared reference to the output at this location,…","Returns a mutable reference to the output at this…","An iterator over a slice in (non-overlapping) chunks…","An iterator over a slice in (non-overlapping) mutable…","utf8error","Converts a slice of bytes to a string slice without…","searchstep","sp_std::str","A map based on a B-Tree.","sp_std::collections","A set based on a B-Tree.","A double-ended queue implemented with a growable ring…","A contiguous growable array type, written `Vec<T>` but…","Trait for equality comparisons which are equivalence…","Derive macro generating an impl of the trait `Eq`.","Trait for equality comparisons which are partial…","This method tests for `self` and `other` values to be…","This method tests for `!=`.","Derive macro generating an impl of the trait `PartialEq`.","A helper struct for reverse ordering.","A common trait for the ability to explicitly duplicate an…","Returns a copy of the value.","clone_from","Performs copy-assignment from `source`.","Derive macro generating an impl of the trait `Clone`.","sp_std::alloc","sp_std::any","sp_std::borrow","sp_std::prelude","into_searcher","is_contained_in","is_prefix_of","is_suffix_of","sp_std::cell","sp_std::cmp","sp_std::convert","sp_std::fmt","sp_std::hash","sp_std::iter","sp_std::marker","sp_std::mem","sp_std::num","sp_std::ops","sp_std::ptr","sp_std::rc","sp_std::result","sp_std::slice","sp_std::str::pattern","sp_std::vec","sp_std::collections::btree_map","sp_std::collections::btree_set","sp_std::collections::vec_deque","write_vectored","write_all","write_fmt","osstring","initializer","pathbuf","div_assign","wrapping","add_assign","product","nth_back","try_rfold","build_hasher","into_result","from_error","next_match","haystack","next_reject","infallible","tryfrominterror","shr_assign","nonzeroi8","layouterr","nonzerou32","nonzeroi128","nonzeroisize","manuallydrop","nonzerousize","rangefrom","nonzeroi64","nonzeroi32","parseboolerror","nonzerou8","nonzerou64","parsefloaterror","generatorstate","nonzerou128","nonzerou16","rangetoinclusive","nonzeroi16","parseinterror","shl_assign","from_str","bitand_assign","phantomdata","buildhasherdefault","unsafecell","rem_assign","sub_assign","phantompinned","try_fold","rposition","position","is_sorted_by","get_unchecked","get_unchecked_mut","get_mut","Takes each element in the `Iterator`: if it is an `Err`,…","bitor_assign","next_match_back","next_reject_back","mul_assign","peekable","siphasher","charpredicatesearcher","repeatwith","skipwhile","takewhile","maybeuninit","rangeinclusive","intoiter","fpcategory","interrorkind","rangefull","filtermap","reverse","refcell","write_str","write_char","start_bound","end_bound","bitxor_assign","vecdeque","dealloc","realloc","btreeset","btreemap","call_once","write_u16","write_u32","write_u64","write_u128","write_usize","write_i16","write_i32","write_i64","write_i128","write_isize","Creates a layout describing the record for `n` instances…","Creates a layout describing the record for `self` followed…","downcast_ref","Forwards to the method defined on the type `Any`.","downcast_mut","assume_init","Attempt to downcast the box to a concrete type.","borrowerror","borrowmuterror","Returns a raw pointer to the underlying data in this cell.","Returns a mutable reference to the underlying data.","Immutably borrows the wrapped value, returning an error if…","map_split","Unwraps the value.","alignment","debuglist","debugmap","Finishes output and returns any error encountered.","debugset","debugstruct","debugtuple","min_value","Returns the smallest value that can be represented by this…","max_value","Returns the largest value that can be represented by this…","count_ones","Returns the number of ones in the binary representation of…","count_zeros","Returns the number of zeros in the binary representation…","trailing_zeros","Returns the number of trailing zeros in the binary…","rotate_left","Shifts the bits to the left by a specified amount, `n`,…","rotate_right","Shifts the bits to the right by a specified amount, `n`,…","swap_bytes","Reverses the byte order of the integer.","reverse_bits","Reverses the bit pattern of the integer.","Converts an integer from big endian to the target's…","Converts an integer from little endian to the target's…","Converts `self` to big endian from the target's endianness.","Converts `self` to little endian from the target's…","Raises self to the power of `exp`, using exponentiation by…","from_be","from_le","leading_zeros","Returns the number of leading zeros in the binary…","Computes the absolute value of `self`, wrapping around at…","Returns a number representing sign of `self`.","is_positive","Returns `true` if `self` is positive and `false` if the…","is_negative","Returns `true` if `self` is negative and `false` if the…","is_power_of_two","Returns `true` if and only if `self == 2^k` for some `k`.","next_power_of_two","Returns the smallest power of two greater than or equal to…","new_unchecked","Creates a non-zero without checking the value.","Creates a non-zero if the given value is not zero.","Returns the value as a primitive type.","Returns `true` if `item` is contained in the range.","Returns `true` if the range contains no items.","new_uninit","new_uninit_slice","into_raw_non_null","downcast","into_raw","from_raw","strong_count","weak_count","Unwraps a result, yielding the content of an [`Ok`].","Unwraps a result, yielding the content of an [`Err`].","Converts from `Result<T, E>` (or `&Result<T, E>`) to…","Converts from `Result<T, E>` (or `&mut Result<T, E>`) to…","as_slice","Views the underlying data as a subslice of the original…","Returns the remainder of the original slice that is not…","remainder","into_remainder","reserve_exact","tryreserveerror","shrink_to_fit","into_boxed_slice","Extracts a slice containing the entire vector.","Extracts a mutable slice of the entire vector.","as_mut_ptr","swap_remove","Retains only the elements specified by the predicate.","dedup_by_key","Removes all but the first of consecutive elements in the…","Creates a draining iterator that removes the specified…","Resizes the `Vec` in-place so that `len` is equal to…","Creates an iterator which uses a closure to determine if…","Returns the remaining items of this iterator as a slice.","Returns the remaining items of this iterator as a mutable…","contains_key","split_off","Ensures a value is in the entry by inserting the default…","Constructs a double-ended iterator over a sub-range of…","difference","symmetricdifference","intersection","Moves all elements from `other` into `Self`, leaving…","Splits the collection into two at the given key. Returns…","capacity","Reserves the minimum capacity for exactly `additional`…","Reserves capacity for at least `additional` more elements…","try_reserve_exact","Tries to reserves the minimum capacity for exactly…","try_reserve","Tries to reserve capacity for at least `additional` more…","shrink_to","truncate","iter_mut","Returns a pair of slices which contain, in order, the…","Removes an element from anywhere in the `VecDeque` and…","resize_with","Modifies the `VecDeque` in-place so that `len()` is equal…","GlobalAlloc","BorrowMut","Alignment","BuildHasher","FromIterator","IntoIterator","DoubleEndedIterator","ExactSizeIterator","FpCategory","IntErrorKind","AddAssign","SubAssign","MulAssign","DivAssign","RemAssign","BitAndAssign","BitOrAssign","BitXorAssign","ShlAssign","ShrAssign","RangeFrom","RangeToInclusive","RangeBounds","Generator","GeneratorState","SliceIndex","SearchStep","Searcher","ReverseSearcher","LayoutErr","CannotReallocInPlace","BorrowError","BorrowMutError","UnsafeCell","Infallible","Formatter","Arguments","DebugList","DebugStruct","DebugTuple","BuildHasherDefault","SipHasher","RepeatWith","Successors","FilterMap","Enumerate","SkipWhile","TakeWhile","PhantomData","PhantomPinned","Discriminant","ManuallyDrop","MaybeUninit","ParseIntError","ParseFloatError","TryFromIntError","NonZeroU8","NonZeroU16","NonZeroU32","NonZeroU64","NonZeroU128","NonZeroUsize","NonZeroI8","NonZeroI16","NonZeroI32","NonZeroI64","NonZeroI128","NonZeroIsize","RangeFull","RangeInclusive","IterMut","ChunksMut","SplitNMut","RSplitNMut","RSplitMut","ChunksExact","ChunksExactMut","RChunksMut","RChunksExact","RChunksExactMut","Utf8Error","SplitTerminator","RSplitTerminator","MatchIndices","RMatchIndices","CharIndices","ParseBoolError","SplitWhitespace","CharSearcher","CharSliceSearcher","CharPredicateSearcher","StrSearcher","EncodeUtf16","SplitAsciiWhitespace","EscapeDebug","EscapeDefault","EscapeUnicode","DrainFilter","VacantEntry","OccupiedEntry","ValuesMut","Difference","SymmetricDifference","Intersection","unwrap_or","unwrap_or_else","capacityerror","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push `element` to the end of the vector.","Insert `element` at position `index`.","Remove the element at `index` and swap the last element…","Remove the element at `index` and shift down the following…","arrayvec","arraystring","The array's element capacity","ArrayString","CapacityError","Shortens the vector, keeping the first `len` elements and…","paderror","unpaderror","pad_block","UnpadError","ZeroPadding","NoPadding","Returns the first and all the rest of the bits of the…","Returns the last and all the rest of the bits in the…","Produces a galloping iterator over consecutive chunks in…","Divides one slice into two at an index.","bitslice","Changes the cursor type of the slice handle.","Produces the remainder of the original slice, which will…","Sets a specific bit in an element to a given value.","Gets a specific bit in an element.","from_element","from_slice","Performs “reverse” addition (left to right instead of…","change_cursor","as_bitslice","as_mut_bitslice","Accesses the `BitSlice<C, T>` to which the `BitBox` refers.","from_bitslice","add_reverse","add_assign_reverse","bitvec::cursor","bitvec::slice","bitvec::boxed","bitvec::vec","Maps a semantic count to a concrete position.","Accesses the underlying store.","Advances the iterator by one, returning the first chunk in…","Hints at the number of chunks remaining in the iterator.","Counts how many chunks are live in the iterator, consuming…","Advances the iterator by `n` chunks, starting from zero.","Consumes the iterator, returning only the final chunk.","Consumes the iterator, returning only the final bit.","Advances the iterator by one, returning the first bit in…","Hints at the number of bits remaining in the iterator.","Counts how many bits are live in the iterator, consuming it.","Advances the iterator by `n` bits, starting from zero.","Produces the next chunk from the back of the slice.","Produces the next chunk from the front of the slice.","chunksexact","rchunksexact","bigendian","littleendian","Performs a comparison by `<` or `>`.","rangeto","BigEndian","LittleEndian","Shrinks the capacity of the vector as much as possible.","Clears the vector, removing all values.","Splits the collection into two at the given index.","Moves all the elements of `other` into `self`, leaving…","Marker type which indicates that the Guard type for a lock…","mutexguard","Attempts to acquire this lock until a timeout is reached.","mappedmutexguard","Temporarily unlocks the mutex to execute the given function.","Makes a new `MappedMutexGuard` for a component of the…","Attempts to make a new `MappedMutexGuard` for a component…","unlock_fair","Unlocks the mutex using a fair unlock protocol.","Consumes this mutex, returning the underlying data.","Attempts to acquire this lock.","reentrantmutexguard","force_unlock","Forcibly unlocks the mutex.","Returns the underlying raw mutex object.","force_unlock_fair","try_lock_for","try_lock_until","reentrantmutex","mappedreentrantmutexguard","unlocked_fair","Temporarily yields the mutex to a waiting thread if there…","Makes a new `MappedReentrantMutexGuard` for a component of…","Attempts to make a new `MappedReentrantMutexGuard` for a…","rwlockreadguard","rwlockwriteguard","Attempts to acquire this `RwLock` with shared read access…","Attempts to acquire this `RwLock` with exclusive write…","Locks this `RwLock` with shared read access, blocking the…","Attempts to acquire this `RwLock` with shared read access.","rwlockupgradablereadguard","Attempts to acquire this `RwLock` with upgradable read…","mappedrwlockreadguard","unlocked","Temporarily unlocks the `RwLock` to execute the given…","Returns a reference to the original reader-writer lock…","try_map","mappedrwlockwriteguard","Unlocks the `RwLock` using a fair unlock protocol.","Temporarily yields the `RwLock` to a waiting thread if…","downgrade","Tries to atomically upgrade an upgradable read lock into a…","Make a new `MappedRwLockReadGuard` for a component of the…","Attempts to make a new `MappedRwLockReadGuard` for a…","Make a new `MappedRwLockWriteGuard` for a component of the…","Attempts to make a new `MappedRwLockWriteGuard` for a…","Atomically downgrades a write lock into a read lock…","try_lock","GuardMarker","Marker type which determines whether a lock guard should…","Duration type used for `try_lock_for`.","Instant type used for `try_lock_until`.","Attempts to acquire a shared lock until a timeout is…","Attempts to acquire an exclusive lock until a timeout is…","Additional methods for RwLocks which support recursive…","Additional methods for RwLocks which support atomically…","try_upgrade","Additional methods for RwLocks which support upgradable…","downgrade_to_upgradable","Attempts to acquire an upgradable lock until a timeout is…","try_upgrade_for","Attempts to upgrade an upgradable lock to an exclusive…","try_upgrade_until","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked `RwLock`.","bump_shared","Temporarily yields a shared lock to a waiting thread if…","bump_exclusive","Temporarily yields an exclusive lock to a waiting thread…","bump_upgradable","Temporarily yields an upgradable lock to a waiting thread…","MutexGuard","MappedMutexGuard","ReentrantMutex","ReentrantMutexGuard","MappedReentrantMutexGuard","RwLockReadGuard","RwLockWriteGuard","RwLockUpgradableReadGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","RawMutexFair","RawMutexTimed","GetThreadId","RawRwLock","RawRwLockFair","RawRwLockDowngrade","RawRwLockTimed","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockUpgrade","RawRwLockUpgradeFair","RawRwLockUpgradeDowngrade","RawRwLockUpgradeTimed","GuardSend","GuardNoSend","A wrapper type to construct uninitialized instances of `T`.","Creates a new `MaybeUninit<T>` initialized with the given…","Creates a new `MaybeUninit<T>` in an uninitialized state.","A promotable constant, equivalent to `uninit()`.","Creates a new `MaybeUninit<T>` in an uninitialized state,…","Sets the value of the `MaybeUninit<T>`. This overwrites…","Gets a pointer to the contained value. Reading from this…","Gets a mutable pointer to the contained value. Reading…","Extracts the value from the `MaybeUninit<T>` container.…","Reads the value from the `MaybeUninit<T>` container. The…","Gets a reference to the contained value.","Gets a mutable reference to the contained value.","first_ptr","Gets a pointer to the first element of the array.","first_ptr_mut","Gets a mutable pointer to the first element of the array.","Returns the element for the current thread, or creates it…","Returns the element for the current thread, if it exists.","get_or_try","Returns a mutable iterator over the local values of all…","Removes all thread-specific values from the `ThreadLocal`,…","get_default","Returns the element for the current thread, or creates a…","threadlocal","cachedthreadlocal","ThreadLocal","CachedThreadLocal","jitterrng","timererror","TimerError","JitterRng","tracing_core","`Dispatch` trace data to a [`Subscriber`].","dispatch","setglobaldefaulterror","metadata","`Event`s represent single points in time where something…","valueset","Constructs a new `Event` with the specified metadata and…","An opaque key allowing O(1) access to a field in a…","callsite","identifier","Returns an [`Identifier`] that uniquely identifies the…","Metadata describing a [span] or [event].","Describes the level of verbosity of a span or event.","Returns `Attributes` describing a new child span of the…","is_contextual","Constructs a new `Current` that indicates the current…","register_callsite","Registers a new callsite with this subscriber, returning…","interest","attributes","Record a set of values on a span.","record_follows_from","Adds an indication that `span` follows from the span with…","Records that an [`Event`] has occurred.","Records that a span has been exited.","clone_span","Notifies the subscriber that a [span ID] has been cloned.","drop_span","try_close","current_span","Returns a type representing this subscriber's view of the…","Trait implemented by callsites.","set_interest","Sets the [`Interest`] for this callsite.","Returns the [metadata] associated with the callsite.","Subscriber","Trait representing the functions required to collect trace…","Returns true if a span or event with the specified…","new_span","Visit the construction of a new span, returning a new…","Records that a span has been entered.","This method is soft-deprecated.","Notifies the subscriber that a [`span ID`] has been…","downcast_raw","If `self` is the same type as the provided `TypeId`,…","tracing_core::dispatcher","tracing_core::event","tracing_core::field","tracing_core::metadata","tracing_core::callsite","tracing_core::span","tracing_core::subscriber","displayvalue","debugvalue","parselevelerror","Callsite","Dispatch","Metadata","Attributes","Identifier","DefaultGuard","SetGlobalDefaultError","DisplayValue","DebugValue","ParseLevelError","Returns true if and only if the given character is a…","unicodeworderror","The span of this class.","regex_syntax::ast","regex_syntax::ast::ErrorKind","A single zero-width assertion.","A grouped regular expression.","Alternation","An alternation of regular expressions.","A concatenation of regular expressions.","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.","A perl character class, e.g., `\\d` or `\\W`.","A bracketed character class set, which may contain zero or…","CaptureName","ParserBuilder","A builder for a regular expression parser.","parserbuilder","withcomments","classsetitem","classsetbinaryop","classasciikind","regex_syntax","ClassUnicode","Repetition","WordBoundary","A set of characters represented by Unicode scalar values.","CaptureIndex","NonCapturing","regex_syntax::hir","RepetitionKind","The kind of a repetition operator.","RepetitionRange","Executes an implementation of `Visitor` in constant stack…","literals","Create a new printer.","Print the given `Ast` to the given writer. The writer must…","translatorbuilder","All implementors of `Visitor` must provide a `finish`…","visit_alternation_in","Return the type of this error.","The original pattern string in which this error occurred.","Return the span at which this error occurred.","Return true if and only if this HIR is required to match…","Return true if and only if this HIR contains any…","is_always_utf8","classunicode","case_fold_simple","Expand this character class such that it contains all case…","casefolderror","classunicoderange","Create a new class from a sequence of ranges.","Create a new class with no ranges.","classbytes","Add a new range to this set.","Return an iterator over all ranges in this class.","Return the underlying ranges as a slice.","symmetric_difference","classbytesrange","Return the start of this range.","Return the end of this range.","is_match_empty","Create a new parser builder with a default configuration.","Build a parser from this configuration with the given…","Set the nesting limit for this parser.","Whether to support octal syntax or not.","allow_invalid_utf8","ignore_whitespace","Enable verbose mode in the regular expression.","case_insensitive","dot_matches_new_line","Enable or disable the Unicode flag (`u`) by default.","Create a new parser with a default configuration.","regex_syntax::ast::parse","regex_syntax::ast::print","regex_syntax::hir::literal","regex_syntax::hir::print","regex_syntax::hir::translate","regex_syntax::utf8","alternation","classsetunion","repetition","translator","wordboundary","repetitionkind","repetitionrange","utf8sequence","literalkind","specialliteralkind","hexliteralkind","classperlkind","classascii","classunicodekind","classunicodeopkind","classbracketed","classsetrange","classsetbinaryopkind","assertionkind","repetitionop","groupkind","capturename","flagsitem","flagsitemkind","utf8range","This method is called before beginning traversal of the AST.","This method is called on an `Ast` before descending into…","visit_post","This method is called on an `Ast` after descending all of…","This method is called between child nodes of an…","visit_class_set_item_pre","This method is called on every `ClassSetItem` before…","visit_class_set_item_post","This method is called on every `ClassSetItem` after…","visit_class_set_binary_op_pre","This method is called on every `ClassSetBinaryOp` before…","visit_class_set_binary_op_post","This method is called on every `ClassSetBinaryOp` after…","visit_class_set_binary_op_in","This method is called between the left hand and right hand…","This method is called before beginning traversal of the HIR.","visit_pre","This method is called on an `Hir` before descending into…","This method is called on an `Hir` after descending all of…","This method is called between child nodes of an alternation.","WithComments","ClassBracketed","ClassSetRange","ClassSetUnion","ClassSetBinaryOp","RepetitionOp","LiteralKind","SpecialLiteralKind","HexLiteralKind","ClassPerlKind","ClassAsciiKind","ClassUnicodeKind","ClassUnicodeOpKind","ClassSetItem","ClassSetBinaryOpKind","AssertionKind","FlagsItemKind","GroupKind","TranslatorBuilder","ClassUnicodeRange","ClassBytesRange","Utf8Sequence","Utf8Sequences","UnicodeWordError","CaseFoldError","ClassUnicodeIter","ClassBytesIter","proc_macro2","tokenstream","Creates a new suffixed integer literal with the specified…","Creates a new unsuffixed integer literal with the…","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","proc_macro2::token_stream","tokentree","delimiter","TokenStream","levelfilter","setloggererror","The module path of the message, if it is a `'static` string.","recordbuilder","module_path","module_path_static","file_static","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","metadatabuilder","LevelFilter","RecordBuilder","MetadataBuilder","SetLoggerError","The \"error\" level.","The \"warn\" level.","The \"info\" level.","The \"debug\" level.","The \"trace\" level.","An iterator over all occurrences of the needles in a…","An iterator over all occurrences of the needle in a…","Creates a new iterator that yields all positions of needle…","Reads an unsigned n-bytes integer from the underlying…","Reads a signed n-bytes integer from the underlying reader.","DEPRECATED.","Writes an unsigned n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","read_uint128","Reads an unsigned n-bytes integer from `buf`.","write_uint128","Writes an unsigned integer `n` to `buf` using only `nbytes`.","read_int128","Reads a signed n-bytes integer from `buf`.","Reads a IEEE754 single-precision (4 bytes) floating point…","Reads a IEEE754 double-precision (8 bytes) floating point…","write_int128","Writes a signed integer `n` to `buf` using only `nbytes`.","Writes a IEEE754 single-precision (4 bytes) floating point…","Writes a IEEE754 double-precision (8 bytes) floating point…","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","Reads IEEE754 single-precision (4 bytes) floating point…","read_f64_into_unchecked","write_uint","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","read_u128","read_uint","Reads an unsigned 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from the underlying reader.","Reads an unsigned 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from the underlying reader.","Reads an unsigned 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned 128 bit integer from the underlying…","Reads a signed 128 bit integer from the underlying reader.","Reads a sequence of unsigned 16 bit integers from the…","Reads a sequence of unsigned 32 bit integers from the…","Reads a sequence of unsigned 64 bit integers from the…","Reads a sequence of unsigned 128 bit integers from the…","read_i8_into","Reads a sequence of signed 8 bit integers from the…","Reads a sequence of signed 16 bit integers from the…","Reads a sequence of signed 32 bit integers from the…","Reads a sequence of signed 64 bit integers from the…","Reads a sequence of signed 128 bit integers from the…","Reads a sequence of IEEE754 single-precision (4 bytes)…","Reads a sequence of IEEE754 double-precision (8 bytes)…","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","ReadBytesExt","WriteBytesExt","imr_multiaddr","imr_interface","arp_netmask","it_interval","e_phentsize","e_shentsize","sh_addralign","ch_addralign","st_atime_nsec","st_mtime_nsec","st_ctime_nsec","cpu_set_t","if_nameindex","ip_mreq_source","sockaddr_in","sockaddr_in6","sockaddr_ll","sched_param","epoll_event","sockaddr_un","sockaddr_storage","signalfd_siginfo","packet_mreq","input_event","input_absinfo","input_keymap_entry","ff_envelope","ff_constant_effect","ff_ramp_effect","ff_condition_effect","ff_periodic_effect","ff_rumble_effect","dl_phdr_info","posix_spawn_file_actions_t","posix_spawnattr_t","in6_pktinfo","arpd_request","inotify_event","sockaddr_vm","sockaddr_nl","sockaddr_alg","statx_timestamp","__exit_status","nl_mmap_req","nl_mmap_hdr","pthread_attr_t","_libc_fpxreg","_libc_xmmreg","_libc_fpstate","user_regs_struct","user_fpregs_struct","max_align_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_condattr_t","pthread_cond_t","pthread_mutex_t","pthread_rwlock_t","in_pktinfo","arpreq_old","itimerspec","input_mask","ff_trigger","genlmsghdr","nl_pktinfo","sigaction","statvfs64","mcontext_t","ucontext_t","Trait describing an object that can hash a slice of bytes.…","The output type of the `Hasher`","What to use to build `HashMap`s with this `Hasher`.","The length in bytes of the `Hasher` output.","Compute the hash of the provided slice of bytes returning…","Start index (inclusive)","End index (exclusive)","RangeArgument","XorShiftRng","wasmi_validation","func_type_indexes","push_memory","modulecontext","stackwithlimit","blockframe","FuncValidator","functionvalidationcontext","wasmi_validation::stack","wasmi_validation::context","wasmi_validation::func","wasmi_validation::util","on_function_validated","next_instruction","modulecontextbuilder","startedwith","stackvaluetype","StackWithLimit","ModuleContext","ModuleContextBuilder","FunctionValidationContext","StartedWith","StackValueType","PlainValidator","PlainFuncValidator","Hash256StdHasher","Mcg128Xsl64","new_from_u64","Create an ISAAC-64 random number generator using an `u64`…","rand_isaac::isaac","rand_isaac::isaac64","Refills the output buffer, `results`. See also the…","Create an ISAAC random number generator using an `u64` as…","Isaac64Core","A trait for hashing an arbitrary stream of bytes.","Absorb additional input. Can be called multiple times.","Pad and squeeze the state to the output.","A potential output from `Cmp`, this is the type equivalent…","Instantiates a singleton representing this bit.","Instantiates a singleton representing this strictly…","This function isn't used in this crate, but may be useful…","The type representing either `True` or `False`","Method returning `True` or `False`.","Instantiates a singleton representing this unsigned integer.","typenum::bit","is_less_or_equal","is_not_equal","is_greater_or_equal","is_greater","typenum::int","partial_div","is_equal","typenum::uint","typenum::array","to_ordering","to_isize","IsLessOrEqual","IsGreaterOrEqual","For use by `ToTokens` implementations.","Convert `self` directly into a `TokenStream` object.","Span associated with this `IdentFragment`.","to_token_stream","into_token_stream","TokenStreamExt","IdentFragment","A cryptographically secure random number generator that…","partialord","num_traits","neg_infinity","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","is_infinite","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","is_sign_negative","Raise a number to an integer power.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","num_traits::ops","Fused multiply-add. Computes `(self * a) + b` with only…","Performs the fused multiply-add operation.","The result after applying the operator.","Returns `true` if `self` is positive, including `+0.0`,…","Returns `true` if `self` is negative, including `-0.0`,…","Take the reciprocal (inverse) of a number, `1/x`.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","to_degrees","Converts radians to degrees.","to_radians","Converts degrees to radians.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Computes the absolute value.","Returns the sign of the number.","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","MulAddAssign","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","blake2bresult","Container for a hash result.","State context.","Convenience function for all-in-one computation.","Runs the self-test for this hash function.","Returns the contained hash result as a byte string.","Returns the length of the hash result.","Creates a new hashing context without a key.","Creates a new hashing context with a key.","Updates the hashing context with more data.","Consumes the hashing context and returns the resulting hash.","blake2sresult","blake2_rfc::blake2b","blake2_rfc::blake2s","Blake2bResult","Blake2sResult","backtrace_state","defaulthashbuilder","collectionallocerr","An iterator visiting all key-value pairs in arbitrary…","with_hasher","with_capacity_and_hasher","A hash map implemented with quadratic probing and SIMD…","A builder for computing where in a HashMap a key-value…","A view into an occupied entry in a `HashMap`. It is part…","A view into a vacant entry in a `HashMap`. It is part of…","A view into a single entry in a map, which may either be…","An occupied entry.","A vacant entry.","A hash set implemented as a `HashMap` where the value is…","hashbrown::hash_map","hashbrown::hash_set","hashbrown","Creates a consuming iterator, that is, one that moves each…","rawentrymut","from_key_hashed_nocheck","get_key_value","Converts the OccupiedEntry into a mutable reference to the…","Sets the value of the entry, and returns the entry's old…","remove_entry","Sets the value of the entry with the VacantEntry's key,…","or_insert_with","Ensures a value is in the entry by inserting the result of…","Provides in-place mutable access to an occupied entry…","Gets a reference to the key in the entry.","Take the ownership of the key and value from the map.","Gets a reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Takes the value out of the entry, and returns it.","CollectionAllocErr","RawEntryMut","RawEntryBuilderMut","RawOccupiedEntryMut","RawVacantEntryMut","RawEntryBuilder","A lazy iterator producing elements in the difference of…","A lazy iterator producing elements in the symmetric…","A lazy iterator producing elements in the intersection of…","A lazy iterator producing elements in the union of…","Returns a reference to the value corresponding to the…","Returns a reference to the value corresponding to the key.","Returns the key-value pair corresponding to the supplied…","Returns a mutable reference to the value corresponding to…","Inserts a key-value pair into the map.","Removes a key from the map, returning the value at the key…","Gets the given key's corresponding entry in the map for…","Returns the number of elements in the map.","Returns a reference to this entry's key.","and_modify","Gets a reference to the key that would be used when…","Take ownership of the key.","Visits the values representing the difference, i.e., the…","Visits the values representing the symmetric difference,…","Visits the values representing the intersection, i.e., the…","Visits the values representing the union, i.e., all the…","Clears the set, removing all values.","Returns `true` if the set contains a value.","Returns a reference to the value in the set, if any, that…","is_disjoint","Returns `true` if `self` has no elements in common with…","Returns `true` if the set is a subset of another, i.e.,…","is_superset","Returns `true` if the set is a superset of another, i.e.,…","Adds a value to the set.","Adds a value to the set, replacing the existing value, if…","Removes and returns the value in the set, if any, that is…","Returns the number of elements in the set.","Interface to the random number generator of the operating…","Unroll the given for loop","FromDecStrErr","triplet_mix","Returns the truncated principal `n`th root of an integer…","Returns the truncated principal square root of an integer…","Returns the truncated principal cube root of an integer --…","div_mod_floor","extendedgcd","ExtendedGcd","IterBinomial","Calls a closure and overwrites its stack on return.","clear_on_drop","clearondrop","InitializableFromZeroed","ClearOnDrop","aho_corasick","aho_corasick::ErrorKind","ahocorasick","Build an Aho-Corasick automaton using the configuration…","ahocorasickbuilder","LeftmostFirst","Use leftmost-first match semantics, which reports leftmost…","LeftmostLongest","Use leftmost-longest match semantics, which reports…","match_kind","Return the first occurrence of any of the patterns in this…","matchkind","Returns the approximate total amount of heap used by this…","aho_corasick::packed","AhoCorasick","AhoCorasickBuilder","MatchKind","FindOverlappingIter","StreamFindIter","generic_array","mappedsequence","genericarray","generic_array::iter","MappedGenericSequence","FunctionalSequence","GenericArrayIter","GenericSequence","ArrayLength","GenericArray","generate","unparkresult","parking_lot_core","unparktoken","parkresult","parktoken","UnparkResult","UnparkToken","bytesorwidestring","symbolname","backtraceframe","symbol_address","backtrace","backtracesymbol","BytesOrWideString","BacktraceFmt","BacktraceFrameFmt","BacktraceFrame","BacktraceSymbol","INTERNAL_START","Codes below this point represent OS Errors (i.e. positive…","CUSTOM_START","Codes at or above this point can be used by users to…","raw_os_error","Extract the raw OS error code (if this error came from the…","A distribution to sample floating point numbers uniformly…","Sample values uniformly between two bounds.","new_inclusive","Create a new `Uniform` instance which samples uniformly…","rand::distributions","weightedindex","weightederror","sample_iter","choose_multiple","Collects `amount` values at random from the iterator into…","distribution","Fill `dest` entirely with random bytes (uniform value…","Shuffle a mutable slice in place.","rand::distributions::uniform","rand::rngs","from_entropy","rand::rngs::adapter","rand::rngs::mock","rand::seq::index","sample_single","rand::seq","unitspheresurface","indexvecintoiter","WeightedError","SampleUniform","UniformSampler","SampleBorrow","WeightedIndex","UnitSphereSurface","Distribution","WeightedChoice","ReseedingRng","SliceRandom","IteratorRandom","AsByteSliceMut","FromEntropy","Alphanumeric","OpenClosed01","StandardNormal","UniformFloat","UniformDuration","SliceChooseIter","IndexVecIter","IndexVecIntoIter","Error type of random number generators","The core of a random number generator.","Return the next random `u32`.","Return the next random `u64`.","Fill `dest` with random data.","Fill `dest` entirely with random data.","A marker trait used to indicate that an [`RngCore`] or…","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types…","Create a new PRNG using the given seed.","Create a new PRNG using a `u64` seed.","Create a new PRNG seeded from another `Rng`.","A true random number generator based on jitter in the CPU…","An error that can occur when [`JitterRng::test_timer`]…","No timer available.","CoarseTimer","Timer too coarse to use as an entropy source.","NotMonotonic","Timer is not monotonically increasing.","TinyVariantions","Variations of deltas of time too small.","TooManyStuck","Too many stuck results (indicating no added entropy).","Create a new `JitterRng`. Makes use of `std::time` for a…","new_with_timer","Create a new `JitterRng`. A custom timer can be supplied,…","Configures how many rounds are used to generate each…","Basic quality tests on the timer, by measuring CPU timing…","timer_stats","Statistical test: return the timer delta of one normal run…","A random number generator that retrieves randomness…","Create a new `OsRng`.","Digest input data.","result_reset","Reset hasher instance to its initial state.","output_size","Get output size of the hasher","Digest input data in a chained manner.","Retrieve result and consume hasher instance.","invalidoutputsize","FixedOutput","VariableOutput","ExtendableOutput","InvalidOutputSize","invalidkeylength","Obtain the result of a `Mac` computation as a `MacResult`…","macresult","InvalidKeyLength","OutputSize","Creates and initializes a `BigInt`.","Creates and initializes a `BigInt` from an array of bytes…","Creates and initializes a `BigInt`. Each u8 of the input…","Returns the sign and the byte representation of the…","Returns the two's complement byte representation of the…","Creates and initializes a `BigUint`.","assign_from_slice","from_bytes_be","from_bytes_le","parse_bytes","from_radix_be","from_radix_le","Creates and initializes a `BigUint`. Each u8 of the input…","to_bytes_be","to_bytes_le","Returns the byte representation of the `BigUint` in…","to_u32_digits","to_str_radix","Returns the integer formatted as a string in the given…","to_radix_be","Returns the integer in the requested base in big-endian…","to_radix_le","Returns the integer in the requested base in little-endian…","Determines the fewest bits necessary to express the…","Returns the truncated principal square root of `self` --…","Returns the truncated principal cube root of `self` -- see…","Returns the truncated principal `n`th root of `self` --…","to_biguint","parsebiginterror","Calculates the Greatest Common Divisor (GCD) of the number…","Calculates the Lowest Common Multiple (LCM) of the number…","Deprecated, use `is_multiple_of` instead.","is_multiple_of","Returns `true` if the number is a multiple of `other`.","Returns `true` if the number is divisible by `2`.","Returns `true` if the number is not divisible by `2`.","Creates and initializes a BigInt.","from_str_radix","checked_add","checked_sub","checked_mul","checked_div","ParseBigIntError","div_floor","mod_floor","Waits on this condition variable for a notification,…","waittimeoutresult","An RAII mutex guard returned by `MutexGuard::map`, which…","A mutual exclusion primitive useful for protecting shared…","An RAII implementation of a \"scoped lock\" of a mutex. When…","An RAII mutex guard returned by…","A mutex which can be recursively locked by a single thread.","An RAII implementation of a \"scoped lock\" of a reentrant…","An RAII read lock guard returned by…","An RAII write lock guard returned by…","A reader-writer lock","RAII structure used to release the shared read access of a…","RAII structure used to release the upgradable read access…","RAII structure used to release the exclusive write access…","nonzero_thread_id","lock_exclusive","try_lock_exclusive","unlock_exclusive","lock_shared","try_lock_shared","unlock_shared","unlock_shared_fair","unlock_exclusive_fair","try_lock_shared_for","try_lock_shared_until","try_lock_exclusive_for","try_lock_exclusive_until","lock_shared_recursive","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","lock_upgradable","try_lock_upgradable","unlock_upgradable","unlock_upgradable_fair","downgrade_upgradable","try_lock_upgradable_until","try_lock_upgradable_for","WaitTimeoutResult","RawThreadId","get_word_pos","Get the offset from the start of the stream, in 32-bit…","set_word_pos","Set the offset from the start of the stream, in 32-bit…","Set the stream number.","set_stream","ChaCha with 20 rounds","chacha20core","chacha12core","chacha8core","ChaCha20Rng","ChaCha12Rng","ChaCha12Core","ChaCha20Core","ChaCha8Core","blockbuffer","BlockBuffer","Create a new guard. While the guard is alive, panics that…","abortguard","A word of Rust code, which may be a keyword or legal…","paren_token","Attributes tagged on the field.","colon_token","bracket_token","brace_token","Returned by `Generics::split_for_impl`.","semi_token","const_token","eq_token","defaultness","crate_token","static_token","mutability","trait_token","type_token","generics","colon2_token","struct_token","union_token","extern_token","lifetimes","group_token","dot2_token","underscore_token","leading_colon","A structured list within an attribute, like `derive(Copy,…","A name-value pair within an attribute, like `feature =…","Named fields of a struct or struct variant such as `Point…","Unnamed fields of a tuple struct or tuple variant such as…","A public visibility level: `pub`.","A crate-level visibility: `crate`.","A visibility level restricted to some path: `pub(self)` or…","A slice literal expression: `[a, b, c, d]`.","An assignment expression: `a = compute()`.","A compound assignment expression: `counter += 1`.","An async block: `async { ... }`.","An await expression: `fut.await`.","A binary operation: `a + b`, `a * b`.","A blocked scope: `{ ... }`.","A box expression: `box f`.","A `break`, with an optional label to break and an optional…","A function call expression: `invoke(a, b)`.","A cast expression: `foo as f64`.","A closure expression: `|a, b| a + b`.","A `continue`, with an optional label.","Access of a named struct field (`obj.k`) or unnamed tuple…","A for loop: `for pat in expr { ... }`.","An expression contained within invisible delimiters.","An `if` expression with an optional `else` block: `if expr…","A square bracketed indexing expression: `vector[2]`.","A `let` guard: `let Some(x) = opt`.","A literal in place of an expression: `1`, `\"foo\"`.","Conditionless loop: `loop { ... }`.","A macro invocation expression: `format!(\"{}\", q)`.","A `match` expression: `match n { Some(n) => {}, None => {}…","A method call expression: `x.foo::<T>(a, b)`.","A parenthesized expression: `(a + b)`.","A path like `std::mem::replace` possibly containing…","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","A referencing operation: `&a` or `&mut a`.","An array literal constructed from one repeated element:…","A `return`, with an optional value to be returned.","A struct literal expression: `Point { x: 1, y: 1 }`.","A try-expression: `expr?`.","A try block: `try { ... }`.","A tuple expression: `(a, b, c, d)`.","A type ascription expression: `foo: f64`.","A unary operation: `!x`, `*x`.","An unsafe block: `unsafe { ... }`.","A while loop: `while expr { ... }`.","A yield expression: `yield expr`.","A generic type parameter: `T: Into<String>`.","A lifetime definition: `'a: 'b + 'c + 'd`.","A const generic parameter: `const LENGTH: usize`.","A type predicate in a `where` clause: `for<'c> Foo<'c>:…","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","An equality predicate in a `where` clause (unsupported).","The `self` argument of an associated method, whether taken…","A foreign function in an `extern` block.","A foreign static item in an `extern` block: `static ext:…","A foreign type in an `extern` block: `type void`.","A macro invocation within an extern block.","An associated constant within an impl block.","A method within an impl block.","An associated type within an impl block.","A macro invocation within an impl block.","A constant item: `const MAX: u16 = 65535`.","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.","An `extern crate` item: `extern crate serde`.","A free-standing function: `fn process(n: usize) ->…","A block of foreign items: `extern \"C\" { ... }`.","An impl block providing trait or associated items:…","A macro invocation, which includes `macro_rules!`…","A 2.0-style declarative macro introduced by the `macro`…","A module or module declaration: `mod m` or `mod m { ... }`.","A static item: `static BIKE: Shed = Shed(42)`.","A struct definition: `struct Foo<A> { x: A }`.","A trait definition: `pub trait Iterator { ... }`.","A trait alias: `pub trait SharableIterator = Iterator +…","A type alias: `type Result<T> = std::result::Result<T,…","A union definition: `union Foo<A, B> { x: A, y: B }`.","A use declaration: `use std::collections::HashMap`.","An associated constant within the definition of a trait.","A trait method within the definition of a trait.","An associated type within the definition of a trait.","A macro invocation within the definition of a trait.","A path prefix of imports in a `use` item: `std::...`.","An identifier imported by a `use` item: `HashMap`.","An renamed identifier imported by a `use` item: `HashMap…","A glob import in a `use` item: `*`.","A braced group of imports in a `use` item: `{A, B, C}`.","A UTF-8 string literal: `\"foo\"`.","A byte string literal: `b\"foo\"`.","A byte literal: `b'f'`.","A character literal: `'a'`.","An integer literal: `1` or `1u16`.","A floating point literal: `1f64` or `1.0e10f64`.","A boolean literal: `true` or `false`.","Verbatim","A struct input to a `proc_macro_derive` macro.","An enum input to a `proc_macro_derive` macro.","An untagged union input to a `proc_macro_derive` macro.","A fixed size array type: `[T; n]`.","A bare function type: `fn(usize) -> bool`.","A type contained within invisible delimiters.","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…","Indication that a type should be inferred by the compiler:…","A macro in the type position.","The never type: `!`.","A parenthesized type equivalent to the inner type.","A path like `std::slice::Iter`, optionally qualified with…","A raw pointer type: `*const T` or `*mut T`.","A reference type: `&'a T` or `&'a mut T`.","A dynamically sized slice type: `[T]`.","A trait object type `Bound1 + Bound2 + Bound3` where…","A tuple type: `(A, B, C, String)`.","A box pattern: `box v`.","A pattern that binds a new variable: `ref mut binding @…","A literal pattern: `0`.","A macro in pattern position.","A pattern that matches any one of a set of cases.","A path pattern like `Color::Red`, optionally qualified…","A range pattern: `1..=2`.","A reference pattern: `&mut var`.","The dots in a tuple or slice pattern: `[0, 1, ..]`","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…","A struct or struct variant pattern: `Variant { x, y, .. }`.","A tuple pattern: `(a, b)`.","A tuple struct or tuple variant pattern: `Variant(x, y,…","A type ascription pattern: `foo: f64`.","A pattern that matches any value: `_`.","A type argument.","An associated type bound: `Iterator<Item: Display>`.","A const expression. Must be inside of a block.","parsestream","lifetime","set_span","base10_digits","base10_parse","Parse the tokens within the macro invocation's delimiters…","without_plus","Creates a `TokenBuffer` containing all the tokens from the…","tokenbuffer","token_stream","Returns an iterator over the contents of this sequence as…","Appends a syntax tree node onto the end of this punctuated…","A trait that can provide the `Span` of the complete…","whereclause","Syntax tree traversal to walk a shared borrow of a syntax…","visit_angle_bracketed_generic_arguments","anglebracketedgenericarguments","visit_attr_style","visit_attribute","visit_bare_fn_arg","visit_bin_op","visit_binding","visit_block","visit_bound_lifetimes","boundlifetimes","visit_const_param","visit_constraint","visit_data_enum","visit_data_struct","visit_data_union","visit_derive_input","deriveinput","visit_expr_array","visit_expr_assign","visit_expr_assign_op","exprassignop","visit_expr_async","visit_expr_await","visit_expr_binary","visit_expr_block","visit_expr_box","visit_expr_break","visit_expr_call","visit_expr_cast","visit_expr_closure","exprclosure","visit_expr_continue","exprcontinue","visit_expr_field","visit_expr_for_loop","exprforloop","visit_expr_group","visit_expr_if","visit_expr_index","visit_expr_let","visit_expr_lit","visit_expr_loop","visit_expr_macro","visit_expr_match","visit_expr_method_call","exprmethodcall","visit_expr_paren","visit_expr_path","visit_expr_range","visit_expr_reference","exprreference","visit_expr_repeat","visit_expr_return","visit_expr_struct","visit_expr_try","visit_expr_try_block","exprtryblock","visit_expr_tuple","visit_expr_type","visit_expr_unary","visit_expr_unsafe","visit_expr_while","visit_expr_yield","visit_field","visit_field_pat","visit_field_value","visit_fields","visit_fields_named","fieldsnamed","visit_fields_unnamed","fieldsunnamed","visit_fn_arg","visit_foreign_item","foreignitem","visit_foreign_item_fn","foreignitemfn","visit_foreign_item_macro","foreignitemmacro","visit_foreign_item_static","foreignitemstatic","visit_foreign_item_type","foreignitemtype","visit_generic_argument","genericargument","visit_generic_method_argument","genericmethodargument","visit_generic_param","genericparam","visit_generics","visit_ident","visit_impl_item","visit_impl_item_const","implitemconst","visit_impl_item_macro","implitemmacro","visit_impl_item_method","implitemmethod","visit_impl_item_type","implitemtype","visit_index","visit_item_const","visit_item_enum","visit_item_extern_crate","itemexterncrate","visit_item_fn","visit_item_foreign_mod","itemforeignmod","visit_item_impl","visit_item_macro","visit_item_macro2","visit_item_mod","visit_item_static","visit_item_struct","visit_item_trait","visit_item_trait_alias","itemtraitalias","visit_item_type","visit_item_union","visit_item_use","visit_label","visit_lifetime","visit_lifetime_def","lifetimedef","visit_lit_bool","visit_lit_byte","visit_lit_byte_str","visit_lit_char","visit_lit_float","visit_lit_int","visit_lit_str","visit_local","visit_macro","visit_macro_delimiter","macrodelimiter","visit_member","visit_meta_list","visit_meta_name_value","metanamevalue","visit_method_turbofish","methodturbofish","visit_nested_meta","visit_parenthesized_generic_arguments","parenthesizedgenericarguments","visit_pat_box","visit_pat_ident","visit_pat_lit","visit_pat_macro","visit_pat_or","visit_pat_path","visit_pat_range","visit_pat_reference","patreference","visit_pat_rest","visit_pat_slice","visit_pat_struct","visit_pat_tuple","visit_pat_tuple_struct","pattuplestruct","visit_pat_type","visit_pat_wild","visit_path_arguments","patharguments","visit_path_segment","pathsegment","visit_predicate_eq","predicateeq","visit_predicate_lifetime","predicatelifetime","visit_predicate_type","predicatetype","visit_qself","visit_range_limits","rangelimits","visit_receiver","visit_return_type","visit_signature","visit_trait_bound","visit_trait_bound_modifier","traitboundmodifier","visit_trait_item","visit_trait_item_const","traititemconst","visit_trait_item_macro","traititemmacro","visit_trait_item_method","traititemmethod","visit_trait_item_type","traititemtype","visit_type_array","visit_type_bare_fn","visit_type_group","visit_type_impl_trait","typeimpltrait","visit_type_infer","visit_type_macro","visit_type_never","visit_type_param","visit_type_param_bound","typeparambound","visit_type_paren","visit_type_path","visit_type_ptr","visit_type_reference","typereference","visit_type_slice","visit_type_trait_object","typetraitobject","visit_type_tuple","visit_un_op","visit_use_glob","visit_use_group","visit_use_name","visit_use_path","visit_use_rename","visit_use_tree","visit_variadic","visit_variant","visit_vis_crate","visit_vis_public","visit_vis_restricted","visrestricted","visit_visibility","visit_where_clause","visit_where_predicate","wherepredicate","attrstyle","attribute","barefnarg","constparam","constraint","datastruct","dataunion","exprarray","exprassign","exprasync","exprawait","exprbinary","exprblock","exprbreak","exprfield","exprgroup","exprindex","exprmacro","exprmatch","exprparen","exprrange","exprrepeat","exprreturn","exprstruct","exprtuple","exprunary","exprunsafe","exprwhile","expryield","fieldvalue","itemconst","itemmacro","itemmacro2","itemstatic","itemstruct","itemtrait","itemunion","litbytestr","nestedmeta","patstruct","returntype","traitbound","traititem","typearray","typebarefn","typegroup","typeinfer","typemacro","typenever","typeparam","typeparen","typeslice","typetuple","userename","vispublic","visibility","Syntax tree traversal to transform the nodes of an owned…","fold_angle_bracketed_generic_arguments","fold_attr_style","fold_attribute","fold_bare_fn_arg","fold_bin_op","fold_binding","fold_bound_lifetimes","fold_const_param","fold_constraint","fold_data_enum","fold_data_struct","fold_data_union","fold_derive_input","fold_expr_array","fold_expr_assign","fold_expr_assign_op","fold_expr_async","fold_expr_await","fold_expr_binary","fold_expr_block","fold_expr_box","fold_expr_break","fold_expr_call","fold_expr_cast","fold_expr_closure","fold_expr_continue","fold_expr_field","fold_expr_for_loop","fold_expr_group","fold_expr_if","fold_expr_index","fold_expr_let","fold_expr_lit","fold_expr_loop","fold_expr_macro","fold_expr_match","fold_expr_method_call","fold_expr_paren","fold_expr_path","fold_expr_range","fold_expr_reference","fold_expr_repeat","fold_expr_return","fold_expr_struct","fold_expr_try","fold_expr_try_block","fold_expr_tuple","fold_expr_type","fold_expr_unary","fold_expr_unsafe","fold_expr_while","fold_expr_yield","fold_field_pat","fold_field_value","fold_fields","fold_fields_named","fold_fields_unnamed","fold_fn_arg","fold_foreign_item","fold_foreign_item_fn","fold_foreign_item_macro","fold_foreign_item_static","fold_foreign_item_type","fold_generic_argument","fold_generic_method_argument","fold_generic_param","fold_generics","fold_impl_item","fold_impl_item_const","fold_impl_item_macro","fold_impl_item_method","fold_impl_item_type","fold_item_const","fold_item_enum","fold_item_extern_crate","fold_item_fn","fold_item_foreign_mod","fold_item_impl","fold_item_macro","fold_item_macro2","fold_item_mod","fold_item_static","fold_item_struct","fold_item_trait","fold_item_trait_alias","fold_item_type","fold_item_union","fold_item_use","fold_lifetime","fold_lifetime_def","fold_lit_bool","fold_lit_byte","fold_lit_byte_str","fold_lit_char","fold_lit_float","fold_lit_int","fold_lit_str","fold_macro_delimiter","fold_member","fold_meta_list","fold_meta_name_value","fold_method_turbofish","fold_nested_meta","fold_parenthesized_generic_arguments","fold_pat_box","fold_pat_ident","fold_pat_lit","fold_pat_macro","fold_pat_or","fold_pat_path","fold_pat_range","fold_pat_reference","fold_pat_rest","fold_pat_slice","fold_pat_struct","fold_pat_tuple","fold_pat_tuple_struct","fold_pat_type","fold_pat_wild","fold_path_arguments","fold_path_segment","fold_predicate_eq","fold_predicate_lifetime","fold_predicate_type","fold_range_limits","fold_receiver","receiver","fold_return_type","fold_signature","fold_trait_bound","fold_trait_bound_modifier","fold_trait_item","fold_trait_item_const","fold_trait_item_macro","fold_trait_item_method","fold_trait_item_type","fold_type_array","fold_type_bare_fn","fold_type_group","fold_type_impl_trait","fold_type_infer","fold_type_macro","fold_type_never","fold_type_param","fold_type_param_bound","fold_type_paren","fold_type_path","fold_type_ptr","fold_type_reference","fold_type_slice","fold_type_trait_object","fold_type_tuple","fold_use_glob","fold_use_group","fold_use_name","fold_use_path","fold_use_rename","fold_use_tree","fold_variadic","variadic","fold_variant","fold_vis_crate","fold_vis_public","fold_vis_restricted","fold_visibility","fold_where_clause","fold_where_predicate","Error returned when a Syn parser cannot parse the input…","Parse a proc-macro2 token stream into the chosen syntax…","Parse tokens of source code into the chosen syntax tree…","Parse a string of Rust code into the chosen syntax tree…","parse_terminated","Parses zero or more occurrences of `T` separated by…","punctuated","Triggers an error at the current position of the parse…","The result of a Syn parser.","syn::buffer","syn::punctuated","syn::parse","syn::token","metalist","viscrate","exprcall","exprcast","exprloop","exprpath","exprtype","itemenum","itemimpl","itemtype","usegroup","implitem","litfloat","dataenum","typepath","patident","patmacro","patrange","patslice","pattuple","fieldpat","underscore","implgenerics","typegenerics","turbofish","to_tokens","Creates a new `Ident` with the given `string` as well as…","Returns the span of this `Ident`.","Configures the span of this `Ident`, possibly changing its…","visit_data","visit_expr","visit_file","visit_item","visit_meta","visit_path","visit_span","visit_stmt","visit_type","fold_block","fold_field","fold_ident","fold_index","fold_label","fold_local","fold_macro","fold_qself","fold_un_op","Looks at the next token in the parse stream to determine…","MetaNameValue","FieldsNamed","FieldsUnnamed","VisRestricted","MethodTurbofish","ExprAssignOp","ExprClosure","ExprContinue","ExprForLoop","ExprMethodCall","ExprReference","ExprTryBlock","BoundLifetimes","LifetimeDef","PredicateEq","PredicateLifetime","PredicateType","WhereClause","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ImplItemConst","ImplItemMacro","ImplItemMethod","ImplItemType","ItemExternCrate","ItemForeignMod","ItemTraitAlias","TraitItemConst","TraitItemMacro","TraitItemMethod","TraitItemType","DeriveInput","TypeImplTrait","TypeReference","TypeTraitObject","PatReference","PatTupleStruct","AngleBracketedGenericArguments","Constraint","ParenthesizedGenericArguments","PathSegment","GenericMethodArgument","RangeLimits","GenericParam","TraitBoundModifier","TypeParamBound","WherePredicate","ForeignItem","MacroDelimiter","GenericArgument","PathArguments","TypeGenerics","TokenBuffer","Punctuated","Speculative","ParseBuffer","ImplGenerics","The `Digest` trait specifies an interface common for…","Create new hasher instance","Retrieve result and reset hasher instance.","Convenience function to compute hash of the `data`. It…","dyndigest","box_clone","fixed_result","Sha512Trunc224","Sha512Trunc256","The `Mac` trait defines methods for a Message…","Create new MAC instance from key with fixed size.","Create new MAC instance from key with variable size.","Process input data.","Reset `Mac` instance.","Check if code is correct for the processed input.","macerror","new_varkey","bernoullierror","bernoulli","A distribution using weighted sampling to pick a…","rand::distributions::weighted","rand::distributions::weighted::alias_method","BernoulliError","A random number generator that retrieves randomness from…","Construct from any type supporting `std::error::Error`","Reference the inner error (`std` only)","Unwrap the inner error (`std` only)","Retrieve the error code, if any.","Creates a new instance of the RNG seeded via [`getrandom`].","curve25519_dalek","edwardspoint","compressededwardsy","Precomputation for variable-time multiscalar…","as_bytes","ristrettopoint","compressedristretto","hash_from_bytes","vartime_double_scalar_mul_basepoint","Compute \\(aA + bB\\) in variable time, where \\(B\\) is the…","The type of point being multiplied, e.g., `RistrettoPoint`.","Given an iterator of public scalars and an iterator of…","vartime_multiscalar_mul","Given `static_scalars`, an iterator of public scalars…","curve25519_dalek::scalar","curve25519_dalek::montgomery","initialize","is_identity","curve25519_dalek::edwards","conditional_negate","curve25519_dalek::ristretto","multiscalar_mul","optional_multiscalar_mul","optional_mixed_multiscalar_mul","montgomerypoint","edwardsbasepointtable","ristrettobasepointtable","MontgomeryPoint","CompressedEdwardsY","EdwardsPoint","EdwardsBasepointTable","CompressedRistretto","RistrettoPoint","RistrettoBasepointTable","MultiscalarMul","VartimeMultiscalarMul","VartimePrecomputedMultiscalarMul","VartimeEdwardsPrecomputation","VartimeRistrettoPrecomputation","from_hash","Note that docs will only build on nightly Rust until RFC…","RegexBuilder","A configurable builder for a regular expression.","RegexSetBuilder","A configurable builder for a set of regular expressions.","Match represents a single match of a regex in a haystack.","An iterator over all non-overlapping matches for a…","CaptureMatches","An iterator that yields all non-overlapping capture groups…","Yields all substrings delimited by a regular expression…","Yields at most `N` substrings delimited by a regular…","CaptureNames","An iterator over the names of all possible captures.","CaptureLocations","CaptureLocations is a low level representation of the raw…","SubCaptureMatches","An iterator that yields all capturing matches in the order…","ReplacerRef","By-reference adaptor for a `Replacer`","Match multiple (possibly overlapping) regular expressions…","A set of matches returned by a regex set.","SetMatchesIntoIter","An owned iterator over the set of matches from a regex set.","SetMatchesIter","A borrowed iterator over the set of matches from a regex…","regexbuilder","Create a new regular expression builder with the given…","Consume the builder and compile the regular expression.","Set the value for the case insensitive (`i`) flag.","Set the value for the multi-line matching (`m`) flag.","Set the value for the any character (`s`) flag, where in…","Set the value for the greedy swap (`U`) flag.","Set the value for the ignore whitespace (`x`) flag.","Set the value for the Unicode (`u`) flag.","Set the approximate size limit of the compiled regular…","dfa_size_limit","Set the approximate size of the cache used by the DFA.","regex::bytes","regexsetbuilder","multi_line","swap_greed","size_limit","nest_limit","Consume the builder and compile the regular expressions…","no_expansion","Return a fixed unchanging replacement byte string.","Return a `Replacer` that borrows and wraps this `Replacer`.","replacerref","replace_all","capturelocations","Create a new regex set with the given regular expressions.","regexset","Returns true if and only if one of the regexes in this set…","Returns the set of regular expressions that match in the…","Returns the total number of regular expressions in this set.","Returns the patterns that this set will match on.","matched_any","Whether this set contains any matches.","Whether the regex at the given index matched.","The total number of regexes in the set that created these…","Returns an iterator over indexes in the regex that matched.","setmatchesiter","Returns the starting byte offset of the match in the…","Returns the ending byte offset of the match in the haystack.","Returns the matched text.","Compiles a regular expression. Once compiled, it can be…","Returns true if and only if the regex matches the string…","Returns the start and end byte range of the leftmost-first…","find_iter","Returns an iterator for each successive non-overlapping…","Returns the capture groups corresponding to the…","captures","captures_iter","Returns an iterator over all the non-overlapping capture…","capturematches","Returns an iterator of substrings of `text` delimited by a…","Returns an iterator of at most `limit` substrings of…","Replaces the leftmost-first match with the replacement…","Replaces all non-overlapping matches in `text` with the…","Replaces at most `limit` non-overlapping matches in `text`…","shortest_match","Returns the end location of a match in the text given.","shortest_match_at","Returns the same as shortest_match, but starts the search…","is_match_at","Returns the same as is_match, but starts the search at the…","Returns the same as find, but starts the search at the…","captures_read","This is like `captures`, but uses `CaptureLocations`…","captures_read_at","Returns the original string of this regex.","capture_names","Returns an iterator over the capture names.","capturenames","captures_len","Returns the number of captures.","capture_locations","Returns an empty set of capture locations that can be…","Returns the start and end positions of the Nth capture…","Returns the total number of capturing groups.","Returns the match associated with the capture group at…","Returns the match for the capture group named `name`. If…","subcapturematches","Expands all instances of `$name` in `replacement` to the…","Returns the number of captured groups.","Replacer describes types that can be used to replace…","replace_append","Appends text to `dst` to replace the current match.","setmatches","Shows the original regular expression.","Attempts to parse a string into a regular expression","Return a fixed unchanging replacement string.","SetMatches","Escapes all regular expression meta characters in `text`.","bigrational","parseratioerror","from_i128","from_u128","from_i64","from_u64","from_f64","from_f32","ParseRatioError","proc_macro_hack","Runs the passed-in function once for each bound field,…","referenced_ty_params","Returns a list of the type parameters which are referenced…","Create a new `Structure` with the variants and fields from…","Returns a reference to the underlying `syn` AST node which…","Updates the `BindStyle` for each of the passed-in fields…","binding_name","Updates the binding name for each fo the passed-in fields…","NOTE: This methods' features are superceded by…","addbounds","bindinginfo","variantast","variantinfo","BindingInfo","VariantInfo","MacroResult","inflector::cases","inflector::numbers","deordinalize","inflector","inflector::string","deconstantize","to_camel_case","is_camel_case","to_pascal_case","is_pascal_case","to_snake_case","is_snake_case","to_screaming_snake_case","is_screaming_snake_case","to_kebab_case","is_kebab_case","to_train_case","is_train_case","to_sentence_case","is_sentence_case","to_title_case","is_title_case","ordinalize","to_foreign_key","is_foreign_key","demodulize","to_class_case","is_class_case","to_table_case","is_table_case","to_singular","InflectorNumbers","self defined parsing struct or enum. not meant for any…","Error type which can be thrown by wasm code or by host…","Unreachable","runtimevalue","funcinvocation","resumableerror","Extract argument by index `idx`.","Register an resolver by a name.","moduleimportresolver","littleendianconvert","copy_nonoverlapping","memoryref","globalref","notstartedmoduleref","stackrecycler","moduleref","from_float","current_size","is_mutable","WebAssembly-specific sizes and units.","Memory size specified in `wasm32` words.","Memory size specified in WebAssembly [memory pages][memory…","Returns the size of a type in [`Bytes`].","A trait defining the size, in bytes, of one unit of `Self`.","The size, in bytes, of a single unit of `Self`.","Memory size specified in bytes.","A trait defining round up conversion between various…","Returns minimum number of `T` to fit amount of space…","resolve_func","Resolve a function.","resolve_global","Resolve a global variable.","globaldescriptor","resolve_memory","Resolve a memory.","memorydescriptor","resolve_table","Resolve a table.","tabledescriptor","tableref","wasmi::nan_preserving_float","wasmi::memory_units","invoke_index","runtimeargs","from_runtime_value","into_little_endian","from_little_endian","Attempt to downcast this `HostError` to a concrete type by…","ResumableError","RuntimeValue","FuncInstance","FuncInvocation","GlobalInstance","RuntimeArgs","ImportsBuilder","MemoryInstance","ModuleInstance","NotStartedModuleRef","StackRecycler","TableInstance","Signature","GlobalDescriptor","TableDescriptor","MemoryDescriptor","ImportResolver","ModuleImportResolver","FromRuntimeValue","LittleEndianConvert","NopExternals","Creates a new lazy value initialized by the given closure…","An empty cell, for initialization in a `const` context.","Constructs a randomized seed and reuses it for multiple…","Constructs the hash with an initial seed","A backwards compatibility type alias. Consider directly…","randomxxhashbuilder64","randomxxhashbuilder32","RandomXxHashBuilder64","RandomXxHashBuilder32","const_random","zeroizing","Attempts to downcast this `Error` to a particular `Fail`…","Returns a reference to the underlying cause of this…","Attempts to downcast this failure to a concrete type by…","find_root_cause","iter_causes","Returns a iterator over all fails up the chain from the…","Deprecated alias to `find_root_cause`.","Backtrace","SyncFailure","Check for remaining elements after passing a…","Hint that the `Deserialize` type is expecting a string…","Hint that the `Deserialize` type is expecting a byte array…","Hint that the `Deserialize` type is expecting a sequence…","The error type that can be returned if some error occurs…","This returns `Ok(Some(value))` for the next value in the…","This returns `Ok(Some(key))` for the next key in the map,…","This returns a `Ok(value)` for the next value in the map.","This returns `Ok(Some((key, value)))` for the next…","`variant` is called to identify which variant to…","Called when deserializing a variant with a single value.","Deserializer","is_human_readable","SerializeSeq","SerializeTuple","Must match the `Ok` type of our `Serializer`.","Must match the `Error` type of our `Serializer`.","serialize_element","SerializeTupleStruct","SerializeTupleVariant","serialize_field","SerializeMap","SerializeStruct","SerializeStructVariant","A data structure that can be deserialized from any data…","Deserialize this value from the given Serde deserializer.","A data format that can deserialize any data structure…","deserialize_any","Require the `Deserializer` to figure out how to drive the…","deserialize_bool","Hint that the `Deserialize` type is expecting a `bool`…","deserialize_i8","Hint that the `Deserialize` type is expecting an `i8` value.","deserialize_i16","Hint that the `Deserialize` type is expecting an `i16`…","deserialize_i32","Hint that the `Deserialize` type is expecting an `i32`…","deserialize_i64","Hint that the `Deserialize` type is expecting an `i64`…","deserialize_i128","Hint that the `Deserialize` type is expecting an `i128`…","deserialize_u8","Hint that the `Deserialize` type is expecting a `u8` value.","deserialize_u16","Hint that the `Deserialize` type is expecting a `u16` value.","deserialize_u32","Hint that the `Deserialize` type is expecting a `u32` value.","deserialize_u64","Hint that the `Deserialize` type is expecting a `u64` value.","deserialize_u128","Hint that the `Deserialize` type is expecting an `u128`…","deserialize_f32","Hint that the `Deserialize` type is expecting a `f32` value.","deserialize_f64","Hint that the `Deserialize` type is expecting a `f64` value.","deserialize_char","Hint that the `Deserialize` type is expecting a `char`…","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","Hint that the `Deserialize` type is expecting an optional…","deserialize_unit","Hint that the `Deserialize` type is expecting a unit value.","deserialize_unit_struct","Hint that the `Deserialize` type is expecting a unit…","deserialize_newtype_struct","Hint that the `Deserialize` type is expecting a newtype…","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","Hint that the `Deserialize` type is expecting a tuple…","deserialize_map","Hint that the `Deserialize` type is expecting a map of…","deserialize_struct","Hint that the `Deserialize` type is expecting a struct…","deserialize_enum","Hint that the `Deserialize` type is expecting an enum…","deserialize_identifier","Hint that the `Deserialize` type is expecting the name of…","deserialize_ignored_any","Hint that the `Deserialize` type needs to deserialize a…","Determine whether `Deserialize` implementations should…","A data structure that can be serialized into any data…","Serialize this value into the given Serde serializer.","A data format that can serialize any data structure…","The output type produced by this `Serializer` during…","The error type when some error occurs during serialization.","Type returned from [`serialize_seq`] for serializing the…","Type returned from [`serialize_tuple`] for serializing the…","Type returned from [`serialize_tuple_struct`] for…","Type returned from [`serialize_tuple_variant`] for…","Type returned from [`serialize_map`] for serializing the…","Type returned from [`serialize_struct`] for serializing…","Type returned from [`serialize_struct_variant`] for…","serialize_bool","Serialize a `bool` value.","serialize_i8","Serialize an `i8` value.","serialize_i16","Serialize an `i16` value.","serialize_i32","Serialize an `i32` value.","serialize_i64","Serialize an `i64` value.","serialize_i128","Serialize an `i128` value.","serialize_u8","Serialize a `u8` value.","serialize_u16","Serialize a `u16` value.","serialize_u32","Serialize a `u32` value.","serialize_u64","Serialize a `u64` value.","serialize_u128","Serialize a `u128` value.","serialize_f32","Serialize an `f32` value.","serialize_f64","Serialize an `f64` value.","serialize_char","Serialize a character.","serialize_str","Serialize a `&str`.","serialize_bytes","Serialize a chunk of raw byte data.","serialize_none","Serialize a [`None`] value.","serialize_some","Serialize a [`Some(T)`] value.","serialize_unit","Serialize a `()` value.","serialize_unit_struct","Serialize a unit struct like `struct Unit` or…","serialize_unit_variant","Serialize a unit variant like `E::A` in `enum E { A, B }`.","serialize_newtype_struct","Serialize a newtype struct like `struct Millimeters(u8)`.","serialize_newtype_variant","Serialize a newtype variant like `E::N` in `enum E { N(u8)…","serialize_seq","Begin to serialize a variably sized sequence. This call…","serialize_tuple","Begin to serialize a statically sized sequence whose…","serialize_tuple_struct","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…","serialize_tuple_variant","Begin to serialize a tuple variant like `E::T` in `enum E…","serialize_map","Begin to serialize a map. This call must be followed by…","serialize_struct","Begin to serialize a struct like `struct Rgb { r: u8, g:…","serialize_struct_variant","Begin to serialize a struct variant like `E::S` in `enum E…","collect_seq","Collect an iterator as a sequence.","collect_map","Collect an iterator as a map.","collect_str","Serialize a string produced by an implementation of…","Determine whether `Serialize` implementations should…","serde::de::value","serde::de","visit_newtype_struct","visit_bytes","next_element_seed","next_key_seed","next_value_seed","next_entry_seed","variant_seed","serde::ser","serialize_key","serialize_value","ignoredany","unexpected","BorrowedStrDeserializer","BorrowedBytesDeserializer","SeqDeserializer","SeqAccessDeserializer","MapDeserializer","MapAccessDeserializer","DeserializeSeed","VariantAccess","IntoDeserializer","Serializer","UnitDeserializer","BoolDeserializer","I8Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","IsizeDeserializer","U8Deserializer","U16Deserializer","U64Deserializer","UsizeDeserializer","F32Deserializer","F64Deserializer","CharDeserializer","I128Deserializer","U128Deserializer","U32Deserializer","StrDeserializer","StringDeserializer","CowStrDeserializer","abuildhasher","ABuildHasher","new_with_keys","MallocSizeOf","parity_util_mem","malloc_size_of","mallocsizeofops","MallocSizeOfExt","MallocSizeOfOps","transcriptrngbuilder","TranscriptRngBuilder","TranscriptRng","Paste identifiers within a macro invocation that expands…","item_with_macros","A field value of an erased type.","Visits this value with the given `Visitor`.","STATIC_MAX_LEVEL","A handle representing a span, with the capability to enter…","A guard that resets the current default dispatcher to the…","Returned if setting the global dispatcher fails.","with_default","set_global_default","set_default","defaultguard","tracing::dispatcher","tracing::event","tracing::subscriber","tracing::span","tracing::field","tracing::level_filters","Instruments a function to create and enter a `tracing`…","Dispatches trace events to [`Subscriber`]s.","Sets this dispatch as the default for the duration of a…","Sets the dispatch as the default dispatch for the duration…","Sets this dispatch as the global default for the duration…","Executes a closure with a reference to this thread's…","Returns a new `Dispatch` that discards events and spans.","Returns a `Dispatch` that forwards to the given…","Record the construction of a new span, returning a new…","Returns true if a span with the specified [metadata] would…","Records that a span has been can_enter.","Notifies the subscriber that a [span ID] has been dropped.","Notifies the subscriber that a [span ID] has been dropped,…","Returns `true` if this `Dispatch` forwards to a…","Returns some reference to the `Subscriber` this `Dispatch`…","Events represent single points in time during the…","Returns a new `Event` in the current span, with the…","new_child_of","Returns a new `Event` as a child of the specified span,…","Visits all the fields on this `Event` with the specified…","Returns an iterator over the set of values on this `Event`.","Returns [metadata] describing this `Event`.","Returns true if the new event should be a root.","Returns true if the new event's parent should be…","Returns the new event's explicitly-specified parent, if…","Describes the fields present on a span.","A set of fields and values for a span.","An iterator over a set of fields.","A `Value` which serializes using `fmt::Display`.","A `Value` which serializes as a string using `fmt::Debug`.","Wraps a type implementing `fmt::Display` as a `Value` that…","Wraps a type implementing `fmt::Debug` as a `Value` that…","Visits typed values.","Visit a signed 64-bit integer value.","Visit an unsigned 64-bit integer value.","record_bool","Visit a boolean value.","Visit a string value.","record_error","Records a type implementing `Error`.","record_debug","Visit a value implementing `fmt::Debug`.","Returns a string representing the name of the field.","Constructs a new `FieldSet` with the given array of field…","Returns the [`Field`] named `name`, or `None` if no such…","Returns `true` if `self` contains the given `field`.","Returns an iterator over the `Field`s in this `FieldSet`.","Returns the number of fields in this `FieldSet`.","Returns whether or not this `FieldSet` has fields.","Construct new metadata for a span or event, with a name,…","Returns the names of the fields on the described span or…","Returns the level of verbosity of the described span or…","Returns the name of the span.","Returns a string describing the part of the system where…","Returns the path to the Rust module where the span…","Returns the name of the source code file where the span…","Returns the line number in the source code file where the…","Returns an opaque `Identifier` that uniquely identifies…","Returns true if the callsite kind is `Event`.","Return true if the callsite kind is `Span`.","Identifies a span within the context of a subscriber.","Attributes provided to a `Subscriber` describing a new…","A set of fields recorded by a span.","Constructs a new span ID from the given `u64`.","Returns the span's ID as a  `u64`.","Returns `Attributes` describing a new span at the root of…","Returns a reference to the new span's metadata.","Returns a reference to a `ValueSet` containing any values…","Returns true if the new span should be a root.","Returns true if the new span's parent should be determined…","Returns the new span's explicitly-specified parent, if…","Records all the fields in this set of `Attributes` with…","Returns `true` if this set of `Attributes` contains a…","Returns true if this set of `Attributes` contains no values.","Constructs a new `Record` from a `ValueSet`.","Records all the fields in this `Record` with the provided…","Returns `true` if this `Record` contains a value for the…","Returns true if this `Record` contains no values.","Indicates a [`Subscriber`]'s interest in a particular…","Returns `true` if this `Subscriber` is the same type as `T`.","Returns some reference to this `Subscriber` value if it is…","Returns an `Interest` indicating that the subscriber is…","Returns an `Interest` indicating the subscriber is…","Returns an `Interest` indicating the subscriber is always…","Returns `true` if the subscriber is never interested in…","is_sometimes","Returns `true` if the subscriber is sometimes interested…","Returns `true` if the subscriber is always interested in…","Returns the current default dispatcher","mnemonictype","mnemonic","language","MnemonicType","Clears the map, removing all values.","Returns true if the map contains a value for the specified…","Returns true if the map contains no elements.","or_insert","Converts the entry into a mutable reference to its value.","Sets the value of the entry with the `OccupiedEntry`'s…","Takes the value of the entry out of the map, and returns it.","Extracts the array value if it is an array.","Extracts the table value if it is a table.","Historical versions of toml-rs accidentally allowed a…","toml::value","toml::map","toml::ser","datetime","datetimeparseerror","toml::de","into_deserializer","DatetimeParseError","The SHA-512 hash algorithm with the SHA-512 initial hash…","signatureerror","Verify a signature on a message with this keypair's public…","verify_prehashed","Verify a `signature` on a `prehashed_message` using the…","verify_strict","Strictly verify a signature on a message with this…","to_bytes","from_bytes","expandedsecretkey","sign_prehashed","publickey","secretkey","ExpandedSecretKey","SignatureError","A builder for computing where in a [`HashMap`] a key-value…","Returns `true` if the map contains a value for the…","Returns `true` if the map contains no elements.","Removes a value from the set. Returns whether the value…","Returns `true` if the set contains no elements.","ristrettoboth","Convert this public key to a byte array.","signatureresult","The secret half of this keypair.","The public half of this keypair.","PUBLIC_KEY_LENGTH","SECRET_KEY_LENGTH","KEYPAIR_LENGTH","Avoids importing `ExpansionMode`","expansionmode","Convert this secret key to a byte array.","View this secret key as a byte array.","minisecretkey","generate_with","Derive the `PublicKey` corresponding to this `SecretKey`.","as_compressed","Access the compressed Ristretto form","into_compressed","Extract the compressed Ristretto form","Access the point form","Extract the point form","from_compressed","Construct a `PublicKey` from a slice of bytes.","schnorrkel","commit_bytes","challenge_bytes","Produce secret witness bytes from the protocol transcript…","Initialize a signing context from a static byte string…","signingcontext","transcript","Initalize an owned signing transcript on a message…","fixedoutput","SIGNATURE_LENGTH","Convert this `Signature` to a byte array.","Construct a `Signature` from a slice of bytes.","schnorrkel::keys","signingtranscript","sign_simple","Sign a message with this keypair's secret key.","verify_simple","schnorrkel::vrf","Pair a non-malleable VRF output with the hash of the given…","vrfoutput","vrfinout","VRF output point bytes for serialization.","transcriptrng","Merge VRF input and output pairs from the same signer,…","vrfproofbatchable","Run VRF on one single input transcript, producing the…","vrfproof","vrfsigningtranscript","We cannot assume the original public key is secret and…","chaincode","hard_derive_mini_secret_key","Vaguely BIP32-like \"hard\" derivation of a `MiniSecretKey`…","derived_key","schnorrkel::derive","Derive key with subkey identified by a byte array…","derived_key_simple","Derive key with subkey identified by a byte array and a…","extendedkey","ecqvcertsecret","Errors which may occur while processing signatures and…","schnorrkel::errors","schnorrkel::errors::SignatureError","musig_stage","Identifies the multi-signature protocol stage during which…","Cosignature","aggregatepublickeyslice","Aggregate public keys stored in a mutable slice","collectstage","commitstage","schnorrkel::musig","Initialize a multi-signature aka cosignature protocol run.","revealstage","Add a new cosigner's public key and associated `R`…","cosignstage","cosignature","schnorrkel::points","schnorrkel::context","transcript_with_malleability_addressed","schnorrkel::sign","schnorrkel::cert","witness_bytes_rng","witness_bytes","public_key","xoftranscript","ecqvcertpublic","commitment","multisignaturestage","RistrettoBoth","ExpansionMode","MiniSecretKey","SecretKey","PublicKey","SigningTranscript","SigningContext","XoFTranscript","VRFSigningTranscript","VRFProofBatchable","ExtendedKey","ECQVCertSecret","ECQVCertPublic","MultiSignatureStage","Commitment","AggregatePublicKey","SigningTranscriptWithRng","AggregatePublicKeySlice","CommitStage","RevealStage","CosignStage","CollectStage","Returns the name of this function.","try_from_value","PointerType","FunctionContext","HostFunctions","TryFromValue","WritePrimitive","ReadPrimitive","into_value","new_default","ownedchildinfo","storagedata","ownedchildtrie","storagekey","storagechild","storagechangeset","StorageData","StorageChild","StorageChangeSet","OwnedChildInfo","ChildStorageKey","OwnedChildTrie","Trait modelling datastore keyed by a hash defined by the…","Insert a datum item into the DB and return the datum's…","Like `insert()`, except you provide the key and the data…","Trait for immutable reference of HashDB.","The resulting root.","Null trie node; could be an empty root or an empty branch…","trie_db::node","trie_db::node::NodePlan","Branch node; has slice of child nodes (each possibly null)…","NibbledBranch","Branch node with support for a nibble (when extension…","triehash","triedbiterator","A `Trie` implementation using a generic `HashDB` backing…","Create a new trie with the backing database `db` and…","Get the backing database.","A `Trie` implementation which hashes keys and uses a…","A mutable `Trie` implementation which hashes keys and uses…","Create a new trie with the backing database `db` and empty…","from_existing","hashdbref","Create a new trie with the backing database `db` and `root`.","Create a new iterator.","triedbnodeiterator","nibbleslice","starts_with","Helper function to create a owned `NodeKey` from this…","Do we start with the same nibbles as the whole of `them`?","childreference","A key-value datastore implemented as a database-backed…","Return the root of the trie.","Is the trie empty?","Does the trie contain a given key?","What is the value of the given key in this trie?","trie_db::triedb","trie_db::triedbmut","trie_db::sectriedb","trie_db::sectriedbmut","trie_db::recorder","trieiterator","Position the iterator on the first element with key >= `key`","triefactory","nodehandle","nodehandleplan","nibblesliceplan","nibblevec","Decode bytes to a `Node`. Returns `Self::E` on failure.","TrieBuilder","TrieRootUnhashed","TrieRootPrint","NodeHandlePlan","NibbleSlicePlan","TrieDBIterator","ChildReference","SecTrieDBMut","FatDBIterator","TrieDBNodeIterator","NibbleSlice","ProcessEncodedNode","TrieIterator","TrieConfiguration","TrieFactory","Reference-counted memory-based `HashDB` implementation.","as_hash_db_mut","as_plain_db","as_plain_db_mut","KeyFunction","PrefixedKey","LegacyPrefixedKey","Create a new instance of `Self`.","MaybeDebug","childstoragekey","childinfo","Returns the key immediately following the given key, if it…","ExtensionStore","Externalities","ExternalitiesExt","Extension","publickeyformat","parse_slice","tweak_add_assign","tweak_mul_assign","recoveryid","sharedsecret","secp256k1::curve","secp256k1::util","secp256k1","affinestorage","Verify whether a field element represents zero i.e. would…","Set a group element (affine) equal to the point with the…","neg_in_place","jacobian","is_infinity","Check whether a group element is the point at infinity.","Set r equal to the double of a. If rzr is not-NULL, r->z =…","Set r equal to the sum of a and b (with b given in affine…","If flag is true, set *r equal to *a; otherwise leave it.…","Convert a scalar to a byte array.","mul_in_place","sqr_in_place","PublicKeyFormat","AffineStorage","SharedSecret","ECMultContext","ECMultGenContext","SignatureArray","PunctuatedInner","OuterAttributes","Append all items in `iter` to the given `self_encoded`…","remaining_len","using_encoded","compact_len","optionbool","Read a single byte from the input.","Write a single byte to the output.","Write encoding of given value to the output.","If possible give a hint of expected size of the encoding.","Convert self to a slice and append it to the destination.","Convert self to an owned vector.","Convert self to a slice and then invoke the given closure…","EncodeAsRef","WrapperTypeDecode","DecodeLength","EncodeAppend","Derive `parity_scale_codec::Encode` and…","Derive `parity_scale_codec::Decode` and for struct and enum.","CompactAs","Derive `parity_scale_codec::Compact` and…","A fixed point representation of a number between in the…","Assumed as a given primitive.","A naive getter for limb at `index`. Note that the order is…","sp_arithmetic","A trait implementing integer square root.","Find the integer square root.","integer_sqrt_checked","Find the integer square root, returning `None` if the…","Defines an additive identity element for `Self`.","Returns the additive identity element of `Self`, `0`. #…","Sets `self` to the additive identity element of `Self`, `0`.","Returns `true` if `self` is equal to the additive identity.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Sets `self` to the multiplicative identity element of…","Returns `true` if `self` is equal to the multiplicative…","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","CheckedAdd","Performs addition that returns `None` instead of wrapping…","Adds two numbers, checking for overflow. If overflow…","CheckedSub","Performs subtraction that returns `None` instead of…","Subtracts two numbers, checking for underflow. If…","CheckedMul","Performs multiplication that returns `None` instead of…","Multiplies two numbers, checking for underflow or…","CheckedDiv","Performs division that returns `None` instead of panicking…","Divides two numbers, checking for underflow, overflow and…","CheckedShl","Performs a left shift that returns `None` on shifts larger…","checked_shl","Checked shift left. Computes `self << rhs`, returning…","CheckedShr","Performs a right shift that returns `None` on shifts…","checked_shr","Checked shift right. Computes `self >> rhs`, returning…","Saturating","saturating_add","saturating_sub","Convert from a value of `T` into an equivalent instance of…","Consume self to return an equivalent value of `T`.","`true` if this is nothing.","Everything.","deconstruct","Consume self and deconstruct into a raw numeric type.","Return the scale at which this per-thing is working.","From an explicitly defined number of parts per maximum of…","from_percent","Converts from a percent. Equal to `x / 100`.","Return the product of multiplication of this value by…","from_fraction","Converts a fraction into `Permill`.","from_rational_approximation","Approximate the fraction `p/q` into a per-thing fraction.…","from_parts","unique_saturated_into","saturating_mul","encode_to","to_keyed_vec","decode_all","sp_arithmetic::biguint","perquintill","rational128","decode_from","encode_as","UniqueSaturatedFrom","UniqueSaturatedInto","SaturatedConversion","Perquintill","Rational128","Little-endian large integer type","fromdecstrerr","checked_rem","checked_neg","Maximum value.","from_dec_str","Convert from a decimal string.","Conversion to u32","Low word (u64)","Conversion to u32 with overflow checking","Conversion to u64 with overflow checking","Conversion to usize with overflow checking","Whether this is zero.","Return the least number of bits needed to represent the…","Return if specific bit is set.","Return specific byte.","to_big_endian","Write to the slice in big-endian format.","to_little_endian","Write to the slice in little-endian format.","Create `10**n` as this type.","Zero (additive identity) of this type.","One (multiplicative identity) of this type.","The maximum value which can be inhabited by this type.","Returns a pair `(self / other, self % other)`.","Fast exponentiation by squaring…","overflowing_pow","Fast exponentiation by squaring. Returns result and…","overflowing_add","Add with overflow.","Addition which saturates at the maximum value…","Checked addition. Returns `None` if overflow occurred.","overflowing_sub","Subtraction which underflows and returns a flag if it does.","Subtraction which saturates at zero.","Checked subtraction. Returns `None` if overflow occurred.","overflowing_mul","Multiply with overflow, returning a flag if it does.","Multiplication which saturates at the maximum value..","Checked multiplication. Returns `None` if overflow occurred.","Checked division. Returns `None` if `other == 0`.","Checked modulus. Returns `None` if `other == 0`.","overflowing_neg","Negation with overflow.","Checked negation. Returns `None` unless `self == 0`.","from_big_endian","Converts from big endian representation bytes in memory.","Converts from little endian representation bytes in memory.","Low 2 words (u128)","Conversion to u128 with overflow checking","Extracts a reference to the byte array containing the…","Creates a new hash type from the given `u64` value.","repeat_byte","Returns a new fixed hash where all bits are set to the…","Returns a new zero-initialized fixed hash.","Returns the size of this hash in bytes.","Extracts a byte slice containing the entire fixed hash.","as_bytes_mut","Extracts a mutable byte slice containing the entire fixed…","as_fixed_bytes","as_fixed_bytes_mut","to_fixed_bytes","Returns the inner bytes array.","Returns a constant raw pointer to the value.","Returns a mutable raw pointer to the value.","Assign the bytes from the byte slice `src` to `self`.","Create a new fixed-hash from the given slice `src`.","Returns `true` if all bits set in `b` are also set in…","Returns `true` if no bits are set.","to_low_u64_be","Returns the lowest 8 bytes interpreted as big-endian.","to_low_u64_le","Returns the lowest 8 bytes interpreted as little-endian.","to_low_u64_ne","Returns the lowest 8 bytes interpreted as native-endian.","from_low_u64_be","from_low_u64_le","from_low_u64_ne","randomize_using","Assign `self` to a cryptographically random value using…","Assign `self` to a cryptographically random value.","random_using","Create a new hash with cryptographically random content…","Create a new hash with cryptographically random content.","Constructs a hash type from the given reference to the…","Constructs a hash type from the given bytes array of fixed…","Creates a hash type instance from the given string.","functioncontext","SelfInstance","As `Self` can be an unsized type, it needs to be…","sp_runtime_interface","Derive macro for implementing [`PassBy`] with the…","into_ffi_value","from_ffi_value","PassByInner","sp_runtime_interface::pass_by","IntoFFIValue","IntoPreallocatedFFIValue","FromFFIValue","runtime_interface","PassByCodec","Fixed-size uninterpreted hash type with 20 bytes (160…","Fixed-size uninterpreted hash type with 32 bytes (256…","Fixed-size uninterpreted hash type with 64 bytes (512…","InvalidChecksum","InvalidFormat","InvalidPath","sp_core::crypto","publicerror","Some if the string is a properly encoded SS58Check address.","ss58addressformat","Return the ss58-check string for this key.","Some if the string is a properly encoded SS58Check…","from_phrase","secretstringerror","Derive a child key from a series of given junctions.","Verify a signature on a message. Returns true if the…","from_string","PublicError","An error type for SS58 decoding.","Bad alphabet.","Bad length.","UnknownVersion","Unknown version.","Invalid checksum.","DeriveError","Return a slice filled with raw data.","LocalizedSignature","The signer of the signature.","The signature itself.","A new instance from the given 64-byte `data`.","A new instance from the given slice that should be 64…","A new instance from an H512.","A new instance from the given 32-byte `data`.","A new instance from an H256.","as_array_ref","A key pair.","An error when deriving a key.","SoftKeyInPath","A soft key was found in the path (and is unsupported).","A new instance from the given 65-byte `data`.","Get the seed for this key.","from_legacy_string","Exactly as `from_string` except that if no matches are…","DeadlineReached","sp_core::offchain","pendingrequest","opaquenetworkstate","storagekind","httprequestid","timestamp","httprequeststatus","httperror","TransactionPool","duration","keytypeid","capabilities","Return the value as the encoded format.","unchecked_into","sp_core::hash","Get a reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","sp_core::uint","from_ref","from_mut","sp_core::hexdisplay","unchecked_from","from_string_with_version","sp_core::u32_trait","sp_core::ed25519","sp_core::sr25519","sp_core::ecdsa","sp_core::offchain::storage","sp_core::offchain::testing","sp_core::sandbox","sp_core::traits","sp_core::testing","from_inner","to_raw_vec","A new instance from the given slice that should be 32…","generate_with_phrase","from_seed_slice","verify_weak","Generate new secure (random) key pair and provide the…","Make a new key pair from secret seed material. The slice…","deriveerror","Get the public key.","Sign a message.","Return a vec filled with raw data.","Generate key pair from given recovery phrase and password.","Make a new key pair from secret seed material.","iterator","compare_and_set","is_validator","network_state","sleep_until","random_seed","local_storage_set","local_storage_compare_and_set","local_storage_get","http_request_start","http_request_add_header","http_request_write_body","requestid","http_response_wait","requeststatus","http_response_headers","http_response_read_body","submit_transaction","sr25519_public_keys","sr25519_generate_new","sr25519_key_pair","ed25519_public_keys","ed25519_generate_new","ed25519_key_pair","insert_unknown","derivejunction","accountid32","localizedsignature","typedvalue","returnvalue","inmemoffchainstorage","testoffchainext","opaquepeerid","changestrieconfiguration","opaquemultiaddr","capability","externentity","environmentdefinition","opaquemetadata","as_mut_any","len_bytes","randomize","Multiplies two 256-bit integers to produce full 512-bit…","ChangesTrieConfiguration","ExecutionContext","NativeOrEncoded","SecretStringError","DeriveJunction","Ss58AddressFormat","UncheckedFrom","UncheckedInto","IsWrappedBy","HttpRequestId","OpaqueNetworkState","OpaquePeerId","OpaqueMultiaddr","OffchainExt","TransactionPoolExt","StorageKind","HttpRequestStatus","PendingRequest","OffchainState","TestOffchainExt","TestTransactionPoolExt","OffchainStorage","Capabilities","LimitedExternalities","EnvironmentDefinition","ReturnValue","ExternEntity","KeystoreExt","BareCryptoStore","CodeExecutor","OpaqueMetadata","Blake2Hasher","NeverNativeValue","AccountId32","InMemOffchainStorage","RuntimeDebug","externalities","The Substrate externalities.","Read runtime storage.","storage_hash","Get storage value hash. This may be optimized for large…","child_storage_hash","Get child storage value hash. This may be optimized for…","original_storage","Read original runtime storage, ignoring any overlayed…","original_child_storage","Read original runtime child storage, ignoring any…","original_storage_hash","Get original storage value hash, ignoring any overlayed…","original_child_storage_hash","Get original child storage value hash, ignoring any…","child_storage","Read child runtime storage.","set_storage","Set storage entry `key` of current contract being called…","set_child_storage","Set child storage entry `key` of current contract being…","clear_storage","Clear a storage entry (`key`) of current contract being…","clear_child_storage","Clear a child storage entry (`key`) of current contract…","exists_storage","Whether a storage entry exists.","exists_child_storage","Whether a child storage entry exists.","next_storage_key","next_child_storage_key","kill_child_storage","Clear an entire child storage.","clear_prefix","Clear storage entries which keys are start with the given…","clear_child_prefix","Clear child storage entries which keys are start with the…","place_storage","Set or clear a storage entry (`key`) of current contract…","place_child_storage","Set or clear a child storage entry. Return whether the…","Get the identity of the chain.","storage_root","Get the trie root of the current storage map. This will…","child_storage_root","Get the trie root of a child storage map. This will also…","storage_changes_root","Get the change trie root of the current storage overlay at…","Extension for the [`Externalities`] trait.","Tries to find a registered extension and returns a mutable…","StdHasher","Value of 32-bit signed or unsigned integer.","Value of 64-bit signed or unsigned integer.","HostError","inherentdata","inherentidentifier","Create a new instance.","Is this a fatal error?","error_to_string","is_fatal_error","inherentdataproviders","ProvideInherentData","IsFatalError","ProvideInherent","InherentData","CheckInherentsResult","InherentDataProviders","MakeFatalError","trieerror","Various re-exports from the `trie-db` crate. A key-value…","prefixed_key","Derive a database key from hash value of the node (key)…","EMPTY_PREFIX","Reexport from `hash_db`, with genericity set for `Hasher`…","Persistent trie database read-access interface for the a…","Persistent trie database write-access interface for the a…","Querying interface, as in `trie_db` but less generic.","instantiate new keyspaced db","as_hash_db","trie_root_unhashed","encode_index","KeySpacedDB","KeySpacedDBMut","Create a new `Recorder` which records all given nodes.","Create a `Recorder` which only records nodes beyond a…","Record a visited node, given its hash, data, and depth.","Drain all visited records.","Mask a byte, keeping left nibble.","Mask a byte, keeping right byte.","Get u8 nibble value at a given index of a byte.","left_nibble_at","Get u8 nibble value at a given index in a left aligned…","Get u8 nibble value at a given index in a `NibbleSlice`.","push_at_left","Push u8 nibble value at a given index into an existing byte.","number_padding","Calculate the number of needed padding a array of nibble…","biggest_depth","Count the biggest common depth between two left aligned…","left_common","Calculate the number of common nibble between two left…","Shifts right aligned key to add a given left offset.…","BIT_PER_NIBBLE","Single nibble length in bit.","NIBBLE_PER_BYTE","Number of nibble per byte.","NIBBLE_LENGTH","Number of child for a branch (trie radix).","PADDING_BITMASK","Nibble (half a byte).","CONTENT_HEADER_SIZE","Size of header.","SPLIT_SHIFTS","The nibble shifts needed to align. We use two value, one…","hashed_null_node","decode_plan","is_empty_node","extension_node","branch_node","branch_node_nibbled","Output item.","Decode a byte-slice into the desired item.","Record that a node has been passed through.","Search for the key with the given query parameter. See the…","Returns a depth-first iterator over the elements of trie.","Insert a `key`/`value` pair into the trie. An empty value…","Remove a `key` from the trie. Equivalent to making it…","TrieLayout","USE_EXTENSION","If true, the trie will use extension nodes and no partial…","Hasher to use for this trie.","Codec to use (needs to match hasher and nibble ops).","Operation to build a trie db from its ordered iterator…","Determines a trie root given its ordered contents, closed…","Determines a trie root node's data given its ordered…","Encoding of index as a key (when reusing general trie for…","ordered_trie_root","A trie root formed from the items, with keys attached…","nodeplan","TrieError","TrieDBMut","NodeCodec","trie_root","TrieStream","append_empty_data","begin_branch","append_leaf","append_extension","append_substream","documentation","frame_metadata","frame_metadata::StorageEntryType","functionmetadata","functionargumentmetadata","outereventmetadata","eventmetadata","storageentrymetadata","moduleconstantmetadata","errormetadata","defaultbytegetter","storagehasher","storageentrytype","storageentrymodifier","storagemetadata","runtimemetadataprefixed","runtimemetadata","runtimemetadatav10","modulemetadata","FunctionMetadata","FunctionArgumentMetadata","OuterEventMetadata","EventMetadata","StorageEntryMetadata","ModuleConstantMetadata","ErrorMetadata","DefaultByteGetter","StorageMetadata","RuntimeMetadataPrefixed","RuntimeMetadataV10","ModuleMetadata","DecodeDifferent","StorageHasher","StorageEntryType","StorageEntryModifier","RuntimeMetadata","ModuleErrorMetadata","DefaultByte","RuntimeMetadataDeprecated","RuntimeMetadataLastVersion","NativeWhenPossible","Execute with the native equivalent if it is compatible…","Run with both the wasm and the native variant (if…","NativeElseWasm","First native, then if that fails or is not possible, wasm.","drilldowniterator","blocknumber","anchorblockid","configurationrange","triebackend","storageproof","defaulthandler","overlayedchanges","Generate storage read proof on pre-created trie backend.","Calculate the storage root, with given delta over what is…","consolidate","sp_state_machine","extensions","changestrieinmemorystorage","extension","execute_with","Execute the given closure while `self` is set as…","Returns a double-Option: None if the key is unknown (i.e.…","rootsstorage","Changes trie storage. Provides access to trie roots and…","TrieBackendStorage","Get a trie node.","executionmanager","Execute a call using the given state backend, overlayed…","sp_state_machine::backend","for_keys_with_prefix","for_key_values_with_prefix","for_keys_in_child_storage","for_child_keys_with_prefix","as_trie_backend","child_keys","build_anchor","as_roots_storage","with_cached_changed_keys","executionstrategy","cacheaction","executionerror","extension_by_type_id","ChangesTrieAnchorBlockId","ChangesTrieConfigurationRange","ChangesTrieCacheAction","ExecutionError","ExecutionStrategy","BackendTrustLevel","ExecutionManager","Consolidate","ChangesTrieBuildCache","InMemoryChangesTrieStorage","TestExternalities","BasicExternalities","OverlayedChanges","StorageProof","ProvingBackendRecorder","ProvingBackend","TrieBackend","ChangesTrieStorage","ChangesTrieRootsStorage","StateMachine","record_all_keys","Database value","Check whether the given `key` exists in storage.","\"Commit\" all existing operations and compute the resulting…","Get the next key in storage after the given one in…","Provides implementations for the extern host functions.","ecdsaverifyerror","Verify and recover a SECP256k1 ECDSA signature. - `sig` is…","Returns if the local node is a potential validator.","Returns information about the local node's network state.","Returns current UNIX timestamp (in millis)","Pause the execution until `deadline` is reached.","Returns a random seed.","Sets a value in the local storage.","Sets a value in the local storage if it matches current…","Gets a value from the local storage.","Initiates a http request given HTTP verb and the URL.","Append header to the request.","Write a chunk of request body.","Block and wait for the responses for given requests.","Read all response headers.","Read a chunk of body response to given buffer.","sp_io::storage","sp_io::trie","sp_io::misc","sp_io::crypto","sp_io::hashing","sp_io::offchain","sp_io::logging","sp_io::sandbox","host_functions","function","EcdsaVerifyError","sp_application_crypto","A generic `AppPublic` wrapper type over $public crypto;…","AppSignature","A generic `AppPublic` wrapper type over $pair crypto; this…","An identifier for this application-specific key type.","The signature that will be generated when signing with the…","generate_pair","Sign the given message with the corresponding private key…","Verify that the given signature matches the given message…","Declares Public type which is functionally equivalent to…","Declares Signature type which is functionally equivalent…","sp_application_crypto::ed25519","encode_hex_upper","encode_hex","sp_application_crypto::sr25519","AppPublic","RuntimePublic","RuntimeAppPublic","BoundToRuntimeAppPublic","An identifier for a type of cryptographic key.","Known key types; this also functions as a global registry…","Key type for Babe module, build-in.","Key type for Grandpa module, build-in.","Key type for controlling an account in a Substrate…","Key type for Aura module, built-in.","Key type for ImOnline module, built-in.","AUTHORITY_DISCOVERY","Key type for AuthorityDiscovery module, built-in.","A key type ID useful for tests.","A public key.","A signature (a 512-bit value).","A localized signature also contains sender information.","An Schnorrkel/Ristretto x25519 (\"sr25519\") public key.","An Schnorrkel/Ristretto x25519 (\"sr25519\") key pair.","An Schnorrkel/Ristretto x25519 (\"sr25519\") signature.","A localized signature also contains sender information.…","from_h512","from_h256","Make a new key pair from binary data derived from a valid…","BadBase58","BadLength","Make a new key pair from raw secret seed material.","KeyTypeId","Simple 4 byte identifier.","Re-export this since it's part of the API of this crate.…","CryptoType","The pair key type of this crypto.","A runtime interface for an application's public key.","Returns all public keys for this application in the…","Generate a public/private pair with an optional `seed` and…","Something that bound to a fixed `RuntimeAppPublic`.","The `RuntimeAppPublic` this type is bound to.","Re-export top-level arithmetic stuff. A fixed point…","helpers_128bit","Helper gcd function used in Rational128 implementation.","split a u128 into two u64 limbs","to_big_uint","Convert a u128 to a u32 based biguint.","multiply_by_rational","Safely and accurately compute `a * b / c`. The approach…","sp_runtime","Representation of a single limb.","Representation of two limbs.","Splits a [`Double`] limb number into a tuple of two…","Simple wrapper around an infinitely large integer,…","DeserializeOwned","A data structure that can be deserialized without…","Signature verify that can work with any known signature…","The function that should be called.","Generic header digest.","A list of logs in the digest.","Digest item that is able to encode/decode 'system' digest…","ChangesTrieRoot","System digest item that contains the root of changes trie…","A pre-runtime digest.","A message from the runtime to the consensus engine. This…","Put a Seal on it. This is only used by native code, and is…","Some other thing. Unsupported and experimental.","PreRuntime","Consensus","transactionvalidityerror","digestitem","opaquedigestitemid","as_changes_trie_root","sp_runtime::generic","as_pre_runtime","as_consensus","Cast this digest item into `PreRuntime`","Try to match this digest item to the given opaque item…","httpresult","Simple sr25519 (Schnorr-Ristretto) API.","sp_runtime::testing","parent_hash","extrinsics_root","DigestItem","Primitives for the runtime modules.","SimpleArithmetic","A meta trait for arithmetic.","Just like `Into` except that if the source value is too…","Just like `From` except that if the source value is too…","unique_saturated_from","Simple trait to use checked mul and max value to give a…","Saturated addition - if the product can't fit in the type…","Saturated subtraction - if the product can't fit in the…","Saturated multiply - if the product can't fit in the type…","Convenience type to work around the highly unergonomic…","saturated_from","saturated_into","Input that adds infinite number of zero after wrapped input.","Type of the signer.","Verify a signature. Return `true` if signature is valid…","Perform the origin check.","outerorigin","lookuperror","Means of changing one type into another in a manner…","Type to lookup from.","Type to lookup into.","Attempt a lookup.","state_root","Something which fulfills the abstract idea of a Substrate…","extrinsics","A \"checkable\" piece of information, used by the standard…","Returned if `check` succeeds.","transactionvalidity","AccountId","DispatchInfo","A marker trait for something that knows the type of the…","pre_dispatch","validate_unsigned","into_account","Try to convert an account ID into this type. Might not…","accountid","Convert the given `block_id` to the corresponding block…","Create a new instance from the given byte array.","CannotLookup","exhausted_resources","Returns a number at least zero, at most `max`.","is_clear","sp_runtime::biguint","into_sub_account","try_from_sub_account","sp_runtime::curve","sp_runtime::offchain::http","sp_runtime::testing::sr25519","sp_runtime::traits","sp_runtime::transaction_validity","sp_runtime::random_number_generator","check_equal","set_extrinsics_root","set_state_root","set_parent_hash","set_number","digest_mut","encode_from","is_signed","applyextrinsicresult","Checks to see if this is a valid transaction. It returns…","Executes all necessary logic needed prior to dispatch and…","assimilate_storage","dispatcherror","digestitemref","responsebody","headersiterator","invalidtransaction","unknowntransaction","validtransaction","uintauthorityid","anysignature","opaqueextrinsic","multisigner","piecewiselinear","uncheckedextrinsic","checkedextrinsic","signedblock","extrinsicwrapper","blaketwo256","multisignature","deserializer","Nothing.","accuracy","If it is zero or not","Build from a raw `n/d`.","from_unchecked","Build from a raw `n/d`. This could lead to / 0 if not…","Return the numerator.","Return the denominator.","Convert `self` to a similar rational number where…","Get the least common divisor of `self` and `other`.","lazy_saturating_add","A saturating add that assumes `self` and `other` have the…","lazy_saturating_sub","A saturating subtraction that assumes `self` and `other`…","Addition. Simply tries to unify the denominators and add…","Subtraction. Simply tries to unify the denominators and…","from_natural","creates self from a natural number.","Return the accuracy of the type. Given that this function…","Consume self and return the inner value.","Raw constructor. Equal to `parts / 1_000_000_000`.","from_rational","creates self from a rational number. Equal to `n/d`.","saturated_multiply_accumulate","Performs a saturated multiply and accumulate by unsigned…","Create a new instance with `size` limbs. This prevents any…","Raw constructor from custom limbs. If `limbs` is empty,…","Number of limbs.","checked_get","A naive setter for limb at `index`. Note that the order is…","returns the least significant limb of the number.","returns the most significant limb of the number.","Strips zeros from the left side (the most significant…","Zero-pad `self` from left to reach `size` limbs. Will not…","Adds `self` with `other`. self and other do not have to…","Subtracts `other` from `self`. self and other do not have…","Multiplies n-limb number `self` with m-limb number `other`.","Divides `self` by a single limb `other`. This can be used…","Divides an `n + m` limb self by a `n` limb `other`. The…","OpaqueExtrinsic","MultiSignature","MultiSigner","DispatchError","PiecewiseLinear","UncheckedExtrinsic","CheckedExtrinsic","SignedBlock","DigestItemRef","OpaqueDigestItemId","SignedPayload","ResponseBody","HeadersIterator","UintAuthorityId","IdentifyAccount","EnsureOrigin","StaticLookup","CheckedConversion","OnInitialize","OffchainWorker","RandomnessBeacon","BlindCheckable","Dispatchable","SignedExtension","ProvideRuntimeApi","GetRuntimeBlockType","GetNodeBlockType","RuntimeApiInfo","ValidateUnsigned","AccountIdConversion","AppendZerosInput","TrailingZeroInput","ValidTransaction","InvalidTransaction","UnknownTransaction","TransactionValidityError","RandomNumberGenerator","BuildStorage","BuildModuleGenesisStorage","AnySignature","ExtrinsicWrapper","LookupError","IdentityLookup","ConvertInto","BlakeTwo256","DispatchOutcome","Child trie storage data.","Child data for storage.","child_info","Associated child info for a child trie.","Struct containing data needed for a storage.","Top trie storage data.","Children trie storage data by storage key.","create_runtime_str","Create a const [`RuntimeString`].","runtime_version","runtimeversion","can_author_with","RuntimeVersion","NativeVersion","GetRuntimeVersion","Twox64Concat","Blake2_128Concat","Logs a message at the info level.","Logs a message at the debug level.","Logs a message at the error level.","Logs a message at the trace level.","Logs a message at the warn level.","frame_support::debug","frame_support","frame_support::dispatch","All the metadata about a function.","A type that decodes to a different type than it encodes.…","DecodeDifferentArray","All the metadata about a function argument.","All the metadata about one module constant.","A technical trait to store lazy initiated vec value as…","default_byte","Wrapper over dyn pointer for accessing a cached once byte…","All the metadata about errors in a module.","All the metadata about a module error.","callablecallfor","Return the value of the item in storage under `key`, or…","frame_support::storage","get_or_default","get_or_else","Put `value` in storage under `key`.","Remove `key` from storage, returning its value if it had…","take_or_default","Remove `key` from storage, returning its value, or, if…","take_or_else","Check to see if `key` has an explicit entry in storage.","Ensure `key` has no explicit entry in storage.","Get a Vec of bytes from storage.","Put a raw byte slice into storage.","storage_linked_map_final_key","Generate the full key used in top storage.","storage_linked_map_final_head_key","The type that get/take returns.","module_prefix","Module prefix. Used for generating final key.","storage_prefix","Storage prefix. Used for generating final key.","from_optional_value_to_query","Convert an optional value retrieved from storage to the…","from_query_to_optional_value","Convert a query to an optional value into storage.","StorageValue","The type that get/take return.","Does the value (explicitly) exist in storage?","encodelike","Append the given items to the value in the storage.","Read the length of the value in a fast way, without…","StorageLinkedMap","Load the value associated with the given key from the map.","Swap the values of two keys.","Store a value to be associated with the given key from the…","Remove the value under a key.","Mutate the value under a key.","Take the value under a key.","decode_len","StorageDoubleMap","hashed_key_for","append_or_insert","prefixiterator","All the metadata about an event.","All the metadata about an outer event.","Newtype wrapper for support encoding functions (actual the…","The metadata of a runtime. The version ID encoded/decoded…","Unused; enum filler.","Version 1 for runtime metadata. No longer used.","Version 2 for runtime metadata. No longer used.","Version 3 for runtime metadata. No longer used.","Version 4 for runtime metadata. No longer used.","Version 5 for runtime metadata. No longer used.","Version 6 for runtime metadata. No longer used.","Version 7 for runtime metadata. No longer used.","Version 8 for runtime metadata. No longer used.","Version 9 for runtime metadata. No longer used.","Version 10 for runtime metadata.","All metadata about an runtime module.","The latest version of the metadata.","Metadata prefixed by a u32 for reserved usage","All the metadata about one storage entry.","All metadata of the storage.","The common prefix used by all storage entries.","A storage entry type.","frame_support::metadata","frame_support::metadata::StorageEntryType","key2_hasher","A storage entry modifier.","Hasher used by storage maps","Blake2_128","Blake2_256","The opaque token type for an imbalance. This is returned…","dispatchresult","Similar to deposit_creating, only accepts a…","withdrawreasons","existencerequirement","lockidentifier","The quantity used to denote time; usually just a…","Set the new members; they must already be sorted. This…","Consume `self` and an `other` to return a new instance…","TransactionPriority","frame_support::dispatch::result","frame_support::dispatch::fmt","frame_support::dispatch::marker","frame_support::storage::child","frame_support::storage::generator","frame_support::event","frame_support::traits","frame_support::weights","with_context","decodedifferent","on_nonzero_unbalanced","classify_dispatch","dispatchclass","withdrawreason","dispatchinfo","simpledispatchinfo","Deref to the internal type.","Generate the hashed key for head","Generate the full key used in top storage to store the…","storage_map_final_key","storage_double_map_final_key1","Generate the first part of the key used in top storage.","storage_double_map_final_key","storage_value_final_key","RuntimeLogger","LinkedMapKeyFormat","StorageMap","StoragePrefixedMap","UpdateBalanceOutcome","ExistenceRequirement","SignedImbalance","WithdrawReason","OnFreeBalanceZero","KeyOwnerProofSystem","OnUnbalanced","ReservableCurrency","LockableCurrency","VestingCurrency","ChangeMembers","InitializeMembers","ValidatorRegistration","ModuleToIndex","WithdrawReasons","DispatchClass","SimpleDispatchInfo","ClassifyDispatch","GetDispatchInfo","PrefixIterator","Enumerator","SplitTwoWays","decl_storage","Declares strongly-typed wrappers around codec-compatible…","construct_runtime","Construct a runtime, with the given name and the given…","Trait that allows reading of data into a slice.","Should return the remaining length of the input data. If…","Read the exact number of bytes required to fill the given…","Trait that allows writing of data.","Write to the output.","Trait that allows zero-copy read of value-references from…","Attempt to deserialise the value from input.","Trait that allows zero-copy write of value-references to…","Trait that allows zero-copy read/write of value-references…","Something that can be encoded as a reference.","The reference type that is used for encoding.","HasCompact","Trait that tells you if a given type can be…","The compact type; this can be","append_or_new","A marker trait that tells the compiler that a type encode…","translate","as_bytes_ref","Randomness","blake2_128","blake2_256","Reason why a dispatch call failed","Some error occurred.","Failed to lookup some data.","A bad origin.","A custom error in a module","Module index, matching the metadata module index","Module specific error value","Optional error message.","Print something that implements `Printable` from the…","on_finalize","on_initialize","A lazy call (module function and argument values) that can…","Every function call from your runtime has an origin, which…","Actually dispatch this call and result the result of it.","Trait for things which can be printed from the runtime.","Print the object.","Priority for a transaction. Additive. Higher is better.","ConsensusEngineId","Consensus engine unique ID.","DispatchResult","Result of a module function call; either nothing…","Return the same error but without the attached message.","badorigin","Printable","BadOrigin","Utilities for formatting and printing `String`s.","The `format` function takes an [`Arguments`] struct and…","Configuration for formatting.","The type returned by formatter methods.","A collection of methods that are required to format a…","Writes a string slice into this writer, returning whether…","Writes a [`char`] into this writer, returning whether the…","Glue for usage of the [`write!`] macro with implementors…","`b` formatting.","`o` formatting.","`?` formatting.","Derive macro generating an impl of the trait `Debug`.","Format trait for an empty format, `{}`.","`x` formatting.","`p` formatting.","`X` formatting.","`e` formatting.","`E` formatting.","The error type which is returned from formatting a message…","The `write` function takes an output stream, and an…","This structure represents a safely precompiled version of…","Possible alignments returned by `Formatter::align`","Indication that contents should be left-aligned.","Indication that contents should be right-aligned.","Indication that contents should be center-aligned.","Primitive traits and types representing basic properties…","Types that can be transferred across thread boundaries.","Types with a constant size known at compile time.","Types that can be \"unsized\" to a dynamically-sized type.","StructuralPartialEq","StructuralEq","Types whose values can be duplicated simply by copying bits.","Types for which it is safe to share references between…","Zero-sized type used to mark things that \"act like\" they…","Types that can be safely moved after being pinned.","A marker type which does not implement `Unpin`.","Derive macro generating an impl of the trait `Copy`.","Error handling with the `Result` type.","`Result` is a type that represents either success ([`Ok`])…","Contains the success value","Contains the error value","An iterator over a reference to the [`Ok`] variant of a…","An iterator over a mutable reference to the [`Ok`] variant…","An iterator over the value in a [`Ok`] variant of a…","Converts a [`CString`] into a [`Vec`]`<u8>`.","Returns a consuming iterator over the possibly contained…","Turn a [`VecDeque<T>`] into a [`Vec<T>`].","Converts the given `String` to a vector `Vec` that holds…","Creates an empty `Vec<T>`.","pad_integral","Performs the correct padding for an integer which has…","This function takes a string slice and emits it to the…","Writes some data to the underlying buffer contained within…","Writes some formatted information into this instance.","Flags for formatting","Character used as 'fill' whenever there is alignment.","Flag indicating what form of alignment was requested.","Optionally specified integer width that the output should…","Optionally specified precision for numeric types.","Determines if the `+` flag was specified.","Determines if the `-` flag was specified.","Determines if the `#` flag was specified.","sign_aware_zero_pad","Determines if the `0` flag was specified.","debug_struct","Creates a [`DebugStruct`] builder designed to assist with…","debug_tuple","Creates a `DebugTuple` builder designed to assist with…","Creates a `DebugList` builder designed to assist with…","Creates a `DebugSet` builder designed to assist with…","Creates a `DebugMap` builder designed to assist with…","Adds a new entry to the list output.","Adds the contents of an iterator of entries to the list…","Adds a new entry to the map output.","Adds the key part of a new entry to the map output.","Adds the value part of a new entry to the map output.","Adds the contents of an iterator of entries to the map…","Adds a new entry to the set output.","Adds the contents of an iterator of entries to the set…","Adds a new field to the generated struct output.","Adds a new field to the generated tuple struct output.","Returns `true` if the result is [`Ok`].","Returns `true` if the result is [`Err`].","Returns `true` if the result is an [`Ok`] value containing…","contains_err","Returns `true` if the result is an [`Err`] value…","Converts from `Result<T, E>` to [`Option<T>`].","Converts from `Result<T, E>` to [`Option<E>`].","Converts from `&Result<T, E>` to `Result<&T, &E>`.","Converts from `&mut Result<T, E>` to `Result<&mut T, &mut…","Maps a `Result<T, E>` to `Result<U, E>` by applying a…","map_or_else","Maps a `Result<T, E>` to `U` by applying a function to a…","Maps a `Result<T, E>` to `Result<T, F>` by applying a…","Returns an iterator over the possibly contained value.","Returns a mutable iterator over the possibly contained…","Returns `res` if the result is [`Ok`], otherwise returns…","Calls `op` if the result is [`Ok`], otherwise returns the…","Returns `res` if the result is [`Err`], otherwise returns…","Calls `op` if the result is [`Err`], otherwise returns the…","Unwraps a result, yielding the content of an [`Ok`]. Else,…","Unwraps a result, yielding the content of an [`Ok`]. If…","Maps a `Result<&T, E>` to a `Result<T, E>` by copying the…","Maps a `Result<&mut T, E>` to a `Result<T, E>` by copying…","Maps a `Result<&T, E>` to a `Result<T, E>` by cloning the…","Maps a `Result<&mut T, E>` to a `Result<T, E>` by cloning…","unwrap_or_default","Returns the contained value or a default","as_deref_ok","as_deref_err","as_deref_mut_ok","as_deref_mut_err","as_deref_mut","Transposes a `Result` of an `Option` into an `Option` of a…","Constructs a new, empty `Vec<T>`.","Constructs a new, empty `Vec<T>` with the specified…","into_raw_parts","Decomposes a `Vec<T>` into its raw components.","Creates a `Vec<T>` directly from the raw components of…","Returns the number of elements the vector can hold without…","Shrinks the capacity of the vector with a lower bound.","Converts the vector into [`Box<[T]>`][owned slice].","Returns a raw pointer to the vector's buffer.","Returns an unsafe mutable pointer to the vector's buffer.","Forces the length of the vector to `new_len`.","Removes an element from the vector and returns it.","Inserts an element at position `index` within the vector,…","Removes and returns the element at position `index` within…","Appends an element to the back of a collection.","Removes the last element from a vector and returns it, or…","Moves all the elements of `other` into `Self`, leaving…","Returns the number of elements in the vector, also…","Returns `true` if the vector contains no elements.","Consumes and leaks the `Vec`, returning a mutable…","Clones and appends all elements in a slice to the `Vec`.","resize_default","Removes consecutive repeated elements in the vector…","remove_item","Removes the first instance of `item` from the vector if…","Creates a splicing iterator that replaces the specified…","drain_filter","drainfilter","Information related to a child state.","Instantiates information for a default child trie.","Instantiates a owned version of this child info.","resolve_child_info","Create child info from a linear byte packed value and a…","Return a single byte vector containing packed child info…","Return byte sequence (keyspace) that can be use by…","ChildInfo","Nonce check and increment to give replay protection for…","kill_storage","kill_prefix","Compute the trie root of a list of extrinsics.","CreateTransaction","Unchecked extrinsic type.","frame_system","Set the new code.","Extrinsics nonce for accounts.","Map of block numbers to block hashes.","eventrecord","utility constructor. Used only in client/factory code.","blake2_128_concat","twox_64_concat","twox_128","twox_256","frame_system::offchain","raworigin","checkweight","checknonce","checkgenesis","checkversion","try_origin","additional_signed","get_dispatch_info","EventRecord","GenesisConfig","SubmitSignedTransaction","SubmitUnsignedTransaction","OnNewAccount","IsDeadAccount","CheckWeight","CheckGenesis","CheckVersion","AccountNonce","EnsureSigned","EnsureSignedBy","EnsureNever","ChainContext","TransactionSubmitter","The block header.","Extrinsic","build_storage","Assimilate the storage for this module into pre-existing…","build_module_genesis_storage","validate","testexternalities","Dispatchable calls.","Events for this module.","Tries to update a name with a given value. If the name…","Tries to transfer a name to a given recipient. If the name…","operation","OperationType"];
searchIndex["ahash"]={"doc":"aHash","i":[[3,"AHasher","ahash","A `Hasher` for hashing an arbitrary stream of bytes.",N,N],[3,R[3121],E,"Provides a [Hasher] factory. This is typically used (e.g.…",N,N],[11,R[3122],E,"Creates a new hasher keyed to the provided key.",0,[[["u64"]],["ahasher"]]],[11,"new",E,E,1,[[],[R[3120]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"write_u8",E,E,0,[[["self"],["u8"]]]],[11,R[503],E,E,0,[[["u16"],["self"]]]],[11,R[504],E,E,0,[[["self"],["u32"]]]],[11,R[505],E,E,0,[[["self"],["u64"]]]],[11,R[506],E,E,0,[[["self"],["u128"]]]],[11,R[507],E,E,0,[[["self"],["usize"]]]],[11,"write",E,E,0,[[["self"]]]],[11,"finish",E,E,0,[[["self"]],["u64"]]],[11,R[427],E,"Constructs a new [AHasher] with keys based on compile time…",1,[[["self"]],["ahasher"]]],[11,"clone",E,E,0,[[["self"]],["ahasher"]]],[11,"clone",E,E,1,[[["self"]],[R[3120]]]],[11,R[90],E,"Constructs a new [AHasher] with compile time generated…",0,[[],["ahasher"]]],[11,R[90],E,E,1,[[],["self"]]]],"p":[[3,"AHasher"],[3,R[3121]]]};
searchIndex["aho_corasick"]={"doc":"A library for finding occurrences of many patterns at…","i":[[3,R[1607],R[1593],"An automaton for searching multiple strings in linear time.",N,N],[3,R[1608],E,"A builder for configuring an Aho-Corasick automaton.",N,N],[3,"FindIter",E,"An iterator of non-overlapping matches in a particular…",N,N],[3,R[1610],E,"An iterator of overlapping matches in a particular haystack.",N,N],[3,R[1611],E,"An iterator that reports Aho-Corasick matches in a stream.",N,N],[3,"Error",E,"An error that occurred during the construction of an…",N,N],[3,"Match",E,"A representation of a match reported by an Aho-Corasick…",N,N],[4,R[1609],E,"A knob for controlling the match semantics of an…",N,N],[13,"Standard",E,"Use standard match semantics, which support overlapping…",0,N],[13,R[1598],E,R[1599],0,N],[13,R[1600],E,R[1601],0,N],[4,R[40],E,"The kind of error that occurred.",N,N],[13,"StateIDOverflow",E,"An error that occurs when constructing an automaton would…",1,N],[12,"max",R[1594],"The maximum possible state ID.",1,N],[13,"PremultiplyOverflow",R[1593],"An error that occurs when premultiplication of state IDs…",1,N],[12,"max",R[1594],"The maximum possible state id.",1,N],[12,"requested_max",E,"The maximum ID required by premultiplication.",1,N],[11,"new",R[1593],"Create a new Aho-Corasick automaton using the default…",2,[[["i"]],[R[1595]]]],[11,"new_auto_configured",E,"Build an Aho-Corasick automaton with an automatically…",2,[[],[R[1595]]]],[11,"is_match",E,"Returns true if and only if this automaton matches the…",2,[[["asref"],["self"]],["bool"]]],[11,"earliest_find",E,"Returns the location of the first detected match in…",2,[[["asref"],["self"]],[["match"],["option",["match"]]]]],[11,"find",E,"Returns the location of the first match according to the…",2,[[["asref"],["self"]],[["match"],["option",["match"]]]]],[11,R[2720],E,"Returns an iterator of non-overlapping matches, using the…",2,[[["self"],["b"]],["finditer"]]],[11,"find_overlapping_iter",E,"Returns an iterator of overlapping matches in the given…",2,[[["self"],["b"]],["findoverlappingiter"]]],[11,R[2700],E,"Replace all matches with a corresponding value in the…",2,[[["str"],["self"]],["string"]]],[11,"replace_all_bytes",E,"Replace all matches using raw bytes with a corresponding…",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"replace_all_with",E,"Replace all matches using a closure called on each match.…",2,[[["str"],["f"],["self"],["string"]]]],[11,"replace_all_with_bytes",E,"Replace all matches using raw bytes with a closure called…",2,[[["vec"],["self"],["f"]]]],[11,"stream_find_iter",E,"Returns an iterator of non-overlapping matches in the…",2,[[["read"],["self"]],[["read"],["streamfinditer"]]]],[11,"stream_replace_all",E,"Search for and replace all matches of this automaton in…",2,[[["w"],["self"],["r"]],[R[3]]]],[11,"stream_replace_all_with",E,"Search the given reader and replace all matches of this…",2,[[["w"],["f"],["self"],["r"]],[R[3]]]],[11,R[1602],E,"Returns the match kind used by this automaton.",2,[[["self"]],[R[1604]]]],[11,"max_pattern_len",E,"Returns the length of the longest pattern matched by this…",2,[[["self"]],["usize"]]],[11,"pattern_count",E,"Return the total number of patterns matched by this…",2,[[["self"]],["usize"]]],[11,"supports_overlapping",E,"Returns true if and only if this automaton supports…",2,[[["self"]],["bool"]]],[11,"supports_stream",E,"Returns true if and only if this automaton supports stream…",2,[[["self"]],["bool"]]],[11,"heap_bytes",E,R[1605],2,[[["self"]],["usize"]]],[11,"new",E,"Create a new builder for configuring an Aho-Corasick…",3,[[],[R[1597]]]],[11,"build",E,R[1596],3,[[["i"],["self"]],[R[1595]]]],[11,"build_with_size",E,R[1596],3,[[["i"],["self"]],[[R[3],[R[1595],"error"]],["error"],[R[1595]]]]],[11,"auto_configure",E,"Automatically configure the settings on this builder…",3,[[["self"]],[R[1597]]]],[11,R[1602],E,"Set the desired match semantics.",3,[[["self"],[R[1604]]],[R[1597]]]],[11,"anchored",E,"Enable anchored mode, which requires all matches to start…",3,[[["self"],["bool"]],[R[1597]]]],[11,"ascii_case_insensitive",E,"Enable ASCII-aware case insensitive matching.",3,[[["self"],["bool"]],[R[1597]]]],[11,"dense_depth",E,"Set the limit on how many NFA states use a dense…",3,[[["self"],["usize"]],[R[1597]]]],[11,"dfa",E,"Compile the standard Aho-Corasick automaton into a…",3,[[["self"],["bool"]],[R[1597]]]],[11,"prefilter",E,"Enable heuristic prefilter optimizations.",3,[[["self"],["bool"]],[R[1597]]]],[11,"byte_classes",E,"Shrink the size of the transition alphabet by mapping…",3,[[["self"],["bool"]],[R[1597]]]],[11,"premultiply",E,"Premultiply state identifiers in the transition table.…",3,[[["self"],["bool"]],[R[1597]]]],[11,"kind",E,"Return the kind of this error.",4,[[["self"]],[R[10]]]],[0,"packed",E,"A lower level API for packed multiple substring search,…",N,N],[3,"Builder",R[1606],"A builder for constructing a packed searcher from a…",N,N],[3,"Config",E,"The configuration for a packed multiple pattern searcher.",N,N],[3,"FindIter",E,"An iterator over non-overlapping matches from a packed…",N,N],[3,R[660],E,"A packed searcher for quickly finding occurrences of…",N,N],[4,R[1609],E,"A knob for controlling the match semantics of a packed…",N,N],[13,R[1598],E,R[1599],5,N],[13,R[1600],E,R[1601],5,N],[11,"new",E,"Create a new default configuration. A default…",6,[[],["config"]]],[11,"builder",E,"Create a packed builder from this configuration. The…",6,[[["self"]],["builder"]]],[11,R[1602],E,"Set the match semantics for this configuration.",6,[[["self"],[R[1604]]],["config"]]],[11,"new",E,"Create a new builder for constructing a multi-pattern…",7,[[],["builder"]]],[11,"build",E,"Build a searcher from the patterns added to this builder…",7,[[["self"]],[["searcher"],["option",["searcher"]]]]],[11,"add",E,"Add the given pattern to this set to match.",7,[[["self"],["asref"]],["builder"]]],[11,"extend",E,"Add the given iterator of patterns to this set to match.",7,[[["self"],["i"]],["builder"]]],[11,"new",E,"A convenience function for constructing a searcher from an…",8,[[["i"]],[["searcher"],["option",["searcher"]]]]],[11,"find",E,R[1603],8,[[["asref"],["self"]],[["match"],["option",["match"]]]]],[11,"find_at",E,R[1603],8,[[["asref"],["usize"],["self"]],[["match"],["option",["match"]]]]],[11,R[2720],E,"Return an iterator of non-overlapping occurrences of the…",8,[[["self"],["b"]],["finditer"]]],[11,R[1602],E,"Returns the match kind used by this packed searcher.",8,[[["self"]],[R[1604]]]],[11,"minimum_len",E,"Returns the minimum length of a haystack that is required…",8,[[["self"]],["usize"]]],[11,"heap_bytes",E,R[1605],8,[[["self"]],["usize"]]],[8,"StateID",R[1593],"A trait describing the representation of an automaton's…",N,N],[10,"from_usize",E,"Convert from a `usize` to this implementation's…",9,[[["usize"]],["self"]]],[10,"to_usize",E,"Convert this implementation's representation to a `usize`.",9,[[],["usize"]]],[10,"max_id",E,"Return the maximum state identifier supported by this…",9,[[],["usize"]]],[11,"pattern",E,"Returns the identifier of the pattern that matched.",10,[[["self"]],["usize"]]],[11,"start",E,"The starting position of the match.",10,[[["self"]],["usize"]]],[11,"end",E,"The ending position of the match.",10,[[["self"]],["usize"]]],[11,R[340],E,"Returns true if and only if this match is empty. That is,…",10,[[["self"]],["bool"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[211],E,E,11,[[],["i"]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[211],E,E,12,[[],["i"]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[211],E,E,13,[[],["i"]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[78],E,E,4,[[["self"]],["string"]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",R[1606],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[211],E,E,14,[[],["i"]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"next",R[1593],E,11,[[["self"]],[["match"],["option",["match"]]]]],[11,"next",E,E,12,[[["self"]],[["match"],["option",["match"]]]]],[11,"next",E,E,13,[[["self"]],[[R[3],["match"]],["option",[R[3]]]]]],[11,"next",R[1606],E,14,[[["self"]],[["match"],["option",["match"]]]]],[11,"clone",R[1593],E,2,[[["self"]],[R[1595]]]],[11,"clone",E,E,3,[[["self"]],[R[1597]]]],[11,"clone",E,E,0,[[["self"]],[R[1604]]]],[11,"clone",E,E,4,[[["self"]],["error"]]],[11,"clone",E,E,1,[[["self"]],[R[10]]]],[11,"clone",R[1606],E,5,[[["self"]],[R[1604]]]],[11,"clone",E,E,6,[[["self"]],["config"]]],[11,"clone",E,E,7,[[["self"]],["builder"]]],[11,"clone",E,E,8,[[["self"]],["searcher"]]],[11,"clone",R[1593],E,10,[[["self"]],["match"]]],[11,R[90],E,E,3,[[],[R[1597]]]],[11,R[90],E,E,0,[[],[R[1604]]]],[11,R[90],R[1606],E,5,[[],[R[1604]]]],[11,R[90],E,E,6,[[],["config"]]],[11,R[90],E,E,7,[[],["builder"]]],[11,"eq",R[1593],E,0,[[[R[1604]],["self"]],["bool"]]],[11,"eq",R[1606],E,5,[[["self"],[R[1604]]],["bool"]]],[11,"eq",R[1593],E,10,[[["self"],["match"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["match"]],["bool"]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1606],E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1593],E,10,[[["self"],[R[37]]],[R[3]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,R[38],E,E,4,[[["self"]],["str"]]]],"p":[[4,R[1609]],[4,R[40]],[3,R[1607]],[3,R[1608]],[3,"Error"],[4,R[1609]],[3,"Config"],[3,"Builder"],[3,R[660]],[8,"StateID"],[3,"Match"],[3,"FindIter"],[3,R[1610]],[3,R[1611]],[3,"FindIter"]]};
searchIndex["arrayref"]={"doc":"This package contains just four macros, which enable the…","i":[[14,"array_ref","arrayref","You can use `array_ref` to generate an array reference to…",N,N],[14,"array_refs",E,"You can use `array_refs` to generate a series of array…",N,N],[14,"mut_array_refs",E,"You can use `mut_array_refs` to generate a series of…",N,N],[14,"array_mut_ref",E,"You can use `array_mut_ref` to generate a mutable array…",N,N]],"p":[]};
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,R[749],R[746],"A string with a fixed capacity.",N,N],[3,R[750],E,"Error value indicating insufficient capacity",N,N],[3,"ArrayVec",E,"A vector with a fixed capacity.",N,N],[3,R[339],E,"By-value iterator for `ArrayVec`.",N,N],[3,"Drain",E,"A draining iterator for `ArrayVec`.",N,N],[11,"new",E,"Create a new empty `ArrayString`.",0,[[],[R[747]]]],[11,"from",E,"Create a new `ArrayString` from a `str`.",0,[[["str"]],[[R[3],[R[739]]],[R[739],["str"]]]]],[11,"from_byte_string",E,"Create a new `ArrayString` from a byte string literal.",0,[[["a"]],[[R[3],[R[367]]],[R[367]]]]],[11,R[619],E,"Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push",E,R[740],0,[[["self"],["char"]]]],[11,"try_push",E,R[740],0,[[["self"],["char"]],[[R[3],[R[739]]],[R[739],["char"]]]]],[11,"push_str",E,R[741],0,[[["str"],["self"]]]],[11,"try_push_str",E,R[741],0,[[["self"],["str"]],[[R[739],["str"]],[R[3],[R[739]]]]]],[11,"pop",E,"Removes the last character from the string and returns it.",0,[[["self"]],[["option",["char"]],["char"]]]],[11,R[627],E,"Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove",E,"Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear",E,"Make the string empty.",0,[[["self"]]]],[11,"set_len",E,"Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str",E,"Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new",E,"Create a new `CapacityError` from `element`.",1,[[[T]],[R[739]]]],[11,"element",E,"Extract the overflowing element",1,[[],[T]]],[11,"simplify",E,"Convert into a `CapacityError` that does not carry an…",1,[[],[R[739]]]],[8,"Array",E,"Trait for fixed size arrays.",N,N],[16,"Item",E,"The array’s element type",2,N],[8,R[1345],E,"`RangeArgument` is implemented by Rust's built-in range…",N,N],[11,"start",E,R[1343],3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"end",E,R[1344],3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"new",E,"Create a new empty `ArrayVec`.",4,[[],[R[746]]]],[11,"len",E,"Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,R[619],E,"Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push",E,R[742],4,[[["self"]]]],[11,"try_push",E,R[742],4,[[["self"]],[[R[3],[R[739]]],[R[739]]]]],[11,"push_unchecked",E,"Push `element` to the end of the vector without checking…",4,[[["self"]]]],[11,"insert",E,R[743],4,[[["self"],["usize"]]]],[11,"try_insert",E,R[743],4,[[["self"],["usize"]],[[R[3],[R[739]]],[R[739]]]]],[11,"pop",E,"Remove the last element in the vector and return it.",4,[[["self"]],["option"]]],[11,R[601],E,R[744],4,[[["self"],["usize"]]]],[11,"swap_pop",E,R[744],4,[[["self"],["usize"]],["option"]]],[11,"remove",E,R[745],4,[[["self"],["usize"]]]],[11,"pop_at",E,R[745],4,[[["self"],["usize"]],["option"]]],[11,R[627],E,R[751],4,[[["self"],["usize"]]]],[11,"clear",E,"Remove all elements in the vector.",4,[[["self"]]]],[11,"retain",E,R[602],4,[[["self"],["f"]]]],[11,"set_len",E,"Set the vector’s length without dropping or moving out…",4,[[["self"],["usize"]]]],[11,"drain",E,"Create a draining iterator that removes the specified…",4,[[["rangeargument"],["self"]],["drain"]]],[11,R[109],E,"Return the inner fixed size array, if it is full to its…",4,[[],[R[3]]]],[11,"dispose",E,"Dispose of `self` without the overwriting that is needed…",4,[[]]],[11,R[589],E,"Return a slice containing all elements of the vector.",4,[[["self"]]]],[11,R[291],E,"Return a mutable slice containing all elements of the…",4,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"from",E,E,4,[[],[T]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[211],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[211],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[211],E,E,6,[[],["i"]]],[11,"into",E,E,6,[[],[U]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"from",E,E,4,[[["a"]],["self"]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,5,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,4,[[[R[37]],["self"]],[R[3]]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[739]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[739]]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[105]]]],[11,"cmp",E,E,1,[[["self"],[R[739]]],[R[105]]]],[11,"cmp",E,E,4,[[[R[746]],["self"]],[R[105]]]],[11,R[106],E,E,0,[[["self"]],[[R[105]],["option",[R[105]]]]]],[11,"lt",E,E,0,[[["self"]],["bool"]]],[11,"le",E,E,0,[[["self"]],["bool"]]],[11,"gt",E,E,0,[[["self"]],["bool"]]],[11,"ge",E,E,0,[[["self"]],["bool"]]],[11,R[106],E,E,0,[[["str"],["self"]],[[R[105]],["option",[R[105]]]]]],[11,"lt",E,E,0,[[["str"],["self"]],["bool"]]],[11,"le",E,E,0,[[["str"],["self"]],["bool"]]],[11,"gt",E,E,0,[[["str"],["self"]],["bool"]]],[11,"ge",E,E,0,[[["str"],["self"]],["bool"]]],[11,R[106],E,E,1,[[["self"],[R[739]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,1,[[["self"],[R[739]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[739]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[739]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[739]]],["bool"]]],[11,R[106],E,E,4,[[[R[746]],["self"]],[[R[105]],["option",[R[105]]]]]],[11,"lt",E,E,4,[[["self"]],["bool"]]],[11,"le",E,E,4,[[["self"]],["bool"]]],[11,"ge",E,E,4,[[["self"]],["bool"]]],[11,"gt",E,E,4,[[["self"]],["bool"]]],[11,"deref",E,E,0,[[["self"]],["str"]]],[11,"deref",E,E,4,[[["self"]]]],[11,R[99],E,E,0,[[["self"]],["str"]]],[11,R[99],E,E,4,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"hash",E,E,4,[[["self"],["h"]]]],[11,"next",E,E,5,[[["self"]],["option"]]],[11,R[292],E,E,5,[[["self"]]]],[11,"next",E,E,6,[[["self"]],["option"]]],[11,R[292],E,E,6,[[["self"]]]],[11,R[293],E,E,4,[[[R[294]]],["self"]]],[11,R[211],E,E,4,[[],[R[485]]]],[11,R[295],E,E,5,[[["self"]],["option"]]],[11,R[295],E,E,6,[[["self"]],["option"]]],[11,"extend",E,E,4,[[["self"],[R[294]]]]],[11,R[493],E,E,0,[[["self"],["char"]],[R[3]]]],[11,R[492],E,E,0,[[["str"],["self"]],[R[3]]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"clone",E,E,0,[[["self"]],[R[747]]]],[11,R[385],E,E,0,[[["self"],["self"]]]],[11,"clone",E,E,1,[[["self"]],[R[739]]]],[11,"clone",E,E,5,[[["self"]],[R[485]]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,R[385],E,E,4,[[["self"],["self"]]]],[11,R[90],E,"Return an empty `ArrayString`",0,[[],[R[747]]]],[11,R[90],E,"Return an empty array",4,[[],[R[746]]]],[11,R[45],E,E,0,[[["self"]],["str"]]],[11,R[45],E,E,4,[[["self"]]]],[11,R[22],E,E,4,[[["self"]]]],[11,"start",E,R[1343],3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"end",E,R[1344],3,[[["self"]],[["usize"],["option",["usize"]]]]]],"p":[[3,R[749]],[3,R[750]],[8,"Array"],[8,R[1345]],[3,"ArrayVec"],[3,R[339]],[3,"Drain"]]};
searchIndex["backtrace"]={"doc":"A library for acquiring a backtrace at runtime","i":[[3,"Frame",R[1634],"A trait representing one frame of a backtrace, yielded to…",N,N],[3,"Symbol",E,"A trait representing the resolution of a symbol in a file.",N,N],[3,"SymbolName",E,"A wrapper around a symbol name to provide ergonomic…",N,N],[3,R[1637],E,"A formatter for backtraces.",N,N],[3,R[1638],E,"A formatter for just one frame of a backtrace.",N,N],[3,R[2911],E,"Representation of an owned and self-contained backtrace.",N,N],[3,R[1639],E,"Captured version of a frame in a backtrace.",N,N],[3,R[1640],E,"Captured version of a symbol in a backtrace.",N,N],[4,R[1636],E,"A platform independent representation of a string. When…",N,N],[13,"Bytes",E,"A slice, typically provided on Unix platforms.",0,N],[13,"Wide",E,"Wide strings typically from Windows.",0,N],[4,"PrintFmt",E,"The styles of printing that we can print",N,N],[13,"Short",E,"Prints a terser backtrace which ideally only contains…",1,N],[13,"Full",E,"Prints a backtrace that contains all possible information",1,N],[5,"trace_unsynchronized",E,"Same as `trace`, only unsafe as it's unsynchronized.",N,[[["fnmut"]]]],[5,"resolve_frame_unsynchronized",E,"Same as `resolve_frame`, only unsafe as it's unsynchronized.",N,[[["frame"],["f"]]]],[5,"resolve_unsynchronized",E,"Same as `resolve`, only unsafe as it's unsynchronized.",N,[[["f"]]]],[5,"clear_symbol_cache",E,"Attempt to reclaim that cached memory used to symbolicate…",N,[[]]],[5,"trace",E,"Inspects the current call-stack, passing all active frames…",N,[[["fnmut"]]]],[5,"resolve",E,"Resolve an address to a symbol, passing the symbol to the…",N,[[["fnmut"]]]],[5,"resolve_frame",E,"Resolve a previously capture frame to a symbol, passing…",N,[[["frame"],["fnmut"]]]],[11,"ip",E,"Returns the current instruction pointer of this frame.",2,[[["self"]]]],[11,R[1633],E,"Returns the starting symbol address of the frame of this…",2,[[["self"]]]],[11,"name",E,R[3393],3,[[["self"]],[["option",[R[1631]]],[R[1631]]]]],[11,"addr",E,"Returns the starting address of this function.",3,[[["self"]],["option"]]],[11,"filename_raw",E,"Returns the raw filename as a slice. This is mainly useful…",3,[[["self"]],[[R[1630]],["option",[R[1630]]]]]],[11,"lineno",E,"Returns the line number for where this symbol is currently…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"filename",E,"Returns the file name where this function was defined.",3,[[["self"]],[["option",["path"]],["path"]]]],[11,"new",E,"Creates a new symbol name from the raw underlying bytes.",4,[[],[R[1631]]]],[11,"as_str",E,"Returns the raw (mangled) symbol name as a `str` if the…",4,[[["self"]],[["str"],["option",["str"]]]]],[11,R[2616],E,"Returns the raw symbol name as a list of bytes",4,[[["self"]]]],[11,"to_str_lossy",E,"Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],[["str"],["cow",["str"]]]]],[11,"into_path_buf",E,"Provides a `Path` representation of `BytesOrWideString`.",0,[[],[R[420]]]],[11,"new",E,"Create a new `BacktraceFmt` which will write output to the…",5,[[[R[37]],["fnmut"],["printfmt"]],["self"]]],[11,"add_context",E,"Prints a preamble for the backtrace about to be printed.",5,[[["self"]],[R[3]]]],[11,"frame",E,"Adds a frame to the backtrace output.",5,[[["self"]],["backtraceframefmt"]]],[11,"finish",E,"Completes the backtrace output.",5,[[["self"]],[R[3]]]],[11,"backtrace_frame",E,"Prints a `BacktraceFrame` with this frame formatter.",6,[[["self"],[R[1632]]],[R[3]]]],[11,"backtrace_symbol",E,"Prints a `BacktraceSymbol` within a `BacktraceFrame`.",6,[[[R[1635]],["self"],[R[1632]]],[R[3]]]],[11,"symbol",E,"Prints a raw traced `Frame` and `Symbol`, typically from…",6,[[["self"],["frame"],["symbol"]],[R[3]]]],[11,"print_raw",E,"Adds a raw frame to the backtrace output.",6,[[["u32"],[R[1631]],["option",[R[1630]]],["option",[R[1631]]],["self"],[R[1630]],["option",["u32"]]],[R[3]]]],[11,"new",E,"Captures a backtrace at the callsite of this function,…",7,[[],[R[1634]]]],[11,"new_unresolved",E,"Similar to `new` except that this does not resolve any…",7,[[],[R[1634]]]],[11,"frames",E,"Returns the frames from when this backtrace was captured.",7,[[["self"]]]],[11,"resolve",E,"If this backtrace was created from `new_unresolved` then…",7,[[["self"]]]],[11,"ip",E,"Same as `Frame::ip`",8,[[["self"]]]],[11,R[1633],E,"Same as `Frame::symbol_address`",8,[[["self"]]]],[11,"symbols",E,"Returns the list of symbols that this frame corresponds to.",8,[[["self"]]]],[11,"name",E,"Same as `Symbol::name`",9,[[["self"]],[["option",[R[1631]]],[R[1631]]]]],[11,"addr",E,"Same as `Symbol::addr`",9,[[["self"]],["option"]]],[11,"filename",E,"Same as `Symbol::filename`",9,[[["self"]],[["option",["path"]],["path"]]]],[11,"lineno",E,"Same as `Symbol::lineno`",9,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[78],E,E,4,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"from",E,E,7,[[["vec",[R[1632]]],[R[1632]]],["self"]]],[11,"fmt",E,E,4,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,3,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,4,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,8,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,9,[[[R[37]],["self"]],[R[3]]]],[11,"eq",E,E,1,[[["printfmt"],["self"]],["bool"]]],[11,"drop",E,E,6,[[["self"]]]],[11,"into",E,E,7,[[],[["vec",[R[1632]]],[R[1632]]]]],[11,"clone",E,E,2,[[["self"]],["frame"]]],[11,"clone",E,E,1,[[["self"]],["printfmt"]]],[11,"clone",E,E,7,[[["self"]],[R[1634]]]],[11,"clone",E,E,8,[[["self"]],[R[1632]]]],[11,"clone",E,E,9,[[["self"]],[R[1635]]]],[11,R[90],E,E,7,[[],[R[1634]]]]],"p":[[4,R[1636]],[4,"PrintFmt"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,R[1637]],[3,R[1638]],[3,R[2911]],[3,R[1639]],[3,R[1640]]]};
searchIndex["backtrace_sys"]={"doc":E,"i":[[4,R[1506],"backtrace_sys",E,N,N],[5,"backtrace_create_state",E,E,N,N],[5,"backtrace_syminfo",E,E,N,N],[5,"backtrace_pcinfo",E,E,N,N],[6,"backtrace_syminfo_callback",E,E,N,N],[6,"backtrace_full_callback",E,E,N,N],[6,"backtrace_error_callback",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]]],"p":[[4,R[1506]]]};
searchIndex["base58"]={"doc":"Base58-to-text encoding","i":[[4,R[285],"base58","Errors that can occur when decoding base58 encoded string.",N,N],[13,"InvalidBase58Character",E,"The input contained a character which is not a part of the…",0,N],[13,"InvalidBase58Length",E,"The input had invalid length.",0,N],[8,"ToBase58",E,"A trait for converting a value to base58 encoded string.",N,N],[10,"to_base58",E,"Converts a value of `self` to a base58 value, returning…",1,[[["self"]],["string"]]],[8,R[286],E,"A trait for converting base58 encoded values.",N,N],[10,"from_base58",E,"Convert a value of `self`, interpreted as base58 encoded…",2,[[["self"]],[[R[3],["vec",R[284]]],["vec",["u8"]],[R[284]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"eq",E,E,0,[[[R[284]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[284]],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]]],"p":[[4,R[285]],[8,"ToBase58"],[8,R[286]]]};
searchIndex["bip39"]={"doc":"This is a Rust implementation of the…","i":[[3,"Mnemonic","bip39","The primary type in this crate, most tasks require…",N,N],[3,"Seed",E,"The secret value used to derive HD wallet addresses from a…",N,N],[4,"Language",E,"The language determines which words will be used in a…",N,N],[13,"English",E,E,0,N],[13,"ChineseSimplified",E,E,0,N],[13,"ChineseTraditional",E,E,0,N],[13,"French",E,E,0,N],[13,"Italian",E,E,0,N],[13,"Japanese",E,E,0,N],[13,"Korean",E,E,0,N],[13,"Spanish",E,E,0,N],[4,R[3242],E,"Determines the number of words that will be present in a…",N,N],[13,"Words12",E,E,1,N],[13,"Words15",E,E,1,N],[13,"Words18",E,E,1,N],[13,"Words21",E,E,1,N],[13,"Words24",E,E,1,N],[4,R[40],E,E,N,N],[13,R[3720],E,E,2,N],[13,"InvalidWord",E,E,2,N],[13,"InvalidKeysize",E,E,2,N],[13,"InvalidWordLength",E,E,2,N],[13,"InvalidEntropyLength",E,E,2,N],[11,"new",E,"Generates a new [`Mnemonic`][Mnemonic]",3,[[[R[3241]],[R[3239]]],[R[3240]]]],[11,R[1662],E,"Create a [`Mnemonic`][Mnemonic] from pre-generated entropy",3,[[[R[3241]]],[[R[3240]],[R[3],[R[3240],"error"]],["error"]]]],[11,R[3729],E,"Create a [`Mnemonic`][Mnemonic] from an existing mnemonic…",3,[[["s"],[R[3241]]],[[R[3240]],[R[3],[R[3240],"error"]],["error"]]]],[11,R[4847],E,"Validate a mnemonic phrase",3,[[["str"],[R[3241]]],[[R[3],["error"]],["error"]]]],[11,"phrase",E,"Get the mnemonic phrase as a string reference.",3,[[["self"]],["str"]]],[11,"into_phrase",E,"Consume the `Mnemonic` and return the phrase as a `String`.",3,[[],["string"]]],[11,"entropy",E,"Get the original entropy value of the mnemonic phrase as a…",3,[[["self"]]]],[11,R[3241],E,"Get the [`Language`][Language]",3,[[["self"]],[R[3241]]]],[11,"for_word_count",E,"Get a `MnemonicType` for a mnemonic phrase with a specific…",1,[[["usize"]],[[R[3239]],["error"],[R[3],[R[3239],"error"]]]]],[11,"for_key_size",E,"Get a `MnemonicType` for a mnemonic phrase representing…",1,[[["usize"]],[[R[3239]],["error"],[R[3],[R[3239],"error"]]]]],[11,"for_phrase",E,"Get a `MnemonicType` for an existing mnemonic phrase",1,[[["str"]],[[R[3239]],["error"],[R[3],[R[3239],"error"]]]]],[11,"total_bits",E,"Return the number of entropy+checksum bits",1,[[["self"]],["usize"]]],[11,"entropy_bits",E,"Return the number of entropy bits",1,[[["self"]],["usize"]]],[11,"checksum_bits",E,"Return the number of checksum bits",1,[[["self"]],["u8"]]],[11,"word_count",E,"Return the number of words",1,[[["self"]],["usize"]]],[11,"wordlist",E,"Get the word list for this language",0,[[["self"]],["wordlist"]]],[11,"wordmap",E,"Get a [`WordMap`][WordMap] that allows word -> index…",0,[[["self"]],["wordmap"]]],[11,"new",E,"Generates the seed from the [`Mnemonic`][Mnemonic] and the…",4,[[["str"],[R[3240]]],["self"]]],[11,R[2616],E,"Get the seed value as a byte slice",4,[[["self"]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[78],E,E,3,[[["self"]],["string"]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[["self"]],["string"]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[78],E,E,2,[[["self"]],["string"]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"as_fail",E,E,2,[[["self"]],["fail"]]],[11,"as_ref",E,E,3,[[["self"]],["str"]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,"clone",E,E,3,[[["self"]],[R[3240]]]],[11,"clone",E,E,1,[[["self"]],[R[3239]]]],[11,"clone",E,E,0,[[["self"]],[R[3241]]]],[11,"clone",E,E,4,[[["self"]],["seed"]]],[11,R[90],E,E,1,[[],[R[3239]]]],[11,R[90],E,E,0,[[],[R[3241]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"name",E,E,2,[[["self"]],[["option",["str"]],["str"]]]],[11,"cause",E,E,2,[[["self"]],[["fail"],["option",["fail"]]]]],[11,R[1634],E,E,2,[[["self"]],[[R[1634]],["option",[R[1634]]]]]]],"p":[[4,"Language"],[4,R[3242]],[4,R[40]],[3,"Mnemonic"],[3,"Seed"]]};
searchIndex["bitmask"]={"doc":"A bitmask generator for enum scoped bit flags.","i":[[14,"bitmask","bitmask","The macro that generates a bitmask and it's associated bit…",N,N]],"p":[]};
searchIndex["bitvec"]={"doc":"`bitvec` – `[bool]` in overdrive.","i":[[0,"bits","bitvec","Permit use of Rust native types as bit collections.",N,N],[8,"Bits","bitvec::bits","Allows a type to be used as a sequence of immutable bits.",N,N],[16,"Store",E,"The underlying fundamental type of the implementor.",0,N],[10,R[771],E,"Constructs a `BitSlice` reference over data.",0,[[["self"]],[R[762]]]],[8,"BitsMut",E,"Allows a type to be used as a sequence of mutable bits.",N,N],[10,R[772],E,"Constructs a mutable `BitSlice` reference over data.",1,[[["self"]],[R[762]]]],[0,"cursor","bitvec","Bit Cursors",N,N],[3,R[801],R[777],"Traverses an element from `MSbit` to `LSbit`.",N,N],[3,R[802],E,"Traverses an element from `LSbit` to `MSbit`.",N,N],[8,"Cursor",E,"A cursor over an element.",N,N],[18,"TYPENAME",E,"Name of the cursor type, for use in text display.",2,N],[10,"at",E,"Translate a semantic bit index into an electrical bit…",2,[[["bitidx"]],["bitpos"]]],[0,"prelude","bitvec","`bitvec` Prelude",N,N],[0,"slice",E,"`BitSlice` Wide Reference",N,N],[3,"BitSlice",R[778],"A compact slice of bits, whose cursor and storage types…",N,N],[3,"BitGuard",E,"Write reference to a single bit.",N,N],[3,"Chunks",E,"State keeper for chunked iteration over a `BitSlice`.",N,N],[3,R[704],E,"State keeper for mutable chunked iteration over a…",N,N],[3,R[708],E,"State keeper for exact chunked iteration over a `BitSlice`.",N,N],[3,R[709],E,"State keeper for mutable exact chunked iteration over a…",N,N],[3,"Iter",E,"State keeper for iteration over a `BitSlice`.",N,N],[3,"RChunks",E,"State keeper for reverse chunked iteration over a…",N,N],[3,R[710],E,"State keeper for mutable reverse chunked iteration over a…",N,N],[3,R[711],E,"State keeper for reverse exact iteration over a `BitSlice`.",N,N],[3,R[712],E,"State keeper for mutable reverse exact chunked iteration…",N,N],[3,"Windows",E,"State keeper for sliding-window iteration over a `BitSlice`.",N,N],[11,"empty",E,"Produces the empty slice. This is equivalent to `&[]` for…",3,[[],["self"]]],[11,"empty_mut",E,"Produces the empty mutable slice. This is equivalent to…",3,[[],["self"]]],[11,R[767],E,"Produces an immutable `BitSlice` over a single element.",3,[[[T]],["self"]]],[11,"from_element_mut",E,"Produces a mutable `BitSlice` over a single element.",3,[[[T]],["self"]]],[11,R[768],E,"Wraps a `&[T: BitStore]` in a `&BitSlice<C: Cursor, T>`.…",3,[[],["self"]]],[11,"from_slice_mut",E,"Wraps a `&mut [T: BitStore]` in a `&mut BitSlice<C:…",3,[[],["self"]]],[11,"len",E,"Returns the number of bits contained in the `BitSlice`.",3,[[["self"]],["usize"]]],[11,R[340],E,"Tests if the slice is empty.",3,[[["self"]],["bool"]]],[11,"first",E,"Gets the first element of the slice, if present.",3,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"split_first",E,R[758],3,[[["self"]],["option"]]],[11,"split_first_mut",E,R[758],3,[[["self"]],["option"]]],[11,"split_last",E,R[759],3,[[["self"]],["option"]]],[11,"split_last_mut",E,R[759],3,[[["self"]],["option"]]],[11,"last",E,"Gets the last element of the slice, or `None` if it is…",3,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"get",E,"Gets the bit value at the given position.",3,[[["self"],["usize"]],[["option",["bool"]],["bool"]]]],[11,R[469],E,"Looks up a bit at an index, without doing bounds checking.",3,[[["self"],["usize"]],["bool"]]],[11,"set",E,"Sets the bit value at the given position.",3,[[["self"],["usize"],["bool"]]]],[11,"set_unchecked",E,"Sets a bit at an index, without doing bounds checking.",3,[[["self"],["usize"],["bool"]]]],[11,"at",E,"Produces a write reference to a single bit in the slice.",3,[[["self"],["usize"]],["bitguard"]]],[11,"as_ptr",E,"Retrieves a read pointer to the start of the underlying…",3,[[["self"]]]],[11,R[600],E,"Retrieves a write pointer to the start of the underlying…",3,[[["self"]]]],[11,"swap",E,"Swaps two bits in the slice.",3,[[["self"],["usize"]]]],[11,R[490],E,"Reverses the order of bits in the slice, in place.",3,[[["self"]]]],[11,"iter",E,"Provides read-only iteration across the slice domain.",3,[[["self"]],["iter"]]],[11,"windows",E,"Produces a sliding iterator over consecutive windows in…",3,[[["self"],["usize"]],["windows"]]],[11,"chunks",E,R[760],3,[[["self"],["usize"]],["chunks"]]],[11,"chunks_mut",E,R[760],3,[[["self"],["usize"]],["chunksmut"]]],[11,"chunks_exact",E,R[760],3,[[["self"],["usize"]],[R[795]]]],[11,"chunks_exact_mut",E,R[760],3,[[["self"],["usize"]],["chunksexactmut"]]],[11,"rchunks",E,R[760],3,[[["self"],["usize"]],["rchunks"]]],[11,"rchunks_mut",E,R[760],3,[[["self"],["usize"]],["rchunksmut"]]],[11,"rchunks_exact",E,R[760],3,[[["self"],["usize"]],[R[796]]]],[11,"rchunks_exact_mut",E,R[760],3,[[["self"],["usize"]],["rchunksexactmut"]]],[11,"split_at",E,R[761],3,[[["self"],["usize"]]]],[11,"split_at_mut",E,R[761],3,[[["self"],["usize"]]]],[11,R[3440],E,"Tests if the slice begins with the given prefix.",3,[[["self"],[R[762]]],["bool"]]],[11,"ends_with",E,"Tests if the slice ends with the given suffix.",3,[[["self"],[R[762]]],["bool"]]],[11,R[544],E,"Rotates the slice, in place, to the left.",3,[[["self"],["usize"]]]],[11,R[546],E,"Rotates the slice, in place, to the right.",3,[[["self"],["usize"]]]],[11,"all",E,"Tests if all bits in the slice domain are set (logical `∧`).",3,[[["self"]],["bool"]]],[11,"any",E,"Tests if any bit in the slice is set (logical `∨`).",3,[[["self"]],["bool"]]],[11,"not_all",E,"Tests if any bit in the slice is unset (logical `¬∧`).",3,[[["self"]],["bool"]]],[11,"not_any",E,"Tests if all bits in the slice are unset (logical `¬∨`).",3,[[["self"]],["bool"]]],[11,"some",E,"Tests whether the slice has some, but not all, bits set…",3,[[["self"]],["bool"]]],[11,R[538],E,"Counts how many bits are set high.",3,[[["self"]],["usize"]]],[11,R[540],E,"Counts how many bits are set low.",3,[[["self"]],["usize"]]],[11,"set_all",E,"Set all bits in the slice to a value.",3,[[["self"],["bool"]]]],[11,"for_each",E,"Provides mutable traversal of the collection.",3,[[["self"],["f"]]]],[11,R[776],E,R[769],3,[[["self"],["i"]],["bool"]]],[11,R[589],E,"Accesses the backing storage of the `BitSlice` as a slice…",3,[[["self"]]]],[11,R[291],E,R[782],3,[[["self"]]]],[11,R[770],E,R[763],3,[[["self"]],[R[762]]]],[11,"change_cursor_mut",E,R[763],3,[[["self"]],[R[762]]]],[11,"bitptr",E,"Accesses the underlying pointer structure.",3,[[["self"]],["bitptr"]]],[11,R[592],E,R[764],4,[[["self"]],[R[762]]]],[11,R[593],E,R[764],5,[[],[R[762]]]],[11,R[592],E,R[764],6,[[["self"]],[R[762]]]],[11,R[593],E,R[764],7,[[],[R[762]]]],[0,"store","bitvec","Bit management",N,N],[8,"BitStore","bitvec::store","Generalizes over the fundamental types for use in `bitvec`…",N,N],[18,"BITS",E,"The width, in bits, of this type.",8,N],[18,"INDX",E,"The number of bits required to index a bit inside the…",8,N],[18,"MASK",E,"The bitmask to turn an arbitrary number into a bit index.…",8,N],[18,"TYPENAME",E,"Name of the implementing type. This is only necessary…",8,N],[11,"load",E,"Performs an unsynchronized load on the underlying element.",8,[[["self"]],["self"]]],[11,"set",E,R[765],8,[[["bool"],["self"],["bitidx"]]]],[11,"set_at",E,R[765],8,[[["bitpos"],["self"],["bool"]]]],[11,"get",E,R[766],8,[[["self"],["bitidx"]],["bool"]]],[11,"get_at",E,R[766],8,[[["bitpos"],["self"]],["bool"]]],[11,"mask_at",E,"Produces the bit mask which selects only the bit at the…",8,[[["bitpos"]],["self"]]],[11,R[538],E,"Counts how many bits in `self` are set to `1`.",8,[[["self"]],["usize"]]],[11,R[540],E,"Counts how many bits in `self` are set to `0`.",8,[[["self"]],["usize"]]],[11,"bits",E,"Extends a single bit to fill the entire element.",8,[[["bool"]],["self"]]],[0,"boxed","bitvec","`BitBox` structure",N,N],[3,"BitBox",R[779],"A pointer type for owned bit sequences.",N,N],[3,R[339],E,E,N,N],[11,"empty",E,"Constructs an empty boxed bitslice.",9,[[],["self"]]],[11,R[767],E,"Produces a `BitBox` from a single element.",9,[[[T]],["self"]]],[11,R[768],E,"Builds a `BitBox` from a borrowed slice of elements.",9,[[],["self"]]],[11,R[774],E,"Clones a `&BitSlice` into a `BitBox`.",9,[[[R[762]]],["self"]]],[11,"from_boxed_slice",E,"Produces a `BitBox` from an owned slice of elements.",9,[[["box"]],["self"]]],[11,R[597],E,"Removes the `BitBox` wrapper from a `Box<[T]>`.",9,[[],["box"]]],[11,R[582],E,"Constructs a `BitBox` from a raw `BitPtr`.",9,[[["bitptr"]],["self"]]],[11,R[581],E,"Consumes the `BitBox`, returning the wrapped `BitPtr`…",9,[[],["bitptr"]]],[11,"leak",E,"Consumes and leaks the `BitBox`, returning a mutable…",9,[[],[R[762]]]],[11,R[775],E,R[769],9,[[["i"]],["self"]]],[11,R[770],E,"Changes the cursor on a box handle, without changing the…",9,[[],["bitbox"]]],[11,R[771],E,R[773],9,[[["self"]],[R[762]]]],[11,R[772],E,R[773],9,[[["self"]],[R[762]]]],[0,"vec","bitvec","`BitVec` structure",N,N],[3,"BitVec",R[780],"A compact [`Vec`] of bits, whose cursor and storage type…",N,N],[3,"Drain",E,"State keeper for draining iteration.",N,N],[3,R[339],E,"A consuming iterator for `BitVec`.",N,N],[3,"Splice",E,"A splicing iterator for `BitVec`.",N,N],[11,"new",E,"Constructs a new, empty, `BitVec<C, T>`.",10,[[],["self"]]],[11,R[287],E,"Constructs a new, empty, `BitVec<T>` with the specified…",10,[[["usize"]],["self"]]],[11,R[767],E,"Constructs a `BitVec` from a single element.",10,[[[T]],["self"]]],[11,R[768],E,"Constructs a `BitVec` from a slice of elements.",10,[[],["self"]]],[11,"from_vec",E,"Consumes a `Vec<T>` and creates a `BitVec<C, T>` from it.",10,[[["vec"]],["self"]]],[11,R[774],E,"Clones a `&BitSlice` into a `BitVec`.",10,[[[R[762]]],["self"]]],[11,"from_boxed_bitslice",E,"Converts a frozen `BitBox` allocation into a growable…",10,[[["bitbox"]],["self"]]],[11,R[359],E,"Creates a new `BitVec<C, T>` directly from the raw parts…",10,[[["usize"],["bitptr"]],["self"]]],[11,R[619],E,"Returns the number of bits the vector can hold without…",10,[[["self"]],["usize"]]],[11,"reserve",E,"Reserves capacity for at least `additional` more bits to…",10,[[["self"],["usize"]]]],[11,R[594],E,"Reserves the minimum capacity for at least `additional`…",10,[[["self"],["usize"]]]],[11,R[596],E,R[803],10,[[["self"]]]],[11,R[627],E,"Shortens the vector, keeping the first `len` bits and…",10,[[["self"],["usize"]]]],[11,R[771],E,"Produces a `BitSlice` containing the entire vector.",10,[[["self"]],[R[762]]]],[11,R[772],E,"Produces a mutable `BitSlice` containing the entire vector.",10,[[["self"]],[R[762]]]],[11,"set_len",E,"Sets the length of the vector.",10,[[["self"],["usize"]]]],[11,R[601],E,"Removes a bit from the vector and returns it.",10,[[["self"],["usize"]],["bool"]]],[11,"insert",E,"Inserts a bit at a position, shifting all bits after it to…",10,[[["self"],["usize"],["bool"]]]],[11,"remove",E,"Removes and returns the bit at position `index`, shifting…",10,[[["self"],["usize"]],["bool"]]],[11,"retain",E,"Retains only the bits that pass the predicate.",10,[[["self"],["f"]]]],[11,"push",E,"Appends a bit to the back of the vector.",10,[[["self"],["bool"]]]],[11,"pop",E,"Removes the last bit from the collection, if present.",10,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"append",E,R[806],10,[[["self"],["bitvec"]]]],[11,"drain",E,R[605],10,[[["self"],["r"]],["drain"]]],[11,"clear",E,R[804],10,[[["self"]]]],[11,R[611],E,R[805],10,[[["self"],["usize"]],["self"]]],[11,"resize",E,"Resizes the `BitVec` in place so that `len` is equal to…",10,[[["self"],["usize"],["bool"]]]],[11,"splice",E,"Creates a splicing iterator that exchanges the specified…",10,[[["self"],["i"],["r"]],["splice"]]],[11,"set_elements",E,"Sets the backing storage to the provided element.",10,[[["self"],[T]]]],[11,R[775],E,R[769],10,[[["i"]],["self"]]],[11,R[776],E,R[769],10,[[["self"],["i"]]]],[11,R[770],E,"Changes the cursor type on the vector handle, without…",10,[[],["bitvec"]]],[11,"into_boxed_bitslice",E,"Degrades a `BitVec` to a `BitBox`, freezing its size.",10,[[],["bitbox"]]],[11,R[597],E,"Degrades a `BitVec` to a standard boxed slice.",10,[[],["box"]]],[11,"into_vec",E,"Degrades a `BitVec` to a standard `Vec`.",10,[[],["vec"]]],[11,"bitptr",E,"Gets the raw `BitPtr` powering the vector.",10,[[["self"]],["bitptr"]]],[14,"bitvec","bitvec","Construct a `BitVec` out of a literal array in source…",N,N],[14,"bitbox",E,"Construct a `BitBox` out of a literal array in source…",N,N],[11,"into",R[777],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",R[778],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[78],E,E,3,[[["self"]],["string"]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[211],E,E,14,[[],["i"]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[211],E,E,15,[[],["i"]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[211],E,E,4,[[],["i"]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[211],E,E,5,[[],["i"]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[211],E,E,16,[[],["i"]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[211],E,E,17,[[],["i"]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[211],E,E,18,[[],["i"]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[211],E,E,6,[[],["i"]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[211],E,E,7,[[],["i"]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[211],E,E,19,[[],["i"]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"],[T]]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"into",R[779],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[211],E,E,9,[[],["i"]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[78],E,E,9,[[["self"]],["string"]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[211],E,E,20,[[],["i"]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"into",R[780],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[211],E,E,10,[[],["i"]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[78],E,E,10,[[["self"]],["string"]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[211],E,E,21,[[],["i"]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[211],E,E,22,[[],["i"]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[211],E,E,23,[[],["i"]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,"at",R[777],R[781],11,[[["bitidx"]],["bitpos"]]],[11,"at",E,R[781],12,[[["bitidx"]],["bitpos"]]],[11,"drop",R[778],E,13,[[["self"]]]],[11,"drop",R[779],E,9,[[["self"]]]],[11,"drop",R[780],"Rebuild the interior `Vec` and let it run the deallocator.",10,[[["self"]]]],[11,"drop",E,E,21,[[["self"]]]],[11,"drop",E,E,23,[[["self"]]]],[11,"as_ref",R[778],R[782],3,[[["self"]]]],[11,"as_ref",R[779],E,9,[[["self"]],[R[762]]]],[11,"as_ref",E,E,9,[[["self"]]]],[11,"as_ref",R[780],E,10,[[["self"]],[R[762]]]],[11,"as_ref",E,R[782],10,[[["self"]]]],[11,"as_mut",R[778],R[782],3,[[["self"]]]],[11,"as_mut",R[779],E,9,[[["self"]],[R[762]]]],[11,"as_mut",E,E,9,[[["self"]]]],[11,"as_mut",R[780],E,10,[[["self"]],[R[762]]]],[11,"as_mut",E,E,10,[[["self"]]]],[11,"into",R[779],E,9,[[],["box"]]],[11,"into",R[780],E,10,[[],["box"]]],[11,"into",E,E,10,[[],["vec"]]],[11,"from",R[779],E,9,[[[R[762]]],["self"]]],[11,"from",E,E,9,[[],["self"]]],[11,"from",E,E,9,[[["bitvec"]],["self"]]],[11,"from",E,E,9,[[["box"]],["self"]]],[11,"from",R[780],E,10,[[[R[762]]],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[["bitbox"]],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[["box"]],["self"]]],[11,"from",E,E,10,[[["vec"]],["self"]]],[11,"next",R[778],R[783],14,[[["self"]],["option"]]],[11,R[292],E,R[784],14,[[["self"]]]],[11,"count",E,R[785],14,[[],["usize"]]],[11,"nth",E,R[786],14,[[["self"],["usize"]],["option"]]],[11,"last",E,R[787],14,[[],["option"]]],[11,"next",E,R[783],15,[[["self"]],["option"]]],[11,R[292],E,R[784],15,[[["self"]]]],[11,"count",E,R[785],15,[[],["usize"]]],[11,"nth",E,R[786],15,[[["self"],["usize"]],["option"]]],[11,"last",E,R[787],15,[[],["option"]]],[11,"next",E,R[783],4,[[["self"]],["option"]]],[11,R[292],E,R[784],4,[[["self"]]]],[11,"count",E,R[785],4,[[],["usize"]]],[11,"nth",E,R[786],4,[[["self"],["usize"]],["option"]]],[11,"last",E,R[787],4,[[],["option"]]],[11,"next",E,R[783],5,[[["self"]],["option"]]],[11,R[292],E,R[784],5,[[["self"]]]],[11,"count",E,R[785],5,[[],["usize"]]],[11,"nth",E,R[786],5,[[["self"],["usize"]],["option"]]],[11,"last",E,R[787],5,[[],["option"]]],[11,"next",E,R[789],16,[[["self"]],["option"]]],[11,R[292],E,R[790],16,[[["self"]]]],[11,"count",E,R[791],16,[[],["usize"]]],[11,"nth",E,R[792],16,[[["self"],["usize"]],["option"]]],[11,"last",E,R[788],16,[[],["option"]]],[11,"next",E,R[783],17,[[["self"]],["option"]]],[11,R[292],E,R[784],17,[[["self"]]]],[11,"count",E,R[785],17,[[],["usize"]]],[11,"nth",E,R[786],17,[[["self"],["usize"]],["option"]]],[11,"last",E,R[787],17,[[],["option"]]],[11,"next",E,R[783],18,[[["self"]],["option"]]],[11,R[292],E,R[784],18,[[["self"]]]],[11,"count",E,R[785],18,[[],["usize"]]],[11,"nth",E,R[786],18,[[["self"],["usize"]],["option"]]],[11,"last",E,R[787],18,[[],["option"]]],[11,"next",E,R[783],6,[[["self"]],["option"]]],[11,R[292],E,R[784],6,[[["self"]]]],[11,"count",E,R[785],6,[[],["usize"]]],[11,"nth",E,R[786],6,[[["self"],["usize"]],["option"]]],[11,"last",E,R[788],6,[[],["option"]]],[11,"next",E,R[783],7,[[["self"]],["option"]]],[11,R[292],E,R[784],7,[[["self"]]]],[11,"count",E,R[785],7,[[],["usize"]]],[11,"nth",E,R[786],7,[[["self"],["usize"]],["option"]]],[11,"last",E,R[788],7,[[],["option"]]],[11,"next",E,"Advances the iterator by one, returning the first window…",19,[[["self"]],["option"]]],[11,R[292],E,"Hints at the number of windows remaining in the iterator.",19,[[["self"]]]],[11,"count",E,"Counts how many windows are live in the iterator,…",19,[[],["usize"]]],[11,"nth",E,"Advances the iterator by `n` windows, starting from zero.",19,[[["self"],["usize"]],["option"]]],[11,"last",E,"Consumes the iterator, returning only the final window.",19,[[],["option"]]],[11,"next",R[779],E,20,[[["self"]],["option"]]],[11,R[292],E,E,20,[[["self"]]]],[11,"count",E,E,20,[[],["usize"]]],[11,"nth",E,E,20,[[["self"],["usize"]],["option"]]],[11,"last",E,E,20,[[],["option"]]],[11,"next",R[780],E,21,[[["self"]],["option"]]],[11,R[292],E,E,21,[[["self"]]]],[11,"count",E,E,21,[[],["usize"]]],[11,"nth",E,E,21,[[["self"],["usize"]],["option"]]],[11,"last",E,E,21,[[],["option"]]],[11,"next",E,R[789],22,[[["self"]],["option"]]],[11,R[292],E,R[790],22,[[["self"]]]],[11,"count",E,R[791],22,[[],["usize"]]],[11,"nth",E,R[792],22,[[["self"],["usize"]],["option"]]],[11,"last",E,"Consumes the iterator, returning only the last bit.",22,[[],["option"]]],[11,"next",E,E,23,[[["self"]],["option"]]],[11,R[292],E,E,23,[[["self"]]]],[11,"count",E,E,23,[[],["usize"]]],[11,"nth",E,E,23,[[["self"],["usize"]],["option"]]],[11,"last",E,E,23,[[],["option"]]],[11,"extend",E,"Extends a `BitVec` from another bitstream.",10,[[["self"],[R[294]]]]],[11,R[211],R[779],E,9,[[]]],[11,R[211],R[780],"Iterates over the vector.",10,[[]]],[11,R[295],R[778],R[793],14,[[["self"]],["option"]]],[11,R[295],E,R[793],15,[[["self"]],["option"]]],[11,R[295],E,R[793],4,[[["self"]],["option"]]],[11,R[295],E,"Produces the next chunk from the back of th eslice.",5,[[["self"]],["option"]]],[11,R[295],E,"Produces the next bit from the back of the slice.",16,[[["self"]],["option"]]],[11,R[295],E,R[794],17,[[["self"]],["option"]]],[11,R[295],E,R[794],18,[[["self"]],["option"]]],[11,R[295],E,R[794],6,[[["self"]],["option"]]],[11,R[295],E,R[794],7,[[["self"]],["option"]]],[11,R[295],E,"Produces the next window from the back of the slice.",19,[[["self"]],["option"]]],[11,R[295],R[779],E,20,[[["self"]],["option"]]],[11,R[295],R[780],E,21,[[["self"]],["option"]]],[11,R[295],E,E,22,[[["self"]],["option"]]],[11,R[295],E,E,23,[[["self"]],["option"]]],[11,"clone",R[777],E,11,[[["self"]],[R[797]]]],[11,"clone",E,E,12,[[["self"]],[R[798]]]],[11,"clone",R[778],E,14,[[["self"]],["chunks"]]],[11,"clone",E,E,4,[[["self"]],[R[795]]]],[11,"clone",E,E,16,[[["self"]],["iter"]]],[11,"clone",E,E,17,[[["self"]],["rchunks"]]],[11,"clone",E,E,6,[[["self"]],[R[796]]]],[11,"clone",E,E,19,[[["self"]],["windows"]]],[11,"clone",R[779],E,9,[[["self"]],["self"]]],[11,"clone",R[780],E,10,[[["self"]],["self"]]],[11,R[385],E,E,10,[[["self"],["self"]]]],[11,R[90],R[779],E,9,[[],["self"]]],[11,R[90],R[780],E,10,[[],["self"]]],[11,"cmp",R[778],E,3,[[["self"]],[R[105]]]],[11,"cmp",R[779],E,9,[[["self"]],[R[105]]]],[11,"cmp",R[780],E,10,[[["self"]],[R[105]]]],[11,"eq",R[777],E,11,[[[R[797]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[798]]],["bool"]]],[11,"eq",R[778],"Performas a comparison by `==`.",3,[[["self"],[R[762]]],["bool"]]],[11,"eq",E,E,3,[[["self"],["bitvec"]],["bool"]]],[11,"eq",R[779],E,9,[[["self"],["bitbox"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[762]]],["bool"]]],[11,"eq",R[778],E,3,[[["self"],["bitbox"]],["bool"]]],[11,"eq",R[780],"Performs a comparison by `==`.",10,[[["self"],["bitvec"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[762]]],["bool"]]],[11,"eq",E,E,10,[[[R[762]],["self"]],["bool"]]],[11,R[106],R[778],R[799],3,[[["self"],[R[762]]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,3,[[["self"],["bitvec"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[779],E,9,[[["self"],["bitbox"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,9,[[["self"],[R[762]]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[778],E,3,[[["self"],["bitbox"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[780],R[799],10,[[["self"],["bitvec"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,10,[[["self"],[R[762]]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,10,[[[R[762]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[24],R[778],"Clones a borrowed `BitSlice` into an owned `BitVec`.",3,[[["self"]]]],[11,"fmt",E,"Renders the `BitSlice` contents for display.",3,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[779],E,9,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[780],"Renders the `BitVec` contents for display.",10,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[777],E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[778],"Renders the `BitSlice` type header and contents for debug.",3,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[779],E,9,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[780],"Renders the `BitVec` type header and contents for debug.",10,[[[R[37]],["self"]],[R[3]]]],[11,"sub",E,"Subtracts one `BitVec` from another.",10,[[]]],[11,"add",R[779],E,9,[[]]],[11,"add",R[780],"Adds two `BitVec`s.",10,[[]]],[11,"neg",R[779],E,9,[[]]],[11,"neg",R[780],"Numerically negates a `BitVec` using 2’s-complement…",10,[[]]],[11,R[423],R[778],"Performs unsigned wrapping addition in place.",3,[[["self"],["i"]]]],[11,R[423],R[779],E,9,[[["self"]]]],[11,R[423],R[780],"Adds another `BitVec` into `self`.",10,[[["self"]]]],[11,R[463],E,"Subtracts another `BitVec` from `self`.",10,[[["self"]]]],[11,"not",R[779],E,9,[[]]],[11,"not",R[780],"Inverts all bits in the vector.",10,[[]]],[11,"bitand",R[779],E,9,[[["i"]]]],[11,"bitand",R[780],"`AND`s a vector and a bitstream, producing a new vector.",10,[[["i"]]]],[11,"bitor",R[779],E,9,[[["i"]]]],[11,"bitor",R[780],"`OR`s a vector and a bitstream, producing a new vector.",10,[[["i"]]]],[11,"bitxor",R[779],E,9,[[["i"]]]],[11,"bitxor",R[780],"`XOR`s a vector and a bitstream, producing a new vector.",10,[[["i"]]]],[11,"shl",R[779],E,9,[[["usize"]]]],[11,"shl",R[780],"Shifts a `BitVec` to the left, shortening it.",10,[[["usize"]]]],[11,"shr",R[779],E,9,[[["usize"]]]],[11,"shr",R[780],"Shifts a `BitVec` to the right, lengthening it and filling…",10,[[["usize"]]]],[11,R[458],R[778],"`AND`s a bitstream into a slice.",3,[[["self"],["i"]]]],[11,R[458],R[779],E,9,[[["self"],["i"]]]],[11,R[458],R[780],"`AND`s another bitstream into a vector.",10,[[["self"],["i"]]]],[11,R[473],R[778],"`OR`s a bitstream into a slice.",3,[[["self"],["i"]]]],[11,R[473],R[779],E,9,[[["self"],["i"]]]],[11,R[473],R[780],"`OR`s another bitstream into a vector.",10,[[["self"],["i"]]]],[11,R[496],R[778],"`XOR`s a bitstream into a slice.",3,[[["self"],["i"]]]],[11,R[496],R[779],E,9,[[["self"],["i"]]]],[11,R[496],R[780],"`XOR`s another bitstream into a vector.",10,[[["self"],["i"]]]],[11,R[456],R[778],"Shifts a slice left, in place.",3,[[["self"],["usize"]]]],[11,R[456],R[779],E,9,[[["self"],["usize"]]]],[11,R[456],R[780],"Shifts a `BitVec` to the left in place, shortening it.",10,[[["self"],["usize"]]]],[11,R[435],R[778],"Shifts a slice right, in place.",3,[[["self"],["usize"]]]],[11,R[435],R[779],E,9,[[["self"],["usize"]]]],[11,R[435],R[780],"Shifts a `BitVec` to the right in place, lengthening it…",10,[[["self"],["usize"]]]],[11,"deref",R[778],E,13,[[["self"]]]],[11,"deref",R[779],E,9,[[["self"]]]],[11,"deref",R[780],"Dereferences `&BitVec` down to `&BitSlice`.",10,[[["self"]]]],[11,R[99],R[778],E,13,[[["self"]]]],[11,R[99],R[779],E,9,[[["self"]]]],[11,R[99],R[780],"Dereferences `&mut BitVec` down to `&mut BitSlice`.",10,[[["self"]]]],[11,"index",R[778],"Looks up a single bit by semantic index.",3,[[["self"],["usize"]]]],[11,"index",E,E,3,[[["range",["usize"]],["self"],["usize"]]]],[11,"index",E,E,3,[[[R[484],["usize"]],["self"],["usize"]]]],[11,"index",E,E,3,[[["usize"],["self"],[R[443],["usize"]]]]],[11,"index",E,E,3,[[["self"],[R[488]]]]],[11,"index",E,E,3,[[["usize"],["self"],[R[800],["usize"]]]]],[11,"index",E,E,3,[[[R[453],["usize"]],["self"],["usize"]]]],[11,"index",R[779],E,9,[[["self"],["usize"]]]],[11,"index",E,E,9,[[["range",["usize"]],["self"],["usize"]]]],[11,"index",E,E,9,[[["usize"],["self"],[R[443],["usize"]]]]],[11,"index",E,E,9,[[["self"],[R[488]]]]],[11,"index",E,E,9,[[[R[484],["usize"]],["self"],["usize"]]]],[11,"index",E,E,9,[[["usize"],["self"],[R[800],["usize"]]]]],[11,"index",E,E,9,[[[R[453],["usize"]],["self"],["usize"]]]],[11,"index",R[780],"Looks up a single bit by semantic count.",10,[[["self"],["usize"]]]],[11,"index",E,E,10,[[["range",["usize"]],["self"],["usize"]]]],[11,"index",E,E,10,[[["usize"],["self"],[R[443],["usize"]]]]],[11,"index",E,E,10,[[["self"],[R[488]]]]],[11,"index",E,E,10,[[[R[484],["usize"]],["self"],["usize"]]]],[11,"index",E,E,10,[[["usize"],["self"],[R[800],["usize"]]]]],[11,"index",E,E,10,[[[R[453],["usize"]],["self"],["usize"]]]],[11,R[350],R[778],E,3,[[["range",["usize"]],["self"],["usize"]]]],[11,R[350],E,E,3,[[["self"],["usize"],[R[484],["usize"]]]]],[11,R[350],E,E,3,[[["self"],[R[443],["usize"]],["usize"]]]],[11,R[350],E,E,3,[[["self"],[R[488]]]]],[11,R[350],E,E,3,[[["self"],[R[800],["usize"]],["usize"]]]],[11,R[350],E,E,3,[[["self"],[R[453],["usize"]],["usize"]]]],[11,R[350],R[779],E,9,[[["range",["usize"]],["self"],["usize"]]]],[11,R[350],E,E,9,[[["self"],[R[443],["usize"]],["usize"]]]],[11,R[350],E,E,9,[[["self"],[R[488]]]]],[11,R[350],E,E,9,[[["self"],["usize"],[R[484],["usize"]]]]],[11,R[350],E,E,9,[[["self"],[R[800],["usize"]],["usize"]]]],[11,R[350],E,E,9,[[["self"],[R[453],["usize"]],["usize"]]]],[11,R[350],R[780],E,10,[[["range",["usize"]],["self"],["usize"]]]],[11,R[350],E,E,10,[[["self"],[R[443],["usize"]],["usize"]]]],[11,R[350],E,E,10,[[["self"],[R[488]]]]],[11,R[350],E,E,10,[[["self"],["usize"],[R[484],["usize"]]]]],[11,R[350],E,E,10,[[["self"],[R[800],["usize"]],["usize"]]]],[11,R[350],E,E,10,[[["self"],[R[453],["usize"]],["usize"]]]],[11,"hash",R[778],"Writes each bit of the `BitSlice`, as a full `bool`, into…",3,[[["self"],["h"]]]],[11,"hash",R[779],E,9,[[["self"],["h"]]]],[11,"hash",R[780],"Writes each bit of the `BitVec`, as a full `bool`, into…",10,[[["self"],["h"]]]],[11,R[293],E,"Collects an iterator of `bool` into a vector.",10,[[[R[294]]],["self"]]],[11,R[45],R[779],E,9,[[["self"]],[R[762]]]],[11,R[45],R[780],"Borrows the `BitVec` as a `BitSlice`.",10,[[["self"]],[R[762]]]],[11,R[22],R[779],E,9,[[["self"]],[R[762]]]],[11,R[22],R[780],"Mutably borrows the `BitVec` as a `BitSlice`.",10,[[["self"]],[R[762]]]],[11,"write",E,E,10,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,10,[[["self"]],[R[3]]]]],"p":[[8,"Bits"],[8,"BitsMut"],[8,"Cursor"],[3,"BitSlice"],[3,R[708]],[3,R[709]],[3,R[711]],[3,R[712]],[8,"BitStore"],[3,"BitBox"],[3,"BitVec"],[3,R[801]],[3,R[802]],[3,"BitGuard"],[3,"Chunks"],[3,R[704]],[3,"Iter"],[3,"RChunks"],[3,R[710]],[3,"Windows"],[3,R[339]],[3,"Drain"],[3,R[339]],[3,"Splice"]]};
searchIndex["blake2_rfc"]={"doc":"A pure Rust implementation of BLAKE2 based on RFC 7693.","i":[[5,"selftest","blake2_rfc","Runs the self-test for both BLAKE2b and BLAKE2s.",N,[[]]],[0,"blake2b",E,"The BLAKE2b hash function.",N,N],[3,R[1504],R[1502],R[1491],N,N],[3,"Blake2b",E,R[1492],N,N],[5,"blake2b",E,R[1493],N,[[["usize"]],[R[1490]]]],[5,"selftest",E,R[1494],N,[[]]],[11,R[2616],E,R[1495],0,[[["self"]]]],[11,"len",E,R[1496],0,[[["self"]],["usize"]]],[11,"new",E,R[1497],1,[[["usize"]],["self"]]],[11,"with_key",E,R[1498],1,[[["usize"]],["self"]]],[11,"update",E,R[1499],1,[[["self"]]]],[11,"finalize",E,R[1500],1,[[],[R[1490]]]],[0,"blake2s","blake2_rfc","The BLAKE2s hash function.",N,N],[3,R[1505],R[1503],R[1491],N,N],[3,"Blake2s",E,R[1492],N,N],[5,"blake2s",E,R[1493],N,[[["usize"]],[R[1501]]]],[5,"selftest",E,R[1494],N,[[]]],[11,R[2616],E,R[1495],2,[[["self"]]]],[11,"len",E,R[1496],2,[[["self"]],["usize"]]],[11,"new",E,R[1497],3,[[["usize"]],["self"]]],[11,"with_key",E,R[1498],3,[[["usize"]],["self"]]],[11,"update",E,R[1499],3,[[["self"]]]],[11,"finalize",E,R[1500],3,[[],[R[1501]]]],[11,"from",R[1502],E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"from",R[1503],E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,"fmt",R[1502],E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1503],E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"eq",R[1502],E,0,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",R[1503],E,2,[[["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"]],["bool"]]],[11,"as_ref",R[1502],E,0,[[["self"]]]],[11,"as_ref",R[1503],E,2,[[["self"]]]],[11,"clone",R[1502],E,0,[[["self"]],[R[1490]]]],[11,"clone",E,E,1,[[["self"]],["blake2b"]]],[11,"clone",R[1503],E,2,[[["self"]],[R[1501]]]],[11,"clone",E,E,3,[[["self"]],["blake2s"]]],[11,"write",R[1502],E,1,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,1,[[["self"]],[R[3]]]],[11,"write",R[1503],E,3,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,3,[[["self"]],[R[3]]]]],"p":[[3,R[1504]],[3,"Blake2b"],[3,R[1505]],[3,"Blake2s"]]};
searchIndex["block_buffer"]={"doc":E,"i":[[3,R[1841],"block_buffer","Buffer for block processing of data",N,N],[11,"input",E,"Process data in `input` in blocks of size `BlockSize`…",0,[[["self"],["f"]]]],[11,"input_lazy",E,"Variant that doesn't flush the buffer until there's…",0,[[["self"],["f"]]]],[11,"len64_padding",E,"Pad message with 0x80, zeros and 64-bit message length in…",0,[[["self"],["u64"],["f"]]]],[11,"len128_padding_be",E,"Pad message with 0x80, zeros and 128-bit message length in…",0,[[["self"],["u64"],["f"]]]],[11,"pad_with",E,"Pad message with a given padding `P`",0,[[["self"]],[[R[752]],[R[3],[R[1614],R[752]]],[R[1614]]]]],[11,"size",E,"Return size of the internall buffer in bytes",0,[[["self"]],["usize"]]],[11,R[467],E,"Return current cursor position",0,[[["self"]],["usize"]]],[11,"remaining",E,"Return number of remaining bytes in the internall buffer",0,[[["self"]],["usize"]]],[11,"reset",E,"Reset buffer by setting cursor position to zero",0,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"clone",E,E,0,[[["self"]],[R[1840]]]],[11,R[90],E,E,0,[[],[R[1840]]]]],"p":[[3,R[1841]]]};
searchIndex["block_padding"]={"doc":"Padding and unpadding of messages divided into blocks.","i":[[3,"PadError","block_padding","Error for indicating failed padding operation",N,N],[3,R[755],E,"Error for indicating failed unpadding operation",N,N],[4,R[756],E,"Pad block with zeros.",N,N],[4,"Pkcs7",E,"Pad block with bytes with value equal to the number of…",N,N],[4,"AnsiX923",E,"Pad block with zeros except the last byte which will be…",N,N],[4,"Iso7816",E,"Pad block with byte sequence `\\x80 00...00 00`.",N,N],[4,R[757],E,"Don't pad the data. Useful for key wrapping. Padding will…",N,N],[8,"Padding",E,"Trait for padding messages divided into blocks",N,N],[10,R[754],E,"Pads `block` filled with data up to `pos`.",0,[[["usize"]],[[R[752]],[R[3],[R[752]]]]]],[11,"pad",E,"Pads message with length `pos` in the provided buffer.",0,[[["usize"]],[[R[3],[R[752]]],[R[752]]]]],[10,"unpad",E,"Unpad given `data` by truncating it according to the used…",0,[[],[[R[3],[R[753]]],[R[753]]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,R[754],E,E,3,[[["usize"]],[[R[752]],[R[3],[R[752]]]]]],[11,"pad",E,E,3,[[["usize"]],[[R[3],[R[752]]],[R[752]]]]],[11,"unpad",E,E,3,[[],[[R[3],[R[753]]],[R[753]]]]],[11,R[754],E,E,4,[[["usize"]],[[R[752]],[R[3],[R[752]]]]]],[11,"unpad",E,E,4,[[],[[R[3],[R[753]]],[R[753]]]]],[11,R[754],E,E,5,[[["usize"]],[[R[752]],[R[3],[R[752]]]]]],[11,"unpad",E,E,5,[[],[[R[3],[R[753]]],[R[753]]]]],[11,R[754],E,E,6,[[["usize"]],[[R[752]],[R[3],[R[752]]]]]],[11,"unpad",E,E,6,[[],[[R[3],[R[753]]],[R[753]]]]],[11,R[754],E,E,7,[[["usize"]],[[R[752]],[R[3],[R[752]]]]]],[11,"pad",E,E,7,[[["usize"]],[[R[3],[R[752]]],[R[752]]]]],[11,"unpad",E,E,7,[[],[[R[3],[R[753]]],[R[753]]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"clone",E,E,1,[[["self"]],[R[752]]]],[11,"clone",E,E,2,[[["self"]],[R[753]]]]],"p":[[8,"Padding"],[3,"PadError"],[3,R[755]],[4,R[756]],[4,"Pkcs7"],[4,"AnsiX923"],[4,"Iso7816"],[4,R[757]]]};
searchIndex["byte_slice_cast"]={"doc":"Safely cast bytes slices from/to slices of built-in…","i":[[4,"Error",R[61],"Possible errors during slice conversion.",N,N],[13,"AlignmentMismatch",E,"The input slice is not properly aligned for the output…",0,N],[12,R[62],R[63],E,0,N],[12,"dst_minimum_alignment",E,E,0,N],[13,"LengthMismatch",R[61],"A non-integer number of values from the output type would…",0,N],[12,R[62],R[63],E,0,N],[12,"src_slice_size",E,E,0,N],[12,"dst_type_size",E,E,0,N],[13,"CapacityMismatch",R[61],"When converting a `Vec<T>` it had a capacity that allowed…",0,N],[12,R[62],R[63],E,0,N],[12,"src_vec_capacity",E,E,0,N],[12,"dst_type_capacity",E,E,0,N],[8,R[68],R[61],R[64],N,N],[10,"from_byte_slice",E,"Convert from an immutable byte slice to a immutable slice…",1,[[[T]],[[R[3],["error"]],["error"]]]],[10,"from_mut_byte_slice",E,"Convert from an mutable byte slice to a mutable slice of a…",1,[[[T]],[[R[3],["error"]],["error"]]]],[8,R[69],E,R[65],N,N],[10,"to_byte_slice",E,"Convert from an immutable slice of a fundamental, built-in…",2,[[[T]]]],[8,R[70],E,R[66],N,N],[10,"to_mut_byte_slice",E,"Convert from a mutable slice of a fundamental, built-in…",3,[[[T]]]],[8,R[71],E,R[67],N,N],[10,"from_byte_vec",E,"Convert from a byte `Vec<u8>` to a `Vec<T>` of a…",4,[[["vec",["u8"]],["u8"]],[["error"],["vec"],[R[3],["vec","error"]]]]],[8,R[72],E,R[64],N,N],[10,"as_slice_of",E,E,5,[[["self"]],[["error"],[R[3],["error"]]]]],[8,R[73],E,"Trait for converting from a mutable byte slice to a…",N,N],[10,"as_mut_slice_of",E,E,6,[[["self"]],[[R[3],["error"]],["error"]]]],[8,R[74],E,R[65],N,N],[10,"as_byte_slice",E,E,7,[[["self"]]]],[8,R[75],E,R[66],N,N],[10,"as_mut_byte_slice",E,E,8,[[["self"]]]],[8,R[76],E,R[67],N,N],[10,"into_vec_of",E,E,9,[[],[["error"],[R[3],["vec","error"]],["vec"]]]],[8,R[77],E,"Trait for converting from a `Vec<T>` of a fundamental,…",N,N],[10,"into_byte_vec",E,E,10,[[],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"clone",E,E,0,[[["self"]],["error"]]],[11,"eq",E,E,0,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["error"],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,R[38],E,E,0,[[["self"]],["str"]]]],"p":[[4,"Error"],[8,R[68]],[8,R[69]],[8,R[70]],[8,R[71]],[8,R[72]],[8,R[73]],[8,R[74]],[8,R[75]],[8,R[76]],[8,R[77]]]};
searchIndex["byte_tools"]={"doc":E,"i":[[5,"copy","byte_tools","Copy bytes from `src` to `dst`",N,[[]]],[5,"zero",E,"Zero all bytes in `dst`",N,[[]]],[5,"set",E,"Sets all bytes in `dst` equal to `value`",N,[[["u8"]]]]],"p":[]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","i":[[4,R[801],"byteorder","Defines big-endian serialization.",N,N],[4,R[802],E,"Defines little-endian serialization.",N,N],[6,"BE",E,"A type alias for [`BigEndian`].",N,N],[6,"LE",E,"A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian",E,"Defines network byte order serialization.",N,N],[6,"NativeEndian",E,"Defines system native-endian serialization.",N,N],[8,R[1267],E,"Extends [`Read`] with methods for reading numbers. (For…",N,N],[11,"read_u8",E,R[1227],0,[[["self"]],[[R[3],["u8"]],["u8"]]]],[11,"read_i8",E,R[1228],0,[[["self"]],[["i8"],[R[3],["i8"]]]]],[11,"read_u16",E,R[1229],0,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,"read_i16",E,R[1230],0,[[["self"]],[[R[3],["i16"]],["i16"]]]],[11,"read_u24",E,R[1231],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,"read_i24",E,R[1232],0,[[["self"]],[[R[3],["i32"]],["i32"]]]],[11,"read_u32",E,R[1233],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,"read_i32",E,R[1234],0,[[["self"]],[[R[3],["i32"]],["i32"]]]],[11,"read_u48",E,R[1235],0,[[["self"]],[[R[3],["u64"]],["u64"]]]],[11,"read_i48",E,R[1236],0,[[["self"]],[[R[3],["i64"]],["i64"]]]],[11,"read_u64",E,R[1237],0,[[["self"]],[[R[3],["u64"]],["u64"]]]],[11,"read_i64",E,R[1238],0,[[["self"]],[[R[3],["i64"]],["i64"]]]],[11,R[1225],E,R[1239],0,[[["self"]],[[R[3],["u128"]],["u128"]]]],[11,"read_i128",E,R[1240],0,[[["self"]],[["i128"],[R[3],["i128"]]]]],[11,R[1226],E,R[1184],0,[[["self"],["usize"]],[[R[3],["u64"]],["u64"]]]],[11,"read_int",E,R[1185],0,[[["self"],["usize"]],[[R[3],["i64"]],["i64"]]]],[11,R[1189],E,R[1184],0,[[["self"],["usize"]],[[R[3],["u128"]],["u128"]]]],[11,R[1193],E,R[1185],0,[[["self"],["usize"]],[["i128"],[R[3],["i128"]]]]],[11,"read_f32",E,R[1195],0,[[["self"]],[["f32"],[R[3],["f32"]]]]],[11,"read_f64",E,R[1196],0,[[["self"]],[["f64"],[R[3],["f64"]]]]],[11,R[1201],E,R[1241],0,[[["self"]],[R[3]]]],[11,R[1202],E,R[1242],0,[[["self"]],[R[3]]]],[11,R[1203],E,R[1243],0,[[["self"]],[R[3]]]],[11,R[1204],E,R[1244],0,[[["self"]],[R[3]]]],[11,R[1245],E,R[1246],0,[[["self"]],[R[3]]]],[11,R[1205],E,R[1247],0,[[["self"]],[R[3]]]],[11,R[1206],E,R[1248],0,[[["self"]],[R[3]]]],[11,R[1207],E,R[1249],0,[[["self"]],[R[3]]]],[11,R[1208],E,R[1250],0,[[["self"]],[R[3]]]],[11,R[1209],E,R[1251],0,[[["self"]],[R[3]]]],[11,R[1210],E,R[1186],0,[[["self"]],[R[3]]]],[11,R[1211],E,R[1252],0,[[["self"]],[R[3]]]],[11,R[1213],E,R[1186],0,[[["self"]],[R[3]]]],[8,R[1268],E,"Extends [`Write`] with methods for writing numbers. (For…",N,N],[11,"write_u8",E,R[1253],1,[[["self"],["u8"]],[R[3]]]],[11,"write_i8",E,R[1254],1,[[["self"],["i8"]],[R[3]]]],[11,R[503],E,R[1255],1,[[["u16"],["self"]],[R[3]]]],[11,R[508],E,R[1256],1,[[["self"],["i16"]],[R[3]]]],[11,"write_u24",E,R[1257],1,[[["self"],["u32"]],[R[3]]]],[11,"write_i24",E,R[1258],1,[[["self"],["i32"]],[R[3]]]],[11,R[504],E,R[1259],1,[[["self"],["u32"]],[R[3]]]],[11,R[509],E,R[1260],1,[[["self"],["i32"]],[R[3]]]],[11,"write_u48",E,R[1261],1,[[["self"],["u64"]],[R[3]]]],[11,"write_i48",E,R[1262],1,[[["i64"],["self"]],[R[3]]]],[11,R[505],E,R[1263],1,[[["self"],["u64"]],[R[3]]]],[11,R[510],E,R[1264],1,[[["i64"],["self"]],[R[3]]]],[11,R[506],E,R[1265],1,[[["self"],["u128"]],[R[3]]]],[11,R[511],E,R[1266],1,[[["self"],["i128"]],[R[3]]]],[11,R[1214],E,R[1187],1,[[["self"],["u64"],["usize"]],[R[3]]]],[11,"write_int",E,R[1188],1,[[["i64"],["self"],["usize"]],[R[3]]]],[11,R[1191],E,R[1187],1,[[["self"],["usize"],["u128"]],[R[3]]]],[11,R[1197],E,R[1188],1,[[["self"],["i128"],["usize"]],[R[3]]]],[11,"write_f32",E,R[1199],1,[[["f32"],["self"]],[R[3]]]],[11,"write_f64",E,R[1200],1,[[["self"],["f64"]],[R[3]]]],[8,"ByteOrder",E,"`ByteOrder` describes types that can serialize integers as…",N,N],[10,"read_u16",E,"Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,"read_u24",E,"Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,"read_u32",E,"Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,"read_u48",E,"Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,"read_u64",E,"Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,R[1225],E,"Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,R[1226],E,R[1190],2,[[["usize"]],["u64"]]],[10,R[1189],E,R[1190],2,[[["usize"]],["u128"]]],[10,R[503],E,"Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,"write_u24",E,"Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,R[504],E,"Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,"write_u48",E,"Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,R[505],E,"Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,R[506],E,"Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,R[1214],E,R[1192],2,[[["usize"],["u64"]]]],[10,R[1191],E,R[1192],2,[[["usize"],["u128"]]]],[11,"read_i16",E,"Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,"read_i24",E,"Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,"read_i32",E,"Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,"read_i48",E,"Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,"read_i64",E,"Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,"read_i128",E,"Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,"read_int",E,R[1194],2,[[["usize"]],["i64"]]],[11,R[1193],E,R[1194],2,[[["usize"]],["i128"]]],[11,"read_f32",E,R[1195],2,[[],["f32"]]],[11,"read_f64",E,R[1196],2,[[],["f64"]]],[11,R[508],E,"Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,"write_i24",E,"Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,R[509],E,"Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,"write_i48",E,"Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,R[510],E,"Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,R[511],E,"Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,"write_int",E,R[1198],2,[[["i64"],["usize"]]]],[11,R[1197],E,R[1198],2,[[["i128"],["usize"]]]],[11,"write_f32",E,R[1199],2,[[["f32"]]]],[11,"write_f64",E,R[1200],2,[[["f64"]]]],[10,R[1201],E,"Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[1202],E,"Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[1203],E,"Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,R[1204],E,"Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,R[1205],E,"Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,R[1206],E,"Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,R[1207],E,"Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,R[1208],E,"Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,R[1209],E,R[1212],2,[[]]],[11,R[1210],E,R[1186],2,[[]]],[11,R[1211],E,R[1212],2,[[]]],[11,R[1213],E,R[1186],2,[[]]],[10,R[1215],E,"Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[1216],E,"Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[1217],E,"Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,R[1218],E,"Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into",E,"Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into",E,"Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into",E,"Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into",E,"Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into",E,"Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into",E,"Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,R[1219],E,"Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,R[1220],E,"Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,R[1221],E,"Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,R[1222],E,"Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16",E,"Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32",E,"Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64",E,"Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128",E,"Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,R[1223],E,"Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,R[1224],E,"Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"read_u16",E,E,3,[[],["u16"]]],[11,"read_u32",E,E,3,[[],["u32"]]],[11,"read_u64",E,E,3,[[],["u64"]]],[11,R[1225],E,E,3,[[],["u128"]]],[11,R[1226],E,E,3,[[["usize"]],["u64"]]],[11,R[1189],E,E,3,[[["usize"]],["u128"]]],[11,R[503],E,E,3,[[["u16"]]]],[11,R[504],E,E,3,[[["u32"]]]],[11,R[505],E,E,3,[[["u64"]]]],[11,R[506],E,E,3,[[["u128"]]]],[11,R[1214],E,E,3,[[["usize"],["u64"]]]],[11,R[1191],E,E,3,[[["usize"],["u128"]]]],[11,R[1201],E,E,3,[[]]],[11,R[1202],E,E,3,[[]]],[11,R[1203],E,E,3,[[]]],[11,R[1204],E,E,3,[[]]],[11,R[1215],E,E,3,[[]]],[11,R[1216],E,E,3,[[]]],[11,R[1217],E,E,3,[[]]],[11,R[1218],E,E,3,[[]]],[11,R[1219],E,E,3,[[]]],[11,R[1220],E,E,3,[[]]],[11,R[1221],E,E,3,[[]]],[11,R[1222],E,E,3,[[]]],[11,R[1223],E,E,3,[[]]],[11,R[1224],E,E,3,[[]]],[11,"read_u16",E,E,4,[[],["u16"]]],[11,"read_u32",E,E,4,[[],["u32"]]],[11,"read_u64",E,E,4,[[],["u64"]]],[11,R[1225],E,E,4,[[],["u128"]]],[11,R[1226],E,E,4,[[["usize"]],["u64"]]],[11,R[1189],E,E,4,[[["usize"]],["u128"]]],[11,R[503],E,E,4,[[["u16"]]]],[11,R[504],E,E,4,[[["u32"]]]],[11,R[505],E,E,4,[[["u64"]]]],[11,R[506],E,E,4,[[["u128"]]]],[11,R[1214],E,E,4,[[["usize"],["u64"]]]],[11,R[1191],E,E,4,[[["usize"],["u128"]]]],[11,R[1201],E,E,4,[[]]],[11,R[1202],E,E,4,[[]]],[11,R[1203],E,E,4,[[]]],[11,R[1204],E,E,4,[[]]],[11,R[1215],E,E,4,[[]]],[11,R[1216],E,E,4,[[]]],[11,R[1217],E,E,4,[[]]],[11,R[1218],E,E,4,[[]]],[11,R[1219],E,E,4,[[]]],[11,R[1220],E,E,4,[[]]],[11,R[1221],E,E,4,[[]]],[11,R[1222],E,E,4,[[]]],[11,R[1223],E,E,4,[[]]],[11,R[1224],E,E,4,[[]]],[11,"clone",E,E,3,[[["self"]],[R[797]]]],[11,"clone",E,E,4,[[["self"]],[R[798]]]],[11,R[90],E,E,3,[[],[R[797]]]],[11,R[90],E,E,4,[[],[R[798]]]],[11,"cmp",E,E,3,[[[R[797]],["self"]],[R[105]]]],[11,"cmp",E,E,4,[[["self"],[R[798]]],[R[105]]]],[11,"eq",E,E,3,[[[R[797]],["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[798]]],["bool"]]],[11,R[106],E,E,3,[[[R[797]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,4,[[["self"],[R[798]]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"read_u8",E,R[1227],0,[[["self"]],[[R[3],["u8"]],["u8"]]]],[11,"read_i8",E,R[1228],0,[[["self"]],[["i8"],[R[3],["i8"]]]]],[11,"read_u16",E,R[1229],0,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,"read_i16",E,R[1230],0,[[["self"]],[[R[3],["i16"]],["i16"]]]],[11,"read_u24",E,R[1231],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,"read_i24",E,R[1232],0,[[["self"]],[[R[3],["i32"]],["i32"]]]],[11,"read_u32",E,R[1233],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,"read_i32",E,R[1234],0,[[["self"]],[[R[3],["i32"]],["i32"]]]],[11,"read_u48",E,R[1235],0,[[["self"]],[[R[3],["u64"]],["u64"]]]],[11,"read_i48",E,R[1236],0,[[["self"]],[[R[3],["i64"]],["i64"]]]],[11,"read_u64",E,R[1237],0,[[["self"]],[[R[3],["u64"]],["u64"]]]],[11,"read_i64",E,R[1238],0,[[["self"]],[[R[3],["i64"]],["i64"]]]],[11,R[1225],E,R[1239],0,[[["self"]],[[R[3],["u128"]],["u128"]]]],[11,"read_i128",E,R[1240],0,[[["self"]],[["i128"],[R[3],["i128"]]]]],[11,R[1226],E,R[1184],0,[[["self"],["usize"]],[[R[3],["u64"]],["u64"]]]],[11,"read_int",E,R[1185],0,[[["self"],["usize"]],[[R[3],["i64"]],["i64"]]]],[11,R[1189],E,R[1184],0,[[["self"],["usize"]],[[R[3],["u128"]],["u128"]]]],[11,R[1193],E,R[1185],0,[[["self"],["usize"]],[["i128"],[R[3],["i128"]]]]],[11,"read_f32",E,R[1195],0,[[["self"]],[["f32"],[R[3],["f32"]]]]],[11,"read_f64",E,R[1196],0,[[["self"]],[["f64"],[R[3],["f64"]]]]],[11,R[1201],E,R[1241],0,[[["self"]],[R[3]]]],[11,R[1202],E,R[1242],0,[[["self"]],[R[3]]]],[11,R[1203],E,R[1243],0,[[["self"]],[R[3]]]],[11,R[1204],E,R[1244],0,[[["self"]],[R[3]]]],[11,R[1245],E,R[1246],0,[[["self"]],[R[3]]]],[11,R[1205],E,R[1247],0,[[["self"]],[R[3]]]],[11,R[1206],E,R[1248],0,[[["self"]],[R[3]]]],[11,R[1207],E,R[1249],0,[[["self"]],[R[3]]]],[11,R[1208],E,R[1250],0,[[["self"]],[R[3]]]],[11,R[1209],E,R[1251],0,[[["self"]],[R[3]]]],[11,R[1210],E,R[1186],0,[[["self"]],[R[3]]]],[11,R[1211],E,R[1252],0,[[["self"]],[R[3]]]],[11,R[1213],E,R[1186],0,[[["self"]],[R[3]]]],[11,"write_u8",E,R[1253],1,[[["self"],["u8"]],[R[3]]]],[11,"write_i8",E,R[1254],1,[[["self"],["i8"]],[R[3]]]],[11,R[503],E,R[1255],1,[[["u16"],["self"]],[R[3]]]],[11,R[508],E,R[1256],1,[[["self"],["i16"]],[R[3]]]],[11,"write_u24",E,R[1257],1,[[["self"],["u32"]],[R[3]]]],[11,"write_i24",E,R[1258],1,[[["self"],["i32"]],[R[3]]]],[11,R[504],E,R[1259],1,[[["self"],["u32"]],[R[3]]]],[11,R[509],E,R[1260],1,[[["self"],["i32"]],[R[3]]]],[11,"write_u48",E,R[1261],1,[[["self"],["u64"]],[R[3]]]],[11,"write_i48",E,R[1262],1,[[["i64"],["self"]],[R[3]]]],[11,R[505],E,R[1263],1,[[["self"],["u64"]],[R[3]]]],[11,R[510],E,R[1264],1,[[["i64"],["self"]],[R[3]]]],[11,R[506],E,R[1265],1,[[["self"],["u128"]],[R[3]]]],[11,R[511],E,R[1266],1,[[["self"],["i128"]],[R[3]]]],[11,R[1214],E,R[1187],1,[[["self"],["u64"],["usize"]],[R[3]]]],[11,"write_int",E,R[1188],1,[[["i64"],["self"],["usize"]],[R[3]]]],[11,R[1191],E,R[1187],1,[[["self"],["usize"],["u128"]],[R[3]]]],[11,R[1197],E,R[1188],1,[[["self"],["i128"],["usize"]],[R[3]]]],[11,"write_f32",E,R[1199],1,[[["f32"],["self"]],[R[3]]]],[11,"write_f64",E,R[1200],1,[[["self"],["f64"]],[R[3]]]]],"p":[[8,R[1267]],[8,R[1268]],[8,"ByteOrder"],[4,R[801]],[4,R[802]]]};
searchIndex["c2_chacha"]={"doc":"Pure Rust ChaCha with SIMD optimizations.","i":[[0,"guts","c2_chacha",E,N,N],[8,"Machine","c2_chacha::guts",E,N,N],[16,"u32x4",E,E,0,N],[16,"u64x2",E,E,0,N],[16,"u128x1",E,E,0,N],[16,"u32x4x2",E,E,0,N],[16,"u64x2x2",E,E,0,N],[16,"u64x4",E,E,0,N],[16,"u128x2",E,E,0,N],[16,"u32x4x4",E,E,0,N],[16,"u64x2x4",E,E,0,N],[16,"u128x4",E,E,0,N],[11,"unpack",E,E,0,[[["s"]],["v"]]],[11,"vec",E,E,0,[[["a"]],["v"]]],[11,"read_le",E,E,0,[[],["v"]]],[11,"read_be",E,E,0,[[],["v"]]],[10,R[86],E,E,0,[[],["self"]]],[3,"ChaCha",E,E,N,N],[3,"State",E,E,N,N],[11,"new",E,E,1,[[],["self"]]],[11,"refill4",E,"Produce 4 blocks of output, advancing the state",1,[[["self"],["u32"]]]],[11,"refill",E,"Produce a block of output, advancing the state",1,[[["self"],["u32"]]]],[11,"set_stream_param",E,E,1,[[["self"],["u32"],["u64"]]]],[11,"get_stream_param",E,E,1,[[["u32"],["self"]],["u64"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clone",E,E,1,[[["self"]],["chacha"]]],[11,"clone",E,E,2,[[["self"]],["state"]]]],"p":[[8,"Machine"],[3,"ChaCha"],[3,"State"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,R[0],R[0],"The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex["clear_on_drop"]={"doc":"Helpers for clearing sensitive data on the stack and heap.","i":[[3,R[1592],R[1589],"Zeroizes a storage location when dropped.",N,N],[5,"clear_stack_on_return",E,R[1588],N,[[["usize"],["f"]],["r"]]],[5,"clear_stack_on_return_fnonce",E,R[1588],N,[[["usize"],["f"]],["r"]]],[5,"clear_stack",E,"Overwrites a few pages of stack.",N,[[["usize"]]]],[0,"clear",E,"Traits to completely overwrite a value, without leaking…",N,N],[8,"Clear","clear_on_drop::clear","An operation to completely overwrite a value, without…",N,N],[10,"clear",E,"Completely overwrites this value.",0,[[["self"]]]],[8,R[1591],E,"A type that can be initialized to a valid value, after…",N,N],[10,R[2628],E,"Called to initialize a place to a valid value, after it is…",1,[[]]],[8,"ZeroSafe",E,"Unsafe trait to indicate which types are safe to set to…",N,N],[11,"new",R[1589],"Creates a new `ClearOnDrop` which clears `place` on drop.",2,[[["p"]],["self"]]],[11,"into_place",E,"Consumes the `ClearOnDrop`, returning the `place` after…",2,[[],["p"]]],[11,"into_uncleared_place",E,"Consumes the `ClearOnDrop`, returning the `place` without…",2,[[],["p"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[R[3]]]],[11,"eq",E,E,2,[[["self"],[R[1590]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[1590]]],["bool"]]],[11,"cmp",E,E,2,[[["self"]],[R[105]]]],[11,R[106],E,E,2,[[["self"],[R[1590]]],[[R[105]],["option",[R[105]]]]]],[11,"lt",E,E,2,[[["self"],[R[1590]]],["bool"]]],[11,"le",E,E,2,[[["self"],[R[1590]]],["bool"]]],[11,"gt",E,E,2,[[["self"],[R[1590]]],["bool"]]],[11,"ge",E,E,2,[[["self"],[R[1590]]],["bool"]]],[11,"deref",E,E,2,[[["self"]]]],[11,R[99],E,E,2,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"hash",E,E,2,[[["self"],["h"]]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,"as_mut",E,E,2,[[["self"]],[T]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,R[385],E,E,2,[[["self"],["self"]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]]],"p":[[8,"Clear"],[8,R[1591]],[3,R[1592]]]};
searchIndex["const_random"]={"doc":E,"i":[[14,R[2902],R[2902],"Random constants Allows you to insert random constants…",N,N]],"p":[]};
searchIndex["const_random_macro"]={"doc":E,"i":[[24,"proc_macro_hack_const_random","const_random_macro",E,N,N]],"p":[]};
searchIndex["constant_time_eq"]={"doc":E,"i":[[5,R[110],R[110],"Compares two equal-sized byte strings in constant time.",N,[[],["bool"]]]],"p":[]};
searchIndex["crunchy"]={"doc":"The crunchy unroller - deterministically unroll constant…","i":[[14,"unroll","crunchy",R[1578],N,N]],"p":[]};
searchIndex["crypto_mac"]={"doc":"This crate provides trait for Message Authentication Code…","i":[[3,R[1738],"crypto_mac","Error type for signaling invalid key length for MAC…",N,N],[3,"MacError",E,"Error type for signaling failed MAC verification",N,N],[3,"MacResult",E,"`MacResult` is a thin wrapper around bytes array which…",N,N],[8,"Mac",E,R[2592],N,N],[16,R[1739],E,E,0,N],[16,"KeySize",E,E,0,N],[10,"new",E,R[2593],0,[[[R[1614]]],["self"]]],[11,R[2599],E,R[2594],0,[[],[[R[3],[R[1735]]],[R[1735]]]]],[10,"input",E,R[2595],0,[[["self"]]]],[10,"reset",E,R[2596],0,[[["self"]]]],[10,R[3],E,R[1736],0,[[],[R[1737]]]],[11,R[1724],E,R[1736],0,[[["self"]],[R[1737]]]],[11,"verify",E,R[2597],0,[[],[[R[3],[R[2598]]],[R[2598]]]]],[11,"new",E,"Create a new MacResult.",1,[[[R[1614],["u8"]],["u8"]],[R[1737]]]],[11,"code",E,"Get the code value as a bytes array.",1,[[],[[R[1614],["u8"]],["u8"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"fmt",E,E,3,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"eq",E,E,3,[[["self"],[R[2598]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[1735]]],["bool"]]],[11,"eq",E,E,1,[[[R[1737]],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[2598]]]],[11,"clone",E,E,2,[[["self"]],[R[1735]]]],[11,"clone",E,E,1,[[["self"]],[R[1737]]]],[11,R[90],E,E,3,[[],[R[2598]]]],[11,R[90],E,E,2,[[],[R[1735]]]],[11,"ct_eq",E,E,1,[[["self"]],[R[2]]]]],"p":[[8,"Mac"],[3,"MacResult"],[3,R[1738]],[3,"MacError"]]};
searchIndex["curve25519_dalek"]={"doc":R[2652],"i":[[0,"scalar",R[2612],"Arithmetic on scalars (integers mod the group order).",N,N],[3,"Scalar",R[2626],"The `Scalar` struct holds an integer \\(s < 2^{255} \\)…",N,N],[11,"from_bytes_mod_order",E,"Construct a `Scalar` by reducing a 256-bit little-endian…",0,[[],["scalar"]]],[11,"from_bytes_mod_order_wide",E,"Construct a `Scalar` by reducing a 512-bit little-endian…",0,[[],["scalar"]]],[11,"from_canonical_bytes",E,"Attempt to construct a `Scalar` from a canonical byte…",0,[[],[["option",["scalar"]],["scalar"]]]],[11,"from_bits",E,"Construct a `Scalar` from the low 255 bits of a 256-bit…",0,[[],["scalar"]]],[11,"random",E,"Return a `Scalar` chosen uniformly at random using a…",0,[[["r"]],["self"]]],[11,R[2619],E,"Hash a slice of bytes into a scalar.",0,[[],["scalar"]]],[11,R[2651],E,"Construct a scalar from an existing `Digest` instance.",0,[[["d"]],["scalar"]]],[11,R[3268],E,"Convert this `Scalar` to its underlying sequence of bytes.",0,[[["self"]]]],[11,R[2616],E,"View the little-endian byte encoding of the integer…",0,[[["self"]]]],[11,"zero",E,"Construct the scalar \\( 0 \\).",0,[[],["self"]]],[11,"one",E,"Construct the scalar \\( 1 \\).",0,[[],["self"]]],[11,"invert",E,"Given a nonzero `Scalar`, compute its multiplicative…",0,[[["self"]],["scalar"]]],[11,"batch_invert",E,"Given a slice of nonzero (possibly secret) `Scalar`s,…",0,[[],["scalar"]]],[11,"reduce",E,"Reduce this `Scalar` modulo \\(\\ell\\).",0,[[["self"]],["scalar"]]],[11,"is_canonical",E,"Check whether this `Scalar` is the canonical…",0,[[["self"]],["bool"]]],[0,"montgomery",R[2612],"Scalar multiplication on the Montgomery form of Curve25519.",N,N],[3,R[2639],R[2627],"Holds the \\(u\\)-coordinate of a point on the Montgomery…",N,N],[12,"0",E,E,1,N],[11,R[2616],E,"View this `MontgomeryPoint` as an array of bytes.",1,[[["self"]]]],[11,R[3268],E,"Convert this `MontgomeryPoint` to an array of bytes.",1,[[["self"]]]],[11,"to_edwards",E,"Attempt to convert to an `EdwardsPoint`, using the…",1,[[["self"],["u8"]],[[R[2613]],["option",[R[2613]]]]]],[0,"edwards",R[2612],"Group operations for Curve25519, in Edwards form.",N,N],[3,R[2640],R[2630],"In \"Edwards y\" / \"Ed25519\" format, the curve point…",N,N],[12,"0",E,E,2,N],[3,R[2641],E,"An `EdwardsPoint` represents a point on the Edwards form…",N,N],[3,R[2649],E,R[2615],N,N],[3,R[2642],E,"A precomputed table of multiples of a basepoint, for…",N,N],[11,R[2616],E,"View this `CompressedEdwardsY` as an array of bytes.",2,[[["self"]]]],[11,R[3268],E,"Copy this `CompressedEdwardsY` to an array of bytes.",2,[[["self"]]]],[11,"decompress",E,"Attempt to decompress to an `EdwardsPoint`.",2,[[["self"]],[[R[2613]],["option",[R[2613]]]]]],[11,R[768],E,"Construct a `CompressedEdwardsY` from a slice of bytes.",2,[[],[R[2614]]]],[11,"to_montgomery",E,"Convert this `EdwardsPoint` on the Edwards model to the…",3,[[["self"]],[R[2636]]]],[11,"compress",E,"Compress this point to `CompressedEdwardsY` format.",3,[[["self"]],[R[2614]]]],[11,R[2620],E,R[2621],3,[[[R[2613]],["scalar"]],[R[2613]]]],[11,"create",E,"Create a table of precomputed multiples of `basepoint`.",4,[[[R[2613]]],[R[2637]]]],[11,"basepoint",E,"Get the basepoint for this table as an `EdwardsPoint`.",4,[[["self"]],[R[2613]]]],[11,"mul_by_cofactor",E,"Multiply by the cofactor: return \\([8]P\\).",3,[[["self"]],[R[2613]]]],[11,"is_small_order",E,"Determine if this point is of small order.",3,[[["self"]],["bool"]]],[11,"is_torsion_free",E,"Determine if this point is “torsion-free”, i.e., is…",3,[[["self"]],["bool"]]],[0,"ristretto",R[2612],"An implementation of [Ristretto][ristretto_main], which…",N,N],[3,R[2643],R[2632],"A Ristretto point, in compressed wire format.",N,N],[12,"0",E,E,5,N],[3,R[2644],E,"A `RistrettoPoint` represents a point in the Ristretto…",N,N],[3,R[2650],E,R[2615],N,N],[3,R[2645],E,"A precomputed table of multiples of a basepoint, used to…",N,N],[11,R[3268],E,"Copy the bytes of this `CompressedRistretto`.",5,[[["self"]]]],[11,R[2616],E,"View this `CompressedRistretto` as an array of bytes.",5,[[["self"]]]],[11,R[768],E,"Construct a `CompressedRistretto` from a slice of bytes.",5,[[],[R[2618]]]],[11,"decompress",E,"Attempt to decompress to an `RistrettoPoint`.",5,[[["self"]],[[R[2617]],["option",[R[2617]]]]]],[11,"compress",E,"Compress this point using the Ristretto encoding.",6,[[["self"]],[R[2618]]]],[11,"double_and_compress_batch",E,"Double-and-compress a batch of points. The Ristretto…",6,[[["i"]],[[R[2618]],["vec",[R[2618]]]]]],[11,"random",E,"Return a `RistrettoPoint` chosen uniformly at random using…",6,[[["r"]],["self"]]],[11,R[2619],E,"Hash a slice of bytes into a `RistrettoPoint`.",6,[[],[R[2617]]]],[11,R[2651],E,"Construct a `RistrettoPoint` from an existing `Digest`…",6,[[["d"]],[R[2617]]]],[11,"from_uniform_bytes",E,"Construct a `RistrettoPoint` from 64 bytes of data.",6,[[],[R[2617]]]],[11,R[2620],E,R[2621],6,[[["scalar"],[R[2617]]],[R[2617]]]],[11,"create",E,"Create a precomputed table of multiples of the given…",7,[[[R[2617]]],[R[2638]]]],[11,"basepoint",E,"Get the basepoint for this table as a `RistrettoPoint`.",7,[[["self"]],[R[2617]]]],[0,"constants",R[2612],"Various constants, such as the Ristretto and Ed25519…",N,N],[17,"ED25519_BASEPOINT_POINT","curve25519_dalek::constants","The Ed25519 basepoint, as an `EdwardsPoint`.",N,N],[17,"EIGHT_TORSION",E,"The 8-torsion subgroup \\(\\mathcal E [8]\\).",N,N],[17,"ED25519_BASEPOINT_TABLE",E,"Table containing precomputed multiples of the Ed25519…",N,N],[17,"ED25519_BASEPOINT_COMPRESSED",E,"The Ed25519 basepoint, in `CompressedEdwardsY` format.",N,N],[17,"X25519_BASEPOINT",E,"The X25519 basepoint, in `MontgomeryPoint` format.",N,N],[17,"RISTRETTO_BASEPOINT_COMPRESSED",E,"The Ristretto basepoint, in `CompressedRistretto` format.",N,N],[17,"RISTRETTO_BASEPOINT_POINT",E,"The Ristretto basepoint, as a `RistrettoPoint`.",N,N],[17,"BASEPOINT_ORDER",E,"`BASEPOINT_ORDER` is the order of the Ristretto group and…",N,N],[17,"RISTRETTO_BASEPOINT_TABLE",E,"The Ristretto basepoint, as a `RistrettoBasepointTable`…",N,N],[0,"traits",R[2612],"Module for common traits.",N,N],[8,"Identity","curve25519_dalek::traits","Trait for getting the identity element of a point type.",N,N],[10,"identity",E,"Returns the identity element of the curve. Can be used as…",8,[[],["self"]]],[8,"IsIdentity",E,"Trait for testing if a curve point is equivalent to the…",N,N],[10,R[2629],E,"Return true if this element is the identity element of the…",9,[[["self"]],["bool"]]],[8,R[2646],E,"A trait for constant-time multiscalar multiplication…",N,N],[16,"Point",E,R[2622],10,N],[10,R[2633],E,"Given an iterator of (possibly secret) scalars and an…",10,[[["j"],["i"]]]],[8,R[2647],E,"A trait for variable-time multiscalar multiplication…",N,N],[16,"Point",E,R[2622],11,N],[10,R[2634],E,R[2623],11,[[["j"],["i"]],["option"]]],[11,R[2624],E,R[2623],11,[[["j"],["i"]]]],[8,R[2648],E,"A trait for variable-time multiscalar multiplication with…",N,N],[16,"Point",E,"The type of point to be multiplied, e.g., `RistrettoPoint`.",12,N],[10,"new",E,"Given the static points \\( B_i \\), perform precomputation…",12,[[["i"]],["self"]]],[11,R[2624],E,R[2625],12,[[["i"],["self"]]]],[11,"vartime_mixed_multiscalar_mul",E,R[2625],12,[[["j"],["i"],["self"],["k"]]]],[10,R[2635],E,R[2625],12,[[["j"],["i"],["self"],["k"]],["option"]]],[11,"from",R[2626],E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"zeroize",E,E,0,[[["self"]]]],[11,R[2631],E,E,0,[[["self"],[R[2]]]]],[11,"from",R[2627],E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"zeroize",E,E,1,[[["self"]]]],[11,R[2629],R[2630],E,2,[[["self"]],["bool"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[2629],E,E,3,[[["self"]],["bool"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[2631],E,E,3,[[["self"],[R[2]]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,"into",E,E,13,[[],[U]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[2629],R[2632],E,5,[[["self"]],["bool"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[2629],E,E,6,[[["self"]],["bool"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[2631],E,E,6,[[["self"],[R[2]]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,"into",E,E,14,[[],[U]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,"identity",R[2630],E,2,[[],[R[2614]]]],[11,"identity",E,E,3,[[],[R[2613]]]],[11,"identity",R[2632],E,5,[[],[R[2618]]]],[11,"identity",E,E,6,[[],[R[2617]]]],[11,R[2633],R[2630],E,3,[[["j"],["i"]],[R[2613]]]],[11,R[2633],R[2632],E,6,[[["j"],["i"]],[R[2617]]]],[11,R[2634],R[2630],E,3,[[["j"],["i"]],[[R[2613]],["option",[R[2613]]]]]],[11,R[2634],R[2632],E,6,[[["j"],["i"]],[[R[2617]],["option",[R[2617]]]]]],[11,"new",R[2630],E,13,[[["i"]],["self"]]],[11,R[2635],E,E,13,[[["j"],["i"],["self"],["k"]],["option"]]],[11,"new",R[2632],E,14,[[["i"]],["self"]]],[11,R[2635],E,E,14,[[["j"],["i"],["self"],["k"]],["option"]]],[11,"from",R[2626],E,0,[[["u8"]],["scalar"]]],[11,"from",E,E,0,[[["u16"]],["scalar"]]],[11,"from",E,E,0,[[["u32"]],["scalar"]]],[11,"from",E,"Construct a scalar from the given `u64`.",0,[[["u64"]],["scalar"]]],[11,"from",E,E,0,[[["u128"]],["scalar"]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[2627],E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[2630],E,2,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,3,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,4,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[2632],E,5,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,6,[[[R[37]],["self"]],[R[3]]]],[11,"sub",R[2626],E,0,[[["scalar"]],["scalar"]]],[11,"sub",E,E,0,[[["scalar"]],["scalar"]]],[11,"sub",R[2630],E,3,[[[R[2613]]],[R[2613]]]],[11,"sub",E,E,3,[[[R[2613]]],[R[2613]]]],[11,"sub",R[2632],E,6,[[[R[2617]]],[R[2617]]]],[11,"sub",E,E,6,[[[R[2617]]],[R[2617]]]],[11,"eq",R[2626],E,0,[[["self"]],["bool"]]],[11,"eq",R[2627],E,1,[[["self"],[R[2636]]],["bool"]]],[11,"eq",R[2630],E,2,[[["self"],[R[2614]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[2614]]],["bool"]]],[11,"eq",E,E,3,[[[R[2613]],["self"]],["bool"]]],[11,"eq",R[2632],E,5,[[["self"],[R[2618]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[2618]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[2617]]],["bool"]]],[11,"add",R[2626],E,0,[[["scalar"]],["scalar"]]],[11,"add",E,E,0,[[["scalar"]],["scalar"]]],[11,"add",R[2630],E,3,[[[R[2613]]],[R[2613]]]],[11,"add",E,E,3,[[[R[2613]]],[R[2613]]]],[11,"add",R[2632],E,6,[[[R[2617]]],[R[2617]]]],[11,"add",E,E,6,[[[R[2617]]],[R[2617]]]],[11,"mul",R[2626],E,0,[[["scalar"]],["scalar"]]],[11,"mul",E,E,0,[[["scalar"]],["scalar"]]],[11,"mul",R[2627],E,1,[[["scalar"]],[R[2636]]]],[11,"mul",E,E,1,[[["scalar"]],[R[2636]]]],[11,"mul",R[2626],E,0,[[[R[2636]]],[R[2636]]]],[11,"mul",E,E,0,[[[R[2636]]],[R[2636]]]],[11,"mul",R[2630],E,3,[[["scalar"]],[R[2613]]]],[11,"mul",E,E,3,[[["scalar"]],[R[2613]]]],[11,"mul",R[2626],E,0,[[[R[2613]]],[R[2613]]]],[11,"mul",E,E,0,[[[R[2613]]],[R[2613]]]],[11,"mul",R[2632],E,6,[[["scalar"]],[R[2617]]]],[11,"mul",E,E,6,[[["scalar"]],[R[2617]]]],[11,"mul",R[2626],E,0,[[[R[2617]]],[R[2617]]]],[11,"mul",E,E,0,[[[R[2617]]],[R[2617]]]],[11,"neg",E,E,0,[[],["scalar"]]],[11,"neg",R[2630],E,3,[[],[R[2613]]]],[11,"neg",R[2632],E,6,[[],[R[2617]]]],[11,R[423],R[2626],E,0,[[["self"],["scalar"]]]],[11,R[423],E,E,0,[[["self"],["scalar"]]]],[11,R[423],R[2630],E,3,[[[R[2613]],["self"]]]],[11,R[423],E,E,3,[[["self"],[R[2613]]]]],[11,R[423],R[2632],E,6,[[["self"],[R[2617]]]]],[11,R[423],E,E,6,[[["self"],[R[2617]]]]],[11,R[463],R[2626],E,0,[[["self"],["scalar"]]]],[11,R[463],E,E,0,[[["self"],["scalar"]]]],[11,R[463],R[2630],E,3,[[[R[2613]],["self"]]]],[11,R[463],E,E,3,[[["self"],[R[2613]]]]],[11,R[463],R[2632],E,6,[[["self"],[R[2617]]]]],[11,R[463],E,E,6,[[["self"],[R[2617]]]]],[11,R[476],R[2626],E,0,[[["self"],["scalar"]]]],[11,R[476],E,E,0,[[["self"],["scalar"]]]],[11,R[476],R[2627],E,1,[[["self"],["scalar"]]]],[11,R[476],E,E,1,[[["self"],["scalar"]]]],[11,R[476],R[2630],E,3,[[["self"],["scalar"]]]],[11,R[476],E,E,3,[[["self"],["scalar"]]]],[11,R[476],R[2632],E,6,[[["self"],["scalar"]]]],[11,R[476],E,E,6,[[["self"],["scalar"]]]],[11,"index",R[2626],"Index the bytes of the representative for this `Scalar`.…",0,[[["self"],["usize"]],["u8"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",R[2630],E,3,[[["i"]],["self"]]],[11,"sum",R[2632],E,6,[[["i"]],["self"]]],[11,R[424],R[2626],E,0,[[["i"]],["self"]]],[11,"clone",E,E,0,[[["self"]],["scalar"]]],[11,"clone",R[2627],E,1,[[["self"]],[R[2636]]]],[11,"clone",R[2630],E,2,[[["self"]],[R[2614]]]],[11,"clone",E,E,3,[[["self"]],[R[2613]]]],[11,"clone",E,E,4,[[["self"]],[R[2637]]]],[11,"clone",R[2632],E,5,[[["self"]],[R[2618]]]],[11,"clone",E,E,6,[[["self"]],[R[2617]]]],[11,"clone",E,E,7,[[["self"]],[R[2638]]]],[11,R[90],R[2626],E,0,[[],["scalar"]]],[11,R[90],R[2627],E,1,[[],[R[2636]]]],[11,R[90],R[2630],E,2,[[],[R[2614]]]],[11,R[90],E,E,3,[[],[R[2613]]]],[11,R[90],R[2632],E,5,[[],[R[2618]]]],[11,R[90],E,E,6,[[],[R[2617]]]],[11,"zeroize",R[2626],E,0,[[["self"]]]],[11,"zeroize",R[2627],E,1,[[["self"]]]],[11,"ct_eq",R[2626],E,0,[[["self"]],[R[2]]]],[11,"ct_eq",R[2627],E,1,[[["self"],[R[2636]]],[R[2]]]],[11,"ct_eq",R[2630],E,2,[[["self"],[R[2614]]],[R[2]]]],[11,"ct_eq",E,E,3,[[[R[2613]],["self"]],[R[2]]]],[11,"ct_eq",R[2632],E,5,[[["self"],[R[2618]]],[R[2]]]],[11,"ct_eq",E,"Test equality between two `RistrettoPoint`s.",6,[[["self"],[R[2617]]],[R[2]]]],[11,R[59],R[2626],E,0,[[["self"],[R[2]]],["self"]]],[11,R[59],R[2630],E,3,[[[R[2613]],[R[2]]],[R[2613]]]],[11,R[59],R[2632],"Conditionally select between `self` and `other`.",6,[[[R[2617]],[R[2]]],[R[2617]]]]],"p":[[3,"Scalar"],[3,R[2639]],[3,R[2640]],[3,R[2641]],[3,R[2642]],[3,R[2643]],[3,R[2644]],[3,R[2645]],[8,"Identity"],[8,"IsIdentity"],[8,R[2646]],[8,R[2647]],[8,R[2648]],[3,R[2649]],[3,R[2650]]]};
searchIndex["derive_more"]={"doc":"`derive_more`","i":[],"p":[]};
searchIndex["digest"]={"doc":"This crate provides traits which describe functionality of…","i":[[3,R[1734],"digest","The error type for variable hasher initialization",N,N],[8,"Digest",E,R[2583],N,N],[16,R[1739],E,E,0,N],[10,"new",E,R[2584],0,[[],["self"]]],[10,"input",E,R[1723],0,[[["asref"],["self"]]]],[10,"chain",E,R[1728],0,[[["asref"]],["self"]]],[10,R[3],E,R[1729],0,[[],[[R[1614],["u8"]],["u8"]]]],[10,R[1724],E,R[2585],0,[[["self"]],[[R[1614],["u8"]],["u8"]]]],[10,"reset",E,R[1725],0,[[["self"]]]],[10,R[1726],E,R[1727],0,[[],["usize"]]],[10,"digest",E,R[2586],0,[[],[[R[1614],["u8"]],["u8"]]]],[8,"DynDigest",E,"The `DynDigest` trait is a modification of `Digest` trait…",N,N],[10,"input",E,R[1723],1,[[["self"]]]],[10,R[1724],E,"Retrieve result and reset hasher instance",1,[[["self"]],["box"]]],[10,R[3],E,"Retrieve result and consume boxed hasher instance",1,[[["box"]],["box"]]],[10,"reset",E,R[1725],1,[[["self"]]]],[10,R[1726],E,R[1727],1,[[["self"]],["usize"]]],[10,R[2588],E,"Clone hasher state into a boxed trait object",1,[[["self"]],[[R[2587]],["box",[R[2587]]]]]],[8,"Input",E,"Trait for processing input data",N,N],[10,"input",E,R[1723],2,[[["asref"],["self"]]]],[11,"chain",E,R[1728],2,[[["asref"]],["self"]]],[8,"BlockInput",E,"Trait to indicate that digest function processes data in…",N,N],[16,"BlockSize",E,E,3,N],[8,R[1731],E,"Trait for returning digest result with the fixed size",N,N],[16,R[1739],E,E,4,N],[10,R[2589],E,R[1729],4,[[],[[R[1614],["u8"]],["u8"]]]],[8,R[1732],E,"Trait for returning digest result with the variable size",N,N],[10,"new",E,"Create new hasher instance with the given output size.",5,[[["usize"]],[[R[1730]],[R[3],[R[1730]]]]]],[10,R[1726],E,"Get output size of the hasher instance provided to the…",5,[[["self"]],["usize"]]],[10,"variable_result",E,"Retrieve result via closure and consume hasher.",5,[[["fnonce"]]]],[11,"vec_result",E,"Retrieve result into vector and consume hasher.",5,[[],[["u8"],["vec",["u8"]]]]],[8,"XofReader",E,"Trait for describing readers which are used to extract…",N,N],[10,"read",E,"Read output into the `buffer`. Can be called unlimited…",6,[[["self"]]]],[8,R[1733],E,"Trait which describes extendable-output functions (XOF).",N,N],[16,"Reader",E,E,7,N],[10,"xof_result",E,"Retrieve XOF reader and consume hasher instance.",7,[[]]],[11,"vec_result",E,"Retrieve result into vector of specified length.",7,[[["usize"]],[["u8"],["vec",["u8"]]]]],[8,"Reset",E,"Trait for resetting hash instances",N,N],[10,"reset",E,"Reset hasher instance to its initial state and return…",8,[[["self"]]]],[14,"impl_write",E,"Implements `std::io::Write` trait for implementer of `Input`",N,N],[11,"from",E,E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[78],E,E,9,[[["self"]],["string"]]],[11,"fmt",E,E,9,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[37]]],[R[3]]]],[11,"clone",E,E,9,[[["self"]],[R[1730]]]],[11,R[90],E,E,9,[[],[R[1730]]]],[11,R[38],E,E,9,[[["self"]],["str"]]]],"p":[[8,"Digest"],[8,"DynDigest"],[8,"Input"],[8,"BlockInput"],[8,R[1731]],[8,R[1732]],[8,"XofReader"],[8,R[1733]],[8,"Reset"],[3,R[1734]]]};
searchIndex["ed25519_dalek"]={"doc":"A Rust implementation of ed25519 key generation, signing,…","i":[[3,"Sha512","ed25519_dalek",R[3261],N,N],[8,"Digest",E,R[2583],N,N],[16,R[1739],E,E,0,N],[10,"new",E,R[2584],0,[[],["self"]]],[10,"input",E,R[1723],0,[[["self"],["b"]]]],[10,"chain",E,R[1728],0,[[["b"]],["self"]]],[10,R[3],E,R[1729],0,[[],[[R[1614],["u8"]],["u8"]]]],[10,R[1724],E,R[2585],0,[[["self"]],[[R[1614],["u8"]],["u8"]]]],[10,"reset",E,R[1725],0,[[["self"]]]],[10,R[1726],E,R[1727],0,[[],["usize"]]],[10,"digest",E,R[2586],0,[[],[[R[1614],["u8"]],["u8"]]]],[3,"Sha512",E,R[3261],N,N],[3,R[3275],E,R[3343],N,N],[3,R[3375],E,"An ed25519 public key.",N,N],[3,R[3374],E,"An EdDSA secret key.",N,N],[3,R[3274],E,"An \"expanded\" secret key.",N,N],[3,R[2884],E,"An ed25519 signature.",N,N],[3,"Keypair",E,"An ed25519 keypair.",N,N],[12,"secret",E,R[3284],1,N],[12,"public",E,R[3285],1,N],[11,R[3268],E,"Convert this keypair to bytes.",1,[[["self"]]]],[11,R[3269],E,"Construct a `Keypair` from the bytes of a `PublicKey` and…",1,[[],[[R[3],["keypair",R[3262]]],["keypair"],[R[3262]]]]],[11,R[1622],E,"Generate an ed25519 keypair.",1,[[["r"]],["keypair"]]],[11,"sign",E,R[3319],1,[[["self"]],[R[188]]]],[11,R[3271],E,"Sign a `prehashed_message` with this `Keypair` using the…",1,[[["option"],["d"],["self"]],[R[188]]]],[11,"verify",E,R[3263],1,[[[R[188]],["self"]],[[R[3],[R[3262]]],[R[3262]]]]],[11,R[3264],E,R[3265],1,[[["option"],["d"],["self"],[R[188]]],[[R[3],[R[3262]]],[R[3262]]]]],[11,R[3266],E,R[3267],1,[[[R[188]],["self"]],[[R[3],[R[3262]]],[R[3262]]]]],[11,R[3268],E,R[3282],2,[[["self"]]]],[11,R[2616],E,"View this public key as a byte array.",2,[[["self"]]]],[11,R[3269],E,R[3303],2,[[],[[R[3],[R[3272],R[3262]]],[R[3272]],[R[3262]]]]],[11,"verify",E,R[3263],2,[[[R[188]],["self"]],[[R[3],[R[3262]]],[R[3262]]]]],[11,R[3264],E,R[3265],2,[[["option"],["d"],["self"],[R[188]]],[[R[3],[R[3262]]],[R[3262]]]]],[11,R[3266],E,R[3267],2,[[[R[188]],["self"]],[[R[3],[R[3262]]],[R[3262]]]]],[11,R[3268],E,R[3291],3,[[["self"]]]],[11,R[2616],E,R[3292],3,[[["self"]]]],[11,R[3269],E,"Construct a `SecretKey` from a slice of bytes.",3,[[],[[R[3273]],[R[3262]],[R[3],[R[3273],R[3262]]]]]],[11,R[1622],E,"Generate a `SecretKey` from a `csprng`.",3,[[[T]],[R[3273]]]],[11,R[3268],E,"Convert this `ExpandedSecretKey` into an array of 64 bytes.",4,[[["self"]]]],[11,R[3269],E,"Construct an `ExpandedSecretKey` from a slice of bytes.",4,[[],[[R[3],[R[3270],R[3262]]],[R[3270]],[R[3262]]]]],[11,"sign",E,"Sign a message with this `ExpandedSecretKey`.",4,[[[R[3272]],["self"]],[R[188]]]],[11,R[3271],E,"Sign a `prehashed_message` with this `ExpandedSecretKey`…",4,[[["option"],[R[3272]],["d"],["self"]],[R[188]]]],[11,R[3268],E,R[3314],5,[[["self"]]]],[11,R[3269],E,R[3315],5,[[],[[R[188]],[R[3262]],[R[3],[R[188],R[3262]]]]]],[17,R[3313],E,"The length of a ed25519 `Signature`, in bytes.",N,N],[17,R[3287],E,"The length of a ed25519 `SecretKey`, in bytes.",N,N],[17,R[3286],E,"The length of an ed25519 `PublicKey`, in bytes.",N,N],[17,R[3288],E,"The length of an ed25519 `Keypair`, in bytes.",N,N],[17,"EXPANDED_SECRET_KEY_LENGTH",E,"The length of an \"expanded\" ed25519 key,…",N,N],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[2628],E,E,6,[[]]],[11,"new",E,E,6,[[],["d"]]],[11,"input",E,E,6,[[["self"],["b"]]]],[11,"chain",E,E,6,[[["b"]],["d"]]],[11,R[3],E,E,6,[[],[["u8"],[R[1614],["u8"]]]]],[11,R[1724],E,E,6,[[["self"]],[["u8"],[R[1614],["u8"]]]]],[11,"reset",E,E,6,[[["self"]]]],[11,R[1726],E,E,6,[[],["usize"]]],[11,"digest",E,E,6,[[],[["u8"],[R[1614],["u8"]]]]],[11,"input",E,E,6,[[["self"]]]],[11,R[1724],E,E,6,[[["self"]],["box"]]],[11,R[3],E,E,6,[[["box"]],["box"]]],[11,"reset",E,E,6,[[["self"]]]],[11,R[1726],E,E,6,[[["self"]],["usize"]]],[11,R[2588],E,E,6,[[["self"]],[[R[2587]],["box",[R[2587]]]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[78],E,E,7,[[["self"]],["string"]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[2628],E,E,2,[[]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[2628],E,E,3,[[]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[2628],E,E,4,[[]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[2628],E,E,1,[[]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"input",E,E,6,[[["self"],["b"]]]],[11,R[2589],E,E,6,[[],[[R[1614],["u8"]],["u8"]]]],[11,"reset",E,E,6,[[["self"]]]],[11,R[90],E,E,6,[[],["sha512"]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[["error"],[R[3],["error"]]]]],[11,"write",E,E,6,[[["self"]],[[R[3],["usize","error"]],["usize"],["error"]]]],[11,"flush",E,E,6,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,6,[[["self"]],["sha512"]]],[11,"from",E,"Derive this public key from its corresponding `SecretKey`.",2,[[[R[3273]]],[R[3272]]]],[11,"from",E,"Derive this public key from its corresponding…",2,[[[R[3270]]],[R[3272]]]],[11,"from",E,"Construct an `ExpandedSecretKey` from a `SecretKey`.",4,[[[R[3273]]],[R[3270]]]],[11,"fmt",E,E,7,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,3,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,5,[[[R[37]],["self"]],[R[3]]]],[11,"eq",E,E,7,[[["self"],[R[3262]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[3262]]],["bool"]]],[11,"eq",E,E,2,[[[R[3272]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[3272]],["self"]],["bool"]]],[11,"eq",E,E,5,[[[R[188]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[188]],["self"]],["bool"]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"as_ref",E,E,2,[[["self"]]]],[11,"as_ref",E,E,3,[[["self"]]]],[11,"clone",E,E,7,[[["self"]],[R[3262]]]],[11,"clone",E,E,2,[[["self"]],[R[3272]]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,R[90],E,E,1,[[],["keypair"]]],[11,R[90],E,E,2,[[],[R[3272]]]],[11,R[90],E,E,3,[[],[R[3273]]]],[11,R[90],E,E,4,[[],[R[3270]]]],[11,"source",E,E,7,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[8,"Digest"],[3,"Keypair"],[3,R[3375]],[3,R[3374]],[3,R[3274]],[3,R[2884]],[3,"Sha512"],[3,R[3275]]]};
searchIndex["environmental"]={"doc":"Safe global references to stack variables.","i":[[14,R[111],R[111],"Declare a new global reference module whose underlying…",N,N]],"p":[]};
searchIndex["failure"]={"doc":"An experimental new error-handling library. Guide-style…","i":[[3,R[2911],"failure","A `Backtrace`.",N,N],[3,"Compat",E,"A compatibility wrapper around an error type from this…",N,N],[3,"Context",E,"An error with context around it.",N,N],[3,R[2912],E,"Wrapper for `std` errors to make them `Sync`.",N,N],[3,"Error",E,"The `Error` type, which can contain any failure.",N,N],[3,"Causes",E,"A iterator over the causes of a `Fail`",N,N],[5,"err_msg",E,"Constructs a `Fail` type from a string.",N,[[["debug"],["display"],["send"],["sync"]],["error"]]],[11,"new",E,"Constructs a new backtrace. This will only create a real…",0,[[],[R[1634]]]],[11,R[340],E,"Returns true if displaying this backtrace would be an…",0,[[["self"]],["bool"]]],[11,R[109],E,"Unwraps this into the inner error.",1,[[],["e"]]],[11,"get_ref",E,"Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new",E,"Creates a new context without an underlying error message.",2,[[["d"]],["context"]]],[11,"get_context",E,"Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map",E,"Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["f"]],["context"]]],[11,"new",E,"Wraps a non-`Sync` `Error` in order to make it implement…",3,[[["e"]],["self"]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",4,[[["box",[R[39]]],[R[39]]],["error"]]],[11,"as_fail",E,"Return a reference to the underlying failure that this…",4,[[["self"]],["fail"]]],[11,"name",E,"Returns the name of the underlying fail.",4,[[["self"]],[["option",["str"]],["str"]]]],[11,"cause",E,R[2905],4,[[["self"]],["fail"]]],[11,R[1634],E,"Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],[R[1634]]]],[11,"context",E,"Provides context for this `Error`.",4,[[["send"],["display"],["sync"]],[["display"],["send"],["context"],["sync"]]]],[11,"compat",E,"Wraps `Error` in a compatibility type.",4,[[],[["error"],["compat",["error"]]]]],[11,R[580],E,R[2904],4,[[],[[R[3],["error"]],["fail"],["error"]]]],[11,R[2907],E,"Returns the \"root cause\" of this error - the last value in…",4,[[["self"]],["fail"]]],[11,R[2908],E,"Returns a iterator over the causes of this error with the…",4,[[["self"]],["causes"]]],[11,"iter_chain",E,R[2909],4,[[["self"]],["causes"]]],[11,R[515],E,R[2904],4,[[["self"]],[[T],["option"]]]],[11,R[517],E,R[2904],4,[[["self"]],[[T],["option"]]]],[11,"root_cause",E,R[2910],4,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_causes`.",4,[[["self"]],["causes"]]],[6,"Fallible",E,"A common result with an `Error`.",N,N],[8,"AsFail",E,"The `AsFail` trait",N,N],[10,"as_fail",E,"Converts a reference to `Self` into a dynamic trait object…",5,[[["self"]],["fail"]]],[8,"ResultExt",E,"Extension methods for `Result`.",N,N],[10,"compat",E,"Wraps the error in `Compat` to make it compatible with…",6,[[],[["compat"],[R[3],["compat"]]]]],[10,"context",E,"Wraps the error type in a context type.",6,[[["d"]],[[R[3],["context"]],["context"]]]],[10,R[4560],E,"Wraps the error type in a context type generated by…",6,[[["f"]],[[R[3],["context"]],["context"]]]],[8,"Fail",E,"The `Fail` trait.",N,N],[11,"name",E,"Returns the \"name\" of the error.",7,[[["self"]],[["option",["str"]],["str"]]]],[11,"cause",E,R[2905],7,[[["self"]],[["fail"],["option",["fail"]]]]],[11,R[1634],E,"Returns a reference to the `Backtrace` carried by this…",7,[[["self"]],[["option",[R[1634]]],[R[1634]]]]],[11,"context",E,"Provides context for this failure.",7,[[["d"]],["context"]]],[11,"compat",E,"Wraps this failure in a compatibility wrapper that…",7,[[],["compat"]]],[11,R[515],E,R[2906],7,[[["self"]],[[T],["option"]]]],[11,R[517],E,R[2906],7,[[["self"]],[[T],["option"]]]],[11,R[2907],E,"Returns the \"root cause\" of this `Fail` - the last value…",7,[[["self"]],["fail"]]],[11,R[2908],E,"Returns a iterator over the causes of this `Fail` with the…",7,[[["self"]],["causes"]]],[11,"iter_chain",E,R[2909],7,[[["self"]],["causes"]]],[11,"root_cause",E,R[2910],7,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_chain`.",7,[[["self"]],["causes"]]],[14,"bail",E,"Exits a function early with an `Error`.",N,N],[14,"ensure",E,"Exits a function early with an `Error` if the condition is…",N,N],[14,"format_err",E,"Constructs an `Error` using the standard string…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[["self"]],["string"]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[],[T]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[78],E,E,2,[[["self"]],["string"]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[78],E,E,3,[[["self"]],["string"]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[],[T]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[78],E,E,4,[[["self"]],["string"]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[211],E,E,8,[[],["i"]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"as_fail",E,E,7,[[["self"]],["fail"]]],[11,"as_fail",E,E,4,[[["self"]],["fail"]]],[11,"name",E,E,2,[[["self"]],[["option",["str"]],["str"]]]],[11,"cause",E,E,2,[[["self"]],[["fail"],["option",["fail"]]]]],[11,R[1634],E,E,2,[[["self"]],[["option",[R[1634]]],[R[1634]]]]],[11,"as_ref",E,E,4,[[["self"]],["fail"]]],[11,"from",E,E,2,[[["d"]],["context"]]],[11,"from",E,E,4,[[["f"]],["error"]]],[11,"next",E,E,8,[[["self"]],[["fail"],["option",["fail"]]]]],[11,"clone",E,E,1,[[["self"]],["compat"]]],[11,R[90],E,E,0,[[],[R[1634]]]],[11,R[90],E,E,1,[[],["compat"]]],[11,"eq",E,E,1,[[["self"],["compat"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["compat"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,R[38],E,E,1,[[["self"]],["str"]]]],"p":[[3,R[2911]],[3,"Compat"],[3,"Context"],[3,R[2912]],[3,"Error"],[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"]={"doc":E,"i":[[24,"Fail","failure_derive",E,N,N]],"p":[]};
searchIndex["fake_simd"]={"doc":E,"i":[[3,"u32x4","fake_simd",E,N,N],[12,"0",E,E,0,N],[12,"1",E,E,0,N],[12,"2",E,E,0,N],[12,"3",E,E,0,N],[3,"u64x2",E,E,N,N],[12,"0",E,E,1,N],[12,"1",E,E,1,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"sub",E,E,0,[[["u32x4"]],["u32x4"]]],[11,"eq",E,E,0,[[["self"],["u32x4"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["u32x4"]],["bool"]]],[11,"add",E,E,0,[[["u32x4"]],["u32x4"]]],[11,"add",E,E,1,[[["u64x2"]],["u64x2"]]],[11,"bitand",E,E,0,[[["u32x4"]],["u32x4"]]],[11,"bitor",E,E,0,[[["u32x4"]],["u32x4"]]],[11,"bitxor",E,E,0,[[["u32x4"]],["u32x4"]]],[11,"shl",E,E,0,[[["usize"]],["u32x4"]]],[11,"shl",E,E,0,[[["u32x4"]],["u32x4"]]],[11,"shr",E,E,0,[[["usize"]],["u32x4"]]],[11,"shr",E,E,0,[[["u32x4"]],["u32x4"]]],[11,"clone",E,E,0,[[["self"]],["u32x4"]]],[11,"clone",E,E,1,[[["self"]],["u64x2"]]]],"p":[[3,"u32x4"],[3,"u64x2"]]};
searchIndex["fixed_hash"]={"doc":E,"i":[[14,"construct_fixed_hash","fixed_hash","Construct a fixed-size hash type.",N,N],[14,"impl_fixed_hash_conversions",E,"Implements lossy conversions between the given types.",N,N]],"p":[]};
searchIndex["frame_metadata"]={"doc":"Decodable variant of the RuntimeMetadata.","i":[[3,R[4054],R[4036],R[4459],N,N],[12,"name",E,E,0,N],[12,R[325],E,E,0,N],[12,R[4035],E,E,0,N],[3,R[4055],E,R[4462],N,N],[12,"name",E,E,1,N],[12,"ty",E,E,1,N],[3,"FnEncode",E,R[4515],N,N],[12,"0",E,E,2,N],[3,R[4056],E,R[4514],N,N],[12,"name",E,E,3,N],[12,"events",E,E,3,N],[3,R[4057],E,R[4513],N,N],[12,"name",E,E,4,N],[12,R[325],E,E,4,N],[12,R[4035],E,E,4,N],[3,R[4058],E,R[4531],N,N],[12,"name",E,E,5,N],[12,"modifier",E,E,5,N],[12,"ty",E,E,5,N],[12,R[90],E,E,5,N],[12,R[4035],E,E,5,N],[3,R[4059],E,R[4463],N,N],[12,"name",E,E,6,N],[12,"ty",E,E,6,N],[12,"value",E,E,6,N],[12,R[4035],E,E,6,N],[3,R[4060],E,R[4468],N,N],[12,"name",E,E,7,N],[12,R[4035],E,E,7,N],[3,R[4061],E,R[4466],N,N],[12,"0",E,E,8,N],[3,R[4062],E,R[4532],N,N],[12,"prefix",E,R[4533],9,N],[12,R[153],E,E,9,N],[3,R[4063],E,R[4530],N,N],[12,"0",E,E,10,N],[12,"1",E,E,10,N],[3,R[4064],E,"The metadata of a runtime.",N,N],[12,"modules",E,E,11,N],[3,R[4065],E,R[4528],N,N],[12,"name",E,E,12,N],[12,"storage",E,E,12,N],[12,"calls",E,E,12,N],[12,"event",E,E,12,N],[12,"constants",E,E,12,N],[12,"errors",E,E,12,N],[4,R[4066],E,R[4460],N,N],[13,"Encode",E,E,13,N],[13,"Decoded",E,E,13,N],[4,R[4067],E,R[4539],N,N],[13,R[4540],E,E,14,N],[13,R[4541],E,E,14,N],[13,R[4450],E,E,14,N],[13,"Twox128",E,E,14,N],[13,"Twox256",E,E,14,N],[13,R[4449],E,E,14,N],[4,R[4068],E,R[4534],N,N],[13,"Plain",E,E,15,N],[13,"Map",E,E,15,N],[12,"hasher",R[4037],E,15,N],[12,"key",E,E,15,N],[12,"value",E,E,15,N],[12,"is_linked",E,E,15,N],[13,"DoubleMap",R[4036],E,15,N],[12,"hasher",R[4037],E,15,N],[12,"key1",E,E,15,N],[12,"key2",E,E,15,N],[12,"value",E,E,15,N],[12,R[4537],E,E,15,N],[4,R[4069],R[4036],R[4538],N,N],[13,"Optional",E,E,16,N],[13,"Default",E,E,16,N],[4,R[4070],E,R[4516],N,N],[13,"V0",E,R[4517],17,N],[13,"V1",E,R[4518],17,N],[13,"V2",E,R[4519],17,N],[13,"V3",E,R[4520],17,N],[13,"V4",E,R[4521],17,N],[13,"V5",E,R[4522],17,N],[13,"V6",E,R[4523],17,N],[13,"V7",E,R[4524],17,N],[13,"V8",E,R[4525],17,N],[13,"V9",E,R[4526],17,N],[13,"V10",E,R[4527],17,N],[4,R[4073],E,"Enum that should fail.",N,N],[6,R[4461],E,E,N,N],[6,"ByteGetter",E,"Decode different for static lazy initiated byte value.",N,N],[6,R[4074],E,R[4529],N,N],[17,"META_RESERVED",E,"Curent prefix of metadata",N,N],[8,R[4071],E,R[4467],N,N],[10,R[939],E,E,18,[[]]],[8,R[4072],E,R[4464],N,N],[10,R[4465],E,E,19,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[292],E,E,0,[[["self"]],["usize"]]],[11,R[3525],E,E,0,[[["self"],["f"]],["r"]]],[11,"encode",E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,0,[[["w"],["self"]]]],[11,"decode",E,E,0,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,0,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,0,[[],[T]]],[11,R[3779],E,R[3776],0,[[["outer"]],[T]]],[11,R[3780],E,R[3777],0,[[["outer"]],[T]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[292],E,E,1,[[["self"]],["usize"]]],[11,R[3525],E,E,1,[[["self"],["f"]],["r"]]],[11,"encode",E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,1,[[["w"],["self"]]]],[11,"decode",E,E,1,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,1,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,1,[[],[T]]],[11,R[3779],E,R[3776],1,[[["outer"]],[T]]],[11,R[3780],E,R[3777],1,[[["outer"]],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[292],E,E,2,[[["self"]],["usize"]]],[11,R[3525],E,E,2,[[["self"],["f"]],["r"]]],[11,"encode",E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,2,[[["w"],["self"]]]],[11,R[3774],E,E,2,[[],[T]]],[11,R[3779],E,R[3776],2,[[["outer"]],[T]]],[11,R[3780],E,R[3777],2,[[["outer"]],[T]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[292],E,E,3,[[["self"]],["usize"]]],[11,R[3525],E,E,3,[[["self"],["f"]],["r"]]],[11,"encode",E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,3,[[["w"],["self"]]]],[11,"decode",E,E,3,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,3,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,3,[[],[T]]],[11,R[3779],E,R[3776],3,[[["outer"]],[T]]],[11,R[3780],E,R[3777],3,[[["outer"]],[T]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[292],E,E,4,[[["self"]],["usize"]]],[11,R[3525],E,E,4,[[["self"],["f"]],["r"]]],[11,"encode",E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,4,[[["w"],["self"]]]],[11,"decode",E,E,4,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,4,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,4,[[],[T]]],[11,R[3779],E,R[3776],4,[[["outer"]],[T]]],[11,R[3780],E,R[3777],4,[[["outer"]],[T]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[292],E,E,5,[[["self"]],["usize"]]],[11,R[3525],E,E,5,[[["self"],["f"]],["r"]]],[11,"encode",E,E,5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,5,[[["w"],["self"]]]],[11,"decode",E,E,5,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,5,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,5,[[],[T]]],[11,R[3779],E,R[3776],5,[[["outer"]],[T]]],[11,R[3780],E,R[3777],5,[[["outer"]],[T]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,R[292],E,E,6,[[["self"]],["usize"]]],[11,R[3525],E,E,6,[[["self"],["f"]],["r"]]],[11,"encode",E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,6,[[["w"],["self"]]]],[11,"decode",E,E,6,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,6,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,6,[[],[T]]],[11,R[3779],E,R[3776],6,[[["outer"]],[T]]],[11,R[3780],E,R[3777],6,[[["outer"]],[T]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,R[292],E,E,7,[[["self"]],["usize"]]],[11,R[3525],E,E,7,[[["self"],["f"]],["r"]]],[11,"encode",E,E,7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,7,[[["w"],["self"]]]],[11,"decode",E,E,7,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,7,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,7,[[],[T]]],[11,R[3779],E,R[3776],7,[[["outer"]],[T]]],[11,R[3780],E,R[3777],7,[[["outer"]],[T]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,R[292],E,E,8,[[["self"]],["usize"]]],[11,R[3525],E,E,8,[[["self"],["f"]],["r"]]],[11,"encode",E,E,8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,8,[[["w"],["self"]]]],[11,R[3774],E,E,8,[[],[T]]],[11,R[3779],E,R[3776],8,[[["outer"]],[T]]],[11,R[3780],E,R[3777],8,[[["outer"]],[T]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,R[292],E,E,9,[[["self"]],["usize"]]],[11,R[3525],E,E,9,[[["self"],["f"]],["r"]]],[11,"encode",E,E,9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,9,[[["w"],["self"]]]],[11,"decode",E,E,9,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,9,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,9,[[],[T]]],[11,R[3779],E,R[3776],9,[[["outer"]],[T]]],[11,R[3780],E,R[3777],9,[[["outer"]],[T]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,R[292],E,E,10,[[["self"]],["usize"]]],[11,R[3525],E,E,10,[[["self"],["f"]],["r"]]],[11,"encode",E,E,10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,10,[[["w"],["self"]]]],[11,"decode",E,E,10,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,10,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,10,[[],[T]]],[11,R[3779],E,R[3776],10,[[["outer"]],[T]]],[11,R[3780],E,R[3777],10,[[["outer"]],[T]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,R[292],E,E,11,[[["self"]],["usize"]]],[11,R[3525],E,E,11,[[["self"],["f"]],["r"]]],[11,"encode",E,E,11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,11,[[["w"],["self"]]]],[11,"decode",E,E,11,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,11,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,11,[[],[T]]],[11,R[3779],E,R[3776],11,[[["outer"]],[T]]],[11,R[3780],E,R[3777],11,[[["outer"]],[T]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,R[292],E,E,12,[[["self"]],["usize"]]],[11,R[3525],E,E,12,[[["self"],["f"]],["r"]]],[11,"encode",E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,12,[[["w"],["self"]]]],[11,"decode",E,E,12,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,12,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,12,[[],[T]]],[11,R[3779],E,R[3776],12,[[["outer"]],[T]]],[11,R[3780],E,R[3777],12,[[["outer"]],[T]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"],[T]]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,R[292],E,E,13,[[["self"]],["usize"]]],[11,R[3525],E,E,13,[[["self"],["f"]],["r"]]],[11,"encode",E,E,13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,13,[[["w"],["self"]]]],[11,"decode",E,E,13,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,13,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,13,[[],[T]]],[11,R[3779],E,R[3776],13,[[["outer"]],[T]]],[11,R[3780],E,R[3777],13,[[["outer"]],[T]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,R[292],E,E,14,[[["self"]],["usize"]]],[11,R[3525],E,E,14,[[["self"],["f"]],["r"]]],[11,"encode",E,E,14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,14,[[["w"],["self"]]]],[11,"decode",E,E,14,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,14,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,14,[[],[T]]],[11,R[3779],E,R[3776],14,[[["outer"]],[T]]],[11,R[3780],E,R[3777],14,[[["outer"]],[T]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,R[292],E,E,15,[[["self"]],["usize"]]],[11,R[3525],E,E,15,[[["self"],["f"]],["r"]]],[11,"encode",E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,15,[[["w"],["self"]]]],[11,"decode",E,E,15,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,15,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,15,[[],[T]]],[11,R[3779],E,R[3776],15,[[["outer"]],[T]]],[11,R[3780],E,R[3777],15,[[["outer"]],[T]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,R[292],E,E,16,[[["self"]],["usize"]]],[11,R[3525],E,E,16,[[["self"],["f"]],["r"]]],[11,"encode",E,E,16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,16,[[["w"],["self"]]]],[11,"decode",E,E,16,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,16,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,16,[[],[T]]],[11,R[3779],E,R[3776],16,[[["outer"]],[T]]],[11,R[3780],E,R[3777],16,[[["outer"]],[T]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,R[292],E,E,17,[[["self"]],["usize"]]],[11,R[3525],E,E,17,[[["self"],["f"]],["r"]]],[11,"encode",E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,17,[[["w"],["self"]]]],[11,"decode",E,E,17,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,17,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,17,[[],[T]]],[11,R[3779],E,R[3776],17,[[["outer"]],[T]]],[11,R[3780],E,R[3777],17,[[["outer"]],[T]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,R[292],E,E,20,[[["self"]],["usize"]]],[11,R[3525],E,E,20,[[["self"],["f"]],["r"]]],[11,"encode",E,E,20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,20,[[["w"],["self"]]]],[11,"decode",E,E,20,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,20,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,20,[[],[T]]],[11,R[3779],E,R[3776],20,[[["outer"]],[T]]],[11,R[3780],E,R[3777],20,[[["outer"]],[T]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,10,[[],[R[3845]]]],[11,"into",E,E,21,[[],[R[4050]]]],[11,"clone",E,E,13,[[["self"]],[R[4561]]]],[11,"clone",E,E,0,[[["self"]],[R[4038]]]],[11,"clone",E,E,1,[[["self"]],[R[4039]]]],[11,"clone",E,E,2,[[["self"]],["fnencode"]]],[11,"clone",E,E,3,[[["self"]],[R[4040]]]],[11,"clone",E,E,4,[[["self"]],[R[4041]]]],[11,"clone",E,E,5,[[["self"]],[R[4042]]]],[11,"clone",E,E,6,[[["self"]],[R[4043]]]],[11,"clone",E,E,7,[[["self"]],[R[4044]]]],[11,"clone",E,E,8,[[["self"]],[R[4045]]]],[11,"clone",E,E,14,[[["self"]],[R[4046]]]],[11,"clone",E,E,15,[[["self"]],[R[4047]]]],[11,"clone",E,E,16,[[["self"]],[R[4048]]]],[11,"clone",E,E,9,[[["self"]],[R[4049]]]],[11,"clone",E,E,12,[[["self"]],[R[4053]]]],[11,"eq",E,E,13,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[4038]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[4038]]],["bool"]]],[11,"eq",E,E,1,[[[R[4039]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[4039]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[4040]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[4040]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[4041]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[4041]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[4042]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[4042]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[4043]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[4043]]],["bool"]]],[11,"eq",E,E,7,[[[R[4044]],["self"]],["bool"]]],[11,"ne",E,E,7,[[[R[4044]],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[4045]]],["bool"]]],[11,"eq",E,E,14,[[[R[4046]],["self"]],["bool"]]],[11,"eq",E,E,15,[[[R[4047]],["self"]],["bool"]]],[11,"ne",E,E,15,[[[R[4047]],["self"]],["bool"]]],[11,"eq",E,E,16,[[[R[4048]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[4049]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[4049]]],["bool"]]],[11,"eq",E,E,10,[[[R[4050]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[4050]],["self"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[4051]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[4051]]],["bool"]]],[11,"eq",E,E,20,[[["runtimemetadatadeprecated"],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[4052]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[4052]]],["bool"]]],[11,"eq",E,E,12,[[[R[4053]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[4053]],["self"]],["bool"]]],[11,"fmt",E,E,13,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,R[132],E,E,13,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,0,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,1,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,2,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,3,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,4,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,5,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,6,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,7,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,8,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,14,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,15,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,16,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,9,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,10,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,17,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,20,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,11,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,12,[[["self"],["__s"]],[R[3]]]],[11,R[3603],E,E,13,[[["w"],["self"]]]],[11,R[3603],E,E,0,[[["self"],["encout"]]]],[11,R[3603],E,E,1,[[["self"],["encout"]]]],[11,R[3603],E,E,2,[[["w"],["self"]]]],[11,R[3603],E,E,3,[[["self"],["encout"]]]],[11,R[3603],E,E,4,[[["self"],["encout"]]]],[11,R[3603],E,E,5,[[["self"],["encout"]]]],[11,R[3603],E,E,6,[[["self"],["encout"]]]],[11,R[3603],E,E,7,[[["self"],["encout"]]]],[11,R[3603],E,E,8,[[["w"],["self"]]]],[11,R[3603],E,E,14,[[["self"],["encout"]]]],[11,R[3603],E,E,15,[[["self"],["encout"]]]],[11,R[3603],E,E,16,[[["self"],["encout"]]]],[11,R[3603],E,E,9,[[["self"],["encout"]]]],[11,R[3603],E,E,10,[[["self"],["encout"]]]],[11,R[3603],E,E,17,[[["self"],["encout"]]]],[11,R[3603],E,E,20,[[["w"],["self"]]]],[11,R[3603],E,E,11,[[["self"],["encout"]]]],[11,"encode",E,E,11,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,11,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,12,[[["self"],["encout"]]]],[11,"decode",E,E,13,[[["i"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,0,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,1,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,3,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,4,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,5,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,6,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,7,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,14,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,15,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,16,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,9,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,10,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,17,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,20,[[["i"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,11,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,12,[[["decin"]],[["error"],[R[3],["error"]]]]]],"p":[[3,R[4054]],[3,R[4055]],[3,"FnEncode"],[3,R[4056]],[3,R[4057]],[3,R[4058]],[3,R[4059]],[3,R[4060]],[3,R[4061]],[3,R[4062]],[3,R[4063]],[3,R[4064]],[3,R[4065]],[4,R[4066]],[4,R[4067]],[4,R[4068]],[4,R[4069]],[4,R[4070]],[8,R[4071]],[8,R[4072]],[4,R[4073]],[6,R[4074]]]};
searchIndex["frame_support"]={"doc":"Support code for the runtime.","i":[[6,R[4644],R[4457],R[4645],N,N],[5,"print",E,R[4635],N,[[]]],[8,R[4650],E,R[4641],N,N],[10,"print",E,R[4642],0,[[["self"]]]],[14,R[4602],E,R[4603],N,N],[14,R[4604],E,R[4605],N,N],[3,"Twox256",E,"Hash storage keys with twox 256",N,N],[3,"Twox128",E,"Hash storage keys with twox 128",N,N],[3,R[4541],E,"Hash storage keys with blake2 256",N,N],[3,R[4540],E,"Hash storage keys with blake2 128",N,N],[3,R[4449],E,"Hash storage keys with `concat(twox64(key), key)`",N,N],[3,R[4450],E,"Hash storage keys with `concat(blake2_128(key), key)`",N,N],[4,"Void",E,"The void type - it cannot exist.",N,N],[0,"debug",E,"Runtime debugging and logging utilities.",N,N],[14,"info",R[4456],R[4451],N,N],[14,"debug",E,R[4452],N,N],[14,"error",E,R[4453],N,N],[14,"trace",E,R[4454],N,N],[14,"warn",E,R[4455],N,N],[3,"Writer",E,"A target for `core::write!` macro - constructs a string in…",N,N],[3,R[4576],E,"Runtime logger implementation - `log` crate backend.",N,N],[5,"debug",E,"Print out the debuggable type.",N,[[]]],[0,"native",E,"Native-only logging.",N,N],[14,"info","frame_support::debug::native",R[4451],N,N],[14,"debug",E,R[4452],N,N],[14,"error",E,R[4453],N,N],[14,"trace",E,R[4454],N,N],[14,"warn",E,R[4455],N,N],[11,"print",R[4456],"Print the content of this `Writer` out.",1,[[["self"]]]],[11,"init",E,"Initialize the logger.",2,[[]]],[0,R[937],R[4457],"Dispatch system. Contains a macro for defining runtime…",N,N],[0,R[3],R[4458],R[4689],N,N],[4,"Result",R[4552],R[4690],N,N],[13,"Ok",E,R[4691],3,N],[13,"Err",E,R[4692],3,N],[3,"Iter",E,R[4693],N,N],[3,R[703],E,R[4694],N,N],[3,R[339],E,R[4695],N,N],[0,"fmt",R[4458],R[4652],N,N],[5,"format",R[4553],R[4653],N,[[[R[325]]],["string"]]],[3,R[668],E,R[4654],N,N],[6,"Result",E,R[4655],N,N],[8,"Write",E,R[4656],N,N],[10,R[492],E,R[4657],4,[[["str"],["self"]],[["error"],[R[3],["error"]]]]],[11,R[493],E,R[4658],4,[[["self"],["char"]],[["error"],[R[3],["error"]]]]],[11,R[417],E,R[4659],4,[[["self"],[R[325]]],[["error"],[R[3],["error"]]]]],[8,"Binary",E,R[4660],N,N],[10,"fmt",E,R[326],5,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"Octal",E,R[4661],N,N],[10,"fmt",E,R[326],6,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"Debug",E,R[4662],N,N],[10,"fmt",E,R[326],7,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[14,"Debug",E,R[4663],N,N],[8,"Display",E,R[4664],N,N],[10,"fmt",E,R[326],8,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"LowerHex",E,R[4665],N,N],[10,"fmt",E,R[326],9,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"Pointer",E,R[4666],N,N],[10,"fmt",E,R[326],10,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"UpperHex",E,R[4667],N,N],[10,"fmt",E,R[326],11,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"LowerExp",E,R[4668],N,N],[10,"fmt",E,R[326],12,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"UpperExp",E,R[4669],N,N],[10,"fmt",E,R[326],13,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[3,"Error",E,R[4670],N,N],[5,"write",E,R[4671],N,[[["write"],[R[325]]],[["error"],[R[3],["error"]]]]],[3,R[669],E,R[4672],N,N],[3,R[670],E,R[327],N,N],[3,"DebugMap",E,R[327],N,N],[3,"DebugSet",E,R[327],N,N],[3,R[671],E,R[327],N,N],[3,R[672],E,R[327],N,N],[4,R[635],E,R[4673],N,N],[13,"Left",E,R[4674],14,N],[13,"Right",E,R[4675],14,N],[13,"Center",E,R[4676],14,N],[3,"Vec",R[4458],R[375],N,N],[8,"Clone",E,R[383],N,N],[10,"clone",E,R[384],15,[[["self"]],["self"]]],[11,R[385],E,R[386],15,[[["self"],["self"]]]],[14,"Clone",E,R[387],N,N],[8,"Eq",E,R[376],N,N],[14,"Eq",E,R[377],N,N],[8,R[321],E,R[378],N,N],[10,"eq",E,R[379],16,[[["rhs"],["self"]],["bool"]]],[11,"ne",E,R[380],16,[[["rhs"],["self"]],["bool"]]],[14,R[321],E,R[381],N,N],[0,"marker",E,R[4677],N,N],[8,"Send",R[4554],R[4678],N,N],[8,"Sized",E,R[4679],N,N],[8,"Unsize",E,R[4680],N,N],[8,R[4681],E,R[342],N,N],[8,R[4682],E,R[342],N,N],[8,"Copy",E,R[4683],N,N],[8,"Sync",E,R[4684],N,N],[3,R[681],E,R[4685],N,N],[8,"Unpin",E,R[4686],N,N],[3,R[682],E,R[4687],N,N],[14,"Copy",E,R[4688],N,N],[8,"Codec",R[4458],R[4614],N,N],[8,"EncodeLike",E,R[4621],N,N],[8,"Decode",E,R[4611],N,N],[10,"decode",E,R[4612],17,[[["i"]],[[R[3],["error"]],["error"]]]],[24,"Decode",E,R[3540],N,N],[8,"Encode",E,R[4613],N,N],[11,R[292],E,R[3531],18,[[["self"]],["usize"]]],[11,R[3603],E,R[3532],18,[[["self"],[T]]]],[11,"encode",E,R[3533],18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,R[3534],18,[[["self"],["f"]],["r"]]],[24,"Encode",E,R[3539],N,N],[8,"Input",E,R[4606],N,N],[10,R[3524],E,R[4607],19,[[["self"]],[[R[3],["option","error"]],["error"],["option",["usize"]]]]],[10,"read",E,R[4608],19,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"read_byte",E,R[3528],19,[[["self"]],[["error"],[R[3],["u8","error"]],["u8"]]]],[8,"Output",E,R[4609],N,N],[10,"write",E,R[4610],20,[[["self"]]]],[11,"push_byte",E,R[3529],20,[[["self"],["u8"]]]],[11,"push",E,R[3530],20,[[["self"],["v"]]]],[8,R[4617],E,R[4618],N,N],[16,"Type",E,R[4619],21,N],[8,R[3535],E,R[4615],N,N],[16,"RefType",E,R[4616],22,N],[3,R[4054],E,R[4459],N,N],[12,"name",E,E,23,N],[12,R[325],E,E,23,N],[12,R[4035],E,E,23,N],[4,R[4066],E,R[4460],N,N],[13,"Encode",E,E,24,N],[13,"Decoded",E,E,24,N],[6,R[4461],E,E,N,N],[3,R[4055],E,R[4462],N,N],[12,"name",E,E,25,N],[12,"ty",E,E,25,N],[3,R[4059],E,R[4463],N,N],[12,"name",E,E,26,N],[12,"ty",E,E,26,N],[12,"value",E,E,26,N],[12,R[4035],E,E,26,N],[8,R[4072],E,R[4464],N,N],[10,R[4465],E,E,27,[[["self"]],[["vec",["u8"]],["u8"]]]],[3,R[4061],E,R[4466],N,N],[12,"0",E,E,28,N],[8,R[4071],E,R[4467],N,N],[10,R[939],E,E,29,[[]]],[3,R[4060],E,R[4468],N,N],[12,"name",E,E,30,N],[12,R[4035],E,E,30,N],[6,R[4551],E,R[4643],N,N],[8,R[4410],E,R[4638],N,N],[16,"Origin",E,R[4639],31,N],[16,"Trait",E,"...",31,N],[10,R[937],E,R[4640],31,[[],[[R[4330]],[R[3],[R[4330]]]]]],[4,R[4391],E,R[4627],N,N],[13,"Other",E,R[4628],32,N],[13,R[4305],E,R[4629],32,N],[13,R[4651],E,R[4630],32,N],[13,"Module",E,R[4631],32,N],[12,"index","frame_support::dispatch::DispatchError",R[4632],32,N],[12,"error",E,R[4633],32,N],[12,"message",E,R[4634],32,N],[6,R[4646],R[4458],R[4647],N,N],[4,"Never",E,"A type that cannot be instantiated.",N,N],[6,"CallableCallFor",E,E,N,N],[8,"Callable",E,"Serializable version of Dispatchable. This value can be…",N,N],[16,"Call",E,E,33,N],[8,"Parameter",E,"A type that can be used as a parameter in a dispatchable…",N,N],[8,"IsSubType",E,E,N,N],[10,"is_sub_type",E,E,34,[[["self"]],[[R[4469]],["option",[R[4469]]]]]],[0,"storage",R[4457],"Stuff to do with the runtime's storage.",N,N],[3,R[4599],R[4471],"Iterator for prefixed map.",N,N],[0,"unhashed",E,"Operation on unhashed runtime storage.",N,N],[5,"get","frame_support::storage::unhashed",R[4470],N,[[],[["decode"],["sized"],["option"]]]],[5,R[4472],E,R[4470],N,[[],[["decode"],[R[90]],["sized"]]]],[5,"get_or",E,R[4470],N,[[["decode"],["sized"]],[["decode"],["sized"]]]],[5,R[4473],E,R[4470],N,[[["fnonce"]],[["decode"],["sized"]]]],[5,"put",E,R[4474],N,[[[T]]]],[5,"take",E,R[4475],N,[[],[["decode"],["sized"],["option"]]]],[5,R[4476],E,R[4477],N,[[],[["decode"],[R[90]],["sized"]]]],[5,"take_or",E,R[4470],N,[[["decode"],["sized"]],[["decode"],["sized"]]]],[5,R[4478],E,R[4470],N,[[["fnonce"]],[["decode"],["sized"]]]],[5,"exists",E,R[4479],N,[[],["bool"]]],[5,"kill",E,R[4480],N,[[]]],[5,R[4804],E,"Ensure keys with the given `prefix` have no entries in…",N,[[]]],[5,"get_raw",E,R[4481],N,[[],[["option",["vec"]],["vec",["u8"]]]]],[5,"put_raw",E,R[4482],N,[[]]],[0,"hashed",R[4471],"Operation on runtime storage using hashed keys.",N,N],[5,"get","frame_support::storage::hashed",R[4470],N,[[["hashfn"]],["option"]]],[5,R[4472],E,R[4470],N,[[["hashfn"]],[T]]],[5,"get_or",E,R[4470],N,[[["hashfn"],[T]],[T]]],[5,R[4473],E,R[4470],N,[[["hashfn"],["f"]],[T]]],[5,"put",E,R[4474],N,[[["hashfn"],[T]]]],[5,"take",E,R[4475],N,[[["hashfn"]],["option"]]],[5,R[4476],E,R[4477],N,[[["hashfn"]],[T]]],[5,"take_or",E,R[4470],N,[[["hashfn"],[T]],[T]]],[5,R[4478],E,R[4470],N,[[["hashfn"],["f"]],[T]]],[5,"exists",E,R[4479],N,[[["hashfn"]],["bool"]]],[5,"kill",E,R[4480],N,[[["hashfn"]]]],[5,"get_raw",E,R[4481],N,[[["hashfn"]],[["option",["vec"]],["vec",["u8"]]]]],[5,"put_raw",E,R[4482],N,[[["hashfn"]]]],[0,"child",R[4471],"Operation on runtime child storages.",N,N],[4,R[4801],R[4555],R[4794],N,N],[13,"Default",E,E,35,N],[5,"get",E,R[4470],N,[[[R[3487]]],[["decode"],["sized"],["option"]]]],[5,R[4472],E,R[4470],N,[[[R[3487]]],[["decode"],[R[90]],["sized"]]]],[5,"get_or",E,R[4470],N,[[["decode"],[R[3487]],["sized"]],[["decode"],["sized"]]]],[5,R[4473],E,R[4470],N,[[["fnonce"],[R[3487]]],[["decode"],["sized"]]]],[5,"put",E,R[4474],N,[[[T],[R[3487]]]]],[5,"take",E,R[4475],N,[[[R[3487]]],[["decode"],["sized"],["option"]]]],[5,R[4476],E,R[4477],N,[[[R[3487]]],[["codec"],[R[90]],["sized"]]]],[5,"take_or",E,R[4470],N,[[["codec"],[R[3487]],["sized"]],[["codec"],["sized"]]]],[5,R[4478],E,R[4470],N,[[["fnonce"],[R[3487]]],[["codec"],["sized"]]]],[5,"exists",E,R[4479],N,[[[R[3487]]],["bool"]]],[5,R[4803],E,"Remove all `storage_key` key/values",N,[[[R[3487]]]]],[5,"kill",E,R[4480],N,[[[R[3487]]]]],[5,"get_raw",E,R[4481],N,[[[R[3487]]],[["option",["vec"]],["vec",["u8"]]]]],[5,"put_raw",E,R[4482],N,[[[R[3487]]]]],[5,"child_root",E,"Calculate current child root value.",N,[[],[["vec",["u8"]],["u8"]]]],[0,"generator",R[4471],"Generators are a set of trait on which storage traits are…",N,N],[3,R[4600],R[4556],"A key-value pair iterator for enumerable map.",N,N],[3,"Linkage",E,"Linkage data of an element (it's successor and predecessor)",N,N],[12,"previous",E,"Previous element key in storage (None for the first element)",36,N],[12,"next",E,"Next element key in storage (None for the last element)",36,N],[8,R[4501],E,"Generator for `StorageLinkedMap` used by `decl_storage`.",N,N],[16,"Query",E,R[4486],37,N],[16,"KeyFormat",E,"The family of key formats used for this map.",37,N],[10,R[4491],E,R[4492],37,[[["option"]]]],[10,R[4493],E,R[4494],37,[[],["option"]]],[11,R[4483],E,R[4484],37,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,R[4485],E,R[4569],37,[[],[["vec",["u8"]],["u8"]]]],[8,R[4577],E,"A type-abstracted key format used for a family of…",N,N],[16,"Hasher",E,"Hasher. Used for generating final key and final head key.",38,N],[10,R[4487],E,R[4488],38,[[]]],[10,R[4489],E,R[4490],38,[[]]],[10,"head_prefix",E,"Storage prefix. Used for generating final head key.",38,[[]]],[11,R[4483],E,R[4484],38,[[["k"]],[["vec",["u8"]],["u8"]]]],[11,R[4485],E,R[4570],38,[[],[["vec",["u8"]],["u8"]]]],[8,R[4578],E,"Generator for `StorageMap` used by `decl_storage`.",N,N],[16,"Query",E,R[4486],39,N],[16,"Hasher",E,"Hasher. Used for generating final key.",39,N],[10,R[4487],E,R[4488],39,[[]]],[10,R[4489],E,R[4490],39,[[]]],[10,R[4491],E,R[4492],39,[[["option"]]]],[10,R[4493],E,R[4494],39,[[],["option"]]],[11,R[4571],E,R[4484],39,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[8,R[4509],E,"Generator for `StorageDoubleMap` used by `decl_storage`.",N,N],[16,"Query",E,R[4486],40,N],[16,"Hasher1",E,"Hasher for the first key.",40,N],[16,"Hasher2",E,"Hasher for the second key.",40,N],[10,R[4487],E,R[4488],40,[[]]],[10,R[4489],E,R[4490],40,[[]]],[10,R[4491],E,R[4492],40,[[["option"]]]],[10,R[4493],E,R[4494],40,[[],["option"]]],[11,R[4572],E,R[4573],40,[[["karg1"]],[["vec",["u8"]],["u8"]]]],[11,R[4574],E,R[4484],40,[[["karg1"],["karg2"]],[["vec",["u8"]],["u8"]]]],[8,R[4495],E,"Generator for `StorageValue` used by `decl_storage`.",N,N],[16,"Query",E,R[4486],41,N],[10,R[4487],E,R[4488],41,[[]]],[10,R[4489],E,R[4490],41,[[]]],[10,R[4491],E,R[4492],41,[[["option"]]]],[10,R[4493],E,R[4494],41,[[],["option"]]],[11,R[4575],E,R[4484],41,[[]]],[8,R[4495],R[4471],"A trait for working with macro-generated storage values…",N,N],[16,"Query",E,R[4496],42,N],[10,"hashed_key",E,"Get the storage key.",42,[[]]],[10,"exists",E,R[4497],42,[[],["bool"]]],[10,"get",E,"Load the value from the provided storage instance.",42,[[]]],[10,R[4622],E,"Translate a value from some previous type (`O`) to the…",42,[[["fnonce"]],[[R[3],["option"]],["option"]]]],[10,"put",E,"Store a value under this key into the provided storage…",42,[[[R[4498]]]]],[10,"mutate",E,"Mutate the value",42,[[["fnonce"]],["r"]]],[10,"kill",E,"Clear the storage value.",42,[[]]],[10,"take",E,"Take a value from storage, removing it afterwards.",42,[[]]],[10,"append",E,"Append the given item to the value in the storage.",42,[[["items"]],[[R[3],["str"]],["str"]]]],[10,"append_or_put",E,R[4499],42,[[["items"]]]],[10,R[4508],E,R[4500],42,[[],[[R[3],["usize","str"]],["usize"],["str"]]]],[8,R[4578],E,"A strongly-typed map in storage.",N,N],[16,"Query",E,R[4496],43,N],[10,R[4510],E,"Get the storage key used to fetch a value corresponding to…",43,[[[R[4498]]],[["vec",["u8"]],["u8"]]]],[10,"exists",E,R[4497],43,[[[R[4498]]],["bool"]]],[10,"get",E,R[4502],43,[[[R[4498]]]]],[10,"swap",E,R[4503],43,[[[R[4498]]]]],[10,"insert",E,R[4504],43,[[[R[4498]],[R[4498]]]]],[10,"remove",E,R[4505],43,[[[R[4498]]]]],[10,"mutate",E,R[4506],43,[[[R[4498]],["fnonce"]],["r"]]],[10,"take",E,R[4507],43,[[[R[4498]]]]],[10,"append",E,R[4499],43,[[["items"],["keyarg"]],[[R[3],["str"]],["str"]]]],[10,R[4511],E,"Safely append the given items to the value in the storage.…",43,[[["items"],["keyarg"]]]],[10,R[4508],E,R[4500],43,[[[R[4498]]],[[R[3],["usize","str"]],["usize"],["str"]]]],[8,R[4501],E,"A strongly-typed linked map in storage.",N,N],[16,"Query",E,R[4496],44,N],[16,R[4600],E,"The type that iterates over all `(key, value)`.",44,N],[10,"exists",E,R[4497],44,[[[R[4498]]],["bool"]]],[10,"get",E,R[4502],44,[[[R[4498]]]]],[10,"swap",E,R[4503],44,[[[R[4498]]]]],[10,"insert",E,R[4504],44,[[[R[4498]],[R[4498]]]]],[10,"remove",E,R[4505],44,[[[R[4498]]]]],[10,"mutate",E,R[4506],44,[[[R[4498]],["fnonce"]],["r"]]],[10,"take",E,R[4507],44,[[[R[4498]]]]],[10,"head",E,"Return current head element.",44,[[],["option"]]],[10,R[328],E,"Enumerate all elements in the map.",44,[[]]],[10,R[4508],E,R[4500],44,[[[R[4498]]],[[R[3],["usize","str"]],["usize"],["str"]]]],[10,R[4622],E,"Translate the keys and values from some previous `(K2,…",44,[[["tv"],["tk"]],[[R[3],["option"]],["option"]]]],[8,R[4509],E,"An implementation of a map with a two keys.",N,N],[16,"Query",E,R[4486],45,N],[10,R[4510],E,E,45,[[["karg1"],["karg2"]],[["vec",["u8"]],["u8"]]]],[10,"exists",E,E,45,[[["karg1"],["karg2"]],["bool"]]],[10,"get",E,E,45,[[["karg1"],["karg2"]]]],[10,"take",E,E,45,[[["karg1"],["karg2"]]]],[10,"swap",E,"Swap the values of two key-pairs.",45,[[["xkarg2"],["ykarg1"],["xkarg1"],["ykarg2"]]]],[10,"insert",E,E,45,[[["karg1"],["varg"],["karg2"]]]],[10,"remove",E,E,45,[[["karg1"],["karg2"]]]],[10,"remove_prefix",E,E,45,[[["sized"]]]],[10,"iter_prefix",E,E,45,[[["sized"]],[R[4512]]]],[10,"mutate",E,E,45,[[["karg1"],["f"],["karg2"]],["r"]]],[10,"append",E,E,45,[[["items"],["karg1"],["karg2"]],[[R[3],["str"]],["str"]]]],[10,R[4511],E,E,45,[[["items"],["karg1"],["karg2"]]]],[10,R[4508],E,R[4500],45,[[["karg1"],["karg2"]],[[R[3],["usize","str"]],["usize"],["str"]]]],[8,R[4579],E,"Trait for maps that store all its value after a unique…",N,N],[10,R[4487],E,R[4488],46,[[]]],[10,R[4489],E,R[4490],46,[[]]],[11,"final_prefix",E,E,46,[[]]],[11,"remove_all",E,E,46,[[]]],[11,"iter",E,E,46,[[],[R[4512]]]],[0,"event",R[4457],"Macros that define an Event types. Events can be used to…",N,N],[3,R[4057],R[4557],R[4513],N,N],[12,"name",E,E,47,N],[12,R[325],E,E,47,N],[12,R[4035],E,E,47,N],[4,R[4066],E,R[4460],N,N],[13,"Encode",E,E,24,N],[13,"Decoded",E,E,24,N],[3,R[4056],E,R[4514],N,N],[12,"name",E,E,48,N],[12,"events",E,E,48,N],[3,"FnEncode",E,R[4515],N,N],[12,"0",E,E,49,N],[0,R[939],R[4457],E,N,N],[4,R[4066],R[4535],R[4460],N,N],[13,"Encode",E,E,24,N],[13,"Decoded",E,E,24,N],[3,"FnEncode",E,R[4515],N,N],[12,"0",E,E,49,N],[4,R[4070],E,R[4516],N,N],[13,"V0",E,R[4517],50,N],[13,"V1",E,R[4518],50,N],[13,"V2",E,R[4519],50,N],[13,"V3",E,R[4520],50,N],[13,"V4",E,R[4521],50,N],[13,"V5",E,R[4522],50,N],[13,"V6",E,R[4523],50,N],[13,"V7",E,R[4524],50,N],[13,"V8",E,R[4525],50,N],[13,"V9",E,R[4526],50,N],[13,"V10",E,R[4527],50,N],[3,R[4065],E,R[4528],N,N],[12,"name",E,E,51,N],[12,"storage",E,E,51,N],[12,"calls",E,E,51,N],[12,"event",E,E,51,N],[12,"constants",E,E,51,N],[12,"errors",E,E,51,N],[6,R[4074],E,R[4529],N,N],[3,R[4061],E,R[4466],N,N],[12,"0",E,E,28,N],[3,R[4063],E,R[4530],N,N],[12,"0",E,E,52,N],[12,"1",E,E,52,N],[3,R[4058],E,R[4531],N,N],[12,"name",E,E,53,N],[12,"modifier",E,E,53,N],[12,"ty",E,E,53,N],[12,R[90],E,E,53,N],[12,R[4035],E,E,53,N],[3,R[4062],E,R[4532],N,N],[12,"prefix",E,R[4533],54,N],[12,R[153],E,E,54,N],[4,R[4068],E,R[4534],N,N],[13,"Plain",E,E,55,N],[13,"Map",E,E,55,N],[12,"hasher",R[4536],E,55,N],[12,"key",E,E,55,N],[12,"value",E,E,55,N],[12,"is_linked",E,E,55,N],[13,"DoubleMap",R[4535],E,55,N],[12,"hasher",R[4536],E,55,N],[12,"key1",E,E,55,N],[12,"key2",E,E,55,N],[12,"value",E,E,55,N],[12,R[4537],E,E,55,N],[4,R[4069],R[4535],R[4538],N,N],[13,"Optional",E,E,56,N],[13,"Default",E,E,56,N],[8,R[4072],E,R[4464],N,N],[10,R[4465],E,E,27,[[["self"]],[["vec",["u8"]],["u8"]]]],[4,R[4067],E,R[4539],N,N],[13,R[4540],E,E,57,N],[13,R[4541],E,E,57,N],[13,R[4450],E,E,57,N],[13,"Twox128",E,E,57,N],[13,"Twox256",E,E,57,N],[13,R[4449],E,E,57,N],[8,R[4071],E,R[4467],N,N],[10,R[939],E,E,29,[[]]],[0,"inherent",R[4457],E,N,N],[0,"unsigned",E,E,N,N],[0,"error",E,"Macro for declaring a module error.",N,N],[0,"traits",E,"Traits for SRML.",N,N],[3,R[4601],R[4558],"Split an unbalanced amount two ways between a common…",N,N],[3,R[4594],E,"Reasons for moving funds out of an account.",N,N],[4,R[4580],E,"Outcome of a balance update.",N,N],[13,"Updated",E,"Account balance was simply updated.",58,N],[13,"AccountKilled",E,"The update led to killing the account.",58,N],[4,R[4581],E,"Simple boolean for whether an account needs to be kept in…",N,N],[13,"KeepAlive",E,"Operation must not result in the account going out of…",59,N],[13,"AllowDeath",E,"Operation may result in account going out of existence.",59,N],[4,R[4582],E,"Either a positive or a negative imbalance.",N,N],[13,"Positive",E,"A positive imbalance (funds have been created but none…",60,N],[13,"Negative",E,"A negative imbalance (funds have been destroyed but none…",60,N],[4,R[4583],E,"Reason for moving funds out of an account.",N,N],[13,"TransactionPayment",E,"In order to pay for (system) transaction costs.",61,N],[13,"Transfer",E,"In order to transfer ownership.",61,N],[13,"Reserve",E,"In order to reserve some funds for a later return or…",61,N],[13,"Fee",E,"In order to pay some other (higher-level) fees.",61,N],[13,"Tip",E,"In order to tip a validator for transaction inclusion.",61,N],[6,"LockIdentifier",E,"An identifier for a lock. Used for disambiguating…",N,N],[8,"Len",E,"Anything that can have a `::len()` method.",N,N],[10,"len",E,"Return the length of data type.",62,[[["self"]],["usize"]]],[8,"Get",E,"A trait for querying a single fixed value from a type.",N,N],[10,"get",E,"Return a constant value.",63,[[],[T]]],[8,"Contains",E,"A trait for querying whether a type can be said to…",N,N],[10,R[114],E,"Return `true` if this \"contains\" the given value `t`.",64,[[[T]],["bool"]]],[8,R[4584],E,"The account with the given id was killed.",N,N],[10,"on_free_balance_zero",E,"The account was the given id was killed.",65,[[[R[4302]]]]],[8,"FindAuthor",E,"A trait for finding the author of a block header based on…",N,N],[10,"find_author",E,"Find the author of a block based on the pre-runtime digests.",66,[[["i"]],["option"]]],[8,"VerifySeal",E,"A trait for verifying the seal of a header and returning…",N,N],[10,"verify_seal",E,"Verify a header and return the author, if any.",67,[[["header"]],[["str"],["option"],[R[3],["option","str"]]]]],[8,R[4585],E,"Something which can compute and check proofs of a…",N,N],[16,"Proof",E,"The proof of membership itself.",68,N],[16,"IdentificationTuple",E,"The full identification of a key owner and the stash…",68,N],[10,"prove",E,"Prove membership of a key owner in the current block-state.",68,[[["key"]],["option"]]],[10,"check_proof",E,"Check a proof of membership on-chain. Return `Some` iff…",68,[[["key"]],["option"]]],[8,R[4586],E,"Handler for when some currency \"account\" decreased in…",N,N],[11,"on_unbalanced",E,"Handler for some imbalance. Infallible.",69,[[["imbalance"]]]],[10,R[4562],E,"Actually handle a non-zero imbalance. You probably want to…",69,[[["imbalance"]]]],[8,"TryDrop",E,"A type for which some values make sense to be able to drop…",N,N],[10,"try_drop",E,"Drop an instance cleanly. Only works if its value…",70,[[],[R[3]]]],[8,"Imbalance",E,"A trait for a not-quite Linear Type that tracks an…",N,N],[16,"Opposite",E,"The oppositely imbalanced type. They come in pairs.",71,N],[10,"zero",E,"The zero imbalance. Can be destroyed with `drop_zero`.",71,[[],["self"]]],[10,"drop_zero",E,"Drop an instance cleanly. Only works if its `self.value()`…",71,[[],[R[3]]]],[10,"split",E,"Consume `self` and return two independent instances; the…",71,[[["balance"]]]],[10,"merge",E,R[4550],71,[[],["self"]]],[11,"maybe_merge",E,"Consume `self` and maybe an `other` to return a new…",71,[[["option"]],["self"]]],[10,"subsume",E,"Consume an `other` to mutate `self` into a new instance…",71,[[["self"]]]],[11,"maybe_subsume",E,"Maybe consume an `other` to mutate `self` into a new…",71,[[["option"],["self"]]]],[10,"offset",E,"Consume self and along with an opposite counterpart to…",71,[[],[R[3]]]],[10,"peek",E,"The raw value of self.",71,[[["self"]],["balance"]]],[8,"Currency",E,"Abstraction over a fungible assets system.",N,N],[16,"Balance",E,"The balance of an account.",72,N],[16,"PositiveImbalance",E,R[4542],72,N],[16,"NegativeImbalance",E,R[4542],72,N],[10,"total_balance",E,"The combined balance of `who`.",72,[[[R[4302]]]]],[10,"can_slash",E,"Same result as `slash(who, value)` (but without the…",72,[[[R[4302]]],["bool"]]],[10,"total_issuance",E,"The total amount of issuance in the system.",72,[[]]],[10,"minimum_balance",E,"The minimum balance any single account may have. This is…",72,[[]]],[10,"burn",E,"Reduce the total issuance by `amount` and return the…",72,[[]]],[10,"issue",E,"Increase the total issuance by `amount` and return the…",72,[[]]],[10,"free_balance",E,"The 'free' balance of a given account.",72,[[[R[4302]]]]],[10,"ensure_can_withdraw",E,"Returns `Ok` iff the account is able to make a withdrawal…",72,[[[R[4302]],[R[4545]]],[R[4543]]]],[10,"transfer",E,"Transfer some liquid free balance to another staker.",72,[[[R[4302]],[R[4546]]],[R[4543]]]],[10,"slash",E,"Deducts up to `value` from the combined balance of `who`,…",72,[[[R[4302]]]]],[10,"deposit_into_existing",E,"Mints `value` to the free balance of `who`.",72,[[[R[4302]]],[[R[3],[R[4330]]],[R[4330]]]]],[11,"resolve_into_existing",E,R[4544],72,[[[R[4302]]],[R[3]]]],[10,"deposit_creating",E,"Adds up to `value` to the free balance of `who`. If `who`…",72,[[[R[4302]]]]],[11,"resolve_creating",E,R[4544],72,[[[R[4302]]]]],[10,"withdraw",E,"Removes some free balance from `who` account for `reason`…",72,[[[R[4302]],[R[4545]],[R[4546]]],[[R[4330]],[R[3],[R[4330]]]]]],[11,"settle",E,"Similar to withdraw, only accepts a `PositiveImbalance`…",72,[[[R[4302]],[R[4545]],[R[4546]]],[R[3]]]],[10,"make_free_balance_be",E,"Ensure an account's free balance equals some value; this…",72,[[[R[4302]]]]],[8,R[4587],E,"A currency where funds can be reserved from the user.",N,N],[10,"can_reserve",E,"Same result as `reserve(who, value)` (but without the…",73,[[[R[4302]]],["bool"]]],[10,"slash_reserved",E,"Deducts up to `value` from reserved balance of `who`. This…",73,[[[R[4302]]]]],[10,"reserved_balance",E,"The amount of the balance of a given account that is…",73,[[[R[4302]]]]],[10,"reserve",E,"Moves `value` from balance to reserved balance.",73,[[[R[4302]]],[R[4543]]]],[10,"unreserve",E,"Moves up to `value` from reserved balance to free balance.…",73,[[[R[4302]]]]],[10,"repatriate_reserved",E,"Moves up to `value` from reserved balance of account…",73,[[[R[4302]]],[[R[4330]],[R[3],[R[4330]]]]]],[8,R[4588],E,"A currency whose accounts can have liquidity restrictions.",N,N],[16,"Moment",E,R[4548],74,N],[10,"set_lock",E,"Create a new balance lock on account `who`.",74,[[[R[4302]],[R[4545]],[R[4547]]]]],[10,"extend_lock",E,"Changes a balance lock (selected by `id`) so that it…",74,[[[R[4302]],[R[4545]],[R[4547]]]]],[10,"remove_lock",E,"Remove an existing lock.",74,[[[R[4547]],[R[4302]]]]],[8,R[4589],E,"A currency whose accounts can have balances which vest…",N,N],[16,"Moment",E,R[4548],75,N],[10,"vesting_balance",E,"Get the amount that is currently being vested and cannot…",75,[[[R[4302]]]]],[10,"add_vesting_schedule",E,"Adds a vesting schedule to a given account.",75,[[[R[4302]]],[R[4543]]]],[10,"remove_vesting_schedule",E,"Remove a vesting schedule for a given account.",75,[[[R[4302]]]]],[8,"Time",E,E,N,N],[16,"Moment",E,E,76,N],[10,"now",E,E,76,[[]]],[8,R[4590],E,"Trait for type that can handle incremental changes to a…",N,N],[11,"change_members",E,"A number of members `incoming` just joined the set and…",77,[[["vec"]]]],[10,"change_members_sorted",E,"A number of members `_incoming` just joined the set and…",77,[[]]],[11,"set_members_sorted",E,R[4549],77,[[]]],[11,"compute_members_diff",E,R[4549],77,[[]]],[8,R[4591],E,"Trait for type that can handle the initialization of…",N,N],[10,"initialize_members",E,"Initialize the members to the given `members`.",78,[[]]],[8,R[4624],E,E,N,N],[10,"random",E,"Get a \"random\" value",79,[[],["output"]]],[11,R[3812],E,"Get the basic random seed.",79,[[],["output"]]],[8,R[4592],E,"Implementors of this trait provide information about…",N,N],[10,"is_registered",E,"Returns true if the provided validator ID has been…",80,[[["validatorid"]],["bool"]]],[8,R[4593],E,"Something that can convert a given module into the index…",N,N],[10,"module_to_index",E,"Convert the given module `M` into an index.",81,[[],[["option",["usize"]],["usize"]]]],[11,"zero",E,E,60,[[],["self"]]],[11,"drop_zero",E,E,60,[[],[R[3]]]],[11,"merge",E,R[4550],60,[[],["self"]]],[11,"none",E,"Create a new mask with all flags unset.",82,[[],["self"]]],[11,"all",E,"Create a new mask with all flags set.",82,[[],["self"]]],[11,"set",E,"Set all `other` flags.",82,[[["self"],[T]]]],[11,"unset",E,"Unset all `other` flags.",82,[[["self"],[T]]]],[11,"toggle",E,"Toggle all `other` flags.",82,[[["self"],[T]]]],[11,R[114],E,"Check if the mask contains all of `other`'s flags.",82,[[["self"],[T]],["bool"]]],[11,"intersects",E,"Check if the mask has common flags with `other`.",82,[[["self"],[T]],["bool"]]],[11,"is_all",E,"Check if all flags are set.",82,[[["self"]],["bool"]]],[11,"is_none",E,"Check if all flags are unset.",82,[[["self"]],["bool"]]],[11,"except",E,"Choose all variants except for `one`.",82,[[[R[4565]]],[R[4545]]]],[0,"weights",R[4457],"Primitives for transaction weighting.",N,N],[6,R[4551],R[4559],"Re-export priority as type Priority for a transaction.…",N,N],[3,R[4296],E,"A bundle of static information collected from the…",N,N],[12,"weight",E,"Weight of this transaction.",83,N],[12,"class",E,"Class of this transaction.",83,N],[12,"pays_fee",E,"Does this transaction pay fees.",83,N],[4,R[4595],E,"A generalized group of dispatch types. This is only…",N,N],[13,"Normal",E,"A normal dispatch.",84,N],[13,"Operational",E,"An operational dispatch.",84,N],[4,R[4596],E,"Default type used with the `#[weight = x]` attribute in a…",N,N],[13,"FixedNormal",E,"A normal dispatch with fixed weight.",85,N],[13,"MaxNormal",E,"A normal dispatch with the maximum weight.",85,N],[13,"FreeNormal",E,"A normal dispatch with no weight.",85,N],[13,"FixedOperational",E,"An operational dispatch with fixed weight.",85,N],[13,"MaxOperational",E,"An operational dispatch with the maximum weight.",85,N],[13,"FreeOperational",E,"An operational dispatch with no weight.",85,N],[6,"Weight",E,"Numeric range of a transaction weight.",N,N],[8,"WeighData",E,"Means of weighing some particular kind of data (`T`).",N,N],[10,"weigh_data",E,"Weigh the data `T` given by `target`. When implementing…",86,[[["self"],[T]],["weight"]]],[8,R[4597],E,"Means of classifying a dispatchable function.",N,N],[10,R[4563],E,"Classify the dispatch function based on input data…",87,[[["self"],[T]],[R[4564]]]],[8,"WeighBlock",E,"Means of determining the weight of a block's lifecycle…",N,N],[11,R[4637],E,"Return the weight of the block's on_initialize hook.",88,[[[R[4081]]],["weight"]]],[11,R[4636],E,"Return the weight of the block's on_finalize hook.",88,[[[R[4081]]],["weight"]]],[8,"PaysFee",E,"Indicates if dispatch function should pay fees or not. If…",N,N],[11,"pays_fee",E,E,89,[[["self"]],["bool"]]],[8,R[4598],E,"A `Dispatchable` function (aka transaction) that can carry…",N,N],[10,R[4826],E,"Return a `DispatchInfo`, containing relevant information…",90,[[["self"]],[R[4566]]]],[11,"zero",E,"An additive zero variant of SimpleDispatchInfo.",85,[[],["self"]]],[8,"Hashable",R[4457],E,N,N],[10,R[4625],E,E,91,[[["self"]]]],[10,R[4626],E,E,91,[[["self"]]]],[10,R[4814],E,E,91,[[["self"]],[["vec",["u8"]],["u8"]]]],[10,R[4816],E,E,91,[[["self"]]]],[10,R[4817],E,E,91,[[["self"]]]],[10,R[4815],E,E,91,[[["self"]],[["vec",["u8"]],["u8"]]]],[14,"runtime_print",E,"Print out a formatted message.",N,N],[14,"decl_module",E,"Declares a `Module` struct and a `Call` enum, which…",N,N],[14,"impl_outer_dispatch",E,"Implement a meta-dispatch module to dispatch to other…",N,N],[14,"decl_event",E,"Implement the `Event` for a module.",N,N],[14,"impl_outer_event",E,"Constructs an Event type for a runtime. This is usually…",N,N],[14,"impl_outer_origin",E,"Constructs an Origin type for a runtime. This is usually…",N,N],[14,"impl_runtime_metadata",E,"Implements the metadata support for the given runtime and…",N,N],[14,"impl_outer_inherent",E,"Implement the outer inherent. All given modules need to…",N,N],[14,"impl_outer_validate_unsigned",E,"Implement `ValidateUnsigned` for `Runtime`. All given…",N,N],[14,"decl_error",E,"Declare an error type for a runtime module.",N,N],[14,"parameter_types",E,"Macro for easily creating a new implementation of the…",N,N],[14,"fail",E,"Return Err of the expression: `return Err($expression);`.",N,N],[14,"ensure",E,"Evaluate `$x:expr` and if not true return `Err($y:expr)`.",N,N],[14,"assert_noop",E,"Evaluate an expression, assert it returns an expected…",N,N],[14,"assert_err",E,"Panic if an expression doesn't evaluate to an `Err`.",N,N],[14,"assert_ok",E,"Panic if an expression doesn't evaluate to `Ok`.",N,N],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[20],E,E,92,[[[U]],[R[3]]]],[11,R[21],E,E,92,[[],[R[3]]]],[11,R[45],E,E,92,[[["self"]],[T]]],[11,R[22],E,E,92,[[["self"]],[T]]],[11,R[26],E,E,92,[[["self"]],[R[46]]]],[11,R[3774],E,E,92,[[],[T]]],[11,R[3779],E,R[3776],92,[[["outer"]],[T]]],[11,R[3780],E,R[3777],92,[[["outer"]],[T]]],[11,"vzip",E,E,92,[[],["v"]]],[11,R[3601],E,E,92,[[],[T]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[20],E,E,93,[[[U]],[R[3]]]],[11,R[21],E,E,93,[[],[R[3]]]],[11,R[45],E,E,93,[[["self"]],[T]]],[11,R[22],E,E,93,[[["self"]],[T]]],[11,R[26],E,E,93,[[["self"]],[R[46]]]],[11,R[3774],E,E,93,[[],[T]]],[11,R[3779],E,R[3776],93,[[["outer"]],[T]]],[11,R[3780],E,R[3777],93,[[["outer"]],[T]]],[11,"vzip",E,E,93,[[],["v"]]],[11,R[3601],E,E,93,[[],[T]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[20],E,E,94,[[[U]],[R[3]]]],[11,R[21],E,E,94,[[],[R[3]]]],[11,R[45],E,E,94,[[["self"]],[T]]],[11,R[22],E,E,94,[[["self"]],[T]]],[11,R[26],E,E,94,[[["self"]],[R[46]]]],[11,R[3774],E,E,94,[[],[T]]],[11,R[3779],E,R[3776],94,[[["outer"]],[T]]],[11,R[3780],E,R[3777],94,[[["outer"]],[T]]],[11,"vzip",E,E,94,[[],["v"]]],[11,R[3601],E,E,94,[[],[T]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[20],E,E,95,[[[U]],[R[3]]]],[11,R[21],E,E,95,[[],[R[3]]]],[11,R[45],E,E,95,[[["self"]],[T]]],[11,R[22],E,E,95,[[["self"]],[T]]],[11,R[26],E,E,95,[[["self"]],[R[46]]]],[11,R[3774],E,E,95,[[],[T]]],[11,R[3779],E,R[3776],95,[[["outer"]],[T]]],[11,R[3780],E,R[3777],95,[[["outer"]],[T]]],[11,"vzip",E,E,95,[[],["v"]]],[11,R[3601],E,E,95,[[],[T]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[20],E,E,96,[[[U]],[R[3]]]],[11,R[21],E,E,96,[[],[R[3]]]],[11,R[45],E,E,96,[[["self"]],[T]]],[11,R[22],E,E,96,[[["self"]],[T]]],[11,R[26],E,E,96,[[["self"]],[R[46]]]],[11,R[3774],E,E,96,[[],[T]]],[11,R[3779],E,R[3776],96,[[["outer"]],[T]]],[11,R[3780],E,R[3777],96,[[["outer"]],[T]]],[11,"vzip",E,E,96,[[],["v"]]],[11,R[3601],E,E,96,[[],[T]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[20],E,E,97,[[[U]],[R[3]]]],[11,R[21],E,E,97,[[],[R[3]]]],[11,R[45],E,E,97,[[["self"]],[T]]],[11,R[22],E,E,97,[[["self"]],[T]]],[11,R[26],E,E,97,[[["self"]],[R[46]]]],[11,R[3774],E,E,97,[[],[T]]],[11,R[3779],E,R[3776],97,[[["outer"]],[T]]],[11,R[3780],E,R[3777],97,[[["outer"]],[T]]],[11,"vzip",E,E,97,[[],["v"]]],[11,R[3601],E,E,97,[[],[T]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[24],E,E,98,[[["self"]],[T]]],[11,R[25],E,E,98,[[["self"],[T]]]],[11,R[20],E,E,98,[[[U]],[R[3]]]],[11,R[21],E,E,98,[[],[R[3]]]],[11,R[45],E,E,98,[[["self"]],[T]]],[11,R[22],E,E,98,[[["self"]],[T]]],[11,R[26],E,E,98,[[["self"]],[R[46]]]],[11,R[3774],E,E,98,[[],[T]]],[11,R[3779],E,R[3776],98,[[["outer"]],[T]]],[11,R[3780],E,R[3777],98,[[["outer"]],[T]]],[11,"vzip",E,E,98,[[],["v"]]],[11,R[3601],E,E,98,[[],[T]]],[11,"into",R[4456],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[3774],E,E,1,[[],[T]]],[11,R[3779],E,R[3776],1,[[["outer"]],[T]]],[11,R[3780],E,R[3777],1,[[["outer"]],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[2628],E,E,1,[[]]],[11,R[3601],E,E,1,[[],[T]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[3774],E,E,2,[[],[T]]],[11,R[3779],E,R[3776],2,[[["outer"]],[T]]],[11,R[3780],E,R[3777],2,[[["outer"]],[T]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[3601],E,E,2,[[],[T]]],[11,"len",R[4552],E,3,[[["self"]],["usize"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[211],E,E,3,[[],["i"]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[292],E,E,3,[[["self"]],["usize"]]],[11,R[3525],E,E,3,[[["self"],["f"]],["r"]]],[11,"encode",E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,3,[[["w"],["self"]]]],[11,"decode",E,E,3,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,3,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,3,[[],[T]]],[11,R[3779],E,R[3776],3,[[["outer"]],[T]]],[11,R[3780],E,R[3777],3,[[["outer"]],[T]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[3708],E,E,3,[[[R[3703]]],[["string"],[R[3],["string"]]]]],[11,R[3709],E,E,3,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3601],E,E,3,[[],[T]]],[11,"len",E,E,99,[[["self"]],["usize"]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[211],E,E,99,[[],["i"]]],[11,R[24],E,E,99,[[["self"]],[T]]],[11,R[25],E,E,99,[[["self"],[T]]]],[11,R[20],E,E,99,[[[U]],[R[3]]]],[11,R[21],E,E,99,[[],[R[3]]]],[11,R[45],E,E,99,[[["self"]],[T]]],[11,R[22],E,E,99,[[["self"]],[T]]],[11,R[26],E,E,99,[[["self"]],[R[46]]]],[11,R[3774],E,E,99,[[],[T]]],[11,R[3779],E,R[3776],99,[[["outer"]],[T]]],[11,R[3780],E,R[3777],99,[[["outer"]],[T]]],[11,"vzip",E,E,99,[[],["v"]]],[11,R[3601],E,E,99,[[],[T]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[211],E,E,100,[[],["i"]]],[11,R[20],E,E,100,[[[U]],[R[3]]]],[11,R[21],E,E,100,[[],[R[3]]]],[11,R[45],E,E,100,[[["self"]],[T]]],[11,R[22],E,E,100,[[["self"]],[T]]],[11,R[26],E,E,100,[[["self"]],[R[46]]]],[11,R[3774],E,E,100,[[],[T]]],[11,R[3779],E,R[3776],100,[[["outer"]],[T]]],[11,R[3780],E,R[3777],100,[[["outer"]],[T]]],[11,"vzip",E,E,100,[[],["v"]]],[11,R[3601],E,E,100,[[],[T]]],[11,"len",E,E,101,[[["self"]],["usize"]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[211],E,E,101,[[],["i"]]],[11,R[24],E,E,101,[[["self"]],[T]]],[11,R[25],E,E,101,[[["self"],[T]]]],[11,R[20],E,E,101,[[[U]],[R[3]]]],[11,R[21],E,E,101,[[],[R[3]]]],[11,R[45],E,E,101,[[["self"]],[T]]],[11,R[22],E,E,101,[[["self"]],[T]]],[11,R[26],E,E,101,[[["self"]],[R[46]]]],[11,R[3774],E,E,101,[[],[T]]],[11,R[3779],E,R[3776],101,[[["outer"]],[T]]],[11,R[3780],E,R[3777],101,[[["outer"]],[T]]],[11,"vzip",E,E,101,[[],["v"]]],[11,R[3601],E,E,101,[[],[T]]],[11,"into",R[4553],E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[20],E,E,102,[[[U]],[R[3]]]],[11,R[21],E,E,102,[[],[R[3]]]],[11,R[45],E,E,102,[[["self"]],[T]]],[11,R[22],E,E,102,[[["self"]],[T]]],[11,R[26],E,E,102,[[["self"]],[R[46]]]],[11,R[3774],E,E,102,[[],[T]]],[11,R[3779],E,R[3776],102,[[["outer"]],[T]]],[11,R[3780],E,R[3777],102,[[["outer"]],[T]]],[11,"vzip",E,E,102,[[],["v"]]],[11,R[3601],E,E,102,[[],[T]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[24],E,E,103,[[["self"]],[T]]],[11,R[25],E,E,103,[[["self"],[T]]]],[11,R[78],E,E,103,[[["self"]],["string"]]],[11,R[20],E,E,103,[[[U]],[R[3]]]],[11,R[21],E,E,103,[[],[R[3]]]],[11,R[45],E,E,103,[[["self"]],[T]]],[11,R[22],E,E,103,[[["self"]],[T]]],[11,R[26],E,E,103,[[["self"]],[R[46]]]],[11,R[3774],E,E,103,[[],[T]]],[11,R[3779],E,R[3776],103,[[["outer"]],[T]]],[11,R[3780],E,R[3777],103,[[["outer"]],[T]]],[11,"vzip",E,E,103,[[],["v"]]],[11,"clear",E,E,103,[[["self"]]]],[11,R[2628],E,E,103,[[]]],[11,"as_fail",E,E,103,[[["self"]],["fail"]]],[11,R[4308],E,E,103,[[["self"]],["bool"]]],[11,"clear",E,E,103,[[],[T]]],[11,R[3601],E,E,103,[[],[T]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[24],E,E,104,[[["self"]],[T]]],[11,R[25],E,E,104,[[["self"],[T]]]],[11,R[78],E,E,104,[[["self"]],["string"]]],[11,R[20],E,E,104,[[[U]],[R[3]]]],[11,R[21],E,E,104,[[],[R[3]]]],[11,R[45],E,E,104,[[["self"]],[T]]],[11,R[22],E,E,104,[[["self"]],[T]]],[11,R[26],E,E,104,[[["self"]],[R[46]]]],[11,R[3774],E,E,104,[[],[T]]],[11,R[3779],E,R[3776],104,[[["outer"]],[T]]],[11,R[3780],E,R[3777],104,[[["outer"]],[T]]],[11,"vzip",E,E,104,[[],["v"]]],[11,R[3601],E,E,104,[[],[T]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[20],E,E,105,[[[U]],[R[3]]]],[11,R[21],E,E,105,[[],[R[3]]]],[11,R[45],E,E,105,[[["self"]],[T]]],[11,R[22],E,E,105,[[["self"]],[T]]],[11,R[26],E,E,105,[[["self"]],[R[46]]]],[11,R[3774],E,E,105,[[],[T]]],[11,R[3779],E,R[3776],105,[[["outer"]],[T]]],[11,R[3780],E,R[3777],105,[[["outer"]],[T]]],[11,"vzip",E,E,105,[[],["v"]]],[11,R[3601],E,E,105,[[],[T]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[20],E,E,106,[[[U]],[R[3]]]],[11,R[21],E,E,106,[[],[R[3]]]],[11,R[45],E,E,106,[[["self"]],[T]]],[11,R[22],E,E,106,[[["self"]],[T]]],[11,R[26],E,E,106,[[["self"]],[R[46]]]],[11,R[3190],E,E,106,[[["self"],["field"],["debug"]]]],[11,R[3774],E,E,106,[[],[T]]],[11,R[3779],E,R[3776],106,[[["outer"]],[T]]],[11,R[3780],E,R[3777],106,[[["outer"]],[T]]],[11,"vzip",E,E,106,[[],["v"]]],[11,R[3601],E,E,106,[[],[T]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[20],E,E,107,[[[U]],[R[3]]]],[11,R[21],E,E,107,[[],[R[3]]]],[11,R[45],E,E,107,[[["self"]],[T]]],[11,R[22],E,E,107,[[["self"]],[T]]],[11,R[26],E,E,107,[[["self"]],[R[46]]]],[11,R[3774],E,E,107,[[],[T]]],[11,R[3779],E,R[3776],107,[[["outer"]],[T]]],[11,R[3780],E,R[3777],107,[[["outer"]],[T]]],[11,"vzip",E,E,107,[[],["v"]]],[11,R[3601],E,E,107,[[],[T]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[20],E,E,108,[[[U]],[R[3]]]],[11,R[21],E,E,108,[[],[R[3]]]],[11,R[45],E,E,108,[[["self"]],[T]]],[11,R[22],E,E,108,[[["self"]],[T]]],[11,R[26],E,E,108,[[["self"]],[R[46]]]],[11,R[3190],E,E,108,[[["self"],["field"],["debug"]]]],[11,R[3774],E,E,108,[[],[T]]],[11,R[3779],E,R[3776],108,[[["outer"]],[T]]],[11,R[3780],E,R[3777],108,[[["outer"]],[T]]],[11,"vzip",E,E,108,[[],["v"]]],[11,R[3601],E,E,108,[[],[T]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[20],E,E,109,[[[U]],[R[3]]]],[11,R[21],E,E,109,[[],[R[3]]]],[11,R[45],E,E,109,[[["self"]],[T]]],[11,R[22],E,E,109,[[["self"]],[T]]],[11,R[26],E,E,109,[[["self"]],[R[46]]]],[11,R[3774],E,E,109,[[],[T]]],[11,R[3779],E,R[3776],109,[[["outer"]],[T]]],[11,R[3780],E,R[3777],109,[[["outer"]],[T]]],[11,"vzip",E,E,109,[[],["v"]]],[11,R[3601],E,E,109,[[],[T]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,R[3774],E,E,14,[[],[T]]],[11,R[3779],E,R[3776],14,[[["outer"]],[T]]],[11,R[3780],E,R[3777],14,[[["outer"]],[T]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[3601],E,E,14,[[],[T]]],[11,"len",R[4458],E,110,[[["self"]],["usize"]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[211],E,E,110,[[],["i"]]],[11,R[24],E,E,110,[[["self"]],[T]]],[11,R[25],E,E,110,[[["self"],[T]]]],[11,R[20],E,E,110,[[[U]],[R[3]]]],[11,R[21],E,E,110,[[],[R[3]]]],[11,R[45],E,E,110,[[["self"]],[T]]],[11,R[22],E,E,110,[[["self"]],[T]]],[11,R[26],E,E,110,[[["self"]],[R[46]]]],[11,"write",E,E,110,[[["self"]]]],[11,R[292],E,E,110,[[["self"]],["usize"]]],[11,R[3525],E,E,110,[[["self"],["f"]],["r"]]],[11,"encode",E,E,110,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,110,[[["w"],["self"]]]],[11,"decode",E,E,110,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"and",E,E,110,[[["v"]],[T]]],[11,R[3604],E,E,110,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,110,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,110,[[],[T]]],[11,"zeroize",E,E,110,[[["self"]]]],[11,R[3779],E,R[3776],110,[[["outer"]],[T]]],[11,R[3780],E,R[3777],110,[[["outer"]],[T]]],[11,"vzip",E,E,110,[[],["v"]]],[11,R[3708],E,E,110,[[[R[3703]]],[["string"],[R[3],["string"]]]]],[11,R[3709],E,E,110,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,110,[[["self"]]]],[11,R[2628],E,E,110,[[]]],[11,R[4184],E,E,110,[[["self"]],[U]]],[11,R[4183],E,E,110,[[["self"]],[U]]],[11,R[4308],E,E,110,[[["self"]],["bool"]]],[11,"clear",E,E,110,[[],[T]]],[11,R[3601],E,E,110,[[],[T]]],[11,"into",R[4554],E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[24],E,E,111,[[["self"]],[T]]],[11,R[25],E,E,111,[[["self"],[T]]]],[11,R[20],E,E,111,[[[U]],[R[3]]]],[11,R[21],E,E,111,[[],[R[3]]]],[11,R[45],E,E,111,[[["self"]],[T]]],[11,R[22],E,E,111,[[["self"]],[T]]],[11,R[26],E,E,111,[[["self"]],[R[46]]]],[11,R[292],E,E,111,[[["self"]],["usize"]]],[11,R[3525],E,E,111,[[["self"],["f"]],["r"]]],[11,"encode",E,E,111,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,111,[[["w"],["self"]]]],[11,"decode",E,E,111,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,111,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,111,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,111,[[],[T]]],[11,R[3779],E,R[3776],111,[[["outer"]],[T]]],[11,R[3780],E,R[3777],111,[[["outer"]],[T]]],[11,"vzip",E,E,111,[[],["v"]]],[11,"clear",E,E,111,[[["self"]]]],[11,R[2628],E,E,111,[[]]],[11,R[4308],E,E,111,[[["self"]],["bool"]]],[11,"clear",E,E,111,[[],[T]]],[11,R[3601],E,E,111,[[],[T]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[24],E,E,112,[[["self"]],[T]]],[11,R[25],E,E,112,[[["self"],[T]]]],[11,R[20],E,E,112,[[[U]],[R[3]]]],[11,R[21],E,E,112,[[],[R[3]]]],[11,R[45],E,E,112,[[["self"]],[T]]],[11,R[22],E,E,112,[[["self"]],[T]]],[11,R[26],E,E,112,[[["self"]],[R[46]]]],[11,R[3774],E,E,112,[[],[T]]],[11,R[3779],E,R[3776],112,[[["outer"]],[T]]],[11,R[3780],E,R[3777],112,[[["outer"]],[T]]],[11,"vzip",E,E,112,[[],["v"]]],[11,R[3601],E,E,112,[[],[T]]],[11,"into",R[4458],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,R[292],E,E,23,[[["self"]],["usize"]]],[11,R[3525],E,E,23,[[["self"],["f"]],["r"]]],[11,"encode",E,E,23,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,23,[[["w"],["self"]]]],[11,"decode",E,E,23,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,23,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,23,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,23,[[],[T]]],[11,R[3779],E,R[3776],23,[[["outer"]],[T]]],[11,R[3780],E,R[3777],23,[[["outer"]],[T]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[3601],E,E,23,[[],[T]]],[11,"into",R[4535],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[24],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"],[T]]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,R[292],E,E,24,[[["self"]],["usize"]]],[11,R[3525],E,E,24,[[["self"],["f"]],["r"]]],[11,"encode",E,E,24,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,24,[[["w"],["self"]]]],[11,"decode",E,E,24,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,24,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,24,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,24,[[],[T]]],[11,R[3779],E,R[3776],24,[[["outer"]],[T]]],[11,R[3780],E,R[3777],24,[[["outer"]],[T]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[3601],E,E,24,[[],[T]]],[11,"into",R[4458],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[24],E,E,25,[[["self"]],[T]]],[11,R[25],E,E,25,[[["self"],[T]]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,R[292],E,E,25,[[["self"]],["usize"]]],[11,R[3525],E,E,25,[[["self"],["f"]],["r"]]],[11,"encode",E,E,25,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,25,[[["w"],["self"]]]],[11,"decode",E,E,25,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,25,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,25,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,25,[[],[T]]],[11,R[3779],E,R[3776],25,[[["outer"]],[T]]],[11,R[3780],E,R[3777],25,[[["outer"]],[T]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[3601],E,E,25,[[],[T]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[24],E,E,26,[[["self"]],[T]]],[11,R[25],E,E,26,[[["self"],[T]]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,R[292],E,E,26,[[["self"]],["usize"]]],[11,R[3525],E,E,26,[[["self"],["f"]],["r"]]],[11,"encode",E,E,26,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,26,[[["w"],["self"]]]],[11,"decode",E,E,26,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,26,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,26,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,26,[[],[T]]],[11,R[3779],E,R[3776],26,[[["outer"]],[T]]],[11,R[3780],E,R[3777],26,[[["outer"]],[T]]],[11,"vzip",E,E,26,[[],["v"]]],[11,R[3601],E,E,26,[[],[T]]],[11,"into",R[4535],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[24],E,E,28,[[["self"]],[T]]],[11,R[25],E,E,28,[[["self"],[T]]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,R[292],E,E,28,[[["self"]],["usize"]]],[11,R[3525],E,E,28,[[["self"],["f"]],["r"]]],[11,"encode",E,E,28,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,28,[[["w"],["self"]]]],[11,R[3774],E,E,28,[[],[T]]],[11,R[3779],E,R[3776],28,[[["outer"]],[T]]],[11,R[3780],E,R[3777],28,[[["outer"]],[T]]],[11,"vzip",E,E,28,[[],["v"]]],[11,R[3601],E,E,28,[[],[T]]],[11,"into",R[4458],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[24],E,E,30,[[["self"]],[T]]],[11,R[25],E,E,30,[[["self"],[T]]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,R[292],E,E,30,[[["self"]],["usize"]]],[11,R[3525],E,E,30,[[["self"],["f"]],["r"]]],[11,"encode",E,E,30,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,30,[[["w"],["self"]]]],[11,"decode",E,E,30,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,30,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,30,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,30,[[],[T]]],[11,R[3779],E,R[3776],30,[[["outer"]],[T]]],[11,R[3780],E,R[3777],30,[[["outer"]],[T]]],[11,"vzip",E,E,30,[[],["v"]]],[11,R[3601],E,E,30,[[],[T]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[24],E,E,32,[[["self"]],[T]]],[11,R[25],E,E,32,[[["self"],[T]]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,R[292],E,E,32,[[["self"]],["usize"]]],[11,R[3525],E,E,32,[[["self"],["f"]],["r"]]],[11,"encode",E,E,32,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,32,[[["w"],["self"]]]],[11,"decode",E,E,32,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,32,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,32,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,32,[[],[T]]],[11,R[3779],E,R[3776],32,[[["outer"]],[T]]],[11,R[3780],E,R[3777],32,[[["outer"]],[T]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[3601],E,E,32,[[],[T]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[20],E,E,113,[[[U]],[R[3]]]],[11,R[21],E,E,113,[[],[R[3]]]],[11,R[45],E,E,113,[[["self"]],[T]]],[11,R[22],E,E,113,[[["self"]],[T]]],[11,R[26],E,E,113,[[["self"]],[R[46]]]],[11,R[3774],E,E,113,[[],[T]]],[11,R[3779],E,R[3776],113,[[["outer"]],[T]]],[11,R[3780],E,R[3777],113,[[["outer"]],[T]]],[11,"vzip",E,E,113,[[],["v"]]],[11,R[3601],E,E,113,[[],[T]]],[11,"into",R[4471],E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[211],E,E,114,[[],["i"]]],[11,R[20],E,E,114,[[[U]],[R[3]]]],[11,R[21],E,E,114,[[],[R[3]]]],[11,R[45],E,E,114,[[["self"]],[T]]],[11,R[22],E,E,114,[[["self"]],[T]]],[11,R[26],E,E,114,[[["self"]],[R[46]]]],[11,R[3774],E,E,114,[[],[T]]],[11,R[3779],E,R[3776],114,[[["outer"]],[T]]],[11,R[3780],E,R[3777],114,[[["outer"]],[T]]],[11,"vzip",E,E,114,[[],["v"]]],[11,R[3601],E,E,114,[[],[T]]],[11,"into",R[4555],E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[24],E,E,35,[[["self"]],[T]]],[11,R[25],E,E,35,[[["self"],[T]]]],[11,R[20],E,E,35,[[[U]],[R[3]]]],[11,R[21],E,E,35,[[],[R[3]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[["self"]],[T]]],[11,R[26],E,E,35,[[["self"]],[R[46]]]],[11,R[3774],E,E,35,[[],[T]]],[11,R[3779],E,R[3776],35,[[["outer"]],[T]]],[11,R[3780],E,R[3777],35,[[["outer"]],[T]]],[11,"vzip",E,E,35,[[],["v"]]],[11,R[3601],E,E,35,[[],[T]]],[11,"into",R[4556],E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[211],E,E,115,[[],["i"]]],[11,R[20],E,E,115,[[[U]],[R[3]]]],[11,R[21],E,E,115,[[],[R[3]]]],[11,R[45],E,E,115,[[["self"]],[T]]],[11,R[22],E,E,115,[[["self"]],[T]]],[11,R[26],E,E,115,[[["self"]],[R[46]]]],[11,R[3774],E,E,115,[[],[T]]],[11,R[3779],E,R[3776],115,[[["outer"]],[T]]],[11,R[3780],E,R[3777],115,[[["outer"]],[T]]],[11,"vzip",E,E,115,[[],["v"]]],[11,R[3601],E,E,115,[[],[T]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[20],E,E,36,[[[U]],[R[3]]]],[11,R[21],E,E,36,[[],[R[3]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[22],E,E,36,[[["self"]],[T]]],[11,R[26],E,E,36,[[["self"]],[R[46]]]],[11,R[292],E,E,36,[[["self"]],["usize"]]],[11,R[3525],E,E,36,[[["self"],["f"]],["r"]]],[11,"encode",E,E,36,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,36,[[["w"],["self"]]]],[11,"decode",E,E,36,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,36,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,36,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,36,[[],[T]]],[11,R[3779],E,R[3776],36,[[["outer"]],[T]]],[11,R[3780],E,R[3777],36,[[["outer"]],[T]]],[11,"vzip",E,E,36,[[],["v"]]],[11,"clear",E,E,36,[[["self"]]]],[11,R[2628],E,E,36,[[]]],[11,R[3601],E,E,36,[[],[T]]],[11,"into",R[4557],E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[24],E,E,47,[[["self"]],[T]]],[11,R[25],E,E,47,[[["self"],[T]]]],[11,R[20],E,E,47,[[[U]],[R[3]]]],[11,R[21],E,E,47,[[],[R[3]]]],[11,R[45],E,E,47,[[["self"]],[T]]],[11,R[22],E,E,47,[[["self"]],[T]]],[11,R[26],E,E,47,[[["self"]],[R[46]]]],[11,R[292],E,E,47,[[["self"]],["usize"]]],[11,R[3525],E,E,47,[[["self"],["f"]],["r"]]],[11,"encode",E,E,47,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,47,[[["w"],["self"]]]],[11,"decode",E,E,47,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,47,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,47,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,47,[[],[T]]],[11,R[3779],E,R[3776],47,[[["outer"]],[T]]],[11,R[3780],E,R[3777],47,[[["outer"]],[T]]],[11,"vzip",E,E,47,[[],["v"]]],[11,R[3601],E,E,47,[[],[T]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[24],E,E,48,[[["self"]],[T]]],[11,R[25],E,E,48,[[["self"],[T]]]],[11,R[20],E,E,48,[[[U]],[R[3]]]],[11,R[21],E,E,48,[[],[R[3]]]],[11,R[45],E,E,48,[[["self"]],[T]]],[11,R[22],E,E,48,[[["self"]],[T]]],[11,R[26],E,E,48,[[["self"]],[R[46]]]],[11,R[292],E,E,48,[[["self"]],["usize"]]],[11,R[3525],E,E,48,[[["self"],["f"]],["r"]]],[11,"encode",E,E,48,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,48,[[["w"],["self"]]]],[11,"decode",E,E,48,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,48,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,48,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,48,[[],[T]]],[11,R[3779],E,R[3776],48,[[["outer"]],[T]]],[11,R[3780],E,R[3777],48,[[["outer"]],[T]]],[11,"vzip",E,E,48,[[],["v"]]],[11,R[3601],E,E,48,[[],[T]]],[11,"into",R[4535],E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[24],E,E,49,[[["self"]],[T]]],[11,R[25],E,E,49,[[["self"],[T]]]],[11,R[20],E,E,49,[[[U]],[R[3]]]],[11,R[21],E,E,49,[[],[R[3]]]],[11,R[45],E,E,49,[[["self"]],[T]]],[11,R[22],E,E,49,[[["self"]],[T]]],[11,R[26],E,E,49,[[["self"]],[R[46]]]],[11,R[292],E,E,49,[[["self"]],["usize"]]],[11,R[3525],E,E,49,[[["self"],["f"]],["r"]]],[11,"encode",E,E,49,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,49,[[["w"],["self"]]]],[11,R[3774],E,E,49,[[],[T]]],[11,R[3779],E,R[3776],49,[[["outer"]],[T]]],[11,R[3780],E,R[3777],49,[[["outer"]],[T]]],[11,"vzip",E,E,49,[[],["v"]]],[11,R[3601],E,E,49,[[],[T]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[20],E,E,50,[[[U]],[R[3]]]],[11,R[21],E,E,50,[[],[R[3]]]],[11,R[45],E,E,50,[[["self"]],[T]]],[11,R[22],E,E,50,[[["self"]],[T]]],[11,R[26],E,E,50,[[["self"]],[R[46]]]],[11,R[292],E,E,50,[[["self"]],["usize"]]],[11,R[3525],E,E,50,[[["self"],["f"]],["r"]]],[11,"encode",E,E,50,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,50,[[["w"],["self"]]]],[11,"decode",E,E,50,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,50,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,50,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,50,[[],[T]]],[11,R[3779],E,R[3776],50,[[["outer"]],[T]]],[11,R[3780],E,R[3777],50,[[["outer"]],[T]]],[11,"vzip",E,E,50,[[],["v"]]],[11,R[3601],E,E,50,[[],[T]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[24],E,E,51,[[["self"]],[T]]],[11,R[25],E,E,51,[[["self"],[T]]]],[11,R[20],E,E,51,[[[U]],[R[3]]]],[11,R[21],E,E,51,[[],[R[3]]]],[11,R[45],E,E,51,[[["self"]],[T]]],[11,R[22],E,E,51,[[["self"]],[T]]],[11,R[26],E,E,51,[[["self"]],[R[46]]]],[11,R[292],E,E,51,[[["self"]],["usize"]]],[11,R[3525],E,E,51,[[["self"],["f"]],["r"]]],[11,"encode",E,E,51,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,51,[[["w"],["self"]]]],[11,"decode",E,E,51,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,51,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,51,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,51,[[],[T]]],[11,R[3779],E,R[3776],51,[[["outer"]],[T]]],[11,R[3780],E,R[3777],51,[[["outer"]],[T]]],[11,"vzip",E,E,51,[[],["v"]]],[11,R[3601],E,E,51,[[],[T]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[20],E,E,52,[[[U]],[R[3]]]],[11,R[21],E,E,52,[[],[R[3]]]],[11,R[45],E,E,52,[[["self"]],[T]]],[11,R[22],E,E,52,[[["self"]],[T]]],[11,R[26],E,E,52,[[["self"]],[R[46]]]],[11,R[292],E,E,52,[[["self"]],["usize"]]],[11,R[3525],E,E,52,[[["self"],["f"]],["r"]]],[11,"encode",E,E,52,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,52,[[["w"],["self"]]]],[11,"decode",E,E,52,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,52,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,52,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,52,[[],[T]]],[11,R[3779],E,R[3776],52,[[["outer"]],[T]]],[11,R[3780],E,R[3777],52,[[["outer"]],[T]]],[11,"vzip",E,E,52,[[],["v"]]],[11,R[3601],E,E,52,[[],[T]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[24],E,E,53,[[["self"]],[T]]],[11,R[25],E,E,53,[[["self"],[T]]]],[11,R[20],E,E,53,[[[U]],[R[3]]]],[11,R[21],E,E,53,[[],[R[3]]]],[11,R[45],E,E,53,[[["self"]],[T]]],[11,R[22],E,E,53,[[["self"]],[T]]],[11,R[26],E,E,53,[[["self"]],[R[46]]]],[11,R[292],E,E,53,[[["self"]],["usize"]]],[11,R[3525],E,E,53,[[["self"],["f"]],["r"]]],[11,"encode",E,E,53,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,53,[[["w"],["self"]]]],[11,"decode",E,E,53,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,53,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,53,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,53,[[],[T]]],[11,R[3779],E,R[3776],53,[[["outer"]],[T]]],[11,R[3780],E,R[3777],53,[[["outer"]],[T]]],[11,"vzip",E,E,53,[[],["v"]]],[11,R[3601],E,E,53,[[],[T]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[24],E,E,54,[[["self"]],[T]]],[11,R[25],E,E,54,[[["self"],[T]]]],[11,R[20],E,E,54,[[[U]],[R[3]]]],[11,R[21],E,E,54,[[],[R[3]]]],[11,R[45],E,E,54,[[["self"]],[T]]],[11,R[22],E,E,54,[[["self"]],[T]]],[11,R[26],E,E,54,[[["self"]],[R[46]]]],[11,R[292],E,E,54,[[["self"]],["usize"]]],[11,R[3525],E,E,54,[[["self"],["f"]],["r"]]],[11,"encode",E,E,54,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,54,[[["w"],["self"]]]],[11,"decode",E,E,54,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,54,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,54,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,54,[[],[T]]],[11,R[3779],E,R[3776],54,[[["outer"]],[T]]],[11,R[3780],E,R[3777],54,[[["outer"]],[T]]],[11,"vzip",E,E,54,[[],["v"]]],[11,R[3601],E,E,54,[[],[T]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[24],E,E,55,[[["self"]],[T]]],[11,R[25],E,E,55,[[["self"],[T]]]],[11,R[20],E,E,55,[[[U]],[R[3]]]],[11,R[21],E,E,55,[[],[R[3]]]],[11,R[45],E,E,55,[[["self"]],[T]]],[11,R[22],E,E,55,[[["self"]],[T]]],[11,R[26],E,E,55,[[["self"]],[R[46]]]],[11,R[292],E,E,55,[[["self"]],["usize"]]],[11,R[3525],E,E,55,[[["self"],["f"]],["r"]]],[11,"encode",E,E,55,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,55,[[["w"],["self"]]]],[11,"decode",E,E,55,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,55,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,55,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,55,[[],[T]]],[11,R[3779],E,R[3776],55,[[["outer"]],[T]]],[11,R[3780],E,R[3777],55,[[["outer"]],[T]]],[11,"vzip",E,E,55,[[],["v"]]],[11,R[3601],E,E,55,[[],[T]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[24],E,E,56,[[["self"]],[T]]],[11,R[25],E,E,56,[[["self"],[T]]]],[11,R[20],E,E,56,[[[U]],[R[3]]]],[11,R[21],E,E,56,[[],[R[3]]]],[11,R[45],E,E,56,[[["self"]],[T]]],[11,R[22],E,E,56,[[["self"]],[T]]],[11,R[26],E,E,56,[[["self"]],[R[46]]]],[11,R[292],E,E,56,[[["self"]],["usize"]]],[11,R[3525],E,E,56,[[["self"],["f"]],["r"]]],[11,"encode",E,E,56,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,56,[[["w"],["self"]]]],[11,"decode",E,E,56,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,56,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,56,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,56,[[],[T]]],[11,R[3779],E,R[3776],56,[[["outer"]],[T]]],[11,R[3780],E,R[3777],56,[[["outer"]],[T]]],[11,"vzip",E,E,56,[[],["v"]]],[11,R[3601],E,E,56,[[],[T]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[24],E,E,57,[[["self"]],[T]]],[11,R[25],E,E,57,[[["self"],[T]]]],[11,R[20],E,E,57,[[[U]],[R[3]]]],[11,R[21],E,E,57,[[],[R[3]]]],[11,R[45],E,E,57,[[["self"]],[T]]],[11,R[22],E,E,57,[[["self"]],[T]]],[11,R[26],E,E,57,[[["self"]],[R[46]]]],[11,R[292],E,E,57,[[["self"]],["usize"]]],[11,R[3525],E,E,57,[[["self"],["f"]],["r"]]],[11,"encode",E,E,57,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,57,[[["w"],["self"]]]],[11,"decode",E,E,57,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,57,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,57,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,57,[[],[T]]],[11,R[3779],E,R[3776],57,[[["outer"]],[T]]],[11,R[3780],E,R[3777],57,[[["outer"]],[T]]],[11,"vzip",E,E,57,[[],["v"]]],[11,R[3601],E,E,57,[[],[T]]],[11,"into",R[4558],E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[20],E,E,116,[[[U]],[R[3]]]],[11,R[21],E,E,116,[[],[R[3]]]],[11,R[45],E,E,116,[[["self"]],[T]]],[11,R[22],E,E,116,[[["self"]],[T]]],[11,R[26],E,E,116,[[["self"]],[R[46]]]],[11,R[3774],E,E,116,[[],[T]]],[11,R[3779],E,R[3776],116,[[["outer"]],[T]]],[11,R[3780],E,R[3777],116,[[["outer"]],[T]]],[11,"vzip",E,E,116,[[],["v"]]],[11,R[3601],E,E,116,[[],[T]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[24],E,E,82,[[["self"]],[T]]],[11,R[25],E,E,82,[[["self"],[T]]]],[11,R[20],E,E,82,[[[U]],[R[3]]]],[11,R[21],E,E,82,[[],[R[3]]]],[11,R[45],E,E,82,[[["self"]],[T]]],[11,R[22],E,E,82,[[["self"]],[T]]],[11,R[26],E,E,82,[[["self"]],[R[46]]]],[11,R[292],E,E,82,[[["self"]],["usize"]]],[11,R[3525],E,E,82,[[["self"],["f"]],["r"]]],[11,"encode",E,E,82,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,82,[[["w"],["self"]]]],[11,"decode",E,E,82,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,82,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,82,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,82,[[],[T]]],[11,R[3779],E,R[3776],82,[[["outer"]],[T]]],[11,R[3780],E,R[3777],82,[[["outer"]],[T]]],[11,"vzip",E,E,82,[[],["v"]]],[11,R[3601],E,E,82,[[],[T]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[20],E,E,58,[[[U]],[R[3]]]],[11,R[21],E,E,58,[[],[R[3]]]],[11,R[45],E,E,58,[[["self"]],[T]]],[11,R[22],E,E,58,[[["self"]],[T]]],[11,R[26],E,E,58,[[["self"]],[R[46]]]],[11,R[3774],E,E,58,[[],[T]]],[11,R[3779],E,R[3776],58,[[["outer"]],[T]]],[11,R[3780],E,R[3777],58,[[["outer"]],[T]]],[11,"vzip",E,E,58,[[],["v"]]],[11,R[3601],E,E,58,[[],[T]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[24],E,E,59,[[["self"]],[T]]],[11,R[25],E,E,59,[[["self"],[T]]]],[11,R[20],E,E,59,[[[U]],[R[3]]]],[11,R[21],E,E,59,[[],[R[3]]]],[11,R[45],E,E,59,[[["self"]],[T]]],[11,R[22],E,E,59,[[["self"]],[T]]],[11,R[26],E,E,59,[[["self"]],[R[46]]]],[11,R[3774],E,E,59,[[],[T]]],[11,R[3779],E,R[3776],59,[[["outer"]],[T]]],[11,R[3780],E,R[3777],59,[[["outer"]],[T]]],[11,"vzip",E,E,59,[[],["v"]]],[11,R[3601],E,E,59,[[],[T]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[20],E,E,60,[[[U]],[R[3]]]],[11,R[21],E,E,60,[[],[R[3]]]],[11,R[45],E,E,60,[[["self"]],[T]]],[11,R[22],E,E,60,[[["self"]],[T]]],[11,R[26],E,E,60,[[["self"]],[R[46]]]],[11,R[3774],E,E,60,[[],[T]]],[11,R[3779],E,R[3776],60,[[["outer"]],[T]]],[11,R[3780],E,R[3777],60,[[["outer"]],[T]]],[11,"vzip",E,E,60,[[],["v"]]],[11,R[3601],E,E,60,[[],[T]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[24],E,E,61,[[["self"]],[T]]],[11,R[25],E,E,61,[[["self"],[T]]]],[11,R[20],E,E,61,[[[U]],[R[3]]]],[11,R[21],E,E,61,[[],[R[3]]]],[11,R[45],E,E,61,[[["self"]],[T]]],[11,R[22],E,E,61,[[["self"]],[T]]],[11,R[26],E,E,61,[[["self"]],[R[46]]]],[11,R[292],E,E,61,[[["self"]],["usize"]]],[11,R[3525],E,E,61,[[["self"],["f"]],["r"]]],[11,"encode",E,E,61,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,61,[[["w"],["self"]]]],[11,"decode",E,E,61,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,61,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,61,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,61,[[],[T]]],[11,R[3779],E,R[3776],61,[[["outer"]],[T]]],[11,R[3780],E,R[3777],61,[[["outer"]],[T]]],[11,"vzip",E,E,61,[[],["v"]]],[11,R[3601],E,E,61,[[],[T]]],[11,"into",R[4559],E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[24],E,E,83,[[["self"]],[T]]],[11,R[25],E,E,83,[[["self"],[T]]]],[11,R[20],E,E,83,[[[U]],[R[3]]]],[11,R[21],E,E,83,[[],[R[3]]]],[11,R[45],E,E,83,[[["self"]],[T]]],[11,R[22],E,E,83,[[["self"]],[T]]],[11,R[26],E,E,83,[[["self"]],[R[46]]]],[11,R[292],E,E,83,[[["self"]],["usize"]]],[11,R[3525],E,E,83,[[["self"],["f"]],["r"]]],[11,"encode",E,E,83,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,83,[[["w"],["self"]]]],[11,"decode",E,E,83,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,83,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,83,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,83,[[],[T]]],[11,R[3779],E,R[3776],83,[[["outer"]],[T]]],[11,R[3780],E,R[3777],83,[[["outer"]],[T]]],[11,"vzip",E,E,83,[[],["v"]]],[11,"clear",E,E,83,[[["self"]]]],[11,R[2628],E,E,83,[[]]],[11,R[4308],E,E,83,[[["self"]],["bool"]]],[11,"clear",E,E,83,[[],[T]]],[11,R[3601],E,E,83,[[],[T]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[24],E,E,84,[[["self"]],[T]]],[11,R[25],E,E,84,[[["self"],[T]]]],[11,R[20],E,E,84,[[[U]],[R[3]]]],[11,R[21],E,E,84,[[],[R[3]]]],[11,R[45],E,E,84,[[["self"]],[T]]],[11,R[22],E,E,84,[[["self"]],[T]]],[11,R[26],E,E,84,[[["self"]],[R[46]]]],[11,R[292],E,E,84,[[["self"]],["usize"]]],[11,R[3525],E,E,84,[[["self"],["f"]],["r"]]],[11,"encode",E,E,84,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,84,[[["w"],["self"]]]],[11,"decode",E,E,84,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,84,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,84,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,84,[[],[T]]],[11,R[3779],E,R[3776],84,[[["outer"]],[T]]],[11,R[3780],E,R[3777],84,[[["outer"]],[T]]],[11,"vzip",E,E,84,[[],["v"]]],[11,"clear",E,E,84,[[["self"]]]],[11,R[2628],E,E,84,[[]]],[11,R[4308],E,E,84,[[["self"]],["bool"]]],[11,"clear",E,E,84,[[],[T]]],[11,R[3601],E,E,84,[[],[T]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[24],E,E,85,[[["self"]],[T]]],[11,R[25],E,E,85,[[["self"],[T]]]],[11,R[20],E,E,85,[[[U]],[R[3]]]],[11,R[21],E,E,85,[[],[R[3]]]],[11,R[45],E,E,85,[[["self"]],[T]]],[11,R[22],E,E,85,[[["self"]],[T]]],[11,R[26],E,E,85,[[["self"]],[R[46]]]],[11,R[3774],E,E,85,[[],[T]]],[11,R[3779],E,R[3776],85,[[["outer"]],[T]]],[11,R[3780],E,R[3777],85,[[["outer"]],[T]]],[11,"vzip",E,E,85,[[],["v"]]],[11,"clear",E,E,85,[[["self"]]]],[11,R[2628],E,E,85,[[]]],[11,R[3601],E,E,85,[[],[T]]],[11,"write",R[4458],E,110,[[["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,R[415],E,E,110,[[["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,R[416],E,E,110,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"flush",E,E,110,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"from",E,R[4696],110,[[["cstring"]],[["vec",["u8"]],["u8"]]]],[11,R[38],R[4553],E,103,[[["self"]],["str"]]],[11,"report",R[4552],E,3,[[],["i32"]]],[11,"report",E,E,3,[[],["i32"]]],[11,R[424],E,R[472],3,[[["i"]],[R[3]]]],[11,R[295],E,E,100,[[["self"]],[["option"],[T]]]],[11,R[295],E,E,99,[[["self"]],[["option"],[T]]]],[11,R[295],E,E,101,[[["self"]],["option"]]],[11,R[428],E,E,3,[[],[R[3]]]],[11,"from_ok",E,E,3,[[[T]],[R[3]]]],[11,R[429],E,E,3,[[["e"]],[R[3]]]],[11,"eq",R[4554],E,112,[[[R[464]],["self"]],["bool"]]],[11,"eq",R[4553],E,103,[[["self"],["error"]],["bool"]]],[11,"eq",R[4552],E,3,[[[R[3]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[3]],["self"]],["bool"]]],[11,"eq",R[4554],E,111,[[["self"],[R[459]]],["bool"]]],[11,R[90],E,E,111,[[],[R[459]]]],[11,R[90],R[4553],E,103,[[],["error"]]],[11,"hash",E,E,103,[[["self"],["__h"]]]],[11,"hash",R[4552],E,3,[[["self"],["__h"]]]],[11,"hash",R[4554],E,111,[[["self"],["h"]]]],[11,"hash",E,E,112,[[["self"],["__h"]]]],[11,"cmp",R[4552],E,3,[[[R[3]],["self"]],[R[105]]]],[11,"cmp",R[4554],E,111,[[["self"],[R[459]]],[R[105]]]],[11,"cmp",R[4553],E,103,[[["self"],["error"]],[R[105]]]],[11,"cmp",R[4554],E,112,[[[R[464]],["self"]],[R[105]]]],[11,"next",R[4552],E,101,[[["self"]],["option"]]],[11,R[292],E,E,101,[[["self"]]]],[11,"next",E,E,100,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,100,[[["self"]]]],[11,"next",E,E,99,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,99,[[["self"]]]],[11,R[293],E,R[472],3,[[["i"]],[R[3]]]],[11,"fmt",R[4553],E,103,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,104,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4554],E,111,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,112,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4553],E,103,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4552],E,100,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,99,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4553],E,104,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4552],E,3,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,101,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4553],E,14,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"sum",R[4552],R[472],3,[[["i"]],[R[3]]]],[11,"clone",E,E,3,[[["self"]],[R[3]]]],[11,R[385],E,E,3,[[[R[3]],["self"]]]],[11,"clone",R[4554],E,111,[[["self"]],[R[459]]]],[11,"clone",R[4552],E,101,[[["self"]],[R[485]]]],[11,"clone",R[4553],E,103,[[["self"]],["error"]]],[11,"clone",E,E,104,[[["self"]],[R[325]]]],[11,"clone",R[4554],E,112,[[["self"]],[R[464]]]],[11,"clone",R[4552],E,99,[[["self"]],["iter"]]],[11,R[106],E,E,3,[[[R[3]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,3,[[[R[3]],["self"]],["bool"]]],[11,"le",E,E,3,[[[R[3]],["self"]],["bool"]]],[11,"gt",E,E,3,[[[R[3]],["self"]],["bool"]]],[11,"ge",E,E,3,[[[R[3]],["self"]],["bool"]]],[11,R[106],R[4554],E,111,[[["self"],[R[459]]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[4553],E,103,[[["self"],["error"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[4554],E,112,[[[R[464]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[492],R[4553],E,102,[[["str"],["self"]],[["error"],[R[3],["error"]]]]],[11,R[493],E,E,102,[[["self"],["char"]],[["error"],[R[3],["error"]]]]],[11,R[417],E,E,102,[[["self"],[R[325]]],[["error"],[R[3],["error"]]]]],[11,R[211],R[4552],R[4697],3,[[],[R[485]]]],[11,"as_ref",R[4458],E,110,[[["self"]]]],[11,"as_ref",E,E,110,[[["self"]],["vec"]]],[11,"cmp",E,E,110,[[["vec"],["self"]],[R[105]]]],[11,R[45],E,E,110,[[["self"]]]],[11,"from",E,E,110,[[["cow"]],["vec"]]],[11,"from",E,E,110,[[["binaryheap"]],["vec"]]],[11,"from",E,E,110,[[],["vec"]]],[11,"from",E,E,110,[[],["vec"]]],[11,"from",E,E,110,[[["box"]],["vec"]]],[11,"from",E,R[4698],110,[[[R[497]]],["vec"]]],[11,"from",E,E,110,[[["str"]],[["vec",["u8"]],["u8"]]]],[11,"from",E,R[4699],110,[[["string"]],[["vec",["u8"]],["u8"]]]],[11,"as_mut",E,E,110,[[["self"]]]],[11,"as_mut",E,E,110,[[["self"]],["vec"]]],[11,"deref",E,E,110,[[["self"]]]],[11,"extend",E,E,110,[[["self"],["i"]]]],[11,"extend",E,E,110,[[["self"],["i"]]]],[11,"drop",E,E,110,[[["self"]]]],[11,R[350],E,E,110,[[["self"],["i"]]]],[11,"eq",E,E,110,[[["self"],["vec"]],["bool"]]],[11,"ne",E,E,110,[[["self"],["vec"]],["bool"]]],[11,"eq",E,E,110,[[["self"]],["bool"]]],[11,"ne",E,E,110,[[["self"]],["bool"]]],[11,"eq",E,E,110,[[["self"]],["bool"]]],[11,"ne",E,E,110,[[["self"]],["bool"]]],[11,"eq",E,E,110,[[["self"]],["bool"]]],[11,"ne",E,E,110,[[["self"]],["bool"]]],[11,"eq",E,E,110,[[["self"]],["bool"]]],[11,"ne",E,E,110,[[["self"]],["bool"]]],[11,R[106],E,E,110,[[["vec"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",E,E,110,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[90],E,R[4700],110,[[],["vec"]]],[11,R[211],E,R[1523],110,[[],[R[485]]]],[11,R[22],E,E,110,[[["self"]]]],[11,"index",E,E,110,[[["i"],["self"]]]],[11,"clone",E,E,110,[[["self"]],["vec"]]],[11,R[385],E,E,110,[[["self"],["vec"]]]],[11,"hash",E,E,110,[[["self"],["h"]]]],[11,R[99],E,E,110,[[["self"]]]],[11,R[293],E,E,110,[[["i"]],["vec"]]],[11,"record",R[4553],E,104,[[["visit"],["self"],["field"]]]],[11,R[3190],E,E,108,[[["self"],["field"],["debug"]]]],[11,R[3190],E,E,106,[[["self"],["field"],["debug"]]]],[11,R[173],R[4554],E,111,[[["d"]],[R[3]]]],[11,R[3259],R[4458],E,110,[[]]],[11,R[173],R[4554],E,111,[[["d"]],[[R[459]],[R[3],[R[459]]]]]],[11,R[173],R[4552],E,3,[[["d"]],[[R[3]],[R[3],[R[3]]]]]],[11,R[173],R[4458],E,110,[[["d"]],[["vec"],[R[3],["vec"]]]]],[11,"deserialize_in_place",E,E,110,[[["d"],["vec"]],[R[3]]]],[11,R[132],R[4553],E,104,[[["s"],["self"]],[R[3]]]],[11,R[132],R[4552],E,3,[[["s"],["self"]],[R[3]]]],[11,R[132],R[4458],E,110,[[["s"],["self"]],[R[3]]]],[11,R[132],R[4554],E,111,[[["s"],["self"]],[R[3]]]],[11,"decode",E,E,111,[[["i"]],[[R[3],[R[459],"error"]],[R[459]],["error"]]]],[11,"decode",R[4458],E,110,[[["i"]],[[R[3],["vec","error"]],["error"],["vec"]]]],[11,"decode",R[4552],E,3,[[["i"]],[["error"],[R[3]],[R[3],[R[3],"error"]]]]],[11,R[3603],R[4554],E,111,[[["w"],["self"]]]],[11,R[292],R[4552],E,3,[[["self"]],["usize"]]],[11,R[3603],E,E,3,[[["w"],["self"]]]],[11,"append",R[4458],E,110,[[["vec",["u8"]],["i"],["u8"]],[["error"],["vec",["u8"]],[R[3],["vec","error"]]]]],[11,R[4620],E,E,110,[[["vec",["u8"]],["i"],["u8"]],[["error"],["vec",["u8"]],[R[3],["vec","error"]]]]],[11,"len",E,E,110,[[],[[R[3],["usize","error"]],["error"],["usize"]]]],[11,R[4090],E,E,110,[[["self"],["vec"]]]],[11,R[4623],E,E,110,[[["self"]]]],[11,R[290],E,E,110,[[["self"]]]],[11,"push",E,E,110,[[["self"],[T]]]],[11,"zeroize",E,"\"Best effort\" zeroization for `Vec`.",110,[[["self"]]]],[11,R[3709],E,E,110,[[[R[3703]],["u64"]],[["vec"],["string"],[R[3],["vec","string"]]]]],[11,R[3708],E,E,110,[[[R[3703]]],[[R[3],["u64","string"]],["u64"],["string"]]]],[11,"from",E,E,110,[[["unparsed"]],[["vec",["u8"]],["u8"]]]],[11,"clone",R[4555],E,35,[[["self"]],[R[3487]]]],[11,"compat",R[4552],E,3,[[],[[R[3],["compat"]],["compat",["error"]]]]],[11,"context",E,E,3,[[["d"]],[[R[3],["context"]],["context"]]]],[11,R[4560],E,E,3,[[["f"]],[[R[3],["context"]],["context"]]]],[11,"compat",E,E,3,[[],[[R[3],["compat"]],["compat"]]]],[11,"context",E,E,3,[[["d"]],[[R[3],["context"]],["context"]]]],[11,R[4560],E,E,3,[[["f"]],[[R[3],["context"]],["context"]]]],[11,"from_hex",R[4458],E,110,[[[T]],[["vec",["u8"]],[R[3],["vec"]]]]],[11,R[290],E,E,110,[[["self"]]]],[11,"size_of",R[4552],E,3,[[["self"],[R[3126]]],["usize"]]],[11,"size_of",R[4554],E,111,[[["self"],[R[3126]]],["usize"]]],[11,"size_of",R[4458],E,110,[[["self"],[R[3126]]],["usize"]]],[11,R[3603],R[4535],E,50,[[["self"],["encout"]]]],[11,R[3603],R[4557],E,48,[[["self"],["encout"]]]],[11,R[3603],E,E,47,[[["self"],["encout"]]]],[11,R[3603],R[4535],E,51,[[["self"],["encout"]]]],[11,R[3603],E,E,24,[[["w"],["self"]]]],[11,R[3603],E,E,57,[[["self"],["encout"]]]],[11,R[3603],R[4458],E,30,[[["self"],["encout"]]]],[11,R[3603],E,E,25,[[["self"],["encout"]]]],[11,R[3603],R[4535],E,49,[[["w"],["self"]]]],[11,R[3603],E,E,54,[[["self"],["encout"]]]],[11,R[3603],R[4458],E,23,[[["self"],["encout"]]]],[11,R[3603],R[4535],E,53,[[["self"],["encout"]]]],[11,R[3603],R[4458],E,26,[[["self"],["encout"]]]],[11,R[3603],R[4535],E,28,[[["w"],["self"]]]],[11,R[3603],E,E,55,[[["self"],["encout"]]]],[11,R[3603],E,E,52,[[["self"],["encout"]]]],[11,R[3603],E,E,56,[[["self"],["encout"]]]],[11,"clone",E,E,49,[[["self"]],["fnencode"]]],[11,"clone",E,E,51,[[["self"]],[R[4053]]]],[11,"clone",E,E,53,[[["self"]],[R[4042]]]],[11,"clone",E,E,56,[[["self"]],[R[4048]]]],[11,"clone",E,E,28,[[["self"]],[R[4045]]]],[11,"clone",R[4458],E,23,[[["self"]],[R[4038]]]],[11,"clone",E,E,25,[[["self"]],[R[4039]]]],[11,"clone",R[4535],E,57,[[["self"]],[R[4046]]]],[11,"clone",E,E,55,[[["self"]],[R[4047]]]],[11,"clone",R[4557],E,48,[[["self"]],[R[4040]]]],[11,"clone",E,E,47,[[["self"]],[R[4041]]]],[11,"clone",R[4535],E,24,[[["self"]],[R[4561]]]],[11,"clone",E,E,54,[[["self"]],[R[4049]]]],[11,"clone",R[4458],E,26,[[["self"]],[R[4043]]]],[11,"clone",E,E,30,[[["self"]],[R[4044]]]],[11,"decode",E,E,25,[[["decin"]],[["error"],[R[3],[R[4039],"error"]],[R[4039]]]]],[11,"decode",R[4535],E,24,[[["i"]],[[R[3],[R[4561],"error"]],["error"],[R[4561]]]]],[11,"decode",E,E,51,[[["decin"]],[[R[3],[R[4053],"error"]],["error"],[R[4053]]]]],[11,"decode",E,E,53,[[["decin"]],[[R[3],[R[4042],"error"]],[R[4042]],["error"]]]],[11,"decode",E,E,52,[[["decin"]],[[R[4050]],["error"],[R[3],[R[4050],"error"]]]]],[11,"decode",E,E,55,[[["decin"]],[[R[3],[R[4047],"error"]],["error"],[R[4047]]]]],[11,"decode",R[4557],E,47,[[["decin"]],[[R[3],[R[4041],"error"]],["error"],[R[4041]]]]],[11,"decode",R[4458],E,23,[[["decin"]],[[R[4038]],["error"],[R[3],[R[4038],"error"]]]]],[11,"decode",R[4535],E,50,[[["decin"]],[[R[4051]],[R[3],[R[4051],"error"]],["error"]]]],[11,"decode",E,E,57,[[["decin"]],[[R[3],[R[4046],"error"]],["error"],[R[4046]]]]],[11,"decode",R[4458],E,30,[[["decin"]],[["error"],[R[3],[R[4044],"error"]],[R[4044]]]]],[11,"decode",R[4557],E,48,[[["decin"]],[["error"],[R[4040]],[R[3],[R[4040],"error"]]]]],[11,"decode",R[4535],E,56,[[["decin"]],[["error"],[R[4048]],[R[3],[R[4048],"error"]]]]],[11,"decode",R[4458],E,26,[[["decin"]],[["error"],[R[3],[R[4043],"error"]],[R[4043]]]]],[11,"decode",R[4535],E,54,[[["decin"]],[["error"],[R[3],[R[4049],"error"]],[R[4049]]]]],[11,"fmt",E,E,53,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4458],E,30,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4535],E,24,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,56,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4458],E,26,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4535],E,52,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,51,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4458],E,25,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4535],E,54,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,49,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4557],E,47,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,48,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4535],E,57,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,50,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,28,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4458],E,23,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4535],E,55,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"into",E,E,52,[[],[R[3845]]]],[11,R[132],R[4458],E,30,[[["self"],["__s"]],[R[3]]]],[11,R[132],R[4535],E,55,[[["self"],["__s"]],[R[3]]]],[11,R[132],R[4557],E,47,[[["self"],["__s"]],[R[3]]]],[11,R[132],R[4535],E,52,[[["self"],["__s"]],[R[3]]]],[11,R[132],R[4557],E,48,[[["self"],["__s"]],[R[3]]]],[11,R[132],R[4535],E,28,[[["s"],["self"]],[R[3]]]],[11,R[132],R[4458],E,25,[[["self"],["__s"]],[R[3]]]],[11,R[132],R[4535],E,24,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,53,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,56,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,49,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,57,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,54,[[["self"],["__s"]],[R[3]]]],[11,R[132],R[4458],E,23,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,26,[[["self"],["__s"]],[R[3]]]],[11,R[132],R[4535],E,51,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,50,[[["self"],["__s"]],[R[3]]]],[11,"eq",E,E,49,[[["self"],["fnencode"]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[4051]]],["bool"]]],[11,"ne",E,E,50,[[["self"],[R[4051]]],["bool"]]],[11,"eq",E,E,53,[[[R[4042]],["self"]],["bool"]]],[11,"ne",E,E,53,[[[R[4042]],["self"]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[4561]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[4048]]],["bool"]]],[11,"eq",R[4458],E,26,[[["self"],[R[4043]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[4043]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[4039]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[4039]]],["bool"]]],[11,"eq",R[4535],E,28,[[[R[4045]],["self"]],["bool"]]],[11,"eq",R[4458],E,23,[[[R[4038]],["self"]],["bool"]]],[11,"ne",E,E,23,[[[R[4038]],["self"]],["bool"]]],[11,"eq",R[4535],E,55,[[[R[4047]],["self"]],["bool"]]],[11,"ne",E,E,55,[[[R[4047]],["self"]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[4049]]],["bool"]]],[11,"ne",E,E,54,[[["self"],[R[4049]]],["bool"]]],[11,"eq",R[4557],E,47,[[[R[4041]],["self"]],["bool"]]],[11,"ne",E,E,47,[[[R[4041]],["self"]],["bool"]]],[11,"eq",R[4535],E,52,[[[R[4050]],["self"]],["bool"]]],[11,"ne",E,E,52,[[[R[4050]],["self"]],["bool"]]],[11,"eq",R[4458],E,30,[[[R[4044]],["self"]],["bool"]]],[11,"ne",E,E,30,[[[R[4044]],["self"]],["bool"]]],[11,"eq",R[4535],E,57,[[[R[4046]],["self"]],["bool"]]],[11,"eq",R[4557],E,48,[[["self"],[R[4040]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[4040]]],["bool"]]],[11,"eq",R[4535],E,51,[[["self"],[R[4053]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[4053]]],["bool"]]],[11,R[3603],R[4458],E,32,[[["self"],["encout"]]]],[11,"clone",E,E,32,[[["self"]],[R[4330]]]],[11,"into",E,E,32,[[],["str"]]],[11,R[132],E,E,32,[[["self"],["__s"]],[R[3]]]],[11,"fmt",E,E,32,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"eq",E,E,32,[[["self"],[R[4330]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[4330]]],["bool"]]],[11,"print",E,E,32,[[["self"]]]],[11,"decode",E,E,32,[[["decin"]],[[R[4330]],["error"],[R[3],[R[4330],"error"]]]]],[11,"from",E,E,32,[[["str"]],[R[4330]]]],[11,"from",E,E,32,[[[R[4649]]],[R[4330]]]],[11,"from",E,E,32,[[[R[4284]]],[R[4330]]]],[11,"from",R[4552],E,3,[[[R[4330]]],[[R[4330]],[R[3],[R[4330]]]]]],[11,R[4562],R[4558],E,116,[[["i"]]]],[11,"weigh_data",R[4559],E,85,[[["self"],[T]],["weight"]]],[11,R[4563],E,E,85,[[["self"],[T]],[R[4564]]]],[11,"pays_fee",E,E,85,[[["self"]],["bool"]]],[11,"from",R[4558],"Create a mask from a single flag.",82,[[[R[4565]]],["self"]]],[11,"from",R[4559],E,84,[[[R[4567]]],["self"]]],[11,"next",R[4556],E,115,[[["self"]],["option"]]],[11,"next",R[4471],E,114,[[["self"]],["option"]]],[11,"clone",R[4558],E,59,[[["self"]],[R[4546]]]],[11,"clone",E,E,61,[[["self"]],[R[4565]]]],[11,"clone",E,E,82,[[["self"]],[R[4545]]]],[11,"clone",R[4559],E,84,[[["self"]],[R[4564]]]],[11,"clone",E,E,83,[[["self"]],[R[4566]]]],[11,"clone",E,E,85,[[["self"]],[R[4567]]]],[11,"clone",R[4457],E,98,[[["self"]],["void"]]],[11,R[90],R[4456],E,1,[[],["writer"]]],[11,R[90],R[4556],E,36,[[],["self"]]],[11,R[90],R[4559],E,84,[[],["self"]]],[11,R[90],E,E,83,[[],[R[4566]]]],[11,R[90],E,E,85,[[],["self"]]],[11,"cmp",R[4558],E,61,[[["self"],[R[4565]]],[R[105]]]],[11,"cmp",E,E,82,[[[R[4545]],["self"]],[R[105]]]],[11,"eq",E,E,59,[[["self"],[R[4546]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[4565]]],["bool"]]],[11,"eq",E,E,82,[[[R[4545]],["self"]],["bool"]]],[11,"ne",E,E,82,[[[R[4545]],["self"]],["bool"]]],[11,"eq",R[4559],E,84,[[[R[4564]],["self"]],["bool"]]],[11,"eq",E,E,83,[[["self"],[R[4566]]],["bool"]]],[11,"ne",E,E,83,[[["self"],[R[4566]]],["bool"]]],[11,"eq",R[4457],E,98,[[["void"],["self"]],["bool"]]],[11,R[106],R[4558],E,61,[[["self"],[R[4565]]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,82,[[[R[4545]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,82,[[[R[4545]],["self"]],["bool"]]],[11,"le",E,E,82,[[[R[4545]],["self"]],["bool"]]],[11,"gt",E,E,82,[[[R[4545]],["self"]],["bool"]]],[11,"ge",E,E,82,[[[R[4545]],["self"]],["bool"]]],[11,"fmt",E,E,61,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,82,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4559],E,84,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,83,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4457],E,98,[[["self"],[R[37]]],[R[3]]]],[11,"not",R[4558],E,82,[[]]],[11,"not",E,E,61,[[]]],[11,"bitand",E,E,82,[[[R[4545]]]]],[11,"bitand",E,E,82,[[[R[4565]]]]],[11,"bitand",E,E,61,[[[R[4545]]]]],[11,"bitand",E,E,61,[[[R[4565]]]]],[11,"bitor",E,E,82,[[[R[4545]]]]],[11,"bitor",E,E,82,[[[R[4565]]]]],[11,"bitor",E,E,61,[[[R[4545]]]]],[11,"bitor",E,E,61,[[[R[4565]]]]],[11,"bitxor",E,E,82,[[[R[4545]]]]],[11,"bitxor",E,E,82,[[[R[4565]]]]],[11,"bitxor",E,E,61,[[[R[4545]]]]],[11,"bitxor",E,E,61,[[[R[4565]]]]],[11,R[458],E,E,82,[[[R[4545]],["self"]]]],[11,R[458],E,E,82,[[["self"],[R[4565]]]]],[11,R[473],E,E,82,[[[R[4545]],["self"]]]],[11,R[473],E,E,82,[[["self"],[R[4565]]]]],[11,R[496],E,E,82,[[[R[4545]],["self"]]]],[11,R[496],E,E,82,[[["self"],[R[4565]]]]],[11,"deref",E,R[4568],82,[[["self"]],["i8"]]],[11,"deref",E,R[4568],61,[[["self"]],["i8"]]],[11,"hash",E,E,61,[[["self"],["__h"]]]],[11,"hash",E,E,82,[[["self"],["__h"]]]],[11,R[492],R[4456],E,1,[[["str"],["self"]],[R[3]]]],[11,R[132],R[4559],E,84,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,84,[[["__d"]],[R[3]]]],[11,R[3603],R[4556],E,36,[[["self"],["encout"]]]],[11,R[3603],R[4558],E,61,[[["self"],["encout"]]]],[11,R[3603],E,E,82,[[["self"],["encout"]]]],[11,"encode",E,E,82,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,82,[[["fnonce"],["self"]],["r"]]],[11,R[3603],R[4559],E,84,[[["self"],["encout"]]]],[11,R[3603],E,E,83,[[["self"],["encout"]]]],[11,"decode",R[4556],E,36,[[["decin"]],[[R[3],["error"]],["error"]]]],[11,"decode",R[4558],E,61,[[["decin"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,82,[[["decin"]],[[R[3],["error"]],["error"]]]],[11,"decode",R[4559],E,84,[[["decin"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,83,[[["decin"]],[[R[3],["error"]],["error"]]]],[11,"enabled",R[4456],E,2,[[["self"],[R[939]]],["bool"]]],[11,"log",E,E,2,[[["record"],["self"]]]],[11,"flush",E,E,2,[[["self"]]]],[11,"is_ok",R[4552],R[4733],3,[[["self"]],["bool"]]],[11,"is_err",E,R[4734],3,[[["self"]],["bool"]]],[11,R[114],E,R[4735],3,[[["self"],[U]],["bool"]]],[11,R[4736],E,R[4737],3,[[["f"],["self"]],["bool"]]],[11,"ok",E,R[4738],3,[[],["option"]]],[11,"err",E,R[4739],3,[[],["option"]]],[11,"as_ref",E,R[4740],3,[[["self"]],[[R[3]],[T],["e"]]]],[11,"as_mut",E,R[4741],3,[[["self"]],[["e"],[T],[R[3]]]]],[11,"map",E,R[4742],3,[[["f"]],[R[3]]]],[11,R[4743],E,R[4744],3,[[["m"],["f"]],[U]]],[11,"map_err",E,R[4745],3,[[["o"]],[R[3]]]],[11,"iter",E,R[4746],3,[[["self"]],["iter"]]],[11,R[628],E,R[4747],3,[[["self"]],["itermut"]]],[11,"and",E,R[4748],3,[[[R[3]]],[R[3]]]],[11,"and_then",E,R[4749],3,[[["f"]],[R[3]]]],[11,"or",E,R[4750],3,[[[R[3]]],[R[3]]]],[11,"or_else",E,R[4751],3,[[["o"]],[R[3]]]],[11,R[737],E,R[4752],3,[[[T]],[T]]],[11,R[738],E,R[4753],3,[[["f"]],[T]]],[11,"copied",E,R[4754],3,[[],[R[3]]]],[11,"copied",E,R[4755],3,[[],[R[3]]]],[11,"cloned",E,R[4756],3,[[],[R[3]]]],[11,"cloned",E,R[4757],3,[[],[R[3]]]],[11,"unwrap",E,R[585],3,[[],[T]]],[11,"expect",E,R[585],3,[[["str"]],[T]]],[11,"unwrap_err",E,R[586],3,[[],["e"]]],[11,"expect_err",E,R[586],3,[[["str"]],["e"]]],[11,R[4758],E,R[4759],3,[[],[T]]],[11,R[4760],E,R[587],3,[[["self"]],[[R[3]],["e"]]]],[11,R[4761],E,R[587],3,[[["self"]],[[T],[R[3]]]]],[11,"as_deref",E,R[587],3,[[["self"]],[R[3]]]],[11,R[4762],E,R[588],3,[[["self"]],[[R[3]],["e"]]]],[11,R[4763],E,R[588],3,[[["self"]],[[R[3]],[T]]]],[11,R[4764],E,R[588],3,[[["self"]],[R[3]]]],[11,"transpose",E,R[4765],3,[[],[["option",[R[3]]],[R[3]]]]],[11,R[4701],R[4553],R[4702],102,[[["str"],["self"],["bool"]],[["error"],[R[3],["error"]]]]],[11,"pad",E,R[4703],102,[[["str"],["self"]],[["error"],[R[3],["error"]]]]],[11,R[492],E,R[4704],102,[[["str"],["self"]],[["error"],[R[3],["error"]]]]],[11,R[417],E,R[4705],102,[[["self"],[R[325]]],[["error"],[R[3],["error"]]]]],[11,"flags",E,R[4706],102,[[["self"]],["u32"]]],[11,"fill",E,R[4707],102,[[["self"]],["char"]]],[11,"align",E,R[4708],102,[[["self"]],[[R[527]],["option",[R[527]]]]]],[11,"width",E,R[4709],102,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"precision",E,R[4710],102,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"sign_plus",E,R[4711],102,[[["self"]],["bool"]]],[11,"sign_minus",E,R[4712],102,[[["self"]],["bool"]]],[11,"alternate",E,R[4713],102,[[["self"]],["bool"]]],[11,R[4714],E,R[4715],102,[[["self"]],["bool"]]],[11,R[4716],E,R[4717],102,[[["self"],["str"]],[R[532]]]],[11,R[4718],E,R[4719],102,[[["self"],["str"]],[R[533]]]],[11,"debug_list",E,R[4720],102,[[["self"]],[R[528]]]],[11,"debug_set",E,R[4721],102,[[["self"]],[R[531]]]],[11,"debug_map",E,R[4722],102,[[["self"]],[R[529]]]],[11,"entry",E,R[4723],105,[[["self"],["debug"]],[R[528]]]],[11,R[153],E,R[4724],105,[[["self"],["i"]],[R[528]]]],[11,"finish",E,R[530],105,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"entry",E,R[4725],106,[[["self"],["debug"]],[R[529]]]],[11,"key",E,R[4726],106,[[["self"],["debug"]],[R[529]]]],[11,"value",E,R[4727],106,[[["self"],["debug"]],[R[529]]]],[11,R[153],E,R[4728],106,[[["self"],["i"]],[R[529]]]],[11,"finish",E,R[530],106,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"entry",E,R[4729],107,[[["self"],["debug"]],[R[531]]]],[11,R[153],E,R[4730],107,[[["self"],["i"]],[R[531]]]],[11,"finish",E,R[530],107,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"field",E,R[4731],108,[[["str"],["self"],["debug"]],[R[532]]]],[11,"finish",E,R[530],108,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"field",E,R[4732],109,[[["self"],["debug"]],[R[533]]]],[11,"finish",E,R[530],109,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"new",R[4458],R[4766],110,[[],["vec"]]],[11,R[287],E,R[4767],110,[[["usize"]],["vec"]]],[11,R[4768],E,R[4769],110,[[]]],[11,R[359],E,R[4770],110,[[["usize"]],["vec"]]],[11,R[619],E,R[4771],110,[[["self"]],["usize"]]],[11,"reserve",E,R[621],110,[[["self"],["usize"]]]],[11,R[594],E,R[620],110,[[["self"],["usize"]]]],[11,R[624],E,R[625],110,[[["self"],["usize"]],[[R[3],[R[595]]],[R[595]]]]],[11,R[622],E,R[623],110,[[["self"],["usize"]],[[R[3],[R[595]]],[R[595]]]]],[11,R[596],E,R[803],110,[[["self"]]]],[11,R[626],E,R[4772],110,[[["self"],["usize"]]]],[11,R[597],E,R[4773],110,[[],["box"]]],[11,R[627],E,R[751],110,[[["self"],["usize"]]]],[11,R[589],E,R[598],110,[[["self"]]]],[11,R[291],E,R[599],110,[[["self"]]]],[11,"as_ptr",E,R[4774],110,[[["self"]]]],[11,R[600],E,R[4775],110,[[["self"]]]],[11,"set_len",E,R[4776],110,[[["self"],["usize"]]]],[11,R[601],E,R[4777],110,[[["self"],["usize"]],[T]]],[11,"insert",E,R[4778],110,[[["self"],["usize"],[T]]]],[11,"remove",E,R[4779],110,[[["self"],["usize"]],[T]]],[11,"retain",E,R[602],110,[[["self"],["f"]]]],[11,R[603],E,R[604],110,[[["self"],["f"]]]],[11,"dedup_by",E,R[604],110,[[["self"],["f"]]]],[11,"push",E,R[4780],110,[[["self"],[T]]]],[11,"pop",E,R[4781],110,[[["self"]],["option"]]],[11,"append",E,R[4782],110,[[["self"],["vec"]]]],[11,"drain",E,R[605],110,[[["self"],["r"]],["drain"]]],[11,"clear",E,R[804],110,[[["self"]]]],[11,"len",E,R[4783],110,[[["self"]],["usize"]]],[11,R[340],E,R[4784],110,[[["self"]],["bool"]]],[11,R[611],E,R[805],110,[[["self"],["usize"]],["vec"]]],[11,R[631],E,R[606],110,[[["self"],["usize"],["f"]]]],[11,"leak",E,R[4785],110,[[["vec"]]]],[11,"resize",E,R[606],110,[[["self"],["usize"],[T]]]],[11,R[290],E,R[4786],110,[[["self"]]]],[11,R[4787],E,R[606],110,[[["self"],["usize"]]]],[11,"dedup",E,R[4788],110,[[["self"]]]],[11,R[4789],E,R[4790],110,[[["self"],[T]],["option"]]],[11,"splice",E,R[4791],110,[[["self"],["i"],["r"]],["splice"]]],[11,R[4792],E,R[607],110,[[["self"],["f"]],[R[4793]]]],[11,"stripped",E,R[4648],32,[[],[R[4330]]]],[11,R[3402],R[4555],R[4795],35,[[],[R[3487]]]],[11,R[24],E,R[4796],35,[[["self"]],[R[3403]]]],[11,R[4797],E,R[4798],35,[[["u32"]],[["option",[R[3487]]],[R[3487]]]]],[11,"info",E,R[4799],35,[[["self"]]]],[11,"keyspace",E,R[4800],35,[[["self"]]]],[11,R[4483],R[4556],R[4484],37,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,R[4485],E,R[4569],37,[[],[["vec",["u8"]],["u8"]]]],[11,R[4483],E,R[4484],38,[[["k"]],[["vec",["u8"]],["u8"]]]],[11,R[4485],E,R[4570],38,[[],[["vec",["u8"]],["u8"]]]],[11,R[4571],E,R[4484],39,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,R[4572],E,R[4573],40,[[["karg1"]],[["vec",["u8"]],["u8"]]]],[11,R[4574],E,R[4484],40,[[["karg1"],["karg2"]],[["vec",["u8"]],["u8"]]]],[11,R[4575],E,R[4484],41,[[]]]],"p":[[8,R[4650]],[3,"Writer"],[3,R[4576]],[4,"Result"],[8,"Write"],[8,"Binary"],[8,"Octal"],[8,"Debug"],[8,"Display"],[8,"LowerHex"],[8,"Pointer"],[8,"UpperHex"],[8,"LowerExp"],[8,"UpperExp"],[4,R[635]],[8,"Clone"],[8,R[321]],[8,"Decode"],[8,"Encode"],[8,"Input"],[8,"Output"],[8,R[4617]],[8,R[3535]],[3,R[4054]],[4,R[4066]],[3,R[4055]],[3,R[4059]],[8,R[4072]],[3,R[4061]],[8,R[4071]],[3,R[4060]],[8,R[4410]],[4,R[4391]],[8,"Callable"],[8,"IsSubType"],[4,R[4801]],[3,"Linkage"],[8,R[4501]],[8,R[4577]],[8,R[4578]],[8,R[4509]],[8,R[4495]],[8,R[4495]],[8,R[4578]],[8,R[4501]],[8,R[4509]],[8,R[4579]],[3,R[4057]],[3,R[4056]],[3,"FnEncode"],[4,R[4070]],[3,R[4065]],[3,R[4063]],[3,R[4058]],[3,R[4062]],[4,R[4068]],[4,R[4069]],[4,R[4067]],[4,R[4580]],[4,R[4581]],[4,R[4582]],[4,R[4583]],[8,"Len"],[8,"Get"],[8,"Contains"],[8,R[4584]],[8,"FindAuthor"],[8,"VerifySeal"],[8,R[4585]],[8,R[4586]],[8,"TryDrop"],[8,"Imbalance"],[8,"Currency"],[8,R[4587]],[8,R[4588]],[8,R[4589]],[8,"Time"],[8,R[4590]],[8,R[4591]],[8,R[4624]],[8,R[4592]],[8,R[4593]],[3,R[4594]],[3,R[4296]],[4,R[4595]],[4,R[4596]],[8,"WeighData"],[8,R[4597]],[8,"WeighBlock"],[8,"PaysFee"],[8,R[4598]],[8,"Hashable"],[3,"Twox256"],[3,"Twox128"],[3,R[4541]],[3,R[4540]],[3,R[4449]],[3,R[4450]],[4,"Void"],[3,"Iter"],[3,R[703]],[3,R[339]],[3,R[668]],[3,"Error"],[3,R[669]],[3,R[670]],[3,"DebugMap"],[3,"DebugSet"],[3,R[671]],[3,R[672]],[3,"Vec"],[3,R[681]],[3,R[682]],[4,"Never"],[3,R[4599]],[3,R[4600]],[3,R[4601]]]};
searchIndex["frame_support_procedural"]={"doc":"Proc macro of Support code for the runtime.","i":[[14,R[4602],"frame_support_procedural",R[4603],N,N],[14,R[4604],E,R[4605],N,N]],"p":[]};
searchIndex["frame_support_procedural_tools"]={"doc":"Proc macro helpers for procedural macros","i":[[24,"Parse","frame_support_procedural_tools",R[2824],N,N],[24,"ToTokens",E,R[2824],N,N],[5,"generate_crate_access",E,"Generates the access to the `frame-support` crate.",N,[[["str"]],[R[1152]]]],[5,"generate_hidden_includes",E,"Generates the hidden includes that are required to make…",N,[[["str"]],[R[1152]]]],[5,"clean_type_string",E,E,N,[[["str"]],["string"]]],[0,"syn_ext",E,"Extension to syn types, mainly for parsing",N,N],[3,"StopParse","frame_support_procedural_tools::syn_ext","stop parsing here getting remaining token as content Warn…",N,N],[12,"inner",E,E,0,N],[3,"Braces",E,E,N,N],[12,"token",E,E,1,N],[12,"content",E,E,1,N],[3,"Brackets",E,E,N,N],[12,"token",E,E,2,N],[12,"content",E,E,2,N],[3,"Parens",E,E,N,N],[12,"token",E,E,3,N],[12,"content",E,E,3,N],[3,R[3521],E,E,N,N],[12,"inner",E,E,4,N],[12,"variant",E,E,4,N],[3,"NoTrailing",E,E,N,N],[3,"Trailing",E,E,N,N],[3,"Meta",E,"Note that syn Meta is almost fine for use case (lacks only…",N,N],[12,"inner",E,E,5,N],[3,R[3522],E,E,N,N],[12,"inner",E,E,6,N],[3,"Opt",E,E,N,N],[12,"inner",E,E,7,N],[5,"extract_type_option",E,E,N,[[["type"]],[["option",["type"]],["type"]]]],[5,"type_contains_ident",E,"Check if a `Type` contains the given `Ident`.",N,[[["type"],["ident"]],["bool"]]],[5,"expr_contains_ident",E,"Check if a `Expr` contains the given `Ident`.",N,[[["ident"],["expr"]],["bool"]]],[6,R[2579],E,E,N,N],[6,"PunctuatedTrailing",E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"span",E,E,1,[[["self"]],["span"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"span",E,E,2,[[["self"]],["span"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"span",E,E,3,[[["self"]],["span"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"span",E,E,5,[[["self"]],["span"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"span",E,E,6,[[["self"]],["span"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"span",E,E,7,[[["self"]],["span"]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",E,E,8,[[["self"]],["notrailing"]]],[11,"clone",E,E,9,[[["self"]],["trailing"]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,"clone",E,E,5,[[["self"]],["meta"]]],[11,"clone",E,E,7,[[["self"]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,R[2501],E,E,0,[[["self"],[R[1152]]]]],[11,R[2501],E,E,1,[[[R[1152]],["self"]]]],[11,R[2501],E,E,2,[[[R[1152]],["self"]]]],[11,R[2501],E,E,3,[[[R[1152]],["self"]]]],[11,R[2501],E,E,4,[[[R[1152]],["self"]]]],[11,R[2501],E,E,5,[[[R[1152]],["self"]]]],[11,R[2501],E,E,6,[[[R[1152]],["self"]]]],[11,R[2501],E,E,7,[[[R[1152]],["self"]]]],[11,"parse",E,E,0,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,1,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,2,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,3,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,4,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,4,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,5,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,6,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,7,[[[R[1999]]],[R[3]]]]],"p":[[3,"StopParse"],[3,"Braces"],[3,"Brackets"],[3,"Parens"],[3,R[3521]],[3,"Meta"],[3,R[3522]],[3,"Opt"],[3,"NoTrailing"],[3,"Trailing"]]};
searchIndex["frame_support_procedural_tools_derive"]={"doc":"Use to derive parsing for parsing struct.","i":[[24,"Parse","frame_support_procedural_tools_derive",R[2824],N,N],[24,"ToTokens",E,R[2824],N,N]],"p":[]};
searchIndex["frame_system"]={"doc":"System Module","i":[[3,"Module",R[4808],E,N,N],[3,R[4827],E,"Record of an event happening.",N,N],[12,"phase",E,"The phase of the block it happened in.",0,N],[12,"event",E,"The event itself.",0,N],[12,"topics",E,"The list of the topics this event has.",0,N],[3,R[4828],E,E,N,N],[12,"changes_trie_config",E,E,1,N],[12,"code",E,E,1,N],[3,R[4836],E,R[4810],N,N],[3,"BlockHash",E,R[4811],N,N],[3,"EnsureRoot",E,E,N,N],[3,R[4837],E,E,N,N],[3,R[4838],E,E,N,N],[3,"EnsureNone",E,E,N,N],[3,R[4839],E,E,N,N],[3,R[4833],E,"resource limit check.",N,N],[3,"CheckNonce",E,R[4802],N,N],[3,"CheckEra",E,"Check for transaction mortality.",N,N],[3,R[4834],E,R[4802],N,N],[3,R[4835],E,"Ensure the runtime version registered in the transaction…",N,N],[3,R[4840],E,E,N,N],[4,"Call",E,R[4849],N,N],[13,"fill_block",E,"A big dispatch that will disallow any other transaction to…",2,N],[13,"remark",E,"Make some on-chain remark.",2,N],[13,"set_heap_pages",E,"Set the number of pages in the WebAssembly environment's…",2,N],[13,"set_code",E,R[4809],2,N],[13,R[3903],E,"Set some items of storage.",2,N],[13,R[4803],E,"Kill some items from storage.",2,N],[13,R[4804],E,"Kill all storage items with a key that starts with the…",2,N],[4,"Phase",E,"A phase of a block's execution.",N,N],[13,"ApplyExtrinsic",E,"Applying an extrinsic.",3,N],[13,"Finalization",E,"The end.",3,N],[4,"Event",E,R[4850],N,N],[13,"ExtrinsicSuccess",E,"An extrinsic completed successfully.",4,N],[13,"ExtrinsicFailed",E,"An extrinsic failed.",4,N],[4,"Error",E,"Error for the System module",N,N],[4,"RawOrigin",E,"Origin for the System module.",N,N],[13,"Root",E,"The system itself ordained this dispatch to happen: this…",5,N],[13,"Signed",E,"It is signed by some public key and we provide the…",5,N],[13,"None",E,"It is signed by nobody, can be either: * included and…",5,N],[5,R[4264],E,R[4805],N,[[]]],[5,"extrinsics_data_root",E,R[4805],N,[[["vec",["vec"]],["vec",["u8"]]]]],[5,"ensure_signed",E,"Ensure that the origin `o` represents a signed extrinsic…",N,[[[R[4283]]],[[R[4649]],[R[3],[R[4649]]]]]],[5,"ensure_root",E,"Ensure that the origin `o` represents the root. Returns…",N,[[[R[4283]]],[[R[4649]],[R[3],[R[4649]]]]]],[5,"ensure_none",E,"Ensure that the origin `o` represents an unsigned…",N,[[[R[4283]]],[[R[4649]],[R[3],[R[4649]]]]]],[0,"offchain",E,"Module helpers for offchain calls.",N,N],[3,R[4841],R[4818],"A default type used to submit transactions to the pool.",N,N],[8,"Signer",E,"A trait responsible for signing a payload using given…",N,N],[10,"sign",E,"Sign any encodable payload with given account and produce…",6,[[["public"],["payload"]],["option"]]],[8,R[4806],E,"Creates a runtime-specific signed transaction.",N,N],[16,"Public",E,"A `Public` key representing a particular `AccountId`.",7,N],[16,R[2884],E,"A `Signature` generated by the `Signer`.",7,N],[10,"create_transaction",E,"Attempt to create signed extrinsic data that encodes call…",7,[[],["option"]]],[8,R[4829],E,"A trait to sign and submit transactions in offchain calls.",N,N],[16,R[4843],E,R[4807],8,N],[16,R[4806],E,"A runtime-specific type to produce signed data for the…",8,N],[16,"Signer",E,"A type used to sign transactions created using…",8,N],[11,"sign_and_submit",E,"Sign given call and submit it to the transaction pool.",8,[[],[R[3]]]],[8,R[4830],E,"A trait to submit unsigned transactions in off-chain calls.",N,N],[16,R[4843],E,R[4807],9,N],[11,"submit_unsigned",E,"Submit given call to the transaction pool as unsigned…",9,[[],[R[3]]]],[6,"DigestOf",R[4808],E,N,N],[6,"DigestItemOf",E,E,N,N],[6,"Key",E,E,N,N],[6,"KeyValue",E,E,N,N],[6,"Origin",E,"Exposed trait-generic origin type.",N,N],[8,R[4831],E,"Handler for when a new account has been created.",N,N],[10,"on_new_account",E,"A new account `who` has been registered.",10,[[[R[4302]]]]],[8,R[4832],E,"Determiner to say whether a given account is unused.",N,N],[10,"is_dead_account",E,"Is the given account dead?",11,[[[R[4302]]],["bool"]]],[8,"Trait",E,E,N,N],[16,"Origin",E,"The aggregated `Origin` type used by dispatchable calls.",12,N],[16,"Call",E,"The aggregated `Call` type.",12,N],[16,"Index",E,"Account index (aka nonce) type. This stores the number of…",12,N],[16,"BlockNumber",E,"The block number type used by the runtime.",12,N],[16,"Hash",E,"The output of the `Hashing` function.",12,N],[16,"Hashing",E,"The hashing system (algorithm) being used in the runtime…",12,N],[16,R[4295],E,"The user account identifier type for the runtime.",12,N],[16,"Lookup",E,"Converting trait to take a source type and convert to…",12,N],[16,"Header",E,R[4842],12,N],[16,"Event",E,"The aggregated event type of the runtime.",12,N],[16,"BlockHashCount",E,"Maximum number of block number to block hash mappings to…",12,N],[16,"MaximumBlockWeight",E,"The maximum weight of a block.",12,N],[16,"MaximumBlockLength",E,"The maximum length of a block (in bytes).",12,N],[16,"AvailableBlockRatio",E,"The portion of the block that is available to normal…",12,N],[16,"Version",E,"Get the chain's current version.",12,N],[16,R[4593],E,"Convert a module to its index in the runtime.",12,N],[11,"set_code",E,R[4809],13,[[["u8"],["vec",["u8"]]],[R[4543]]]],[11,"account_nonce",E,R[4810],13,[[[R[4498]]]]],[11,"block_hash",E,R[4811],13,[[[R[4498]]]]],[11,"extrinsic_data",E,"Extrinsics data for the current block (maps an extrinsic's…",13,[[["u32"],[R[4498],["u32"]]],[["vec",["u8"]],["u8"]]]],[11,"block_number",E,"The current block number being processed. Set by…",13,[[]]],[11,R[4263],E,"Hash of the previous block.",13,[[]]],[11,R[4264],E,"Extrinsics root of the current block, also part of the…",13,[[]]],[11,"digest",E,"Digest of the current block, also part of the block header.",13,[[],["digestof"]]],[11,"events",E,"Events deposited for the current block.",13,[[],[[R[4812]],["vec",[R[4812]]]]]],[11,"event_count",E,"The number of events in the `Events<T>` list.",13,[[],["u32"]]],[11,"event_topics",E,E,13,[[["karg1"],["karg2"]],["vec"]]],[11,R[4844],E,E,1,[[["self"]],[[R[3],["storage","string"]],["storage"],["string"]]]],[11,R[4329],E,R[4845],1,[[["storage"],["self"]],[["string"],[R[3],["string"]]]]],[11,"deposit_event",E,"Deposits an event into this block's event record.",13,[[]]],[11,"deposit_event_indexed",E,"Deposits an event into this block's event record adding…",13,[[]]],[11,"extrinsic_index",E,"Gets the index of extrinsic that is currently executing.",13,[[],[["u32"],["option",["u32"]]]]],[11,"extrinsic_count",E,"Gets extrinsics count.",13,[[],["u32"]]],[11,"all_extrinsics_weight",E,"Gets a total weight of all executed extrinsics.",13,[[],["weight"]]],[11,"all_extrinsics_len",E,E,13,[[],["u32"]]],[11,"register_extra_weight_unchecked",E,"Inform the system module of some additional weight that…",13,[[["weight"]]]],[11,R[2628],E,"Start the execution of a particular block.",13,[[["digestof"]]]],[11,"finalize",E,"Remove temporary \"environment\" entries in storage.",13,[[]]],[11,"deposit_log",E,"Deposits a log and ensures it matches the block's log data.",13,[[["digestitemof"]]]],[11,R[3886],E,"Get the basic externalities for this module, useful for…",13,[[],[R[4848]]]],[11,"set_block_number",E,"Set the block number to something in particular. Can be…",13,[[]]],[11,"set_extrinsic_index",E,"Sets the index of extrinsic that is currently executing.",13,[[["u32"]]]],[11,R[4321],E,"Set the parent hash number to something in particular. Can…",13,[[]]],[11,"set_block_limits",E,"Set the current block weight. This should only be used in…",13,[[["usize"],["weight"]]]],[11,R[4443],E,"Return the chain's current runtime version.",13,[[],[R[4444]]]],[11,"inc_account_nonce",E,"Increment a particular account's nonce by 1.",13,[[]]],[11,"note_extrinsic",E,"Note what the extrinsic data of the current extrinsic…",13,[[["vec",["u8"]],["u8"]]]],[11,"note_applied_extrinsic",E,"To be called immediately after an extrinsic has been…",13,[[["dispatchoutcome"],["u32"],[R[4566]]]]],[11,"note_finished_extrinsics",E,"To be called immediately after `note_applied_extrinsic` of…",13,[[]]],[11,"derive_extrinsics",E,"Remove all extrinsic data and save the extrinsics trie root.",13,[[]]],[11,"new",E,"Creates new `SignedExtension` to check weight of the…",14,[[],["self"]]],[11,"from",E,R[4813],15,[[],["self"]]],[11,"from",E,R[4813],16,[[["era"]],["self"]]],[11,"new",E,"Creates new `SignedExtension` to check genesis hash.",17,[[],["self"]]],[11,"new",E,"Create new `SignedExtension` to check runtime version.",18,[[],["self"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"],[T]]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,R[3774],E,E,13,[[],[T]]],[11,R[3779],E,R[3776],13,[[["outer"]],[T]]],[11,R[3780],E,R[3777],13,[[["outer"]],[T]]],[11,R[3601],E,E,13,[[],[T]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[292],E,E,0,[[["self"]],["usize"]]],[11,R[3525],E,E,0,[[["self"],["f"]],["r"]]],[11,"encode",E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,0,[[["w"],["self"]]]],[11,"decode",E,E,0,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,0,[[],[["error"],[R[3],["error"]]]]],[11,R[3774],E,E,0,[[],[T]]],[11,R[3779],E,R[3776],0,[[["outer"]],[T]]],[11,R[3780],E,R[3777],0,[[["outer"]],[T]]],[11,R[3601],E,E,0,[[],[T]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[4625],E,E,0,[[["self"]]]],[11,R[4626],E,E,0,[[["self"]]]],[11,R[4814],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,0,[[["self"]]]],[11,R[4817],E,E,0,[[["self"]]]],[11,R[4815],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[3774],E,E,1,[[],[T]]],[11,R[3779],E,R[3776],1,[[["outer"]],[T]]],[11,R[3780],E,R[3777],1,[[["outer"]],[T]]],[11,R[3601],E,E,1,[[],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[2628],E,E,1,[[]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,R[3774],E,E,19,[[],[T]]],[11,R[3779],E,R[3776],19,[[["outer"]],[T]]],[11,R[3780],E,R[3777],19,[[["outer"]],[T]]],[11,R[3601],E,E,19,[[],[T]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[4510],E,E,19,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap",E,E,19,[[["keyarg1"],["keyarg2"]]]],[11,"exists",E,E,19,[[["keyarg"]],["bool"]]],[11,"get",E,E,19,[[["keyarg"]]]],[11,"insert",E,E,19,[[["valarg"],["keyarg"]]]],[11,"remove",E,E,19,[[["keyarg"]]]],[11,"mutate",E,E,19,[[["f"],["keyarg"]],["r"]]],[11,"take",E,E,19,[[["keyarg"]]]],[11,"append",E,E,19,[[["items"],["keyarg"]],[["str"],[R[3],["str"]]]]],[11,R[4511],E,E,19,[[["items"],["keyarg"]]]],[11,R[4508],E,E,19,[[["keyarg"]],[["str"],[R[3],["usize","str"]],["usize"]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,R[3774],E,E,20,[[],[T]]],[11,R[3779],E,R[3776],20,[[["outer"]],[T]]],[11,R[3780],E,R[3777],20,[[["outer"]],[T]]],[11,R[3601],E,E,20,[[],[T]]],[11,"vzip",E,E,20,[[],["v"]]],[11,R[4510],E,E,20,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap",E,E,20,[[["keyarg1"],["keyarg2"]]]],[11,"exists",E,E,20,[[["keyarg"]],["bool"]]],[11,"get",E,E,20,[[["keyarg"]]]],[11,"insert",E,E,20,[[["valarg"],["keyarg"]]]],[11,"remove",E,E,20,[[["keyarg"]]]],[11,"mutate",E,E,20,[[["f"],["keyarg"]],["r"]]],[11,"take",E,E,20,[[["keyarg"]]]],[11,"append",E,E,20,[[["items"],["keyarg"]],[["str"],[R[3],["str"]]]]],[11,R[4511],E,E,20,[[["items"],["keyarg"]]]],[11,R[4508],E,E,20,[[["keyarg"]],[["str"],[R[3],["usize","str"]],["usize"]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,R[3774],E,E,21,[[],[T]]],[11,R[3779],E,R[3776],21,[[["outer"]],[T]]],[11,R[3780],E,R[3777],21,[[["outer"]],[T]]],[11,R[3601],E,E,21,[[],[T]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,R[3774],E,E,22,[[],[T]]],[11,R[3779],E,R[3776],22,[[["outer"]],[T]]],[11,R[3780],E,R[3777],22,[[["outer"]],[T]]],[11,R[3601],E,E,22,[[],[T]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,R[3774],E,E,23,[[],[T]]],[11,R[3779],E,R[3776],23,[[["outer"]],[T]]],[11,R[3780],E,R[3777],23,[[["outer"]],[T]]],[11,R[3601],E,E,23,[[],[T]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,R[3774],E,E,24,[[],[T]]],[11,R[3779],E,R[3776],24,[[["outer"]],[T]]],[11,R[3780],E,R[3777],24,[[["outer"]],[T]]],[11,R[3601],E,E,24,[[],[T]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,R[3774],E,E,25,[[],[T]]],[11,R[3779],E,R[3776],25,[[["outer"]],[T]]],[11,R[3780],E,R[3777],25,[[["outer"]],[T]]],[11,R[3601],E,E,25,[[],[T]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,R[292],E,E,14,[[["self"]],["usize"]]],[11,R[3525],E,E,14,[[["self"],["f"]],["r"]]],[11,"encode",E,E,14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,14,[[["w"],["self"]]]],[11,"decode",E,E,14,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,14,[[],[["error"],[R[3],["error"]]]]],[11,R[3774],E,E,14,[[],[T]]],[11,R[3779],E,R[3776],14,[[["outer"]],[T]]],[11,R[3780],E,R[3777],14,[[["outer"]],[T]]],[11,R[3601],E,E,14,[[],[T]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[4625],E,E,14,[[["self"]]]],[11,R[4626],E,E,14,[[["self"]]]],[11,R[4814],E,E,14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,14,[[["self"]]]],[11,R[4817],E,E,14,[[["self"]]]],[11,R[4815],E,E,14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,R[292],E,E,15,[[["self"]],["usize"]]],[11,R[3525],E,E,15,[[["self"],["f"]],["r"]]],[11,"encode",E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,15,[[["w"],["self"]]]],[11,"decode",E,E,15,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,15,[[],[["error"],[R[3],["error"]]]]],[11,R[3774],E,E,15,[[],[T]]],[11,R[3779],E,R[3776],15,[[["outer"]],[T]]],[11,R[3780],E,R[3777],15,[[["outer"]],[T]]],[11,R[3601],E,E,15,[[],[T]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[4625],E,E,15,[[["self"]]]],[11,R[4626],E,E,15,[[["self"]]]],[11,R[4814],E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,15,[[["self"]]]],[11,R[4817],E,E,15,[[["self"]]]],[11,R[4815],E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,R[292],E,E,16,[[["self"]],["usize"]]],[11,R[3525],E,E,16,[[["self"],["f"]],["r"]]],[11,"encode",E,E,16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,16,[[["w"],["self"]]]],[11,"decode",E,E,16,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,16,[[],[["error"],[R[3],["error"]]]]],[11,R[3774],E,E,16,[[],[T]]],[11,R[3779],E,R[3776],16,[[["outer"]],[T]]],[11,R[3780],E,R[3777],16,[[["outer"]],[T]]],[11,R[3601],E,E,16,[[],[T]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[4625],E,E,16,[[["self"]]]],[11,R[4626],E,E,16,[[["self"]]]],[11,R[4814],E,E,16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,16,[[["self"]]]],[11,R[4817],E,E,16,[[["self"]]]],[11,R[4815],E,E,16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,R[292],E,E,17,[[["self"]],["usize"]]],[11,R[3525],E,E,17,[[["self"],["f"]],["r"]]],[11,"encode",E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,17,[[["w"],["self"]]]],[11,"decode",E,E,17,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,17,[[],[["error"],[R[3],["error"]]]]],[11,R[3774],E,E,17,[[],[T]]],[11,R[3779],E,R[3776],17,[[["outer"]],[T]]],[11,R[3780],E,R[3777],17,[[["outer"]],[T]]],[11,R[3601],E,E,17,[[],[T]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[4625],E,E,17,[[["self"]]]],[11,R[4626],E,E,17,[[["self"]]]],[11,R[4814],E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,17,[[["self"]]]],[11,R[4817],E,E,17,[[["self"]]]],[11,R[4815],E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"],[T]]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,R[292],E,E,18,[[["self"]],["usize"]]],[11,R[3525],E,E,18,[[["self"],["f"]],["r"]]],[11,"encode",E,E,18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,18,[[["w"],["self"]]]],[11,"decode",E,E,18,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,18,[[],[["error"],[R[3],["error"]]]]],[11,R[3774],E,E,18,[[],[T]]],[11,R[3779],E,R[3776],18,[[["outer"]],[T]]],[11,R[3780],E,R[3777],18,[[["outer"]],[T]]],[11,R[3601],E,E,18,[[],[T]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[4625],E,E,18,[[["self"]]]],[11,R[4626],E,E,18,[[["self"]]]],[11,R[4814],E,E,18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,18,[[["self"]]]],[11,R[4817],E,E,18,[[["self"]]]],[11,R[4815],E,E,18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,R[3774],E,E,26,[[],[T]]],[11,R[3779],E,R[3776],26,[[["outer"]],[T]]],[11,R[3780],E,R[3777],26,[[["outer"]],[T]]],[11,R[3601],E,E,26,[[],[T]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"clear",E,E,26,[[["self"]]]],[11,R[2628],E,E,26,[[]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[292],E,E,2,[[["self"]],["usize"]]],[11,R[3525],E,E,2,[[["self"],["f"]],["r"]]],[11,"encode",E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,2,[[["w"],["self"]]]],[11,"decode",E,E,2,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,2,[[],[["error"],[R[3],["error"]]]]],[11,R[3774],E,E,2,[[],[T]]],[11,R[3779],E,R[3776],2,[[["outer"]],[T]]],[11,R[3780],E,R[3777],2,[[["outer"]],[T]]],[11,R[3601],E,E,2,[[],[T]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[4625],E,E,2,[[["self"]]]],[11,R[4626],E,E,2,[[["self"]]]],[11,R[4814],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,2,[[["self"]]]],[11,R[4817],E,E,2,[[["self"]]]],[11,R[4815],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[292],E,E,3,[[["self"]],["usize"]]],[11,R[3525],E,E,3,[[["self"],["f"]],["r"]]],[11,"encode",E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,3,[[["w"],["self"]]]],[11,"decode",E,E,3,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,3,[[],[["error"],[R[3],["error"]]]]],[11,R[3774],E,E,3,[[],[T]]],[11,R[3779],E,R[3776],3,[[["outer"]],[T]]],[11,R[3780],E,R[3777],3,[[["outer"]],[T]]],[11,R[3601],E,E,3,[[],[T]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[4625],E,E,3,[[["self"]]]],[11,R[4626],E,E,3,[[["self"]]]],[11,R[4814],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,3,[[["self"]]]],[11,R[4817],E,E,3,[[["self"]]]],[11,R[4815],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[292],E,E,4,[[["self"]],["usize"]]],[11,R[3525],E,E,4,[[["self"],["f"]],["r"]]],[11,"encode",E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,4,[[["w"],["self"]]]],[11,"decode",E,E,4,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,4,[[],[["error"],[R[3],["error"]]]]],[11,R[3774],E,E,4,[[],[T]]],[11,R[3779],E,R[3776],4,[[["outer"]],[T]]],[11,R[3780],E,R[3777],4,[[["outer"]],[T]]],[11,R[3601],E,E,4,[[],[T]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[4625],E,E,4,[[["self"]]]],[11,R[4626],E,E,4,[[["self"]]]],[11,R[4814],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,4,[[["self"]]]],[11,R[4817],E,E,4,[[["self"]]]],[11,R[4815],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,R[3774],E,E,27,[[],[T]]],[11,R[3779],E,R[3776],27,[[["outer"]],[T]]],[11,R[3780],E,R[3777],27,[[["outer"]],[T]]],[11,R[3601],E,E,27,[[],[T]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[3774],E,E,5,[[],[T]]],[11,R[3779],E,R[3776],5,[[["outer"]],[T]]],[11,R[3780],E,R[3777],5,[[["outer"]],[T]]],[11,R[3601],E,E,5,[[],[T]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",R[4818],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,R[3774],E,E,28,[[],[T]]],[11,R[3779],E,R[3776],28,[[["outer"]],[T]]],[11,R[3780],E,R[3777],28,[[["outer"]],[T]]],[11,R[3601],E,E,28,[[],[T]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"clear",E,E,28,[[["self"]]]],[11,R[2628],E,E,28,[[]]],[11,"from",R[4808],E,5,[[["option"]],[R[4819]]]],[11,"clone",E,E,13,[[["self"]],["module"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["phase"]]],[11,"clone",E,E,0,[[["self"]],[R[4812]]]],[11,"clone",E,E,4,[[["self"]],["event"]]],[11,"clone",E,E,5,[[["self"]],[R[4819]]]],[11,"clone",E,E,14,[[["self"]],[R[4820]]]],[11,"clone",E,E,15,[[["self"]],[R[4821]]]],[11,"clone",E,E,16,[[["self"]],["checkera"]]],[11,"clone",E,E,17,[[["self"]],[R[4822]]]],[11,"clone",E,E,18,[[["self"]],[R[4823]]]],[11,R[90],R[4818],E,28,[[],["self"]]],[11,R[90],R[4808],E,1,[[],["self"]]],[11,R[90],E,E,26,[[],["self"]]],[11,"eq",E,E,13,[[["self"],["module"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["module"]],["bool"]]],[11,"eq",E,E,2,[[["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["phase"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["phase"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[4812]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[4812]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["event"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["event"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[4819]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[4819]]],["bool"]]],[11,"eq",E,E,14,[[[R[4820]],["self"]],["bool"]]],[11,"ne",E,E,14,[[[R[4820]],["self"]],["bool"]]],[11,"eq",E,E,15,[[[R[4821]],["self"]],["bool"]]],[11,"ne",E,E,15,[[[R[4821]],["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],["checkera"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["checkera"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[4822]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[4822]]],["bool"]]],[11,"eq",E,E,18,[[[R[4823]],["self"]],["bool"]]],[11,"ne",E,E,18,[[[R[4823]],["self"]],["bool"]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,15,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,16,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,17,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,18,[[[R[37]],["self"]],[R[3]]]],[11,R[132],E,E,3,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,0,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,1,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,1,[[["__d"]],[R[3]]]],[11,R[3603],E,E,2,[[["self"],["encout"]]]],[11,R[3603],E,E,3,[[["self"],["encout"]]]],[11,R[3603],E,E,0,[[["self"],["encout"]]]],[11,R[3603],E,E,4,[[["self"],["encout"]]]],[11,R[3603],E,E,14,[[["self"],["encout"]]]],[11,"encode",E,E,14,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,14,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,15,[[["self"],["encout"]]]],[11,"encode",E,E,15,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,15,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,16,[[["self"],["encout"]]]],[11,"encode",E,E,16,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,16,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,17,[[["self"],["encout"]]]],[11,"encode",E,E,17,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,17,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,18,[[["self"],["encout"]]]],[11,"encode",E,E,18,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,18,[[["fnonce"],["self"]],["r"]]],[11,"decode",E,E,2,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,3,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,0,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,4,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,14,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,15,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,16,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,17,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,18,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,R[4824],E,E,21,[[["o"]],[R[3]]]],[11,R[4824],E,E,22,[[["o"]],[R[3]]]],[11,R[4824],E,E,23,[[["o"]],[R[3]]]],[11,R[4824],E,E,24,[[["o"]],[R[3]]]],[11,R[4824],E,E,25,[[["o"]],[R[3]]]],[11,"lookup",E,E,26,[[["self"]],[[R[4284]],[R[3],[R[4284]]]]]],[11,R[937],E,E,2,[[],[R[4543]]]],[11,R[4825],E,E,14,[[["self"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,R[4298],E,E,14,[[["usize"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,R[4847],E,E,14,[[["usize"],["self"]],[R[4294]]]],[11,R[4825],E,E,15,[[["self"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,R[4298],E,E,15,[[["usize"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,R[4847],E,E,15,[[["usize"],["self"]],[R[4294]]]],[11,R[4847],E,E,16,[[["usize"],["self"]],[R[4294]]]],[11,R[4825],E,E,16,[[["self"]],[[R[3],[R[4251]]],[R[4251]]]]],[11,R[4825],E,E,17,[[["self"]],[[R[3],[R[4251]]],[R[4251]]]]],[11,R[4825],E,E,18,[[["self"]],[[R[3],[R[4251]]],[R[4251]]]]],[11,R[4846],E,E,1,[[["storage"],["self"]],[["string"],[R[3],["string"]]]]],[11,R[939],E,E,13,[[]]],[11,R[939],E,E,27,[[]]],[11,R[4826],E,E,2,[[["self"]],[R[4566]]]],[11,R[4487],E,E,19,[[]]],[11,R[4489],E,E,19,[[]]],[11,R[4491],E,E,19,[[["option"]]]],[11,R[4493],E,E,19,[[],["option"]]],[11,R[4487],E,E,20,[[]]],[11,R[4489],E,E,20,[[]]],[11,R[4491],E,E,20,[[["option"]]]],[11,R[4493],E,E,20,[[],["option"]]],[11,R[4487],E,E,19,[[]]],[11,R[4489],E,E,19,[[]]],[11,R[4487],E,E,20,[[]]],[11,R[4489],E,E,20,[[]]]],"p":[[3,R[4827]],[3,R[4828]],[4,"Call"],[4,"Phase"],[4,"Event"],[4,"RawOrigin"],[8,"Signer"],[8,R[4806]],[8,R[4829]],[8,R[4830]],[8,R[4831]],[8,R[4832]],[8,"Trait"],[3,"Module"],[3,R[4833]],[3,"CheckNonce"],[3,"CheckEra"],[3,R[4834]],[3,R[4835]],[3,R[4836]],[3,"BlockHash"],[3,"EnsureRoot"],[3,R[4837]],[3,R[4838]],[3,"EnsureNone"],[3,R[4839]],[3,R[4840]],[4,"Error"],[3,R[4841]]]};
searchIndex["generic_array"]={"doc":"This crate implements a structure that can be used as a…","i":[[3,R[1621],R[1612],"Struct representing a generic array - `GenericArray<T, N>`…",N,N],[0,"arr",E,"Implementation for `arr!` macro.",N,N],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",N,N],[8,"AddLength",E,"Helper trait for `arr!` macro",N,N],[16,"Output",E,"Resulting length",0,N],[0,"functional",R[1612],"Functional programming with generic sequences",N,N],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",N,N],[8,R[1616],E,"Defines the relationship between one generic sequence and…",N,N],[16,"Mapped",E,"Mapped sequence type",1,N],[8,R[1617],E,"Defines functional programming methods for generic sequences",N,N],[11,"map",E,"Maps a `GenericSequence` to another `GenericSequence`.",2,[[["f"]],[R[1613]]]],[11,"zip",E,"Combines two `GenericSequence` instances and iterates…",2,[[["rhs"],["f"]],[R[1613]]]],[11,"fold",E,"Folds (or reduces) a sequence of data into a single value.",2,[[[U],["f"]],[U]]],[0,"iter",R[1612],"`GenericArray` iterator implementation.",N,N],[3,R[1618],R[1615],"An iterator that moves out of a `GenericArray`",N,N],[11,R[589],E,"Returns the remaining items of this iterator as a slice",3,[[["self"]]]],[11,R[291],E,R[609],3,[[["self"]]]],[0,"sequence",R[1612],"Useful traits for manipulating sequences of data stored in…",N,N],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",N,N],[8,R[1619],E,"Defines some sequence with an associated length and…",N,N],[16,"Length",E,"`GenericArray` associated length",4,N],[16,"Sequence",E,"Concrete sequence type used in conjuction with reference…",4,N],[10,R[1622],E,"Initializes a new sequence instance using the given…",4,[[["f"]]]],[8,"Lengthen",E,"Defines any `GenericSequence` which can be lengthened or…",N,N],[16,"Longer",E,"`GenericSequence` that has one more element than `Self`",5,N],[10,"append",E,"Returns a new array with the given element appended to the…",5,[[[T]]]],[10,"prepend",E,"Returns a new array with the given element prepended to…",5,[[[T]]]],[8,"Shorten",E,"Defines a `GenericSequence` which can be shortened by…",N,N],[16,"Shorter",E,"`GenericSequence` that has one less element than `Self`",6,N],[10,"pop_back",E,"Returns a new array without the last element, and the last…",6,[[]]],[10,"pop_front",E,"Returns a new array without the first element, and the…",6,[[]]],[8,"Split",E,"Defines a `GenericSequence` that can be split into two…",N,N],[16,"First",E,"First part of the resulting split array",7,N],[16,"Second",E,"Second part of the resulting split array",7,N],[10,"split",E,"Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat",E,"Defines `GenericSequence`s which can be joined together,…",N,N],[16,"Rest",E,"Sequence to be concatenated with `self`",8,N],[16,"Output",E,"Resulting sequence formed by the concatenation.",8,N],[10,"concat",E,"Concatenate, or join, two sequences.",8,[[]]],[8,R[1620],R[1612],"Trait making `GenericArray` work, marking types to be used…",N,N],[16,"ArrayType",E,"Associated type representing the array type for the number",9,N],[11,R[589],E,"Extracts a slice containing the entire array.",10,[[["self"]]]],[11,R[291],E,"Extracts a mutable slice containing the entire array.",10,[[["self"]]]],[11,R[768],E,"Converts slice to a generic array reference with inferred…",10,[[],[R[1614]]]],[11,"from_mut_slice",E,"Converts mutable slice to a mutable generic array reference",10,[[],[R[1614]]]],[11,"clone_from_slice",E,"Construct a `GenericArray` from a slice by cloning its…",10,[[],[R[1614]]]],[11,"from_exact_iter",E,"Creates a new `GenericArray` instance from an iterator…",10,[[["i"]],["option"]]],[14,"arr",E,"Macro allowing for easy generation of Generic Arrays.…",N,N],[11,"from",E,E,10,[[[T]],[T]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[211],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"from",R[1615],E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[211],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"map",R[1612],E,10,[[["f"]],[R[1613]]]],[11,"zip",E,E,10,[[["rhs"],["f"]],[R[1613]]]],[11,"fold",E,E,10,[[[U],["f"]],[U]]],[11,R[1622],E,E,10,[[["f"]],[R[1614]]]],[11,"append",E,E,10,[[[T]]]],[11,"prepend",E,E,10,[[[T]]]],[11,"pop_back",E,E,10,[[]]],[11,"pop_front",E,E,10,[[]]],[11,"split",E,E,10,[[]]],[11,"concat",E,E,10,[[]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"fmt",E,E,10,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[1615],E,3,[[[R[37]],["self"]],[R[3]]]],[11,"eq",R[1612],E,10,[[["self"]],["bool"]]],[11,"cmp",E,E,10,[[["self"],[R[1614]]],[R[105]]]],[11,R[106],E,E,10,[[["self"],[R[1614]]],[[R[105]],["option",[R[105]]]]]],[11,"deref",E,E,10,[[["self"]]]],[11,R[99],E,E,10,[[["self"]]]],[11,"drop",R[1615],E,3,[[["self"]]]],[11,"hash",R[1612],E,10,[[["self"],["h"]]]],[11,"next",R[1615],E,3,[[["self"]],["option"]]],[11,R[292],E,E,3,[[["self"]]]],[11,"count",E,E,3,[[],["usize"]]],[11,"nth",E,E,3,[[["self"],["usize"]],["option"]]],[11,"last",E,E,3,[[],["option"]]],[11,R[293],R[1612],E,10,[[["i"]],[R[1614]]]],[11,R[211],E,E,10,[[]]],[11,R[295],R[1615],E,3,[[["self"]],["option"]]],[11,"len",E,E,3,[[["self"]],["usize"]]],[11,"as_ref",R[1612],E,10,[[["self"]]]],[11,"as_mut",E,E,10,[[["self"]]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"fmt",E,E,10,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,10,[[[R[37]],["self"]],[R[3]]]],[11,"clone",E,E,10,[[["self"]],[R[1614]]]],[11,"clone",R[1615],E,3,[[["self"]],["self"]]],[11,R[90],R[1612],E,10,[[],["self"]]],[11,R[45],E,E,10,[[["self"]]]],[11,R[22],E,E,10,[[["self"]]]]],"p":[[8,"AddLength"],[8,R[1616]],[8,R[1617]],[3,R[1618]],[8,R[1619]],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,R[1620]],[3,R[1621]]]};
searchIndex["getrandom"]={"doc":R[1577],"i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",N,N],[5,"getrandom",E,"Fill `dest` with random bytes from the system's preferred…",N,[[],[[R[3],["error"]],["error"]]]],[18,"UNKNOWN",E,"Unknown error.",0,N],[18,"UNAVAILABLE",E,"System entropy source is unavailable.",0,N],[18,R[1641],E,R[1642],0,N],[18,R[1643],E,R[1644],0,N],[11,R[1645],E,R[1646],0,[[],[["option",["i32"]],["i32"]]]],[11,"code",E,"Extract the bare error code.",0,[[],[R[438]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[R[438]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"eq",E,E,0,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["error"],["self"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["hash256_std_hasher"]={"doc":E,"i":[[3,R[1372],"hash256_std_hasher","Hasher that just takes 8 bytes of the provided value. May…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[90],E,E,0,[[],["hash256stdhasher"]]],[11,"finish",E,E,0,[[["self"]],["u64"]]],[11,"write",E,E,0,[[["self"]]]]],"p":[[3,R[1372]]]};
searchIndex["hash_db"]={"doc":"Database of byte-slices keyed to their hash.","i":[[6,"Prefix","hash_db","A trie node prefix, it is the nibble path from the trie…",N,N],[7,R[3958],E,"An empty prefix constant. Can be use when the prefix is…",N,N],[8,R[3485],E,E,N,N],[8,"Hasher",E,R[1338],N,N],[16,"Out",E,R[1339],0,N],[16,R[3936],E,R[1340],0,N],[18,"LENGTH",E,R[1341],0,N],[10,"hash",E,R[1342],0,[[]]],[8,"PlainDB",E,"Trait modelling a plain datastore whose key is a fixed…",N,N],[10,"get",E,R[112],1,[[["k"],["self"]],["option"]]],[10,R[114],E,R[113],1,[[["k"],["self"]],["bool"]]],[10,"emplace",E,"Insert a datum item into the DB. Insertions are counted…",1,[[["self"],["k"],["v"]]]],[10,"remove",E,R[115],1,[[["k"],["self"]]]],[8,R[116],E,"Trait for immutable reference of PlainDB.",N,N],[10,"get",E,R[112],2,[[["k"],["self"]],["option"]]],[10,R[114],E,R[113],2,[[["k"],["self"]],["bool"]]],[8,"HashDB",E,R[3415],N,N],[10,"get",E,R[112],3,[[["prefix"],["self"]],["option"]]],[10,R[114],E,R[113],3,[[["prefix"],["self"]],["bool"]]],[10,"insert",E,R[3416],3,[[["self"],["prefix"]]]],[10,"emplace",E,R[3417],3,[[["self"],[T],["prefix"]]]],[10,"remove",E,R[115],3,[[["prefix"],["self"]]]],[8,R[117],E,R[3418],N,N],[10,"get",E,R[112],4,[[["prefix"],["self"]],["option"]]],[10,R[114],E,R[113],4,[[["prefix"],["self"]],["bool"]]],[8,"AsHashDB",E,"Upcast trait for HashDB.",N,N],[10,R[3964],E,"Perform upcast to HashDB for anything that derives from…",5,[[["self"]],["hashdb"]]],[10,R[3478],E,"Perform mutable upcast to HashDB for anything that derives…",5,[[["self"]],["hashdb"]]],[8,R[118],E,"Upcast trait for PlainDB.",N,N],[10,R[3479],E,"Perform upcast to PlainDB for anything that derives from…",6,[[["self"]],["plaindb"]]],[10,R[3480],E,"Perform mutable upcast to PlainDB for anything that…",6,[[["self"]],["plaindb"]]]],"p":[[8,"Hasher"],[8,"PlainDB"],[8,R[116]],[8,"HashDB"],[8,R[117]],[8,"AsHashDB"],[8,R[118]]]};
searchIndex["hashbrown"]={"doc":"This crate is a Rust port of Google's high-performance…","i":[[3,"HashMap",R[1522],R[1512],N,N],[3,"HashSet",E,R[1519],N,N],[4,R[1539],E,"Augments `AllocErr` with a `CapacityOverflow` variant.",N,N],[13,"CapacityOverflow",E,"Error due to the computed capacity exceeding the…",0,N],[13,"AllocErr",E,"Error due to the allocator.",0,N],[12,"layout","hashbrown::CollectionAllocErr","The layout of the allocation request that failed.",0,N],[11,"new",R[1522],"Creates an empty `HashMap`.",1,[[],["self"]]],[11,R[287],E,"Creates an empty `HashMap` with the specified capacity.",1,[[["usize"]],["self"]]],[11,R[1510],E,"Creates an empty `HashMap` which will use the given hash…",1,[[["s"]],["self"]]],[11,R[1511],E,"Creates an empty `HashMap` with the specified capacity,…",1,[[["s"],["usize"]],["self"]]],[11,"hasher",E,"Returns a reference to the map's [`BuildHasher`].",1,[[["self"]],["s"]]],[11,R[619],E,"Returns the number of elements the map can hold without…",1,[[["self"]],["usize"]]],[11,"keys",E,"An iterator visiting all keys in arbitrary order. The…",1,[[["self"]],["keys"]]],[11,"values",E,"An iterator visiting all values in arbitrary order. The…",1,[[["self"]],["values"]]],[11,"values_mut",E,"An iterator visiting all values mutably in arbitrary…",1,[[["self"]],["valuesmut"]]],[11,"iter",E,R[1509],1,[[["self"]],["iter"]]],[11,R[628],E,R[1509],1,[[["self"]],["itermut"]]],[11,"len",E,R[1556],1,[[["self"]],["usize"]]],[11,R[340],E,R[3278],1,[[["self"]],["bool"]]],[11,"drain",E,"Clears the map, returning all key-value pairs as an…",1,[[["self"]],["drain"]]],[11,"clear",E,"Clears the map, removing all key-value pairs. Keeps the…",1,[[["self"]]]],[11,"reserve",E,R[621],1,[[["self"],["usize"]]]],[11,R[624],E,R[625],1,[[["self"],["usize"]],[[R[1508]],[R[3],[R[1508]]]]]],[11,R[596],E,"Shrinks the capacity of the map as much as possible. It…",1,[[["self"]]]],[11,R[626],E,"Shrinks the capacity of the map with a lower limit. It…",1,[[["self"],["usize"]]]],[11,"entry",E,R[1555],1,[[["self"],["k"]],["entry"]]],[11,"get",E,R[1550],1,[[["self"],["q"]],[["option"],["v"]]]],[11,R[1526],E,R[1551],1,[[["self"],["q"]],["option"]]],[11,R[610],E,R[3277],1,[[["self"],["q"]],["bool"]]],[11,R[471],E,R[1552],1,[[["self"],["q"]],[["v"],["option"]]]],[11,"insert",E,R[1553],1,[[["self"],["k"],["v"]],["option"]]],[11,"remove",E,R[1554],1,[[["self"],["q"]],["option"]]],[11,R[1529],E,"Removes a key from the map, returning the stored key and…",1,[[["self"],["q"]],["option"]]],[11,"retain",E,R[602],1,[[["self"],["f"]]]],[11,"raw_entry_mut",E,"Creates a raw entry builder for the HashMap.",1,[[["self"]],["rawentrybuildermut"]]],[11,"raw_entry",E,"Creates a raw immutable entry builder for the HashMap.",1,[[["self"]],["rawentrybuilder"]]],[11,"new",E,"Creates an empty `HashSet`.",2,[[],["self"]]],[11,R[287],E,"Creates an empty `HashSet` with the specified capacity.",2,[[["usize"]],["self"]]],[11,R[619],E,"Returns the number of elements the set can hold without…",2,[[["self"]],["usize"]]],[11,"iter",E,"An iterator visiting all elements in arbitrary order. The…",2,[[["self"]],["iter"]]],[11,"len",E,R[1576],2,[[["self"]],["usize"]]],[11,R[340],E,R[3280],2,[[["self"]],["bool"]]],[11,"drain",E,"Clears the set, returning all elements in an iterator.",2,[[["self"]],["drain"]]],[11,"clear",E,R[1565],2,[[["self"]]]],[11,R[1510],E,"Creates a new empty hash set which will use the given…",2,[[["s"]],["self"]]],[11,R[1511],E,"Creates an empty `HashSet` with the specified capacity,…",2,[[["s"],["usize"]],["self"]]],[11,"hasher",E,"Returns a reference to the set's [`BuildHasher`].",2,[[["self"]],["s"]]],[11,"reserve",E,R[621],2,[[["self"],["usize"]]]],[11,R[624],E,R[625],2,[[["self"],["usize"]],[[R[1508]],[R[3],[R[1508]]]]]],[11,R[596],E,"Shrinks the capacity of the set as much as possible. It…",2,[[["self"]]]],[11,R[626],E,"Shrinks the capacity of the set with a lower limit. It…",2,[[["self"],["usize"]]]],[11,R[614],E,R[1561],2,[[["self"]],[R[614]]]],[11,R[1057],E,R[1562],2,[[["self"]],[R[615]]]],[11,R[616],E,R[1563],2,[[["self"]],[R[616]]]],[11,"union",E,R[1564],2,[[["self"]],["union"]]],[11,R[114],E,R[1566],2,[[["self"],["q"]],["bool"]]],[11,"get",E,R[1567],2,[[["self"],["q"]],[["option"],[T]]]],[11,"get_or_insert",E,"Inserts the given `value` into the set if it is not…",2,[[["self"],[T]],[T]]],[11,"get_or_insert_with",E,"Inserts a value computed from `f` into the set if the…",2,[[["self"],["f"],["q"]],[T]]],[11,R[1568],E,R[1569],2,[[["self"]],["bool"]]],[11,"is_subset",E,R[1570],2,[[["self"]],["bool"]]],[11,R[1571],E,R[1572],2,[[["self"]],["bool"]]],[11,"insert",E,R[1573],2,[[["self"],[T]],["bool"]]],[11,"replace",E,R[1574],2,[[["self"],[T]],["option"]]],[11,"remove",E,R[3279],2,[[["self"],["q"]],["bool"]]],[11,"take",E,R[1575],2,[[["self"],["q"]],["option"]]],[11,"retain",E,R[602],2,[[["self"],["f"]]]],[0,"hash_map",E,R[1512],N,N],[3,"HashMap",R[1520],R[1512],N,N],[3,"Iter",E,"An iterator over the entries of a `HashMap`.",N,N],[3,R[703],E,"A mutable iterator over the entries of a `HashMap`.",N,N],[3,R[339],E,"An owning iterator over the entries of a `HashMap`.",N,N],[3,"Keys",E,"An iterator over the keys of a `HashMap`.",N,N],[3,"Values",E,"An iterator over the values of a `HashMap`.",N,N],[3,"Drain",E,"A draining iterator over the entries of a `HashMap`.",N,N],[3,R[733],E,"A mutable iterator over the values of a `HashMap`.",N,N],[3,R[1541],E,R[3276],N,N],[3,R[1542],E,R[1514],N,N],[3,R[1543],E,R[1515],N,N],[3,R[1544],E,R[3276],N,N],[3,R[732],E,R[1514],N,N],[3,R[731],E,R[1515],N,N],[4,R[1540],E,R[1516],N,N],[13,"Occupied",E,R[1517],3,N],[13,"Vacant",E,R[1518],3,N],[4,"Entry",E,R[1516],N,N],[13,"Occupied",E,R[1517],4,N],[13,"Vacant",E,R[1518],4,N],[6,"DefaultHashBuilder",E,"Default hasher for `HashMap`.",N,N],[0,"hash_set",R[1522],R[1519],N,N],[3,"HashSet",R[1521],R[1519],N,N],[3,"Iter",E,"An iterator over the items of a `HashSet`.",N,N],[3,R[339],E,"An owning iterator over the items of a `HashSet`.",N,N],[3,"Drain",E,"A draining iterator over the items of a `HashSet`.",N,N],[3,R[736],E,R[1547],N,N],[3,R[734],E,R[1545],N,N],[3,R[735],E,R[1546],N,N],[3,"Union",E,R[1548],N,N],[11,"from",R[1522],E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[211],E,E,1,[[],["i"]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[211],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"from",R[1520],E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[211],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[211],E,E,6,[[],["i"]]],[11,"into",E,E,6,[[],[U]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[211],E,E,7,[[],["i"]]],[11,"into",E,E,7,[[],[U]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[211],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[211],E,E,9,[[],["i"]]],[11,"into",E,E,9,[[],[U]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[211],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[211],E,E,11,[[],["i"]]],[11,"into",E,E,11,[[],[U]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,"into",E,E,12,[[],[U]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,"into",E,E,13,[[],[U]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,"into",E,E,14,[[],[U]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,"into",E,E,15,[[],[U]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,"into",E,E,16,[[],[U]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"from",R[1521],E,18,[[[T]],[T]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[211],E,E,18,[[],["i"]]],[11,"into",E,E,18,[[],[U]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"],[T]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[211],E,E,19,[[],["i"]]],[11,"into",E,E,19,[[],[U]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[211],E,E,20,[[],["i"]]],[11,"into",E,E,20,[[],[U]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[211],E,E,21,[[],["i"]]],[11,"into",E,E,21,[[],[U]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,R[24],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"],[T]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[211],E,E,22,[[],["i"]]],[11,"into",E,E,22,[[],[U]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,R[24],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"],[T]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[211],E,E,23,[[],["i"]]],[11,"into",E,E,23,[[],[U]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,R[211],E,E,24,[[],["i"]]],[11,"into",E,E,24,[[],[U]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,R[24],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"],[T]]]],[11,"fmt",R[1522],E,1,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[1520],E,5,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,8,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,9,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,12,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,3,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,13,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,14,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,15,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,4,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,16,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,17,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,6,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,7,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,11,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,10,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[1522],E,2,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[1521],E,18,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,19,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,20,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,21,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,22,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,23,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,24,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[1522],E,0,[[["self"],[R[37]]],[R[3]]]],[11,"eq",E,E,1,[[["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[1508]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1508]]],["bool"]]],[11,"index",E,R[1549],1,[[["self"],["q"]],["v"]]],[11,"next",R[1520],E,5,[[["self"]],["option"]]],[11,R[292],E,E,5,[[["self"]]]],[11,"next",E,E,6,[[["self"]],["option"]]],[11,R[292],E,E,6,[[["self"]]]],[11,"next",E,E,7,[[["self"]],["option"]]],[11,R[292],E,E,7,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[["option"],["k"]]]],[11,R[292],E,E,8,[[["self"]]]],[11,"next",E,E,9,[[["self"]],[["option"],["v"]]]],[11,R[292],E,E,9,[[["self"]]]],[11,"next",E,E,11,[[["self"]],[["option"],["v"]]]],[11,R[292],E,E,11,[[["self"]]]],[11,"next",E,E,10,[[["self"]],["option"]]],[11,R[292],E,E,10,[[["self"]]]],[11,"next",R[1521],E,18,[[["self"]],[["option"],["k"]]]],[11,R[292],E,E,18,[[["self"]]]],[11,"next",E,E,19,[[["self"]],["option"]]],[11,R[292],E,E,19,[[["self"]]]],[11,"next",E,E,20,[[["self"]],["option"]]],[11,R[292],E,E,20,[[["self"]]]],[11,"next",E,E,21,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,21,[[["self"]]]],[11,"next",E,E,22,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,22,[[["self"]]]],[11,"next",E,E,23,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,23,[[["self"]]]],[11,"next",E,E,24,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,24,[[["self"]]]],[11,R[293],R[1522],E,1,[[[R[294]]],["self"]]],[11,R[293],E,E,2,[[[R[294]]],["self"]]],[11,R[211],E,R[1523],1,[[],[R[485]]]],[11,R[211],E,R[1523],2,[[],[R[485]]]],[11,"extend",E,E,1,[[[R[294]],["self"]]]],[11,"extend",E,E,1,[[["self"],[R[294]]]]],[11,"extend",E,E,2,[[["self"],[R[294]]]]],[11,"extend",E,E,2,[[["self"],[R[294]]]]],[11,"len",R[1520],E,5,[[["self"]],["usize"]]],[11,"len",E,E,6,[[["self"]],["usize"]]],[11,"len",E,E,7,[[["self"]],["usize"]]],[11,"len",E,E,8,[[["self"]],["usize"]]],[11,"len",E,E,9,[[["self"]],["usize"]]],[11,"len",E,E,11,[[["self"]],["usize"]]],[11,"len",E,E,10,[[["self"]],["usize"]]],[11,"len",R[1521],E,18,[[["self"]],["usize"]]],[11,"len",E,E,19,[[["self"]],["usize"]]],[11,"len",E,E,20,[[["self"]],["usize"]]],[11,"clone",R[1522],E,1,[[["self"]],["hashmap"]]],[11,"clone",R[1520],E,5,[[["self"]],["self"]]],[11,"clone",E,E,8,[[["self"]],["self"]]],[11,"clone",E,E,9,[[["self"]],["self"]]],[11,"clone",R[1522],E,2,[[["self"]],["hashset"]]],[11,"clone",R[1521],E,18,[[["self"]],["self"]]],[11,"clone",E,E,21,[[["self"]],["self"]]],[11,"clone",E,E,22,[[["self"]],["self"]]],[11,"clone",E,E,23,[[["self"]],["self"]]],[11,"clone",E,E,24,[[["self"]],["self"]]],[11,"clone",R[1522],E,0,[[["self"]],[R[1508]]]],[11,R[90],E,"Creates an empty `HashMap<K, V, S>`, with the `Default`…",1,[[],["self"]]],[11,R[90],E,"Creates an empty `HashSet<T, S>` with the `Default` value…",2,[[],["self"]]],[11,"from_key",R[1520],"Creates a `RawEntryMut` from the given key.",12,[[["q"]],[R[1524]]]],[11,R[1525],E,"Creates a `RawEntryMut` from the given key and its hash.",12,[[["u64"],["q"]],[R[1524]]]],[11,R[2651],E,"Creates a `RawEntryMut` from the given hash.",12,[[["u64"],["f"]],[R[1524]]]],[11,"from_key",E,"Access an entry by key.",15,[[["q"]],["option"]]],[11,R[1525],E,"Access an entry by a key and its hash.",15,[[["u64"],["q"]],["option"]]],[11,R[2651],E,"Access an entry by hash.",15,[[["u64"],["f"]],["option"]]],[11,"insert",E,"Sets the value of the entry, and returns a…",3,[[["k"],["v"]],["rawoccupiedentrymut"]]],[11,R[3246],E,R[612],3,[[["k"],["v"]]]],[11,R[1531],E,R[1532],3,[[["f"]]]],[11,R[1558],E,R[1533],3,[[["f"]],["self"]]],[11,"key",E,R[1534],13,[[["self"]],["k"]]],[11,"key_mut",E,"Gets a mutable reference to the key in the entry.",13,[[["self"]],["k"]]],[11,"into_key",E,"Converts the entry into a mutable reference to the key in…",13,[[],["k"]]],[11,"get",E,R[1536],13,[[["self"]],["v"]]],[11,"into_mut",E,R[1527],13,[[],["v"]]],[11,R[471],E,R[1537],13,[[["self"]],["v"]]],[11,R[1526],E,"Gets a reference to the key and value in the entry.",13,[[["self"]]]],[11,"get_key_value_mut",E,"Gets a mutable reference to the key and value in the entry.",13,[[["self"]]]],[11,"into_key_value",E,R[1527],13,[[]]],[11,"insert",E,R[1528],13,[[["self"],["v"]],["v"]]],[11,"insert_key",E,R[1528],13,[[["self"],["k"]],["k"]]],[11,"remove",E,R[1538],13,[[],["v"]]],[11,R[1529],E,R[1535],13,[[]]],[11,"insert",E,R[1530],14,[[["k"],["v"]]]],[11,"insert_hashed_nocheck",E,R[1530],14,[[["v"],["u64"],["k"]]]],[11,"insert_with_hasher",E,"Set the value of an entry with a custom hasher function.",14,[[["k"],["h"],["u64"],["v"]]]],[11,"insert",E,"Sets the value of the entry, and returns an OccupiedEntry.",4,[[["v"]],["occupiedentry"]]],[11,R[3246],E,R[612],4,[[["v"]],["v"]]],[11,R[1531],E,R[1532],4,[[["fnonce"]],["v"]]],[11,"key",E,R[1557],4,[[["self"]],["k"]]],[11,R[1558],E,R[1533],4,[[["f"]],["self"]]],[11,"or_default",E,R[612],4,[[],["v"]]],[11,"key",E,R[1534],16,[[["self"]],["k"]]],[11,R[1529],E,R[1535],16,[[]]],[11,"get",E,R[1536],16,[[["self"]],["v"]]],[11,R[471],E,R[1537],16,[[["self"]],["v"]]],[11,"into_mut",E,R[1527],16,[[],["v"]]],[11,"insert",E,R[1528],16,[[["self"],["v"]],["v"]]],[11,"remove",E,R[1538],16,[[],["v"]]],[11,"replace_entry",E,"Replaces the entry, returning the old key and value. The…",16,[[["v"]]]],[11,"replace_key",E,"Replaces the key in the hash map with the key used to…",16,[[],["k"]]],[11,"key",E,R[1559],17,[[["self"]],["k"]]],[11,"into_key",E,R[1560],17,[[],["k"]]],[11,"insert",E,R[1530],17,[[["v"]],["v"]]]],"p":[[4,R[1539]],[3,"HashMap"],[3,"HashSet"],[4,R[1540]],[4,"Entry"],[3,"Iter"],[3,R[703]],[3,R[339]],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,R[733]],[3,R[1541]],[3,R[1542]],[3,R[1543]],[3,R[1544]],[3,R[732]],[3,R[731]],[3,"Iter"],[3,R[339]],[3,"Drain"],[3,R[736]],[3,R[734]],[3,R[735]],[3,"Union"]]};
searchIndex["hex"]={"doc":"Encoding and decoding hex strings.","i":[[4,R[81],"hex","The error type for decoding a hex string into `Vec<u8>` or…",N,N],[13,R[312],E,"An invalid character was found. Valid ones are: `0...9`,…",0,N],[12,"c","hex::FromHexError",E,0,N],[12,"index",E,E,0,N],[13,"OddLength","hex","A hex string's length needs to be even, as two digits…",0,N],[13,"InvalidStringLength",E,"If the hex string is decoded into a fixed sized container,…",0,N],[5,"encode",E,"Encodes `data` as hex string using lowercase characters.",N,[[["asref"]],["string"]]],[5,"encode_upper",E,"Encodes `data` as hex string using uppercase characters.",N,[[["asref"]],["string"]]],[5,"decode",E,"Decodes a hex string into raw bytes.",N,[[["asref"]],[["vec",["u8"]],[R[79]],[R[3],["vec",R[79]]]]]],[5,"decode_to_slice",E,"Decode a hex string into a mutable bytes slice.",N,[[["asref"]],[[R[3],[R[79]]],[R[79]]]]],[8,"ToHex",E,"Encoding values as hex string.",N,N],[10,R[4184],E,R[311],1,[[["self"]],[[R[80],["char"]],["char"]]]],[10,R[4183],E,R[311],1,[[["self"]],[[R[80],["char"]],["char"]]]],[8,"FromHex",E,"Types that can be decoded from a hex string.",N,N],[16,"Error",E,E,2,N],[10,"from_hex",E,"Creates an instance of type `Self` from the given hex…",2,[[["asref"]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"clone",E,E,0,[[["self"]],[R[79]]]],[11,"eq",E,E,0,[[["self"],[R[79]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[79]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,R[38],E,E,0,[[["self"]],["str"]]]],"p":[[4,R[81]],[8,"ToHex"],[8,"FromHex"]]};
searchIndex["hmac"]={"doc":"Generic implementation of Hash-based Message…","i":[[8,"Mac","hmac",R[2592],N,N],[16,R[1739],E,E,0,N],[16,"KeySize",E,E,0,N],[10,"new",E,R[2593],0,[[[R[1614]]],["self"]]],[11,R[2599],E,R[2594],0,[[],[[R[3],[R[1735]]],[R[1735]]]]],[10,"input",E,R[2595],0,[[["self"]]]],[10,"reset",E,R[2596],0,[[["self"]]]],[10,R[3],E,R[1736],0,[[],[R[1737]]]],[11,R[1724],E,R[1736],0,[[["self"]],[R[1737]]]],[11,"verify",E,R[2597],0,[[],[[R[2598]],[R[3],[R[2598]]]]]],[3,"Hmac",E,"The `Hmac` struct represents an HMAC using a given hash…",N,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[R[3]]]],[11,"clone",E,E,1,[[["self"]],["hmac"]]],[11,"new",E,E,1,[[[R[1614]]],["self"]]],[11,R[2599],E,E,1,[[],[[R[3],[R[1735]]],[R[1735]]]]],[11,"input",E,E,1,[[["self"]]]],[11,R[3],E,E,1,[[],[R[1737]]]],[11,"reset",E,E,1,[[["self"]]]]],"p":[[8,"Mac"],[3,"Hmac"]]};
searchIndex["hmac_drbg"]={"doc":E,"i":[[3,"HmacDRBG","hmac_drbg",E,N,N],[11,"new",E,E,0,[[],["self"]]],[11,"count",E,E,0,[[["self"]],["usize"]]],[11,"reseed",E,E,0,[[["self"],["option"]]]],[11,R[1622],E,E,0,[[["option"],["self"]],[[R[1614],["u8"]],["arraylength",["u8"]],["u8"]]]],[11,"generate_to_slice",E,E,0,[[["option"],["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]]],"p":[[3,"HmacDRBG"]]};
searchIndex["impl_codec"]={"doc":"Parity Codec serialization support for uint and fixed hash.","i":[[14,"impl_uint_codec","impl_codec","Add Parity Codec serialization support to an integer…",N,N],[14,"impl_fixed_hash_codec",E,"Add Parity Codec serialization support to a fixed-sized…",N,N]],"p":[]};
searchIndex["impl_serde"]={"doc":"Serde serialization support for uint and fixed hash.","i":[[14,"impl_uint_serde","impl_serde","Add Serde serialization support to an integer created by…",N,N],[14,"impl_fixed_hash_serde",E,"Add Serde serialization support to a fixed-sized hash type…",N,N]],"p":[]};
searchIndex["impl_trait_for_tuples"]={"doc":"  ","i":[[23,"impl_for_tuples","impl_trait_for_tuples","See crate documentation.",N,N]],"p":[]};
searchIndex["inflector"]={"doc":"Adds String based inflections for Rust. Snake, kebab,…","i":[[0,"cases",R[2795],"Provides case inflections - Camel case - Class case -…",N,N],[0,"classcase",R[2792],"Provides conversion to and detection of class case strings.",N,N],[5,R[2818],"inflector::cases::classcase","Converts a `&str` to `ClassCase` `String`",N,[[["str"]],["string"]]],[5,R[2819],E,"Determines if a `&str` is `ClassCase` `bool`",N,[[["str"]],["bool"]]],[0,"camelcase",R[2792],"Provides conversion to and detection of camel case strings.",N,N],[5,R[2798],"inflector::cases::camelcase","Converts a `&str` to camelCase `String`",N,[[["str"]],["string"]]],[5,R[2799],E,"Determines if a `&str` is camelCase bool``",N,[[["str"]],["bool"]]],[0,"snakecase",R[2792],"Provides conversion to and detection of snake case strings.",N,N],[5,R[2802],"inflector::cases::snakecase","Converts a `&str` to `snake_case` `String`",N,[[["str"]],["string"]]],[5,R[2803],E,"Determines of a `&str` is `snake_case`",N,[[["str"]],["bool"]]],[0,"screamingsnakecase",R[2792],"Provides conversion to and detection of screaming snake…",N,N],[5,R[2804],"inflector::cases::screamingsnakecase","Converts a `&str` to `SCREAMING_SNAKE_CASE` `String`",N,[[["str"]],["string"]]],[5,R[2805],E,"Determines of a `&str` is `SCREAMING_SNAKE_CASE`",N,[[["str"]],["bool"]]],[0,"kebabcase",R[2792],"Provides conversion to and detection of kebab case strings.",N,N],[5,R[2807],"inflector::cases::kebabcase","Determines if a `&str` is `kebab-case`",N,[[["str"]],["bool"]]],[5,R[2806],E,"Converts a `&str` to `kebab-case` `String`",N,[[["str"]],["string"]]],[0,"traincase",R[2792],"Provides conversion to and detection of train case strings.",N,N],[5,R[2809],"inflector::cases::traincase","Determines if a `&str` is `Train-Case`",N,[[["str"]],["bool"]]],[5,R[2808],E,"Converts a `&str` to `Train-Case` `String`",N,[[["str"]],["string"]]],[0,"sentencecase",R[2792],"Provides conversion to and detection of sentence case…",N,N],[5,R[2810],"inflector::cases::sentencecase","Converts a `&str` to `Sentence case` `String`",N,[[["str"]],["string"]]],[5,R[2811],E,"Determines of a `&str` is `Sentence case`",N,[[["str"]],["bool"]]],[0,"titlecase",R[2792],"Provides conversion to and detection of title case strings.",N,N],[5,R[2812],"inflector::cases::titlecase","Converts a `&str` to `Title Case` `String`",N,[[["str"]],["string"]]],[5,R[2813],E,"Determines if a `&str` is `Title Case`",N,[[["str"]],["bool"]]],[0,"tablecase",R[2792],"Provides conversion to and detection of table case strings.",N,N],[5,R[2820],"inflector::cases::tablecase","Converts a `&str` to `table-case` `String`",N,[[["str"]],["string"]]],[5,R[2821],E,"Determines if a `&str` is `table-case`",N,[[["str"]],["bool"]]],[0,"pascalcase",R[2792],"Provides conversion to pascal case strings.",N,N],[5,R[2800],"inflector::cases::pascalcase","Converts a `&str` to pascalCase `String`",N,[[["str"]],["string"]]],[5,R[2801],E,"Determines if a `&str` is pascalCase bool``",N,[[["str"]],["bool"]]],[0,"numbers",R[2795],"Provides number inflections - Ordinalize - Deordinalize",N,N],[0,R[2814],R[2793],"Provides ordinalization of a string.",N,N],[5,R[2814],"inflector::numbers::ordinalize","Orginalizes a `&str`",N,[[["str"]],["string"]]],[0,R[2794],R[2793],"Provides deordinalization of a string.",N,N],[5,R[2794],"inflector::numbers::deordinalize","Deorginalizes a `&str`",N,[[["str"]],["string"]]],[0,"suffix",R[2795],"Provides suffix inflections - Foreign key",N,N],[0,"foreignkey","inflector::suffix","Provides foreign key conversion for String.",N,N],[5,R[2815],"inflector::suffix::foreignkey","Converts a `&str` to a `foreign_key`",N,[[["str"]],["string"]]],[5,R[2816],E,"Determines if a `&str` is a `foreign_key`",N,[[["str"]],["bool"]]],[0,"string",R[2795],"Provides string inflections - Deconstantize - Demodulize -…",N,N],[0,R[2817],R[2796],"Provides demodulize a string.",N,N],[5,R[2817],"inflector::string::demodulize","Demodulize a `&str`",N,[[["str"]],["string"]]],[0,R[2797],R[2796],"Provides deconstantizea string.",N,N],[5,R[2797],"inflector::string::deconstantize","Deconstantizes a `&str`",N,[[["str"]],["string"]]],[0,"pluralize",R[2796],"Provides conversion to plural strings.",N,N],[5,"to_plural","inflector::string::pluralize","Converts a `&str` to pluralized `String`",N,[[["str"]],["string"]]],[0,"singularize",R[2796],"Provides conversion to singular strings.",N,N],[5,R[2822],"inflector::string::singularize","Converts a `&str` to singularized `String`",N,[[["str"]],["string"]]],[8,"Inflector",R[2795],E,N,N],[10,R[2798],E,E,0,[[["self"]],["string"]]],[10,R[2799],E,E,0,[[["self"]],["bool"]]],[10,R[2800],E,E,0,[[["self"]],["string"]]],[10,R[2801],E,E,0,[[["self"]],["bool"]]],[10,R[2802],E,E,0,[[["self"]],["string"]]],[10,R[2803],E,E,0,[[["self"]],["bool"]]],[10,R[2804],E,E,0,[[["self"]],["string"]]],[10,R[2805],E,E,0,[[["self"]],["bool"]]],[10,R[2806],E,E,0,[[["self"]],["string"]]],[10,R[2807],E,E,0,[[["self"]],["bool"]]],[10,R[2808],E,E,0,[[["self"]],["string"]]],[10,R[2809],E,E,0,[[["self"]],["bool"]]],[10,R[2810],E,E,0,[[["self"]],["string"]]],[10,R[2811],E,E,0,[[["self"]],["bool"]]],[10,R[2812],E,E,0,[[["self"]],["string"]]],[10,R[2813],E,E,0,[[["self"]],["bool"]]],[10,R[2814],E,E,0,[[["self"]],["string"]]],[10,R[2794],E,E,0,[[["self"]],["string"]]],[10,R[2815],E,E,0,[[["self"]],["string"]]],[10,R[2816],E,E,0,[[["self"]],["bool"]]],[10,R[2817],E,E,0,[[["self"]],["string"]]],[10,R[2797],E,E,0,[[["self"]],["string"]]],[10,R[2818],E,E,0,[[["self"]],["string"]]],[10,R[2819],E,E,0,[[["self"]],["bool"]]],[10,R[2820],E,E,0,[[["self"]],["string"]]],[10,R[2821],E,E,0,[[["self"]],["bool"]]],[10,"to_plural",E,E,0,[[["self"]],["string"]]],[10,R[2822],E,E,0,[[["self"]],["string"]]],[8,R[2823],E,E,N,N],[10,R[2814],E,E,1,[[["self"]],["string"]]]],"p":[[8,"Inflector"],[8,R[2823]]]};
searchIndex["integer_sqrt"]={"doc":"This module contains the single trait…","i":[[8,R[120],R[119],R[3547],N,N],[11,R[119],E,R[3548],0,[[["self"]],["self"]]],[10,R[3549],E,R[3550],0,[[["self"]],["option"]]]],"p":[[8,R[120]]]};
searchIndex["keccak"]={"doc":"Keccak sponge function.","i":[[5,"f1600","keccak","Keccak-f[1600] sponge function",N,[[]]]],"p":[]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,R[2628],R[55],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[55],E,E,N,N]],"p":[]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,"timespec",E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,"ipv6_mreq",E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,"itimerval",E,E,N,N],[12,R[1272],E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,"protoent",E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,17,N],[3,"ip_mreq",E,E,N,N],[12,R[1269],E,E,18,N],[12,R[1270],E,E,18,N],[3,R[1282],E,E,N,N],[12,R[1269],E,E,19,N],[12,R[1270],E,E,19,N],[12,"imr_sourceaddr",E,E,19,N],[3,"sockaddr",E,E,N,N],[12,"sa_family",E,E,20,N],[12,"sa_data",E,E,20,N],[3,R[1283],E,E,N,N],[12,"sin_family",E,E,21,N],[12,"sin_port",E,E,21,N],[12,"sin_addr",E,E,21,N],[12,"sin_zero",E,E,21,N],[3,R[1284],E,E,N,N],[12,"sin6_family",E,E,22,N],[12,"sin6_port",E,E,22,N],[12,"sin6_flowinfo",E,E,22,N],[12,"sin6_addr",E,E,22,N],[12,"sin6_scope_id",E,E,22,N],[3,"addrinfo",E,E,N,N],[12,"ai_flags",E,E,23,N],[12,"ai_family",E,E,23,N],[12,"ai_socktype",E,E,23,N],[12,"ai_protocol",E,E,23,N],[12,"ai_addrlen",E,E,23,N],[12,"ai_addr",E,E,23,N],[12,"ai_canonname",E,E,23,N],[12,"ai_next",E,E,23,N],[3,R[1285],E,E,N,N],[12,"sll_family",E,E,24,N],[12,"sll_protocol",E,E,24,N],[12,"sll_ifindex",E,E,24,N],[12,"sll_hatype",E,E,24,N],[12,"sll_pkttype",E,E,24,N],[12,"sll_halen",E,E,24,N],[12,"sll_addr",E,E,24,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,25,N],[12,"tm_min",E,E,25,N],[12,"tm_hour",E,E,25,N],[12,"tm_mday",E,E,25,N],[12,"tm_mon",E,E,25,N],[12,"tm_year",E,E,25,N],[12,"tm_wday",E,E,25,N],[12,"tm_yday",E,E,25,N],[12,"tm_isdst",E,E,25,N],[12,"tm_gmtoff",E,E,25,N],[12,"tm_zone",E,E,25,N],[3,R[1286],E,E,N,N],[12,"sched_priority",E,E,26,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,27,N],[12,"dli_fbase",E,E,27,N],[12,"dli_sname",E,E,27,N],[12,"dli_saddr",E,E,27,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,28,N],[12,"thousands_sep",E,E,28,N],[12,"grouping",E,E,28,N],[12,"int_curr_symbol",E,E,28,N],[12,"currency_symbol",E,E,28,N],[12,"mon_decimal_point",E,E,28,N],[12,"mon_thousands_sep",E,E,28,N],[12,"mon_grouping",E,E,28,N],[12,"positive_sign",E,E,28,N],[12,"negative_sign",E,E,28,N],[12,"int_frac_digits",E,E,28,N],[12,"frac_digits",E,E,28,N],[12,"p_cs_precedes",E,E,28,N],[12,"p_sep_by_space",E,E,28,N],[12,"n_cs_precedes",E,E,28,N],[12,"n_sep_by_space",E,E,28,N],[12,"p_sign_posn",E,E,28,N],[12,"n_sign_posn",E,E,28,N],[12,"int_p_cs_precedes",E,E,28,N],[12,"int_p_sep_by_space",E,E,28,N],[12,"int_n_cs_precedes",E,E,28,N],[12,"int_n_sep_by_space",E,E,28,N],[12,"int_p_sign_posn",E,E,28,N],[12,"int_n_sign_posn",E,E,28,N],[3,R[1327],E,E,N,N],[12,"ipi_ifindex",E,E,29,N],[12,"ipi_spec_dst",E,E,29,N],[12,"ipi_addr",E,E,29,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,30,N],[12,"ifa_name",E,E,30,N],[12,"ifa_flags",E,E,30,N],[12,"ifa_addr",E,E,30,N],[12,"ifa_netmask",E,E,30,N],[12,"ifa_ifu",E,E,30,N],[12,"ifa_data",E,E,30,N],[3,"in6_rtmsg",E,E,N,N],[3,"arpreq",E,E,N,N],[12,"arp_pa",E,E,31,N],[12,"arp_ha",E,E,31,N],[12,"arp_flags",E,E,31,N],[12,R[1271],E,E,31,N],[12,"arp_dev",E,E,31,N],[3,R[1328],E,E,N,N],[12,"arp_pa",E,E,32,N],[12,"arp_ha",E,E,32,N],[12,"arp_flags",E,E,32,N],[12,R[1271],E,E,32,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,33,N],[12,"ar_pro",E,E,33,N],[12,"ar_hln",E,E,33,N],[12,"ar_pln",E,E,33,N],[12,"ar_op",E,E,33,N],[3,"mmsghdr",E,E,N,N],[12,"msg_hdr",E,E,34,N],[12,"msg_len",E,E,34,N],[3,R[1287],E,E,N,N],[12,"events",E,E,35,N],[12,"u64",E,E,35,N],[3,R[1288],E,E,N,N],[12,"sun_family",E,E,36,N],[12,"sun_path",E,E,36,N],[3,R[1289],E,E,N,N],[12,"ss_family",E,E,37,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,38,N],[12,"nodename",E,E,38,N],[12,"release",E,E,38,N],[12,"version",E,E,38,N],[12,"machine",E,E,38,N],[12,"domainname",E,E,38,N],[3,"sigevent",E,E,N,N],[12,"sigev_value",E,E,39,N],[12,"sigev_signo",E,E,39,N],[12,"sigev_notify",E,E,39,N],[12,"sigev_notify_thread_id",E,E,39,N],[3,"rlimit64",E,E,N,N],[12,"rlim_cur",E,E,40,N],[12,"rlim_max",E,E,40,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,41,N],[12,"gl_pathv",E,E,41,N],[12,"gl_offs",E,E,41,N],[12,"gl_flags",E,E,41,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,42,N],[12,"pw_passwd",E,E,42,N],[12,"pw_uid",E,E,42,N],[12,"pw_gid",E,E,42,N],[12,"pw_gecos",E,E,42,N],[12,"pw_dir",E,E,42,N],[12,"pw_shell",E,E,42,N],[3,"spwd",E,E,N,N],[12,"sp_namp",E,E,43,N],[12,"sp_pwdp",E,E,43,N],[12,"sp_lstchg",E,E,43,N],[12,"sp_min",E,E,43,N],[12,"sp_max",E,E,43,N],[12,"sp_warn",E,E,43,N],[12,"sp_inact",E,E,43,N],[12,"sp_expire",E,E,43,N],[12,"sp_flag",E,E,43,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,44,N],[12,"dqb_bsoftlimit",E,E,44,N],[12,"dqb_curspace",E,E,44,N],[12,"dqb_ihardlimit",E,E,44,N],[12,"dqb_isoftlimit",E,E,44,N],[12,"dqb_curinodes",E,E,44,N],[12,"dqb_btime",E,E,44,N],[12,"dqb_itime",E,E,44,N],[12,"dqb_valid",E,E,44,N],[3,R[1290],E,E,N,N],[12,"ssi_signo",E,E,45,N],[12,"ssi_errno",E,E,45,N],[12,"ssi_code",E,E,45,N],[12,"ssi_pid",E,E,45,N],[12,"ssi_uid",E,E,45,N],[12,"ssi_fd",E,E,45,N],[12,"ssi_tid",E,E,45,N],[12,"ssi_band",E,E,45,N],[12,"ssi_overrun",E,E,45,N],[12,"ssi_trapno",E,E,45,N],[12,"ssi_status",E,E,45,N],[12,"ssi_int",E,E,45,N],[12,"ssi_ptr",E,E,45,N],[12,"ssi_utime",E,E,45,N],[12,"ssi_stime",E,E,45,N],[12,"ssi_addr",E,E,45,N],[12,"ssi_addr_lsb",E,E,45,N],[12,"ssi_syscall",E,E,45,N],[12,"ssi_call_addr",E,E,45,N],[12,"ssi_arch",E,E,45,N],[3,R[1329],E,E,N,N],[12,R[1272],E,E,46,N],[12,"it_value",E,E,46,N],[3,"fsid_t",E,E,N,N],[3,R[1291],E,E,N,N],[12,"mr_ifindex",E,E,47,N],[12,"mr_type",E,E,47,N],[12,"mr_alen",E,E,47,N],[12,"mr_address",E,E,47,N],[3,R[1280],E,E,N,N],[3,R[1281],E,E,N,N],[12,"if_index",E,E,48,N],[12,"if_name",E,E,48,N],[3,"msginfo",E,E,N,N],[12,"msgpool",E,E,49,N],[12,"msgmap",E,E,49,N],[12,"msgmax",E,E,49,N],[12,"msgmnb",E,E,49,N],[12,"msgmni",E,E,49,N],[12,"msgssz",E,E,49,N],[12,"msgtql",E,E,49,N],[12,"msgseg",E,E,49,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,50,N],[12,"sem_op",E,E,50,N],[12,"sem_flg",E,E,50,N],[3,R[1292],E,E,N,N],[12,"time",E,E,51,N],[12,"type_",E,E,51,N],[12,"code",E,E,51,N],[12,"value",E,E,51,N],[3,"input_id",E,E,N,N],[12,"bustype",E,E,52,N],[12,"vendor",E,E,52,N],[12,R[424],E,E,52,N],[12,"version",E,E,52,N],[3,R[1293],E,E,N,N],[12,"value",E,E,53,N],[12,"minimum",E,E,53,N],[12,"maximum",E,E,53,N],[12,"fuzz",E,E,53,N],[12,"flat",E,E,53,N],[12,"resolution",E,E,53,N],[3,R[1294],E,E,N,N],[12,"flags",E,E,54,N],[12,"len",E,E,54,N],[12,"index",E,E,54,N],[12,"keycode",E,E,54,N],[12,"scancode",E,E,54,N],[3,R[1330],E,E,N,N],[12,"type_",E,E,55,N],[12,"codes_size",E,E,55,N],[12,"codes_ptr",E,E,55,N],[3,"ff_replay",E,E,N,N],[12,"length",E,E,56,N],[12,"delay",E,E,56,N],[3,R[1331],E,E,N,N],[12,"button",E,E,57,N],[12,"interval",E,E,57,N],[3,R[1295],E,E,N,N],[12,"attack_length",E,E,58,N],[12,"attack_level",E,E,58,N],[12,"fade_length",E,E,58,N],[12,"fade_level",E,E,58,N],[3,R[1296],E,E,N,N],[12,"level",E,E,59,N],[12,"envelope",E,E,59,N],[3,R[1297],E,E,N,N],[12,"start_level",E,E,60,N],[12,"end_level",E,E,60,N],[12,"envelope",E,E,60,N],[3,R[1298],E,E,N,N],[12,"right_saturation",E,E,61,N],[12,"left_saturation",E,E,61,N],[12,"right_coeff",E,E,61,N],[12,"left_coeff",E,E,61,N],[12,"deadband",E,E,61,N],[12,"center",E,E,61,N],[3,R[1299],E,E,N,N],[12,"waveform",E,E,62,N],[12,"period",E,E,62,N],[12,"magnitude",E,E,62,N],[12,"offset",E,E,62,N],[12,"phase",E,E,62,N],[12,"envelope",E,E,62,N],[12,"custom_len",E,E,62,N],[12,"custom_data",E,E,62,N],[3,R[1300],E,E,N,N],[12,"strong_magnitude",E,E,63,N],[12,"weak_magnitude",E,E,63,N],[3,"ff_effect",E,E,N,N],[12,"type_",E,E,64,N],[12,"id",E,E,64,N],[12,"direction",E,E,64,N],[12,"trigger",E,E,64,N],[12,"replay",E,E,64,N],[12,U,E,E,64,N],[3,R[1301],E,E,N,N],[12,"dlpi_addr",E,E,65,N],[12,"dlpi_name",E,E,65,N],[12,"dlpi_phdr",E,E,65,N],[12,"dlpi_phnum",E,E,65,N],[12,"dlpi_adds",E,E,65,N],[12,"dlpi_subs",E,E,65,N],[12,"dlpi_tls_modid",E,E,65,N],[12,"dlpi_tls_data",E,E,65,N],[3,"Elf32_Ehdr",E,E,N,N],[12,"e_ident",E,E,66,N],[12,"e_type",E,E,66,N],[12,"e_machine",E,E,66,N],[12,"e_version",E,E,66,N],[12,"e_entry",E,E,66,N],[12,"e_phoff",E,E,66,N],[12,"e_shoff",E,E,66,N],[12,"e_flags",E,E,66,N],[12,"e_ehsize",E,E,66,N],[12,R[1273],E,E,66,N],[12,"e_phnum",E,E,66,N],[12,R[1274],E,E,66,N],[12,"e_shnum",E,E,66,N],[12,"e_shstrndx",E,E,66,N],[3,"Elf64_Ehdr",E,E,N,N],[12,"e_ident",E,E,67,N],[12,"e_type",E,E,67,N],[12,"e_machine",E,E,67,N],[12,"e_version",E,E,67,N],[12,"e_entry",E,E,67,N],[12,"e_phoff",E,E,67,N],[12,"e_shoff",E,E,67,N],[12,"e_flags",E,E,67,N],[12,"e_ehsize",E,E,67,N],[12,R[1273],E,E,67,N],[12,"e_phnum",E,E,67,N],[12,R[1274],E,E,67,N],[12,"e_shnum",E,E,67,N],[12,"e_shstrndx",E,E,67,N],[3,"Elf32_Sym",E,E,N,N],[12,"st_name",E,E,68,N],[12,"st_value",E,E,68,N],[12,"st_size",E,E,68,N],[12,"st_info",E,E,68,N],[12,"st_other",E,E,68,N],[12,"st_shndx",E,E,68,N],[3,"Elf64_Sym",E,E,N,N],[12,"st_name",E,E,69,N],[12,"st_info",E,E,69,N],[12,"st_other",E,E,69,N],[12,"st_shndx",E,E,69,N],[12,"st_value",E,E,69,N],[12,"st_size",E,E,69,N],[3,"Elf32_Phdr",E,E,N,N],[12,"p_type",E,E,70,N],[12,"p_offset",E,E,70,N],[12,"p_vaddr",E,E,70,N],[12,"p_paddr",E,E,70,N],[12,"p_filesz",E,E,70,N],[12,"p_memsz",E,E,70,N],[12,"p_flags",E,E,70,N],[12,"p_align",E,E,70,N],[3,"Elf64_Phdr",E,E,N,N],[12,"p_type",E,E,71,N],[12,"p_flags",E,E,71,N],[12,"p_offset",E,E,71,N],[12,"p_vaddr",E,E,71,N],[12,"p_paddr",E,E,71,N],[12,"p_filesz",E,E,71,N],[12,"p_memsz",E,E,71,N],[12,"p_align",E,E,71,N],[3,"Elf32_Shdr",E,E,N,N],[12,"sh_name",E,E,72,N],[12,"sh_type",E,E,72,N],[12,"sh_flags",E,E,72,N],[12,"sh_addr",E,E,72,N],[12,"sh_offset",E,E,72,N],[12,"sh_size",E,E,72,N],[12,"sh_link",E,E,72,N],[12,"sh_info",E,E,72,N],[12,R[1275],E,E,72,N],[12,"sh_entsize",E,E,72,N],[3,"Elf64_Shdr",E,E,N,N],[12,"sh_name",E,E,73,N],[12,"sh_type",E,E,73,N],[12,"sh_flags",E,E,73,N],[12,"sh_addr",E,E,73,N],[12,"sh_offset",E,E,73,N],[12,"sh_size",E,E,73,N],[12,"sh_link",E,E,73,N],[12,"sh_info",E,E,73,N],[12,R[1275],E,E,73,N],[12,"sh_entsize",E,E,73,N],[3,"Elf32_Chdr",E,E,N,N],[12,"ch_type",E,E,74,N],[12,"ch_size",E,E,74,N],[12,R[1276],E,E,74,N],[3,"Elf64_Chdr",E,E,N,N],[12,"ch_type",E,E,75,N],[12,"ch_reserved",E,E,75,N],[12,"ch_size",E,E,75,N],[12,R[1276],E,E,75,N],[3,"ucred",E,E,N,N],[12,"pid",E,E,76,N],[12,"uid",E,E,76,N],[12,"gid",E,E,76,N],[3,"mntent",E,E,N,N],[12,"mnt_fsname",E,E,77,N],[12,"mnt_dir",E,E,77,N],[12,"mnt_type",E,E,77,N],[12,"mnt_opts",E,E,77,N],[12,"mnt_freq",E,E,77,N],[12,"mnt_passno",E,E,77,N],[3,R[1302],E,E,N,N],[3,R[1303],E,E,N,N],[3,R[1332],E,E,N,N],[12,"cmd",E,E,78,N],[12,"version",E,E,78,N],[12,"reserved",E,E,78,N],[3,R[1304],E,E,N,N],[12,"ipi6_addr",E,E,79,N],[12,"ipi6_ifindex",E,E,79,N],[3,R[1305],E,E,N,N],[12,"req",E,E,80,N],[12,"ip",E,E,80,N],[12,"dev",E,E,80,N],[12,"stamp",E,E,80,N],[12,"updated",E,E,80,N],[12,"ha",E,E,80,N],[3,R[1306],E,E,N,N],[12,"wd",E,E,81,N],[12,"mask",E,E,81,N],[12,"cookie",E,E,81,N],[12,"len",E,E,81,N],[3,R[1307],E,E,N,N],[12,"svm_family",E,E,82,N],[12,"svm_reserved1",E,E,82,N],[12,"svm_port",E,E,82,N],[12,"svm_cid",E,E,82,N],[12,"svm_zero",E,E,82,N],[3,R[1308],E,E,N,N],[12,"nl_family",E,E,83,N],[12,"nl_pid",E,E,83,N],[12,"nl_groups",E,E,83,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,84,N],[12,"d_off",E,E,84,N],[12,"d_reclen",E,E,84,N],[12,"d_type",E,E,84,N],[12,"d_name",E,E,84,N],[3,"dirent64",E,E,N,N],[12,"d_ino",E,E,85,N],[12,"d_off",E,E,85,N],[12,"d_reclen",E,E,85,N],[12,"d_type",E,E,85,N],[12,"d_name",E,E,85,N],[3,R[1309],E,E,N,N],[12,"salg_family",E,E,86,N],[12,"salg_type",E,E,86,N],[12,"salg_feat",E,E,86,N],[12,"salg_mask",E,E,86,N],[12,"salg_name",E,E,86,N],[3,"af_alg_iv",E,E,N,N],[12,"ivlen",E,E,87,N],[12,"iv",E,E,87,N],[3,"mq_attr",E,E,N,N],[12,"mq_flags",E,E,88,N],[12,"mq_maxmsg",E,E,88,N],[12,"mq_msgsize",E,E,88,N],[12,"mq_curmsgs",E,E,88,N],[3,"statx",E,E,N,N],[12,"stx_mask",E,E,89,N],[12,"stx_blksize",E,E,89,N],[12,"stx_attributes",E,E,89,N],[12,"stx_nlink",E,E,89,N],[12,"stx_uid",E,E,89,N],[12,"stx_gid",E,E,89,N],[12,"stx_mode",E,E,89,N],[12,"__statx_pad1",E,E,89,N],[12,"stx_ino",E,E,89,N],[12,"stx_size",E,E,89,N],[12,"stx_blocks",E,E,89,N],[12,"stx_attributes_mask",E,E,89,N],[12,"stx_atime",E,E,89,N],[12,"stx_btime",E,E,89,N],[12,"stx_ctime",E,E,89,N],[12,"stx_mtime",E,E,89,N],[12,"stx_rdev_major",E,E,89,N],[12,"stx_rdev_minor",E,E,89,N],[12,"stx_dev_major",E,E,89,N],[12,"stx_dev_minor",E,E,89,N],[12,"__statx_pad2",E,E,89,N],[3,R[1310],E,E,N,N],[12,"tv_sec",E,E,90,N],[12,"tv_nsec",E,E,90,N],[12,"__statx_timestamp_pad1",E,E,90,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,91,N],[12,"aio_lio_opcode",E,E,91,N],[12,"aio_reqprio",E,E,91,N],[12,"aio_buf",E,E,91,N],[12,"aio_nbytes",E,E,91,N],[12,"aio_sigevent",E,E,91,N],[12,"aio_offset",E,E,91,N],[3,R[1311],E,E,N,N],[12,"e_termination",E,E,92,N],[12,"e_exit",E,E,92,N],[3,"__timeval",E,E,N,N],[12,"tv_sec",E,E,93,N],[12,"tv_usec",E,E,93,N],[3,"glob64_t",E,E,N,N],[12,"gl_pathc",E,E,94,N],[12,"gl_pathv",E,E,94,N],[12,"gl_offs",E,E,94,N],[12,"gl_flags",E,E,94,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,95,N],[12,"msg_namelen",E,E,95,N],[12,"msg_iov",E,E,95,N],[12,"msg_iovlen",E,E,95,N],[12,"msg_control",E,E,95,N],[12,"msg_controllen",E,E,95,N],[12,"msg_flags",E,E,95,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,96,N],[12,"cmsg_level",E,E,96,N],[12,"cmsg_type",E,E,96,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,97,N],[12,"c_oflag",E,E,97,N],[12,"c_cflag",E,E,97,N],[12,"c_lflag",E,E,97,N],[12,"c_line",E,E,97,N],[12,"c_cc",E,E,97,N],[12,"c_ispeed",E,E,97,N],[12,"c_ospeed",E,E,97,N],[3,"mallinfo",E,E,N,N],[12,"arena",E,E,98,N],[12,"ordblks",E,E,98,N],[12,"smblks",E,E,98,N],[12,"hblks",E,E,98,N],[12,"hblkhd",E,E,98,N],[12,"usmblks",E,E,98,N],[12,"fsmblks",E,E,98,N],[12,"uordblks",E,E,98,N],[12,"fordblks",E,E,98,N],[12,"keepcost",E,E,98,N],[3,"nlmsghdr",E,E,N,N],[12,"nlmsg_len",E,E,99,N],[12,"nlmsg_type",E,E,99,N],[12,"nlmsg_flags",E,E,99,N],[12,"nlmsg_seq",E,E,99,N],[12,"nlmsg_pid",E,E,99,N],[3,"nlmsgerr",E,E,N,N],[12,"error",E,E,100,N],[12,"msg",E,E,100,N],[3,R[1333],E,E,N,N],[12,"group",E,E,101,N],[3,R[1312],E,E,N,N],[12,"nm_block_size",E,E,102,N],[12,"nm_block_nr",E,E,102,N],[12,"nm_frame_size",E,E,102,N],[12,"nm_frame_nr",E,E,102,N],[3,R[1313],E,E,N,N],[12,"nm_status",E,E,103,N],[12,"nm_len",E,E,103,N],[12,"nm_group",E,E,103,N],[12,"nm_pid",E,E,103,N],[12,"nm_uid",E,E,103,N],[12,"nm_gid",E,E,103,N],[3,"nlattr",E,E,N,N],[12,"nla_len",E,E,104,N],[12,"nla_type",E,E,104,N],[3,"rtentry",E,E,N,N],[12,"rt_pad1",E,E,105,N],[12,"rt_dst",E,E,105,N],[12,"rt_gateway",E,E,105,N],[12,"rt_genmask",E,E,105,N],[12,"rt_flags",E,E,105,N],[12,"rt_pad2",E,E,105,N],[12,"rt_pad3",E,E,105,N],[12,"rt_tos",E,E,105,N],[12,"rt_class",E,E,105,N],[12,"rt_pad4",E,E,105,N],[12,"rt_metric",E,E,105,N],[12,"rt_dev",E,E,105,N],[12,"rt_mtu",E,E,105,N],[12,"rt_window",E,E,105,N],[12,"rt_irtt",E,E,105,N],[3,"utmpx",E,E,N,N],[12,"ut_type",E,E,106,N],[12,"ut_pid",E,E,106,N],[12,"ut_line",E,E,106,N],[12,"ut_id",E,E,106,N],[12,"ut_user",E,E,106,N],[12,"ut_host",E,E,106,N],[12,"ut_exit",E,E,106,N],[12,"ut_session",E,E,106,N],[12,"ut_tv",E,E,106,N],[12,"ut_addr_v6",E,E,106,N],[3,"sigset_t",E,E,N,N],[3,"sysinfo",E,E,N,N],[12,"uptime",E,E,107,N],[12,"loads",E,E,107,N],[12,"totalram",E,E,107,N],[12,"freeram",E,E,107,N],[12,"sharedram",E,E,107,N],[12,"bufferram",E,E,107,N],[12,"totalswap",E,E,107,N],[12,"freeswap",E,E,107,N],[12,"procs",E,E,107,N],[12,"pad",E,E,107,N],[12,"totalhigh",E,E,107,N],[12,"freehigh",E,E,107,N],[12,"mem_unit",E,E,107,N],[12,"_f",E,E,107,N],[3,"msqid_ds",E,E,N,N],[12,"msg_perm",E,E,108,N],[12,"msg_stime",E,E,108,N],[12,"msg_rtime",E,E,108,N],[12,"msg_ctime",E,E,108,N],[12,"msg_qnum",E,E,108,N],[12,"msg_qbytes",E,E,108,N],[12,"msg_lspid",E,E,108,N],[12,"msg_lrpid",E,E,108,N],[3,R[1334],E,E,N,N],[12,"sa_sigaction",E,E,109,N],[12,"sa_mask",E,E,109,N],[12,"sa_flags",E,E,109,N],[12,"sa_restorer",E,E,109,N],[3,"statfs",E,E,N,N],[12,"f_type",E,E,110,N],[12,"f_bsize",E,E,110,N],[12,"f_blocks",E,E,110,N],[12,"f_bfree",E,E,110,N],[12,"f_bavail",E,E,110,N],[12,"f_files",E,E,110,N],[12,"f_ffree",E,E,110,N],[12,"f_fsid",E,E,110,N],[12,"f_namelen",E,E,110,N],[12,"f_frsize",E,E,110,N],[3,"flock",E,E,N,N],[12,"l_type",E,E,111,N],[12,"l_whence",E,E,111,N],[12,"l_start",E,E,111,N],[12,"l_len",E,E,111,N],[12,"l_pid",E,E,111,N],[3,"flock64",E,E,N,N],[12,"l_type",E,E,112,N],[12,"l_whence",E,E,112,N],[12,"l_start",E,E,112,N],[12,"l_len",E,E,112,N],[12,"l_pid",E,E,112,N],[3,"siginfo_t",E,E,N,N],[12,"si_signo",E,E,113,N],[12,"si_errno",E,E,113,N],[12,"si_code",E,E,113,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,114,N],[12,"ss_flags",E,E,114,N],[12,"ss_size",E,E,114,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,115,N],[12,"st_ino",E,E,115,N],[12,"st_nlink",E,E,115,N],[12,"st_mode",E,E,115,N],[12,"st_uid",E,E,115,N],[12,"st_gid",E,E,115,N],[12,"st_rdev",E,E,115,N],[12,"st_size",E,E,115,N],[12,"st_blksize",E,E,115,N],[12,"st_blocks",E,E,115,N],[12,"st_atime",E,E,115,N],[12,R[1277],E,E,115,N],[12,"st_mtime",E,E,115,N],[12,R[1278],E,E,115,N],[12,"st_ctime",E,E,115,N],[12,R[1279],E,E,115,N],[3,"stat64",E,E,N,N],[12,"st_dev",E,E,116,N],[12,"st_ino",E,E,116,N],[12,"st_nlink",E,E,116,N],[12,"st_mode",E,E,116,N],[12,"st_uid",E,E,116,N],[12,"st_gid",E,E,116,N],[12,"st_rdev",E,E,116,N],[12,"st_size",E,E,116,N],[12,"st_blksize",E,E,116,N],[12,"st_blocks",E,E,116,N],[12,"st_atime",E,E,116,N],[12,R[1277],E,E,116,N],[12,"st_mtime",E,E,116,N],[12,R[1278],E,E,116,N],[12,"st_ctime",E,E,116,N],[12,R[1279],E,E,116,N],[3,"statfs64",E,E,N,N],[12,"f_type",E,E,117,N],[12,"f_bsize",E,E,117,N],[12,"f_blocks",E,E,117,N],[12,"f_bfree",E,E,117,N],[12,"f_bavail",E,E,117,N],[12,"f_files",E,E,117,N],[12,"f_ffree",E,E,117,N],[12,"f_fsid",E,E,117,N],[12,"f_namelen",E,E,117,N],[12,"f_frsize",E,E,117,N],[12,"f_flags",E,E,117,N],[12,"f_spare",E,E,117,N],[3,R[1335],E,E,N,N],[12,"f_bsize",E,E,118,N],[12,"f_frsize",E,E,118,N],[12,"f_blocks",E,E,118,N],[12,"f_bfree",E,E,118,N],[12,"f_bavail",E,E,118,N],[12,"f_files",E,E,118,N],[12,"f_ffree",E,E,118,N],[12,"f_favail",E,E,118,N],[12,"f_fsid",E,E,118,N],[12,"f_flag",E,E,118,N],[12,"f_namemax",E,E,118,N],[3,R[1314],E,E,N,N],[3,R[1315],E,E,N,N],[12,"significand",E,E,119,N],[12,"exponent",E,E,119,N],[3,R[1316],E,E,N,N],[12,"element",E,E,120,N],[3,R[1317],E,E,N,N],[12,"cwd",E,E,121,N],[12,"swd",E,E,121,N],[12,"ftw",E,E,121,N],[12,"fop",E,E,121,N],[12,"rip",E,E,121,N],[12,"rdp",E,E,121,N],[12,"mxcsr",E,E,121,N],[12,"mxcr_mask",E,E,121,N],[12,"_st",E,E,121,N],[12,"_xmm",E,E,121,N],[3,R[1318],E,E,N,N],[12,"r15",E,E,122,N],[12,"r14",E,E,122,N],[12,"r13",E,E,122,N],[12,"r12",E,E,122,N],[12,"rbp",E,E,122,N],[12,"rbx",E,E,122,N],[12,"r11",E,E,122,N],[12,"r10",E,E,122,N],[12,"r9",E,E,122,N],[12,"r8",E,E,122,N],[12,"rax",E,E,122,N],[12,"rcx",E,E,122,N],[12,"rdx",E,E,122,N],[12,"rsi",E,E,122,N],[12,"rdi",E,E,122,N],[12,"orig_rax",E,E,122,N],[12,"rip",E,E,122,N],[12,"cs",E,E,122,N],[12,"eflags",E,E,122,N],[12,"rsp",E,E,122,N],[12,"ss",E,E,122,N],[12,"fs_base",E,E,122,N],[12,"gs_base",E,E,122,N],[12,"ds",E,E,122,N],[12,"es",E,E,122,N],[12,"fs",E,E,122,N],[12,"gs",E,E,122,N],[3,"user",E,E,N,N],[12,"regs",E,E,123,N],[12,"u_fpvalid",E,E,123,N],[12,"i387",E,E,123,N],[12,"u_tsize",E,E,123,N],[12,"u_dsize",E,E,123,N],[12,"u_ssize",E,E,123,N],[12,"start_code",E,E,123,N],[12,"start_stack",E,E,123,N],[12,"signal",E,E,123,N],[12,"u_ar0",E,E,123,N],[12,"u_fpstate",E,E,123,N],[12,"magic",E,E,123,N],[12,"u_comm",E,E,123,N],[12,"u_debugreg",E,E,123,N],[3,R[1336],E,E,N,N],[12,"gregs",E,E,124,N],[12,"fpregs",E,E,124,N],[3,"ipc_perm",E,E,N,N],[12,"__key",E,E,125,N],[12,"uid",E,E,125,N],[12,"gid",E,E,125,N],[12,"cuid",E,E,125,N],[12,"cgid",E,E,125,N],[12,"mode",E,E,125,N],[12,"__seq",E,E,125,N],[3,"shmid_ds",E,E,N,N],[12,"shm_perm",E,E,126,N],[12,"shm_segsz",E,E,126,N],[12,"shm_atime",E,E,126,N],[12,"shm_dtime",E,E,126,N],[12,"shm_ctime",E,E,126,N],[12,"shm_cpid",E,E,126,N],[12,"shm_lpid",E,E,126,N],[12,"shm_nattch",E,E,126,N],[3,"termios2",E,E,N,N],[12,"c_iflag",E,E,127,N],[12,"c_oflag",E,E,127,N],[12,"c_cflag",E,E,127,N],[12,"c_lflag",E,E,127,N],[12,"c_line",E,E,127,N],[12,"c_cc",E,E,127,N],[12,"c_ispeed",E,E,127,N],[12,"c_ospeed",E,E,127,N],[3,"ip_mreqn",E,E,N,N],[12,R[1269],E,E,128,N],[12,"imr_address",E,E,128,N],[12,"imr_ifindex",E,E,128,N],[3,R[1319],E,E,N,N],[12,"cwd",E,E,129,N],[12,"swd",E,E,129,N],[12,"ftw",E,E,129,N],[12,"fop",E,E,129,N],[12,"rip",E,E,129,N],[12,"rdp",E,E,129,N],[12,"mxcsr",E,E,129,N],[12,"mxcr_mask",E,E,129,N],[12,"st_space",E,E,129,N],[12,"xmm_space",E,E,129,N],[3,R[1337],E,E,N,N],[12,"uc_flags",E,E,130,N],[12,"uc_link",E,E,130,N],[12,"uc_stack",E,E,130,N],[12,"uc_mcontext",E,E,130,N],[12,"uc_sigmask",E,E,130,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,131,N],[12,"f_frsize",E,E,131,N],[12,"f_blocks",E,E,131,N],[12,"f_bfree",E,E,131,N],[12,"f_bavail",E,E,131,N],[12,"f_files",E,E,131,N],[12,"f_ffree",E,E,131,N],[12,"f_favail",E,E,131,N],[12,"f_fsid",E,E,131,N],[12,"f_flag",E,E,131,N],[12,"f_namemax",E,E,131,N],[3,R[1320],E,E,N,N],[3,"sem_t",E,E,N,N],[3,R[1321],E,E,N,N],[3,R[1322],E,E,N,N],[3,R[1323],E,E,N,N],[3,R[1324],E,E,N,N],[3,R[1325],E,E,N,N],[3,R[1326],E,E,N,N],[3,"in6_addr",E,E,N,N],[12,"s6_addr",E,E,132,N],[4,"DIR",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,"timezone",E,E,N,N],[4,"fpos64_t",E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_ECN",E,E,N,[[["u8"]],["u8"]]],[5,"NLA_ALIGN",E,E,N,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CPU_ZERO",E,E,N,[[[R[1280]]]]],[5,"CPU_SET",E,E,N,[[["usize"],[R[1280]]]]],[5,"CPU_CLR",E,E,N,[[["usize"],[R[1280]]]]],[5,"CPU_ISSET",E,E,N,[[["usize"],[R[1280]]],["bool"]]],[5,"CPU_EQUAL",E,E,N,[[[R[1280]]],["bool"]]],[5,"major",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"minor",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"makedev",E,E,N,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC",E,E,N,[[["u8"]],["u8"]]],[5,"RT_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS",E,E,N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR",E,E,N,[[["u32"]],["bool"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"isblank",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,R[499],E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,"getpeername",E,E,N,N],[5,"getsockname",E,E,N,N],[5,"setsockopt",E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,"shutdown",E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"ttyname_r",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,"if_nametoindex",E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"times",E,E,N,N],[5,"pthread_self",E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"getsockopt",E,E,N,N],[5,"raise",E,E,N,N],[5,R[1334],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,"gethostname",E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,"sigprocmask",E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,"cfgetispeed",E,E,N,N],[5,"cfgetospeed",E,E,N,N],[5,"cfsetispeed",E,E,N,N],[5,"cfsetospeed",E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,"tcsendbreak",E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,"posix_openpt",E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"getsid",E,E,N,N],[5,R[627],E,E,N,N],[5,"pause",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"openat",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"fdatasync",E,E,N,N],[5,"mincore",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"clock_settime",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"pthread_getattr_np",E,E,N,N],[5,"pthread_attr_getstack",E,E,N,N],[5,"memalign",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"pipe2",E,E,N,N],[5,"statfs",E,E,N,N],[5,"statfs64",E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"fstatfs64",E,E,N,N],[5,R[1335],E,E,N,N],[5,"fstatvfs64",E,E,N,N],[5,"memrchr",E,E,N,N],[5,"posix_fadvise",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"creat64",E,E,N,N],[5,"fstat64",E,E,N,N],[5,"fstatat64",E,E,N,N],[5,"ftruncate64",E,E,N,N],[5,"lseek64",E,E,N,N],[5,"lstat64",E,E,N,N],[5,"mmap64",E,E,N,N],[5,"open64",E,E,N,N],[5,"openat64",E,E,N,N],[5,"pread64",E,E,N,N],[5,"preadv64",E,E,N,N],[5,"pwrite64",E,E,N,N],[5,"pwritev64",E,E,N,N],[5,"readdir64",E,E,N,N],[5,"readdir64_r",E,E,N,N],[5,"stat64",E,E,N,N],[5,"truncate64",E,E,N,N],[5,"mknodat",E,E,N,N],[5,"pthread_condattr_getclock",E,E,N,N],[5,"pthread_condattr_setclock",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"accept4",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"ptsname_r",E,E,N,N],[5,"clearenv",E,E,N,N],[5,"waitid",E,E,N,N],[5,"setreuid",E,E,N,N],[5,"setregid",E,E,N,N],[5,"getresuid",E,E,N,N],[5,"getresgid",E,E,N,N],[5,"acct",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"vfork",E,E,N,N],[5,"setresgid",E,E,N,N],[5,"setresuid",E,E,N,N],[5,"wait4",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"execvpe",E,E,N,N],[5,"fexecve",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"uname",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,"aio_suspend",E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"setspent",E,E,N,N],[5,"endspent",E,E,N,N],[5,"getspent",E,E,N,N],[5,"getspnam",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"shmget",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"ftok",E,E,N,N],[5,"semget",E,E,N,N],[5,"semop",E,E,N,N],[5,"semctl",E,E,N,N],[5,"msgctl",E,E,N,N],[5,"msgget",E,E,N,N],[5,"msgrcv",E,E,N,N],[5,"msgsnd",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"__errno_location",E,E,N,N],[5,"fopen64",E,E,N,N],[5,"freopen64",E,E,N,N],[5,"tmpfile64",E,E,N,N],[5,"fgetpos64",E,E,N,N],[5,"fsetpos64",E,E,N,N],[5,"fseeko64",E,E,N,N],[5,"ftello64",E,E,N,N],[5,"fallocate",E,E,N,N],[5,"fallocate64",E,E,N,N],[5,"posix_fallocate",E,E,N,N],[5,"posix_fallocate64",E,E,N,N],[5,"readahead",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"lgetxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"lsetxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"llistxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"lremovexattr",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"signalfd",E,E,N,N],[5,"timerfd_create",E,E,N,N],[5,"timerfd_gettime",E,E,N,N],[5,"timerfd_settime",E,E,N,N],[5,"pwritev",E,E,N,N],[5,"preadv",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"mq_open",E,E,N,N],[5,"mq_close",E,E,N,N],[5,"mq_unlink",E,E,N,N],[5,"mq_receive",E,E,N,N],[5,"mq_timedreceive",E,E,N,N],[5,"mq_send",E,E,N,N],[5,"mq_timedsend",E,E,N,N],[5,"mq_getattr",E,E,N,N],[5,"mq_setattr",E,E,N,N],[5,"epoll_pwait",E,E,N,N],[5,"dup3",E,E,N,N],[5,"mkostemp",E,E,N,N],[5,"mkostemps",E,E,N,N],[5,"sigtimedwait",E,E,N,N],[5,"sigwaitinfo",E,E,N,N],[5,"nl_langinfo_l",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"pthread_setschedprio",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,"process_vm_readv",E,E,N,N],[5,"process_vm_writev",E,E,N,N],[5,"reboot",E,E,N,N],[5,"setfsgid",E,E,N,N],[5,"setfsuid",E,E,N,N],[5,"mkfifoat",E,E,N,N],[5,R[1281],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"sync_file_range",E,E,N,N],[5,"mremap",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"remap_file_pages",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"vhangup",E,E,N,N],[5,"sync",E,E,N,N],[5,"syscall",E,E,N,N],[5,"sched_getaffinity",E,E,N,N],[5,"sched_setaffinity",E,E,N,N],[5,"epoll_create",E,E,N,N],[5,"epoll_create1",E,E,N,N],[5,"epoll_wait",E,E,N,N],[5,"epoll_ctl",E,E,N,N],[5,"pthread_getschedparam",E,E,N,N],[5,"unshare",E,E,N,N],[5,"umount",E,E,N,N],[5,"sched_get_priority_max",E,E,N,N],[5,"tee",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"splice",E,E,N,N],[5,"eventfd",E,E,N,N],[5,"sched_rr_get_interval",E,E,N,N],[5,"sem_timedwait",E,E,N,N],[5,"sem_getvalue",E,E,N,N],[5,"sched_setparam",E,E,N,N],[5,"setns",E,E,N,N],[5,"swapoff",E,E,N,N],[5,"vmsplice",E,E,N,N],[5,"mount",E,E,N,N],[5,"personality",E,E,N,N],[5,"prctl",E,E,N,N],[5,"sched_getparam",E,E,N,N],[5,"ppoll",E,E,N,N],[5,"pthread_mutex_timedlock",E,E,N,N],[5,"clone",E,E,N,N],[5,"sched_getscheduler",E,E,N,N],[5,"clock_nanosleep",E,E,N,N],[5,"pthread_attr_getguardsize",E,E,N,N],[5,"sethostname",E,E,N,N],[5,"sched_get_priority_min",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"sysinfo",E,E,N,N],[5,"umount2",E,E,N,N],[5,"pthread_setschedparam",E,E,N,N],[5,"swapon",E,E,N,N],[5,"sched_setscheduler",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"sigsuspend",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"pthread_sigmask",E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"daemon",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"dl_iterate_phdr",E,E,N,N],[5,"setmntent",E,E,N,N],[5,"getmntent",E,E,N,N],[5,"addmntent",E,E,N,N],[5,"endmntent",E,E,N,N],[5,"hasmntopt",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawnattr_getschedpolicy",E,E,N,N],[5,"posix_spawnattr_setschedpolicy",E,E,N,N],[5,"posix_spawnattr_getschedparam",E,E,N,N],[5,"posix_spawnattr_setschedparam",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"fread_unlocked",E,E,N,N],[5,"inotify_rm_watch",E,E,N,N],[5,"inotify_init",E,E,N,N],[5,"inotify_init1",E,E,N,N],[5,"inotify_add_watch",E,E,N,N],[5,"sendmmsg",E,E,N,N],[5,"recvmmsg",E,E,N,N],[5,"getrlimit64",E,E,N,N],[5,"setrlimit64",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"prlimit",E,E,N,N],[5,"prlimit64",E,E,N,N],[5,"utmpname",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"getpt",E,E,N,N],[5,"mallopt",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"statx",E,E,N,N],[5,"getrandom",E,E,N,N],[5,"ioctl",E,E,N,N],[5,R[1634],E,E,N,N],[5,"glob64",E,E,N,N],[5,"globfree64",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"pthread_attr_getaffinity_np",E,E,N,N],[5,"pthread_attr_setaffinity_np",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"pthread_getaffinity_np",E,E,N,N],[5,"pthread_setaffinity_np",E,E,N,N],[5,"pthread_rwlockattr_getkind_np",E,E,N,N],[5,"pthread_rwlockattr_setkind_np",E,E,N,N],[5,"sched_getcpu",E,E,N,N],[5,"mallinfo",E,E,N,N],[5,"malloc_usable_size",E,E,N,N],[5,"getauxval",E,E,N,N],[5,"getpwent_r",E,E,N,N],[5,"getgrent_r",E,E,N,N],[5,"pthread_getname_np",E,E,N,N],[5,"pthread_setname_np",E,E,N,N],[5,"getcontext",E,E,N,N],[5,"setcontext",E,E,N,N],[5,"makecontext",E,E,N,N],[5,"swapcontext",E,E,N,N],[5,"iopl",E,E,N,N],[5,"ioperm",E,E,N,N],[5,"sysctl",E,E,N,N],[11,"si_addr",E,E,113,[[["self"]]]],[11,"si_value",E,E,113,[[["self"]],["sigval"]]],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"locale_t",E,E,N,N],[6,"sa_family_t",E,E,N,N],[6,"speed_t",E,E,N,N],[6,"tcflag_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"ino64_t",E,E,N,N],[6,"off64_t",E,E,N,N],[6,"blkcnt64_t",E,E,N,N],[6,"rlim64_t",E,E,N,N],[6,"mqd_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"__u8",E,E,N,N],[6,"__u16",E,E,N,N],[6,"__s16",E,E,N,N],[6,"__u32",E,E,N,N],[6,"__s32",E,E,N,N],[6,"Elf32_Half",E,E,N,N],[6,"Elf32_Word",E,E,N,N],[6,"Elf32_Off",E,E,N,N],[6,"Elf32_Addr",E,E,N,N],[6,"Elf64_Half",E,E,N,N],[6,"Elf64_Word",E,E,N,N],[6,"Elf64_Off",E,E,N,N],[6,"Elf64_Addr",E,E,N,N],[6,"Elf64_Xword",E,E,N,N],[6,"Elf64_Sxword",E,E,N,N],[6,"Elf32_Section",E,E,N,N],[6,"Elf64_Section",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"__priority_which_t",E,E,N,N],[6,"__rlimit_resource_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"msgqnum_t",E,E,N,N],[6,"msglen_t",E,E,N,N],[6,"fsblkcnt_t",E,E,N,N],[6,"fsfilcnt_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"greg_t",E,E,N,N],[6,"suseconds_t",E,E,N,N],[6,"__u64",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_SETLEASE",E,E,N,N],[17,"F_GETLEASE",E,E,N,N],[17,"F_NOTIFY",E,E,N,N],[17,"F_CANCELLK",E,E,N,N],[17,"F_DUPFD_CLOEXEC",E,E,N,N],[17,"F_SETPIPE_SZ",E,E,N,N],[17,"F_GETPIPE_SZ",E,E,N,N],[17,"F_ADD_SEALS",E,E,N,N],[17,"F_GET_SEALS",E,E,N,N],[17,"F_SEAL_SEAL",E,E,N,N],[17,"F_SEAL_SHRINK",E,E,N,N],[17,"F_SEAL_GROW",E,E,N,N],[17,"F_SEAL_WRITE",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"CLOCK_MONOTONIC_RAW",E,E,N,N],[17,"CLOCK_REALTIME_COARSE",E,E,N,N],[17,"CLOCK_MONOTONIC_COARSE",E,E,N,N],[17,"CLOCK_BOOTTIME",E,E,N,N],[17,"CLOCK_REALTIME_ALARM",E,E,N,N],[17,"CLOCK_BOOTTIME_ALARM",E,E,N,N],[17,"TIMER_ABSTIME",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"SOCK_CLOEXEC",E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,"MAP_PRIVATE",E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,"MS_INVALIDATE",E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_RDONLY",E,E,N,N],[17,"MS_NOSUID",E,E,N,N],[17,"MS_NODEV",E,E,N,N],[17,"MS_NOEXEC",E,E,N,N],[17,"MS_SYNCHRONOUS",E,E,N,N],[17,"MS_REMOUNT",E,E,N,N],[17,"MS_MANDLOCK",E,E,N,N],[17,"MS_DIRSYNC",E,E,N,N],[17,"MS_NOATIME",E,E,N,N],[17,"MS_NODIRATIME",E,E,N,N],[17,"MS_BIND",E,E,N,N],[17,"MS_MOVE",E,E,N,N],[17,"MS_REC",E,E,N,N],[17,"MS_SILENT",E,E,N,N],[17,"MS_POSIXACL",E,E,N,N],[17,"MS_UNBINDABLE",E,E,N,N],[17,"MS_PRIVATE",E,E,N,N],[17,"MS_SLAVE",E,E,N,N],[17,"MS_SHARED",E,E,N,N],[17,"MS_RELATIME",E,E,N,N],[17,"MS_KERNMOUNT",E,E,N,N],[17,"MS_I_VERSION",E,E,N,N],[17,"MS_STRICTATIME",E,E,N,N],[17,"MS_ACTIVE",E,E,N,N],[17,"MS_MGC_VAL",E,E,N,N],[17,"MS_MGC_MSK",E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EWOULDBLOCK",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"SCM_CREDENTIALS",E,E,N,N],[17,"PROT_GROWSDOWN",E,E,N,N],[17,"PROT_GROWSUP",E,E,N,N],[17,"MAP_TYPE",E,E,N,N],[17,"MADV_NORMAL",E,E,N,N],[17,"MADV_RANDOM",E,E,N,N],[17,"MADV_SEQUENTIAL",E,E,N,N],[17,"MADV_WILLNEED",E,E,N,N],[17,"MADV_DONTNEED",E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,"MADV_REMOVE",E,E,N,N],[17,"MADV_DONTFORK",E,E,N,N],[17,"MADV_DOFORK",E,E,N,N],[17,"MADV_MERGEABLE",E,E,N,N],[17,"MADV_UNMERGEABLE",E,E,N,N],[17,"MADV_HUGEPAGE",E,E,N,N],[17,"MADV_NOHUGEPAGE",E,E,N,N],[17,"MADV_DONTDUMP",E,E,N,N],[17,"MADV_DODUMP",E,E,N,N],[17,"MADV_HWPOISON",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,"IFF_BROADCAST",E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,"IFF_LOOPBACK",E,E,N,N],[17,"IFF_POINTOPOINT",E,E,N,N],[17,"IFF_NOTRAILERS",E,E,N,N],[17,"IFF_RUNNING",E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,"IFF_PROMISC",E,E,N,N],[17,"IFF_ALLMULTI",E,E,N,N],[17,"IFF_MASTER",E,E,N,N],[17,"IFF_SLAVE",E,E,N,N],[17,"IFF_MULTICAST",E,E,N,N],[17,"IFF_PORTSEL",E,E,N,N],[17,"IFF_AUTOMEDIA",E,E,N,N],[17,"IFF_DYNAMIC",E,E,N,N],[17,"SOL_IP",E,E,N,N],[17,"SOL_TCP",E,E,N,N],[17,"SOL_UDP",E,E,N,N],[17,"SOL_IPV6",E,E,N,N],[17,"SOL_ICMPV6",E,E,N,N],[17,"SOL_RAW",E,E,N,N],[17,"SOL_DECNET",E,E,N,N],[17,"SOL_X25",E,E,N,N],[17,"SOL_PACKET",E,E,N,N],[17,"SOL_ATM",E,E,N,N],[17,"SOL_AAL",E,E,N,N],[17,"SOL_IRDA",E,E,N,N],[17,"SOL_NETBEUI",E,E,N,N],[17,"SOL_LLC",E,E,N,N],[17,"SOL_DCCP",E,E,N,N],[17,"SOL_NETLINK",E,E,N,N],[17,"SOL_TIPC",E,E,N,N],[17,"SOL_BLUETOOTH",E,E,N,N],[17,"SOL_ALG",E,E,N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_AX25",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_NETROM",E,E,N,N],[17,"AF_BRIDGE",E,E,N,N],[17,"AF_ATMPVC",E,E,N,N],[17,"AF_X25",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_ROSE",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_NETBEUI",E,E,N,N],[17,"AF_SECURITY",E,E,N,N],[17,"AF_KEY",E,E,N,N],[17,"AF_NETLINK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_PACKET",E,E,N,N],[17,"AF_ASH",E,E,N,N],[17,"AF_ECONET",E,E,N,N],[17,"AF_ATMSVC",E,E,N,N],[17,"AF_RDS",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_IRDA",E,E,N,N],[17,"AF_PPPOX",E,E,N,N],[17,"AF_WANPIPE",E,E,N,N],[17,"AF_LLC",E,E,N,N],[17,"AF_CAN",E,E,N,N],[17,"AF_TIPC",E,E,N,N],[17,"AF_BLUETOOTH",E,E,N,N],[17,"AF_IUCV",E,E,N,N],[17,"AF_RXRPC",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_PHONET",E,E,N,N],[17,"AF_IEEE802154",E,E,N,N],[17,"AF_CAIF",E,E,N,N],[17,"AF_ALG",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_AX25",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_NETROM",E,E,N,N],[17,"PF_BRIDGE",E,E,N,N],[17,"PF_ATMPVC",E,E,N,N],[17,"PF_X25",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_ROSE",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_NETBEUI",E,E,N,N],[17,"PF_SECURITY",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_NETLINK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_PACKET",E,E,N,N],[17,"PF_ASH",E,E,N,N],[17,"PF_ECONET",E,E,N,N],[17,"PF_ATMSVC",E,E,N,N],[17,"PF_RDS",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_IRDA",E,E,N,N],[17,"PF_PPPOX",E,E,N,N],[17,"PF_WANPIPE",E,E,N,N],[17,"PF_LLC",E,E,N,N],[17,"PF_CAN",E,E,N,N],[17,"PF_TIPC",E,E,N,N],[17,"PF_BLUETOOTH",E,E,N,N],[17,"PF_IUCV",E,E,N,N],[17,"PF_RXRPC",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_PHONET",E,E,N,N],[17,"PF_IEEE802154",E,E,N,N],[17,"PF_CAIF",E,E,N,N],[17,"PF_ALG",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_DONTWAIT",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_FIN",E,E,N,N],[17,"MSG_SYN",E,E,N,N],[17,"MSG_CONFIRM",E,E,N,N],[17,"MSG_RST",E,E,N,N],[17,"MSG_ERRQUEUE",E,E,N,N],[17,"MSG_NOSIGNAL",E,E,N,N],[17,"MSG_MORE",E,E,N,N],[17,"MSG_WAITFORONE",E,E,N,N],[17,"MSG_FASTOPEN",E,E,N,N],[17,"MSG_CMSG_CLOEXEC",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IP_RECVERR",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_ADD_SOURCE_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_SOURCE_MEMBERSHIP",E,E,N,N],[17,"IP_TRANSPARENT",E,E,N,N],[17,"IPV6_ADDRFORM",E,E,N,N],[17,"IPV6_2292PKTINFO",E,E,N,N],[17,"IPV6_2292HOPOPTS",E,E,N,N],[17,"IPV6_2292DSTOPTS",E,E,N,N],[17,"IPV6_2292RTHDR",E,E,N,N],[17,"IPV6_2292PKTOPTIONS",E,E,N,N],[17,"IPV6_CHECKSUM",E,E,N,N],[17,"IPV6_2292HOPLIMIT",E,E,N,N],[17,"IPV6_NEXTHOP",E,E,N,N],[17,"IPV6_FLOWINFO",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_ADD_MEMBERSHIP",E,E,N,N],[17,"IPV6_DROP_MEMBERSHIP",E,E,N,N],[17,"IPV6_ROUTER_ALERT",E,E,N,N],[17,"IPV6_MTU_DISCOVER",E,E,N,N],[17,"IPV6_MTU",E,E,N,N],[17,"IPV6_RECVERR",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPV6_JOIN_ANYCAST",E,E,N,N],[17,"IPV6_LEAVE_ANYCAST",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"TCP_CORK",E,E,N,N],[17,"TCP_KEEPIDLE",E,E,N,N],[17,"TCP_KEEPINTVL",E,E,N,N],[17,"TCP_KEEPCNT",E,E,N,N],[17,"TCP_SYNCNT",E,E,N,N],[17,"TCP_LINGER2",E,E,N,N],[17,"TCP_DEFER_ACCEPT",E,E,N,N],[17,"TCP_WINDOW_CLAMP",E,E,N,N],[17,"TCP_INFO",E,E,N,N],[17,"TCP_QUICKACK",E,E,N,N],[17,"TCP_CONGESTION",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"EPOLLIN",E,E,N,N],[17,"EPOLLPRI",E,E,N,N],[17,"EPOLLOUT",E,E,N,N],[17,"EPOLLRDNORM",E,E,N,N],[17,"EPOLLRDBAND",E,E,N,N],[17,"EPOLLWRNORM",E,E,N,N],[17,"EPOLLWRBAND",E,E,N,N],[17,"EPOLLMSG",E,E,N,N],[17,"EPOLLERR",E,E,N,N],[17,"EPOLLHUP",E,E,N,N],[17,"EPOLLET",E,E,N,N],[17,"EPOLL_CTL_ADD",E,E,N,N],[17,"EPOLL_CTL_MOD",E,E,N,N],[17,"EPOLL_CTL_DEL",E,E,N,N],[17,"MNT_DETACH",E,E,N,N],[17,"MNT_EXPIRE",E,E,N,N],[17,"Q_GETFMT",E,E,N,N],[17,"Q_GETINFO",E,E,N,N],[17,"Q_SETINFO",E,E,N,N],[17,"QIF_BLIMITS",E,E,N,N],[17,"QIF_SPACE",E,E,N,N],[17,"QIF_ILIMITS",E,E,N,N],[17,"QIF_INODES",E,E,N,N],[17,"QIF_BTIME",E,E,N,N],[17,"QIF_ITIME",E,E,N,N],[17,"QIF_LIMITS",E,E,N,N],[17,"QIF_USAGE",E,E,N,N],[17,"QIF_TIMES",E,E,N,N],[17,"QIF_ALL",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"CR0",E,E,N,N],[17,"FF0",E,E,N,N],[17,"BS0",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"CLONE_VM",E,E,N,N],[17,"CLONE_FS",E,E,N,N],[17,"CLONE_FILES",E,E,N,N],[17,"CLONE_SIGHAND",E,E,N,N],[17,"CLONE_PTRACE",E,E,N,N],[17,"CLONE_VFORK",E,E,N,N],[17,"CLONE_PARENT",E,E,N,N],[17,"CLONE_THREAD",E,E,N,N],[17,"CLONE_NEWNS",E,E,N,N],[17,"CLONE_SYSVSEM",E,E,N,N],[17,"CLONE_SETTLS",E,E,N,N],[17,"CLONE_PARENT_SETTID",E,E,N,N],[17,"CLONE_CHILD_CLEARTID",E,E,N,N],[17,"CLONE_DETACHED",E,E,N,N],[17,"CLONE_UNTRACED",E,E,N,N],[17,"CLONE_CHILD_SETTID",E,E,N,N],[17,"CLONE_NEWUTS",E,E,N,N],[17,"CLONE_NEWIPC",E,E,N,N],[17,"CLONE_NEWUSER",E,E,N,N],[17,"CLONE_NEWPID",E,E,N,N],[17,"CLONE_NEWNET",E,E,N,N],[17,"CLONE_IO",E,E,N,N],[17,"CLONE_NEWCGROUP",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"PTRACE_O_TRACESYSGOOD",E,E,N,N],[17,"PTRACE_O_TRACEFORK",E,E,N,N],[17,"PTRACE_O_TRACEVFORK",E,E,N,N],[17,"PTRACE_O_TRACECLONE",E,E,N,N],[17,"PTRACE_O_TRACEEXEC",E,E,N,N],[17,"PTRACE_O_TRACEVFORKDONE",E,E,N,N],[17,"PTRACE_O_TRACEEXIT",E,E,N,N],[17,"PTRACE_O_TRACESECCOMP",E,E,N,N],[17,"PTRACE_O_EXITKILL",E,E,N,N],[17,"PTRACE_O_SUSPEND_SECCOMP",E,E,N,N],[17,"PTRACE_O_MASK",E,E,N,N],[17,"PTRACE_EVENT_FORK",E,E,N,N],[17,"PTRACE_EVENT_VFORK",E,E,N,N],[17,"PTRACE_EVENT_CLONE",E,E,N,N],[17,"PTRACE_EVENT_EXEC",E,E,N,N],[17,"PTRACE_EVENT_VFORK_DONE",E,E,N,N],[17,"PTRACE_EVENT_EXIT",E,E,N,N],[17,"PTRACE_EVENT_SECCOMP",E,E,N,N],[17,"__WNOTHREAD",E,E,N,N],[17,"__WALL",E,E,N,N],[17,"__WCLONE",E,E,N,N],[17,"SPLICE_F_MOVE",E,E,N,N],[17,"SPLICE_F_NONBLOCK",E,E,N,N],[17,"SPLICE_F_MORE",E,E,N,N],[17,"SPLICE_F_GIFT",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"POSIX_FADV_NORMAL",E,E,N,N],[17,"POSIX_FADV_RANDOM",E,E,N,N],[17,"POSIX_FADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_FADV_WILLNEED",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_SYMLINK_NOFOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_NO_AUTOMOUNT",E,E,N,N],[17,"AT_EMPTY_PATH",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"SI_LOAD_SHIFT",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"UTIME_OMIT",E,E,N,N],[17,"UTIME_NOW",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"IPTOS_LOWDELAY",E,E,N,N],[17,"IPTOS_THROUGHPUT",E,E,N,N],[17,"IPTOS_RELIABILITY",E,E,N,N],[17,"IPTOS_MINCOST",E,E,N,N],[17,"IPTOS_PREC_NETCONTROL",E,E,N,N],[17,"IPTOS_PREC_INTERNETCONTROL",E,E,N,N],[17,"IPTOS_PREC_CRITIC_ECP",E,E,N,N],[17,"IPTOS_PREC_FLASHOVERRIDE",E,E,N,N],[17,"IPTOS_PREC_FLASH",E,E,N,N],[17,"IPTOS_PREC_IMMEDIATE",E,E,N,N],[17,"IPTOS_PREC_PRIORITY",E,E,N,N],[17,"IPTOS_PREC_ROUTINE",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"IPOPT_COPY",E,E,N,N],[17,"IPOPT_CLASS_MASK",E,E,N,N],[17,"IPOPT_NUMBER_MASK",E,E,N,N],[17,"IPOPT_CONTROL",E,E,N,N],[17,"IPOPT_RESERVED1",E,E,N,N],[17,"IPOPT_MEASUREMENT",E,E,N,N],[17,"IPOPT_RESERVED2",E,E,N,N],[17,"IPOPT_END",E,E,N,N],[17,"IPOPT_NOOP",E,E,N,N],[17,"IPOPT_SEC",E,E,N,N],[17,"IPOPT_LSRR",E,E,N,N],[17,"IPOPT_TIMESTAMP",E,E,N,N],[17,"IPOPT_RR",E,E,N,N],[17,"IPOPT_SID",E,E,N,N],[17,"IPOPT_SSRR",E,E,N,N],[17,"IPOPT_RA",E,E,N,N],[17,"IPVERSION",E,E,N,N],[17,"MAXTTL",E,E,N,N],[17,"IPDEFTTL",E,E,N,N],[17,"IPOPT_OPTVAL",E,E,N,N],[17,"IPOPT_OLEN",E,E,N,N],[17,"IPOPT_OFFSET",E,E,N,N],[17,"IPOPT_MINOFF",E,E,N,N],[17,"MAX_IPOPTLEN",E,E,N,N],[17,"IPOPT_NOP",E,E,N,N],[17,"IPOPT_EOL",E,E,N,N],[17,"IPOPT_TS",E,E,N,N],[17,"IPOPT_TS_TSONLY",E,E,N,N],[17,"IPOPT_TS_TSANDADDR",E,E,N,N],[17,"IPOPT_TS_PRESPEC",E,E,N,N],[17,"ARPOP_RREQUEST",E,E,N,N],[17,"ARPOP_RREPLY",E,E,N,N],[17,"ARPOP_InREQUEST",E,E,N,N],[17,"ARPOP_InREPLY",E,E,N,N],[17,"ARPOP_NAK",E,E,N,N],[17,"ATF_NETMASK",E,E,N,N],[17,"ATF_DONTPUB",E,E,N,N],[17,"ARPHRD_NETROM",E,E,N,N],[17,"ARPHRD_ETHER",E,E,N,N],[17,"ARPHRD_EETHER",E,E,N,N],[17,"ARPHRD_AX25",E,E,N,N],[17,"ARPHRD_PRONET",E,E,N,N],[17,"ARPHRD_CHAOS",E,E,N,N],[17,"ARPHRD_IEEE802",E,E,N,N],[17,"ARPHRD_ARCNET",E,E,N,N],[17,"ARPHRD_APPLETLK",E,E,N,N],[17,"ARPHRD_DLCI",E,E,N,N],[17,"ARPHRD_ATM",E,E,N,N],[17,"ARPHRD_METRICOM",E,E,N,N],[17,"ARPHRD_IEEE1394",E,E,N,N],[17,"ARPHRD_EUI64",E,E,N,N],[17,"ARPHRD_INFINIBAND",E,E,N,N],[17,"ARPHRD_SLIP",E,E,N,N],[17,"ARPHRD_CSLIP",E,E,N,N],[17,"ARPHRD_SLIP6",E,E,N,N],[17,"ARPHRD_CSLIP6",E,E,N,N],[17,"ARPHRD_RSRVD",E,E,N,N],[17,"ARPHRD_ADAPT",E,E,N,N],[17,"ARPHRD_ROSE",E,E,N,N],[17,"ARPHRD_X25",E,E,N,N],[17,"ARPHRD_HWX25",E,E,N,N],[17,"ARPHRD_PPP",E,E,N,N],[17,"ARPHRD_CISCO",E,E,N,N],[17,"ARPHRD_HDLC",E,E,N,N],[17,"ARPHRD_LAPB",E,E,N,N],[17,"ARPHRD_DDCMP",E,E,N,N],[17,"ARPHRD_RAWHDLC",E,E,N,N],[17,"ARPHRD_TUNNEL",E,E,N,N],[17,"ARPHRD_TUNNEL6",E,E,N,N],[17,"ARPHRD_FRAD",E,E,N,N],[17,"ARPHRD_SKIP",E,E,N,N],[17,"ARPHRD_LOOPBACK",E,E,N,N],[17,"ARPHRD_LOCALTLK",E,E,N,N],[17,"ARPHRD_FDDI",E,E,N,N],[17,"ARPHRD_BIF",E,E,N,N],[17,"ARPHRD_SIT",E,E,N,N],[17,"ARPHRD_IPDDP",E,E,N,N],[17,"ARPHRD_IPGRE",E,E,N,N],[17,"ARPHRD_PIMREG",E,E,N,N],[17,"ARPHRD_HIPPI",E,E,N,N],[17,"ARPHRD_ASH",E,E,N,N],[17,"ARPHRD_ECONET",E,E,N,N],[17,"ARPHRD_IRDA",E,E,N,N],[17,"ARPHRD_FCPP",E,E,N,N],[17,"ARPHRD_FCAL",E,E,N,N],[17,"ARPHRD_FCPL",E,E,N,N],[17,"ARPHRD_FCFABRIC",E,E,N,N],[17,"ARPHRD_IEEE802_TR",E,E,N,N],[17,"ARPHRD_IEEE80211",E,E,N,N],[17,"ARPHRD_IEEE80211_PRISM",E,E,N,N],[17,"ARPHRD_IEEE80211_RADIOTAP",E,E,N,N],[17,"ARPHRD_IEEE802154",E,E,N,N],[17,"ARPHRD_VOID",E,E,N,N],[17,"ARPHRD_NONE",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"RUSAGE_THREAD",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"_PC_SYNC_IO",E,E,N,N],[17,"_PC_ASYNC_IO",E,E,N,N],[17,"_PC_PRIO_IO",E,E,N,N],[17,"_PC_SOCK_MAXBUF",E,E,N,N],[17,"_PC_FILESIZEBITS",E,E,N,N],[17,"_PC_REC_INCR_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MAX_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MIN_XFER_SIZE",E,E,N,N],[17,"_PC_REC_XFER_ALIGN",E,E,N,N],[17,"_PC_ALLOC_SIZE_MIN",E,E,N,N],[17,"_PC_SYMLINK_MAX",E,E,N,N],[17,"_PC_2_SYMLINKS",E,E,N,N],[17,"MS_NOUSER",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_UIO_MAXIOV",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"_SC_AVPHYS_PAGES",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_XOPEN_XPG2",E,E,N,N],[17,"_SC_XOPEN_XPG3",E,E,N,N],[17,"_SC_XOPEN_XPG4",E,E,N,N],[17,"_SC_NZERO",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_STREAMS",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_V7_ILP32_OFF32",E,E,N,N],[17,"_SC_V7_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V7_LP64_OFF64",E,E,N,N],[17,"_SC_V7_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT",E,E,N,N],[17,"RLIM_SAVED_MAX",E,E,N,N],[17,"RLIM_SAVED_CUR",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_SEAL_FUTURE_WRITE",E,E,N,N],[17,"IFF_LOWER_UP",E,E,N,N],[17,"IFF_DORMANT",E,E,N,N],[17,"IFF_ECHO",E,E,N,N],[17,"IFA_UNSPEC",E,E,N,N],[17,"IFA_ADDRESS",E,E,N,N],[17,"IFA_LOCAL",E,E,N,N],[17,"IFA_LABEL",E,E,N,N],[17,"IFA_BROADCAST",E,E,N,N],[17,"IFA_ANYCAST",E,E,N,N],[17,"IFA_CACHEINFO",E,E,N,N],[17,"IFA_MULTICAST",E,E,N,N],[17,"IFA_F_SECONDARY",E,E,N,N],[17,"IFA_F_TEMPORARY",E,E,N,N],[17,"IFA_F_NODAD",E,E,N,N],[17,"IFA_F_OPTIMISTIC",E,E,N,N],[17,"IFA_F_DADFAILED",E,E,N,N],[17,"IFA_F_HOMEADDRESS",E,E,N,N],[17,"IFA_F_DEPRECATED",E,E,N,N],[17,"IFA_F_TENTATIVE",E,E,N,N],[17,"IFA_F_PERMANENT",E,E,N,N],[17,"IFLA_UNSPEC",E,E,N,N],[17,"IFLA_ADDRESS",E,E,N,N],[17,"IFLA_BROADCAST",E,E,N,N],[17,"IFLA_IFNAME",E,E,N,N],[17,"IFLA_MTU",E,E,N,N],[17,"IFLA_LINK",E,E,N,N],[17,"IFLA_QDISC",E,E,N,N],[17,"IFLA_STATS",E,E,N,N],[17,"IFLA_COST",E,E,N,N],[17,"IFLA_PRIORITY",E,E,N,N],[17,"IFLA_MASTER",E,E,N,N],[17,"IFLA_WIRELESS",E,E,N,N],[17,"IFLA_PROTINFO",E,E,N,N],[17,"IFLA_TXQLEN",E,E,N,N],[17,"IFLA_MAP",E,E,N,N],[17,"IFLA_WEIGHT",E,E,N,N],[17,"IFLA_OPERSTATE",E,E,N,N],[17,"IFLA_LINKMODE",E,E,N,N],[17,"IFLA_LINKINFO",E,E,N,N],[17,"IFLA_NET_NS_PID",E,E,N,N],[17,"IFLA_IFALIAS",E,E,N,N],[17,"IFLA_NUM_VF",E,E,N,N],[17,"IFLA_VFINFO_LIST",E,E,N,N],[17,"IFLA_STATS64",E,E,N,N],[17,"IFLA_VF_PORTS",E,E,N,N],[17,"IFLA_PORT_SELF",E,E,N,N],[17,"IFLA_AF_SPEC",E,E,N,N],[17,"IFLA_GROUP",E,E,N,N],[17,"IFLA_NET_NS_FD",E,E,N,N],[17,"IFLA_EXT_MASK",E,E,N,N],[17,"IFLA_PROMISCUITY",E,E,N,N],[17,"IFLA_NUM_TX_QUEUES",E,E,N,N],[17,"IFLA_NUM_RX_QUEUES",E,E,N,N],[17,"IFLA_CARRIER",E,E,N,N],[17,"IFLA_PHYS_PORT_ID",E,E,N,N],[17,"IFLA_CARRIER_CHANGES",E,E,N,N],[17,"IFLA_PHYS_SWITCH_ID",E,E,N,N],[17,"IFLA_LINK_NETNSID",E,E,N,N],[17,"IFLA_PHYS_PORT_NAME",E,E,N,N],[17,"IFLA_PROTO_DOWN",E,E,N,N],[17,"IFLA_INFO_UNSPEC",E,E,N,N],[17,"IFLA_INFO_KIND",E,E,N,N],[17,"IFLA_INFO_DATA",E,E,N,N],[17,"IFLA_INFO_XSTATS",E,E,N,N],[17,"IFLA_INFO_SLAVE_KIND",E,E,N,N],[17,"IFLA_INFO_SLAVE_DATA",E,E,N,N],[17,"IFF_TUN",E,E,N,N],[17,"IFF_TAP",E,E,N,N],[17,"IFF_NO_PI",E,E,N,N],[17,"TUN_READQ_SIZE",E,E,N,N],[17,"TUN_TUN_DEV",E,E,N,N],[17,"TUN_TAP_DEV",E,E,N,N],[17,"TUN_TYPE_MASK",E,E,N,N],[17,"IFF_ONE_QUEUE",E,E,N,N],[17,"IFF_VNET_HDR",E,E,N,N],[17,"IFF_TUN_EXCL",E,E,N,N],[17,"IFF_MULTI_QUEUE",E,E,N,N],[17,"IFF_ATTACH_QUEUE",E,E,N,N],[17,"IFF_DETACH_QUEUE",E,E,N,N],[17,"IFF_PERSIST",E,E,N,N],[17,"IFF_NOFILTER",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"ST_NODEV",E,E,N,N],[17,"ST_NOEXEC",E,E,N,N],[17,"ST_SYNCHRONOUS",E,E,N,N],[17,"ST_MANDLOCK",E,E,N,N],[17,"ST_WRITE",E,E,N,N],[17,"ST_APPEND",E,E,N,N],[17,"ST_IMMUTABLE",E,E,N,N],[17,"ST_NOATIME",E,E,N,N],[17,"ST_NODIRATIME",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"TCP_MD5SIG",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"RENAME_NOREPLACE",E,E,N,N],[17,"RENAME_EXCHANGE",E,E,N,N],[17,"RENAME_WHITEOUT",E,E,N,N],[17,"SCHED_OTHER",E,E,N,N],[17,"SCHED_FIFO",E,E,N,N],[17,"SCHED_RR",E,E,N,N],[17,"SCHED_BATCH",E,E,N,N],[17,"SCHED_IDLE",E,E,N,N],[17,"SCHED_RESET_ON_FORK",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP",E,"DCCP",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_MTP",E,E,N,N],[17,"IPPROTO_BEETPH",E,E,N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_PIM",E,"Protocol indep. multicast",N,N],[17,"IPPROTO_COMP",E,"IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_MH",E,E,N,N],[17,"IPPROTO_UDPLITE",E,E,N,N],[17,"IPPROTO_MPLS",E,E,N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"AF_IB",E,E,N,N],[17,"AF_MPLS",E,E,N,N],[17,"AF_NFC",E,E,N,N],[17,"AF_VSOCK",E,E,N,N],[17,"AF_XDP",E,E,N,N],[17,"PF_IB",E,E,N,N],[17,"PF_MPLS",E,E,N,N],[17,"PF_NFC",E,E,N,N],[17,"PF_VSOCK",E,E,N,N],[17,"PF_XDP",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_INFO",E,E,N,N],[17,"MSG_STAT",E,E,N,N],[17,"MSG_INFO",E,E,N,N],[17,"MSG_NOERROR",E,E,N,N],[17,"MSG_EXCEPT",E,E,N,N],[17,"MSG_COPY",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHM_REMAP",E,E,N,N],[17,"SHM_EXEC",E,E,N,N],[17,"SHM_LOCK",E,E,N,N],[17,"SHM_UNLOCK",E,E,N,N],[17,"SHM_HUGETLB",E,E,N,N],[17,"SHM_NORESERVE",E,E,N,N],[17,"EPOLLRDHUP",E,E,N,N],[17,"EPOLLEXCLUSIVE",E,E,N,N],[17,"EPOLLONESHOT",E,E,N,N],[17,"QFMT_VFS_OLD",E,E,N,N],[17,"QFMT_VFS_V0",E,E,N,N],[17,"QFMT_VFS_V1",E,E,N,N],[17,"EFD_SEMAPHORE",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"RB_AUTOBOOT",E,E,N,N],[17,"RB_HALT_SYSTEM",E,E,N,N],[17,"RB_ENABLE_CAD",E,E,N,N],[17,"RB_DISABLE_CAD",E,E,N,N],[17,"RB_POWER_OFF",E,E,N,N],[17,"RB_SW_SUSPEND",E,E,N,N],[17,"RB_KEXEC",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE",E,E,N,N],[17,"SYNC_FILE_RANGE_WRITE",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"MREMAP_MAYMOVE",E,E,N,N],[17,"MREMAP_FIXED",E,E,N,N],[17,"PR_SET_PDEATHSIG",E,E,N,N],[17,"PR_GET_PDEATHSIG",E,E,N,N],[17,"PR_GET_DUMPABLE",E,E,N,N],[17,"PR_SET_DUMPABLE",E,E,N,N],[17,"PR_GET_UNALIGN",E,E,N,N],[17,"PR_SET_UNALIGN",E,E,N,N],[17,"PR_UNALIGN_NOPRINT",E,E,N,N],[17,"PR_UNALIGN_SIGBUS",E,E,N,N],[17,"PR_GET_KEEPCAPS",E,E,N,N],[17,"PR_SET_KEEPCAPS",E,E,N,N],[17,"PR_GET_FPEMU",E,E,N,N],[17,"PR_SET_FPEMU",E,E,N,N],[17,"PR_FPEMU_NOPRINT",E,E,N,N],[17,"PR_FPEMU_SIGFPE",E,E,N,N],[17,"PR_GET_FPEXC",E,E,N,N],[17,"PR_SET_FPEXC",E,E,N,N],[17,"PR_FP_EXC_SW_ENABLE",E,E,N,N],[17,"PR_FP_EXC_DIV",E,E,N,N],[17,"PR_FP_EXC_OVF",E,E,N,N],[17,"PR_FP_EXC_UND",E,E,N,N],[17,"PR_FP_EXC_RES",E,E,N,N],[17,"PR_FP_EXC_INV",E,E,N,N],[17,"PR_FP_EXC_DISABLED",E,E,N,N],[17,"PR_FP_EXC_NONRECOV",E,E,N,N],[17,"PR_FP_EXC_ASYNC",E,E,N,N],[17,"PR_FP_EXC_PRECISE",E,E,N,N],[17,"PR_GET_TIMING",E,E,N,N],[17,"PR_SET_TIMING",E,E,N,N],[17,"PR_TIMING_STATISTICAL",E,E,N,N],[17,"PR_TIMING_TIMESTAMP",E,E,N,N],[17,"PR_SET_NAME",E,E,N,N],[17,"PR_GET_NAME",E,E,N,N],[17,"PR_GET_ENDIAN",E,E,N,N],[17,"PR_SET_ENDIAN",E,E,N,N],[17,"PR_ENDIAN_BIG",E,E,N,N],[17,"PR_ENDIAN_LITTLE",E,E,N,N],[17,"PR_ENDIAN_PPC_LITTLE",E,E,N,N],[17,"PR_GET_SECCOMP",E,E,N,N],[17,"PR_SET_SECCOMP",E,E,N,N],[17,"PR_CAPBSET_READ",E,E,N,N],[17,"PR_CAPBSET_DROP",E,E,N,N],[17,"PR_GET_TSC",E,E,N,N],[17,"PR_SET_TSC",E,E,N,N],[17,"PR_TSC_ENABLE",E,E,N,N],[17,"PR_TSC_SIGSEGV",E,E,N,N],[17,"PR_GET_SECUREBITS",E,E,N,N],[17,"PR_SET_SECUREBITS",E,E,N,N],[17,"PR_SET_TIMERSLACK",E,E,N,N],[17,"PR_GET_TIMERSLACK",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE",E,E,N,N],[17,"PR_MCE_KILL",E,E,N,N],[17,"PR_MCE_KILL_CLEAR",E,E,N,N],[17,"PR_MCE_KILL_SET",E,E,N,N],[17,"PR_MCE_KILL_LATE",E,E,N,N],[17,"PR_MCE_KILL_EARLY",E,E,N,N],[17,"PR_MCE_KILL_DEFAULT",E,E,N,N],[17,"PR_MCE_KILL_GET",E,E,N,N],[17,"PR_SET_MM",E,E,N,N],[17,"PR_SET_MM_START_CODE",E,E,N,N],[17,"PR_SET_MM_END_CODE",E,E,N,N],[17,"PR_SET_MM_START_DATA",E,E,N,N],[17,"PR_SET_MM_END_DATA",E,E,N,N],[17,"PR_SET_MM_START_STACK",E,E,N,N],[17,"PR_SET_MM_START_BRK",E,E,N,N],[17,"PR_SET_MM_BRK",E,E,N,N],[17,"PR_SET_MM_ARG_START",E,E,N,N],[17,"PR_SET_MM_ARG_END",E,E,N,N],[17,"PR_SET_MM_ENV_START",E,E,N,N],[17,"PR_SET_MM_ENV_END",E,E,N,N],[17,"PR_SET_MM_AUXV",E,E,N,N],[17,"PR_SET_MM_EXE_FILE",E,E,N,N],[17,"PR_SET_MM_MAP",E,E,N,N],[17,"PR_SET_MM_MAP_SIZE",E,E,N,N],[17,"PR_SET_PTRACER",E,E,N,N],[17,"PR_SET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_GET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_SET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_TID_ADDRESS",E,E,N,N],[17,"PR_SET_THP_DISABLE",E,E,N,N],[17,"PR_GET_THP_DISABLE",E,E,N,N],[17,"PR_MPX_ENABLE_MANAGEMENT",E,E,N,N],[17,"PR_MPX_DISABLE_MANAGEMENT",E,E,N,N],[17,"PR_SET_FP_MODE",E,E,N,N],[17,"PR_GET_FP_MODE",E,E,N,N],[17,"PR_FP_MODE_FR",E,E,N,N],[17,"PR_FP_MODE_FRE",E,E,N,N],[17,"PR_CAP_AMBIENT",E,E,N,N],[17,"PR_CAP_AMBIENT_IS_SET",E,E,N,N],[17,"PR_CAP_AMBIENT_RAISE",E,E,N,N],[17,"PR_CAP_AMBIENT_LOWER",E,E,N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL",E,E,N,N],[17,"GRND_NONBLOCK",E,E,N,N],[17,"GRND_RANDOM",E,E,N,N],[17,"SECCOMP_MODE_DISABLED",E,E,N,N],[17,"SECCOMP_MODE_STRICT",E,E,N,N],[17,"SECCOMP_MODE_FILTER",E,E,N,N],[17,"ITIMER_REAL",E,E,N,N],[17,"ITIMER_VIRTUAL",E,E,N,N],[17,"ITIMER_PROF",E,E,N,N],[17,"TFD_CLOEXEC",E,E,N,N],[17,"TFD_NONBLOCK",E,E,N,N],[17,"TFD_TIMER_ABSTIME",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"_POSIX_VDISABLE",E,E,N,N],[17,"FALLOC_FL_KEEP_SIZE",E,E,N,N],[17,"FALLOC_FL_PUNCH_HOLE",E,E,N,N],[17,"FALLOC_FL_COLLAPSE_RANGE",E,E,N,N],[17,"FALLOC_FL_ZERO_RANGE",E,E,N,N],[17,"FALLOC_FL_INSERT_RANGE",E,E,N,N],[17,"FALLOC_FL_UNSHARE_RANGE",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"SO_ORIGINAL_DST",E,E,N,N],[17,"IP_ORIGDSTADDR",E,E,N,N],[17,"IP_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_ORIGDSTADDR",E,E,N,N],[17,"IPV6_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_FLOWLABEL_MGR",E,E,N,N],[17,"IPV6_FLOWINFO_SEND",E,E,N,N],[17,"IPV6_FLOWINFO_FLOWLABEL",E,E,N,N],[17,"IPV6_FLOWINFO_PRIORITY",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CMSPAR",E,E,N,N],[17,"MFD_CLOEXEC",E,E,N,N],[17,"MFD_ALLOW_SEALING",E,E,N,N],[17,"MFD_HUGETLB",E,E,N,N],[17,"PT_NULL",E,E,N,N],[17,"PT_LOAD",E,E,N,N],[17,"PT_DYNAMIC",E,E,N,N],[17,"PT_INTERP",E,E,N,N],[17,"PT_NOTE",E,E,N,N],[17,"PT_SHLIB",E,E,N,N],[17,"PT_PHDR",E,E,N,N],[17,"PT_TLS",E,E,N,N],[17,"PT_NUM",E,E,N,N],[17,"PT_LOOS",E,E,N,N],[17,"PT_GNU_EH_FRAME",E,E,N,N],[17,"PT_GNU_STACK",E,E,N,N],[17,"PT_GNU_RELRO",E,E,N,N],[17,"ETH_ALEN",E,E,N,N],[17,"ETH_HLEN",E,E,N,N],[17,"ETH_ZLEN",E,E,N,N],[17,"ETH_DATA_LEN",E,E,N,N],[17,"ETH_FRAME_LEN",E,E,N,N],[17,"ETH_FCS_LEN",E,E,N,N],[17,"ETH_P_LOOP",E,E,N,N],[17,"ETH_P_PUP",E,E,N,N],[17,"ETH_P_PUPAT",E,E,N,N],[17,"ETH_P_IP",E,E,N,N],[17,"ETH_P_X25",E,E,N,N],[17,"ETH_P_ARP",E,E,N,N],[17,"ETH_P_BPQ",E,E,N,N],[17,"ETH_P_IEEEPUP",E,E,N,N],[17,"ETH_P_IEEEPUPAT",E,E,N,N],[17,"ETH_P_BATMAN",E,E,N,N],[17,"ETH_P_DEC",E,E,N,N],[17,"ETH_P_DNA_DL",E,E,N,N],[17,"ETH_P_DNA_RC",E,E,N,N],[17,"ETH_P_DNA_RT",E,E,N,N],[17,"ETH_P_LAT",E,E,N,N],[17,"ETH_P_DIAG",E,E,N,N],[17,"ETH_P_CUST",E,E,N,N],[17,"ETH_P_SCA",E,E,N,N],[17,"ETH_P_TEB",E,E,N,N],[17,"ETH_P_RARP",E,E,N,N],[17,"ETH_P_ATALK",E,E,N,N],[17,"ETH_P_AARP",E,E,N,N],[17,"ETH_P_8021Q",E,E,N,N],[17,"ETH_P_IPX",E,E,N,N],[17,"ETH_P_IPV6",E,E,N,N],[17,"ETH_P_PAUSE",E,E,N,N],[17,"ETH_P_SLOW",E,E,N,N],[17,"ETH_P_WCCP",E,E,N,N],[17,"ETH_P_MPLS_UC",E,E,N,N],[17,"ETH_P_MPLS_MC",E,E,N,N],[17,"ETH_P_ATMMPOA",E,E,N,N],[17,"ETH_P_PPP_DISC",E,E,N,N],[17,"ETH_P_PPP_SES",E,E,N,N],[17,"ETH_P_LINK_CTL",E,E,N,N],[17,"ETH_P_ATMFATE",E,E,N,N],[17,"ETH_P_PAE",E,E,N,N],[17,"ETH_P_AOE",E,E,N,N],[17,"ETH_P_8021AD",E,E,N,N],[17,"ETH_P_802_EX1",E,E,N,N],[17,"ETH_P_TIPC",E,E,N,N],[17,"ETH_P_MACSEC",E,E,N,N],[17,"ETH_P_8021AH",E,E,N,N],[17,"ETH_P_MVRP",E,E,N,N],[17,"ETH_P_1588",E,E,N,N],[17,"ETH_P_PRP",E,E,N,N],[17,"ETH_P_FCOE",E,E,N,N],[17,"ETH_P_TDLS",E,E,N,N],[17,"ETH_P_FIP",E,E,N,N],[17,"ETH_P_80221",E,E,N,N],[17,"ETH_P_LOOPBACK",E,E,N,N],[17,"ETH_P_QINQ1",E,E,N,N],[17,"ETH_P_QINQ2",E,E,N,N],[17,"ETH_P_QINQ3",E,E,N,N],[17,"ETH_P_EDSA",E,E,N,N],[17,"ETH_P_AF_IUCV",E,E,N,N],[17,"ETH_P_802_3_MIN",E,E,N,N],[17,"ETH_P_802_3",E,E,N,N],[17,"ETH_P_AX25",E,E,N,N],[17,"ETH_P_ALL",E,E,N,N],[17,"ETH_P_802_2",E,E,N,N],[17,"ETH_P_SNAP",E,E,N,N],[17,"ETH_P_DDCMP",E,E,N,N],[17,"ETH_P_WAN_PPP",E,E,N,N],[17,"ETH_P_PPP_MP",E,E,N,N],[17,"ETH_P_LOCALTALK",E,E,N,N],[17,"ETH_P_CANFD",E,E,N,N],[17,"ETH_P_PPPTALK",E,E,N,N],[17,"ETH_P_TR_802_2",E,E,N,N],[17,"ETH_P_MOBITEX",E,E,N,N],[17,"ETH_P_CONTROL",E,E,N,N],[17,"ETH_P_IRDA",E,E,N,N],[17,"ETH_P_ECONET",E,E,N,N],[17,"ETH_P_HDLC",E,E,N,N],[17,"ETH_P_ARCNET",E,E,N,N],[17,"ETH_P_DSA",E,E,N,N],[17,"ETH_P_TRAILER",E,E,N,N],[17,"ETH_P_PHONET",E,E,N,N],[17,"ETH_P_IEEE802154",E,E,N,N],[17,"ETH_P_CAIF",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDULER",E,E,N,N],[17,"NLMSG_NOOP",E,E,N,N],[17,"NLMSG_ERROR",E,E,N,N],[17,"NLMSG_DONE",E,E,N,N],[17,"NLMSG_OVERRUN",E,E,N,N],[17,"NLMSG_MIN_TYPE",E,E,N,N],[17,"NFNLGRP_NONE",E,E,N,N],[17,"NFNLGRP_CONNTRACK_NEW",E,E,N,N],[17,"NFNLGRP_CONNTRACK_UPDATE",E,E,N,N],[17,"NFNLGRP_CONNTRACK_DESTROY",E,E,N,N],[17,"NFNLGRP_CONNTRACK_EXP_NEW",E,E,N,N],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE",E,E,N,N],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY",E,E,N,N],[17,"NFNLGRP_NFTABLES",E,E,N,N],[17,"NFNLGRP_ACCT_QUOTA",E,E,N,N],[17,"NFNETLINK_V0",E,E,N,N],[17,"NFNL_SUBSYS_NONE",E,E,N,N],[17,"NFNL_SUBSYS_CTNETLINK",E,E,N,N],[17,"NFNL_SUBSYS_CTNETLINK_EXP",E,E,N,N],[17,"NFNL_SUBSYS_QUEUE",E,E,N,N],[17,"NFNL_SUBSYS_ULOG",E,E,N,N],[17,"NFNL_SUBSYS_OSF",E,E,N,N],[17,"NFNL_SUBSYS_IPSET",E,E,N,N],[17,"NFNL_SUBSYS_ACCT",E,E,N,N],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT",E,E,N,N],[17,"NFNL_SUBSYS_CTHELPER",E,E,N,N],[17,"NFNL_SUBSYS_NFTABLES",E,E,N,N],[17,"NFNL_SUBSYS_NFT_COMPAT",E,E,N,N],[17,"NFNL_SUBSYS_COUNT",E,E,N,N],[17,"NFNL_MSG_BATCH_BEGIN",E,E,N,N],[17,"NFNL_MSG_BATCH_END",E,E,N,N],[17,"NFULNL_MSG_PACKET",E,E,N,N],[17,"NFULNL_MSG_CONFIG",E,E,N,N],[17,"NFULA_UNSPEC",E,E,N,N],[17,"NFULA_PACKET_HDR",E,E,N,N],[17,"NFULA_MARK",E,E,N,N],[17,"NFULA_TIMESTAMP",E,E,N,N],[17,"NFULA_IFINDEX_INDEV",E,E,N,N],[17,"NFULA_IFINDEX_OUTDEV",E,E,N,N],[17,"NFULA_IFINDEX_PHYSINDEV",E,E,N,N],[17,"NFULA_IFINDEX_PHYSOUTDEV",E,E,N,N],[17,"NFULA_HWADDR",E,E,N,N],[17,"NFULA_PAYLOAD",E,E,N,N],[17,"NFULA_PREFIX",E,E,N,N],[17,"NFULA_UID",E,E,N,N],[17,"NFULA_SEQ",E,E,N,N],[17,"NFULA_SEQ_GLOBAL",E,E,N,N],[17,"NFULA_GID",E,E,N,N],[17,"NFULA_HWTYPE",E,E,N,N],[17,"NFULA_HWHEADER",E,E,N,N],[17,"NFULA_HWLEN",E,E,N,N],[17,"NFULA_CT",E,E,N,N],[17,"NFULA_CT_INFO",E,E,N,N],[17,"NFULNL_CFG_CMD_NONE",E,E,N,N],[17,"NFULNL_CFG_CMD_BIND",E,E,N,N],[17,"NFULNL_CFG_CMD_UNBIND",E,E,N,N],[17,"NFULNL_CFG_CMD_PF_BIND",E,E,N,N],[17,"NFULNL_CFG_CMD_PF_UNBIND",E,E,N,N],[17,"NFULA_CFG_UNSPEC",E,E,N,N],[17,"NFULA_CFG_CMD",E,E,N,N],[17,"NFULA_CFG_MODE",E,E,N,N],[17,"NFULA_CFG_NLBUFSIZ",E,E,N,N],[17,"NFULA_CFG_TIMEOUT",E,E,N,N],[17,"NFULA_CFG_QTHRESH",E,E,N,N],[17,"NFULA_CFG_FLAGS",E,E,N,N],[17,"NFULNL_COPY_NONE",E,E,N,N],[17,"NFULNL_COPY_META",E,E,N,N],[17,"NFULNL_COPY_PACKET",E,E,N,N],[17,"NFULNL_CFG_F_SEQ",E,E,N,N],[17,"NFULNL_CFG_F_SEQ_GLOBAL",E,E,N,N],[17,"NFULNL_CFG_F_CONNTRACK",E,E,N,N],[17,"GENL_NAMSIZ",E,E,N,N],[17,"GENL_MIN_ID",E,E,N,N],[17,"GENL_MAX_ID",E,E,N,N],[17,"GENL_ADMIN_PERM",E,E,N,N],[17,"GENL_CMD_CAP_DO",E,E,N,N],[17,"GENL_CMD_CAP_DUMP",E,E,N,N],[17,"GENL_CMD_CAP_HASPOL",E,E,N,N],[17,"GENL_ID_CTRL",E,E,N,N],[17,"CTRL_CMD_UNSPEC",E,E,N,N],[17,"CTRL_CMD_NEWFAMILY",E,E,N,N],[17,"CTRL_CMD_DELFAMILY",E,E,N,N],[17,"CTRL_CMD_GETFAMILY",E,E,N,N],[17,"CTRL_CMD_NEWOPS",E,E,N,N],[17,"CTRL_CMD_DELOPS",E,E,N,N],[17,"CTRL_CMD_GETOPS",E,E,N,N],[17,"CTRL_CMD_NEWMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_DELMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_GETMCAST_GRP",E,E,N,N],[17,"CTRL_ATTR_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_FAMILY_ID",E,E,N,N],[17,"CTRL_ATTR_FAMILY_NAME",E,E,N,N],[17,"CTRL_ATTR_VERSION",E,E,N,N],[17,"CTRL_ATTR_HDRSIZE",E,E,N,N],[17,"CTRL_ATTR_MAXATTR",E,E,N,N],[17,"CTRL_ATTR_OPS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GROUPS",E,E,N,N],[17,"CTRL_ATTR_OP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_OP_ID",E,E,N,N],[17,"CTRL_ATTR_OP_FLAGS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_ID",E,E,N,N],[17,"PACKET_ADD_MEMBERSHIP",E,E,N,N],[17,"PACKET_DROP_MEMBERSHIP",E,E,N,N],[17,"PACKET_MR_MULTICAST",E,E,N,N],[17,"PACKET_MR_PROMISC",E,E,N,N],[17,"PACKET_MR_ALLMULTI",E,E,N,N],[17,"PACKET_MR_UNICAST",E,E,N,N],[17,"NF_DROP",E,E,N,N],[17,"NF_ACCEPT",E,E,N,N],[17,"NF_STOLEN",E,E,N,N],[17,"NF_QUEUE",E,E,N,N],[17,"NF_REPEAT",E,E,N,N],[17,"NF_STOP",E,E,N,N],[17,"NF_MAX_VERDICT",E,E,N,N],[17,"NF_VERDICT_MASK",E,E,N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS",E,E,N,N],[17,"NF_VERDICT_QMASK",E,E,N,N],[17,"NF_VERDICT_QBITS",E,E,N,N],[17,"NF_VERDICT_BITS",E,E,N,N],[17,"NF_INET_PRE_ROUTING",E,E,N,N],[17,"NF_INET_LOCAL_IN",E,E,N,N],[17,"NF_INET_FORWARD",E,E,N,N],[17,"NF_INET_LOCAL_OUT",E,E,N,N],[17,"NF_INET_POST_ROUTING",E,E,N,N],[17,"NF_INET_NUMHOOKS",E,E,N,N],[17,"NFPROTO_UNSPEC",E,E,N,N],[17,"NFPROTO_IPV4",E,E,N,N],[17,"NFPROTO_ARP",E,E,N,N],[17,"NFPROTO_BRIDGE",E,E,N,N],[17,"NFPROTO_IPV6",E,E,N,N],[17,"NFPROTO_DECNET",E,E,N,N],[17,"NFPROTO_NUMPROTO",E,E,N,N],[17,"NF_IP_PRE_ROUTING",E,E,N,N],[17,"NF_IP_LOCAL_IN",E,E,N,N],[17,"NF_IP_FORWARD",E,E,N,N],[17,"NF_IP_LOCAL_OUT",E,E,N,N],[17,"NF_IP_POST_ROUTING",E,E,N,N],[17,"NF_IP_NUMHOOKS",E,E,N,N],[17,"NF_IP_PRI_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP_PRI_RAW",E,E,N,N],[17,"NF_IP_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP_PRI_MANGLE",E,E,N,N],[17,"NF_IP_PRI_NAT_DST",E,E,N,N],[17,"NF_IP_PRI_FILTER",E,E,N,N],[17,"NF_IP_PRI_SECURITY",E,E,N,N],[17,"NF_IP_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM",E,E,N,N],[17,"NF_IP_PRI_LAST",E,E,N,N],[17,"NF_IP6_PRE_ROUTING",E,E,N,N],[17,"NF_IP6_LOCAL_IN",E,E,N,N],[17,"NF_IP6_FORWARD",E,E,N,N],[17,"NF_IP6_LOCAL_OUT",E,E,N,N],[17,"NF_IP6_POST_ROUTING",E,E,N,N],[17,"NF_IP6_NUMHOOKS",E,E,N,N],[17,"NF_IP6_PRI_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP6_PRI_RAW",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP6_PRI_MANGLE",E,E,N,N],[17,"NF_IP6_PRI_NAT_DST",E,E,N,N],[17,"NF_IP6_PRI_FILTER",E,E,N,N],[17,"NF_IP6_PRI_SECURITY",E,E,N,N],[17,"NF_IP6_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP6_PRI_LAST",E,E,N,N],[17,"SIOCADDRT",E,E,N,N],[17,"SIOCDELRT",E,E,N,N],[17,"SIOCGIFNAME",E,E,N,N],[17,"SIOCSIFLINK",E,E,N,N],[17,"SIOCGIFCONF",E,E,N,N],[17,"SIOCGIFFLAGS",E,E,N,N],[17,"SIOCSIFFLAGS",E,E,N,N],[17,"SIOCGIFADDR",E,E,N,N],[17,"SIOCSIFADDR",E,E,N,N],[17,"SIOCGIFDSTADDR",E,E,N,N],[17,"SIOCSIFDSTADDR",E,E,N,N],[17,"SIOCGIFBRDADDR",E,E,N,N],[17,"SIOCSIFBRDADDR",E,E,N,N],[17,"SIOCGIFNETMASK",E,E,N,N],[17,"SIOCSIFNETMASK",E,E,N,N],[17,"SIOCGIFMETRIC",E,E,N,N],[17,"SIOCSIFMETRIC",E,E,N,N],[17,"SIOCGIFMEM",E,E,N,N],[17,"SIOCSIFMEM",E,E,N,N],[17,"SIOCGIFMTU",E,E,N,N],[17,"SIOCSIFMTU",E,E,N,N],[17,"SIOCSIFHWADDR",E,E,N,N],[17,"SIOCGIFENCAP",E,E,N,N],[17,"SIOCSIFENCAP",E,E,N,N],[17,"SIOCGIFHWADDR",E,E,N,N],[17,"SIOCGIFSLAVE",E,E,N,N],[17,"SIOCSIFSLAVE",E,E,N,N],[17,"SIOCADDMULTI",E,E,N,N],[17,"SIOCDELMULTI",E,E,N,N],[17,"SIOCDARP",E,E,N,N],[17,"SIOCGARP",E,E,N,N],[17,"SIOCSARP",E,E,N,N],[17,"SIOCDRARP",E,E,N,N],[17,"SIOCGRARP",E,E,N,N],[17,"SIOCSRARP",E,E,N,N],[17,"SIOCGIFMAP",E,E,N,N],[17,"SIOCSIFMAP",E,E,N,N],[17,"IPTOS_TOS_MASK",E,E,N,N],[17,"IPTOS_PREC_MASK",E,E,N,N],[17,"IPTOS_ECN_NOT_ECT",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REINSTATE",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_MTU",E,E,N,N],[17,"RTF_MSS",E,E,N,N],[17,"RTF_WINDOW",E,E,N,N],[17,"RTF_IRTT",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_NOFORWARD",E,E,N,N],[17,"RTF_THROW",E,E,N,N],[17,"RTF_NOPMTUDISC",E,E,N,N],[17,"RTF_DEFAULT",E,E,N,N],[17,"RTF_ALLONLINK",E,E,N,N],[17,"RTF_ADDRCONF",E,E,N,N],[17,"RTF_LINKRT",E,E,N,N],[17,"RTF_NONEXTHOP",E,E,N,N],[17,"RTF_CACHE",E,E,N,N],[17,"RTF_FLOW",E,E,N,N],[17,"RTF_POLICY",E,E,N,N],[17,"RTCF_VALVE",E,E,N,N],[17,"RTCF_MASQ",E,E,N,N],[17,"RTCF_NAT",E,E,N,N],[17,"RTCF_DOREDIRECT",E,E,N,N],[17,"RTCF_LOG",E,E,N,N],[17,"RTCF_DIRECTSRC",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_INTERFACE",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_NAT",E,E,N,N],[17,"RTF_ADDRCLASSMASK",E,E,N,N],[17,"RT_CLASS_UNSPEC",E,E,N,N],[17,"RT_CLASS_DEFAULT",E,E,N,N],[17,"RT_CLASS_MAIN",E,E,N,N],[17,"RT_CLASS_LOCAL",E,E,N,N],[17,"RT_CLASS_MAX",E,E,N,N],[17,"NUD_NONE",E,E,N,N],[17,"NUD_INCOMPLETE",E,E,N,N],[17,"NUD_REACHABLE",E,E,N,N],[17,"NUD_STALE",E,E,N,N],[17,"NUD_DELAY",E,E,N,N],[17,"NUD_PROBE",E,E,N,N],[17,"NUD_FAILED",E,E,N,N],[17,"NUD_NOARP",E,E,N,N],[17,"NUD_PERMANENT",E,E,N,N],[17,"NTF_USE",E,E,N,N],[17,"NTF_SELF",E,E,N,N],[17,"NTF_MASTER",E,E,N,N],[17,"NTF_PROXY",E,E,N,N],[17,"NTF_ROUTER",E,E,N,N],[17,"NDA_UNSPEC",E,E,N,N],[17,"NDA_DST",E,E,N,N],[17,"NDA_LLADDR",E,E,N,N],[17,"NDA_CACHEINFO",E,E,N,N],[17,"NDA_PROBES",E,E,N,N],[17,"NDA_VLAN",E,E,N,N],[17,"NDA_PORT",E,E,N,N],[17,"NDA_VNI",E,E,N,N],[17,"NDA_IFINDEX",E,E,N,N],[17,"NLA_ALIGNTO",E,E,N,N],[17,"NETLINK_ROUTE",E,E,N,N],[17,"NETLINK_UNUSED",E,E,N,N],[17,"NETLINK_USERSOCK",E,E,N,N],[17,"NETLINK_FIREWALL",E,E,N,N],[17,"NETLINK_SOCK_DIAG",E,E,N,N],[17,"NETLINK_NFLOG",E,E,N,N],[17,"NETLINK_XFRM",E,E,N,N],[17,"NETLINK_SELINUX",E,E,N,N],[17,"NETLINK_ISCSI",E,E,N,N],[17,"NETLINK_AUDIT",E,E,N,N],[17,"NETLINK_FIB_LOOKUP",E,E,N,N],[17,"NETLINK_CONNECTOR",E,E,N,N],[17,"NETLINK_NETFILTER",E,E,N,N],[17,"NETLINK_IP6_FW",E,E,N,N],[17,"NETLINK_DNRTMSG",E,E,N,N],[17,"NETLINK_KOBJECT_UEVENT",E,E,N,N],[17,"NETLINK_GENERIC",E,E,N,N],[17,"NETLINK_SCSITRANSPORT",E,E,N,N],[17,"NETLINK_ECRYPTFS",E,E,N,N],[17,"NETLINK_RDMA",E,E,N,N],[17,"NETLINK_CRYPTO",E,E,N,N],[17,"NETLINK_INET_DIAG",E,E,N,N],[17,"NLM_F_REQUEST",E,E,N,N],[17,"NLM_F_MULTI",E,E,N,N],[17,"NLM_F_ACK",E,E,N,N],[17,"NLM_F_ECHO",E,E,N,N],[17,"NLM_F_DUMP_INTR",E,E,N,N],[17,"NLM_F_DUMP_FILTERED",E,E,N,N],[17,"NLM_F_ROOT",E,E,N,N],[17,"NLM_F_MATCH",E,E,N,N],[17,"NLM_F_ATOMIC",E,E,N,N],[17,"NLM_F_DUMP",E,E,N,N],[17,"NLM_F_REPLACE",E,E,N,N],[17,"NLM_F_EXCL",E,E,N,N],[17,"NLM_F_CREATE",E,E,N,N],[17,"NLM_F_APPEND",E,E,N,N],[17,"NETLINK_ADD_MEMBERSHIP",E,E,N,N],[17,"NETLINK_DROP_MEMBERSHIP",E,E,N,N],[17,"NETLINK_PKTINFO",E,E,N,N],[17,"NETLINK_BROADCAST_ERROR",E,E,N,N],[17,"NETLINK_NO_ENOBUFS",E,E,N,N],[17,"NETLINK_RX_RING",E,E,N,N],[17,"NETLINK_TX_RING",E,E,N,N],[17,"NETLINK_LISTEN_ALL_NSID",E,E,N,N],[17,"NETLINK_LIST_MEMBERSHIPS",E,E,N,N],[17,"NETLINK_CAP_ACK",E,E,N,N],[17,"NLA_F_NESTED",E,E,N,N],[17,"NLA_F_NET_BYTEORDER",E,E,N,N],[17,"NLA_TYPE_MASK",E,E,N,N],[17,"TCA_UNSPEC",E,E,N,N],[17,"TCA_KIND",E,E,N,N],[17,"TCA_OPTIONS",E,E,N,N],[17,"TCA_STATS",E,E,N,N],[17,"TCA_XSTATS",E,E,N,N],[17,"TCA_RATE",E,E,N,N],[17,"TCA_FCNT",E,E,N,N],[17,"TCA_STATS2",E,E,N,N],[17,"TCA_STAB",E,E,N,N],[17,"RTM_NEWLINK",E,E,N,N],[17,"RTM_DELLINK",E,E,N,N],[17,"RTM_GETLINK",E,E,N,N],[17,"RTM_SETLINK",E,E,N,N],[17,"RTM_NEWADDR",E,E,N,N],[17,"RTM_DELADDR",E,E,N,N],[17,"RTM_GETADDR",E,E,N,N],[17,"RTM_NEWROUTE",E,E,N,N],[17,"RTM_DELROUTE",E,E,N,N],[17,"RTM_GETROUTE",E,E,N,N],[17,"RTM_NEWNEIGH",E,E,N,N],[17,"RTM_DELNEIGH",E,E,N,N],[17,"RTM_GETNEIGH",E,E,N,N],[17,"RTM_NEWRULE",E,E,N,N],[17,"RTM_DELRULE",E,E,N,N],[17,"RTM_GETRULE",E,E,N,N],[17,"RTM_NEWQDISC",E,E,N,N],[17,"RTM_DELQDISC",E,E,N,N],[17,"RTM_GETQDISC",E,E,N,N],[17,"RTM_NEWTCLASS",E,E,N,N],[17,"RTM_DELTCLASS",E,E,N,N],[17,"RTM_GETTCLASS",E,E,N,N],[17,"RTM_NEWTFILTER",E,E,N,N],[17,"RTM_DELTFILTER",E,E,N,N],[17,"RTM_GETTFILTER",E,E,N,N],[17,"RTM_NEWACTION",E,E,N,N],[17,"RTM_DELACTION",E,E,N,N],[17,"RTM_GETACTION",E,E,N,N],[17,"RTM_NEWPREFIX",E,E,N,N],[17,"RTM_GETMULTICAST",E,E,N,N],[17,"RTM_GETANYCAST",E,E,N,N],[17,"RTM_NEWNEIGHTBL",E,E,N,N],[17,"RTM_GETNEIGHTBL",E,E,N,N],[17,"RTM_SETNEIGHTBL",E,E,N,N],[17,"RTM_NEWNDUSEROPT",E,E,N,N],[17,"RTM_NEWADDRLABEL",E,E,N,N],[17,"RTM_DELADDRLABEL",E,E,N,N],[17,"RTM_GETADDRLABEL",E,E,N,N],[17,"RTM_GETDCB",E,E,N,N],[17,"RTM_SETDCB",E,E,N,N],[17,"RTM_NEWNETCONF",E,E,N,N],[17,"RTM_GETNETCONF",E,E,N,N],[17,"RTM_NEWMDB",E,E,N,N],[17,"RTM_DELMDB",E,E,N,N],[17,"RTM_GETMDB",E,E,N,N],[17,"RTM_NEWNSID",E,E,N,N],[17,"RTM_DELNSID",E,E,N,N],[17,"RTM_GETNSID",E,E,N,N],[17,"RTM_F_NOTIFY",E,E,N,N],[17,"RTM_F_CLONED",E,E,N,N],[17,"RTM_F_EQUALIZE",E,E,N,N],[17,"RTM_F_PREFIX",E,E,N,N],[17,"RTA_UNSPEC",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_SRC",E,E,N,N],[17,"RTA_IIF",E,E,N,N],[17,"RTA_OIF",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_PRIORITY",E,E,N,N],[17,"RTA_PREFSRC",E,E,N,N],[17,"RTA_METRICS",E,E,N,N],[17,"RTA_MULTIPATH",E,E,N,N],[17,"RTA_PROTOINFO",E,E,N,N],[17,"RTA_FLOW",E,E,N,N],[17,"RTA_CACHEINFO",E,E,N,N],[17,"RTA_SESSION",E,E,N,N],[17,"RTA_MP_ALGO",E,E,N,N],[17,"RTA_TABLE",E,E,N,N],[17,"RTA_MARK",E,E,N,N],[17,"RTA_MFC_STATS",E,E,N,N],[17,"RTN_UNSPEC",E,E,N,N],[17,"RTN_UNICAST",E,E,N,N],[17,"RTN_LOCAL",E,E,N,N],[17,"RTN_BROADCAST",E,E,N,N],[17,"RTN_ANYCAST",E,E,N,N],[17,"RTN_MULTICAST",E,E,N,N],[17,"RTN_BLACKHOLE",E,E,N,N],[17,"RTN_UNREACHABLE",E,E,N,N],[17,"RTN_PROHIBIT",E,E,N,N],[17,"RTN_THROW",E,E,N,N],[17,"RTN_NAT",E,E,N,N],[17,"RTN_XRESOLVE",E,E,N,N],[17,"RTPROT_UNSPEC",E,E,N,N],[17,"RTPROT_REDIRECT",E,E,N,N],[17,"RTPROT_KERNEL",E,E,N,N],[17,"RTPROT_BOOT",E,E,N,N],[17,"RTPROT_STATIC",E,E,N,N],[17,"RT_SCOPE_UNIVERSE",E,E,N,N],[17,"RT_SCOPE_SITE",E,E,N,N],[17,"RT_SCOPE_LINK",E,E,N,N],[17,"RT_SCOPE_HOST",E,E,N,N],[17,"RT_SCOPE_NOWHERE",E,E,N,N],[17,"RT_TABLE_UNSPEC",E,E,N,N],[17,"RT_TABLE_COMPAT",E,E,N,N],[17,"RT_TABLE_DEFAULT",E,E,N,N],[17,"RT_TABLE_MAIN",E,E,N,N],[17,"RT_TABLE_LOCAL",E,E,N,N],[17,"RTMSG_OVERRUN",E,E,N,N],[17,"RTMSG_NEWDEVICE",E,E,N,N],[17,"RTMSG_DELDEVICE",E,E,N,N],[17,"RTMSG_NEWROUTE",E,E,N,N],[17,"RTMSG_DELROUTE",E,E,N,N],[17,"RTMSG_NEWRULE",E,E,N,N],[17,"RTMSG_DELRULE",E,E,N,N],[17,"RTMSG_CONTROL",E,E,N,N],[17,"RTMSG_AR_FAILED",E,E,N,N],[17,"MAX_ADDR_LEN",E,E,N,N],[17,"ARPD_UPDATE",E,E,N,N],[17,"ARPD_LOOKUP",E,E,N,N],[17,"ARPD_FLUSH",E,E,N,N],[17,"ATF_MAGIC",E,E,N,N],[17,"SO_TIMESTAMPING",E,E,N,N],[17,"SCM_TIMESTAMPING",E,E,N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS",E,E,N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE",E,E,N,N],[17,"ALG_SET_KEY",E,E,N,N],[17,"ALG_SET_IV",E,E,N,N],[17,"ALG_SET_OP",E,E,N,N],[17,"ALG_SET_AEAD_ASSOCLEN",E,E,N,N],[17,"ALG_SET_AEAD_AUTHSIZE",E,E,N,N],[17,"ALG_OP_DECRYPT",E,E,N,N],[17,"ALG_OP_ENCRYPT",E,E,N,N],[17,"VMADDR_CID_ANY",E,E,N,N],[17,"VMADDR_CID_HYPERVISOR",E,E,N,N],[17,"VMADDR_CID_RESERVED",E,E,N,N],[17,"VMADDR_CID_HOST",E,E,N,N],[17,"VMADDR_PORT_ANY",E,E,N,N],[17,"IN_ACCESS",E,E,N,N],[17,"IN_MODIFY",E,E,N,N],[17,"IN_ATTRIB",E,E,N,N],[17,"IN_CLOSE_WRITE",E,E,N,N],[17,"IN_CLOSE_NOWRITE",E,E,N,N],[17,"IN_CLOSE",E,E,N,N],[17,"IN_OPEN",E,E,N,N],[17,"IN_MOVED_FROM",E,E,N,N],[17,"IN_MOVED_TO",E,E,N,N],[17,"IN_MOVE",E,E,N,N],[17,"IN_CREATE",E,E,N,N],[17,"IN_DELETE",E,E,N,N],[17,"IN_DELETE_SELF",E,E,N,N],[17,"IN_MOVE_SELF",E,E,N,N],[17,"IN_UNMOUNT",E,E,N,N],[17,"IN_Q_OVERFLOW",E,E,N,N],[17,"IN_IGNORED",E,E,N,N],[17,"IN_ONLYDIR",E,E,N,N],[17,"IN_DONT_FOLLOW",E,E,N,N],[17,"IN_ISDIR",E,E,N,N],[17,"IN_ONESHOT",E,E,N,N],[17,"IN_ALL_EVENTS",E,E,N,N],[17,"IN_CLOEXEC",E,E,N,N],[17,"IN_NONBLOCK",E,E,N,N],[17,"FUTEX_WAIT",E,E,N,N],[17,"FUTEX_WAKE",E,E,N,N],[17,"FUTEX_FD",E,E,N,N],[17,"FUTEX_REQUEUE",E,E,N,N],[17,"FUTEX_CMP_REQUEUE",E,E,N,N],[17,"FUTEX_WAKE_OP",E,E,N,N],[17,"FUTEX_LOCK_PI",E,E,N,N],[17,"FUTEX_UNLOCK_PI",E,E,N,N],[17,"FUTEX_TRYLOCK_PI",E,E,N,N],[17,"FUTEX_WAIT_BITSET",E,E,N,N],[17,"FUTEX_WAKE_BITSET",E,E,N,N],[17,"FUTEX_WAIT_REQUEUE_PI",E,E,N,N],[17,"FUTEX_CMP_REQUEUE_PI",E,E,N,N],[17,"FUTEX_PRIVATE_FLAG",E,E,N,N],[17,"FUTEX_CLOCK_REALTIME",E,E,N,N],[17,"FUTEX_CMD_MASK",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_LOCKS",E,E,N,N],[17,"RLIMIT_SIGPENDING",E,E,N,N],[17,"RLIMIT_MSGQUEUE",E,E,N,N],[17,"RLIMIT_NICE",E,E,N,N],[17,"RLIMIT_RTPRIO",E,E,N,N],[17,"RLIMIT_RTTIME",E,E,N,N],[17,"RLIMIT_NLIMITS",E,E,N,N],[17,"MS_RMT_MASK",E,E,N,N],[17,"__UT_LINESIZE",E,E,N,N],[17,"__UT_NAMESIZE",E,E,N,N],[17,"__UT_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"SOCK_NONBLOCK",E,E,N,N],[17,"SOL_RXRPC",E,E,N,N],[17,"SOL_PPPOL2TP",E,E,N,N],[17,"SOL_PNPIPE",E,E,N,N],[17,"SOL_RDS",E,E,N,N],[17,"SOL_IUCV",E,E,N,N],[17,"SOL_CAIF",E,E,N,N],[17,"SOL_NFC",E,E,N,N],[17,"SOL_XDP",E,E,N,N],[17,"MSG_TRYHARD",E,E,N,N],[17,"LC_PAPER",E,E,N,N],[17,"LC_NAME",E,E,N,N],[17,"LC_ADDRESS",E,E,N,N],[17,"LC_TELEPHONE",E,E,N,N],[17,"LC_MEASUREMENT",E,E,N,N],[17,"LC_IDENTIFICATION",E,E,N,N],[17,"LC_PAPER_MASK",E,E,N,N],[17,"LC_NAME_MASK",E,E,N,N],[17,"LC_ADDRESS_MASK",E,E,N,N],[17,"LC_TELEPHONE_MASK",E,E,N,N],[17,"LC_MEASUREMENT_MASK",E,E,N,N],[17,"LC_IDENTIFICATION_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"MAP_SHARED_VALIDATE",E,E,N,N],[17,"MAP_FIXED_NOREPLACE",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"SOCK_DCCP",E,E,N,N],[17,"SOCK_PACKET",E,E,N,N],[17,"TCP_COOKIE_TRANSACTIONS",E,E,N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS",E,E,N,N],[17,"TCP_THIN_DUPACK",E,E,N,N],[17,"TCP_USER_TIMEOUT",E,E,N,N],[17,"TCP_REPAIR",E,E,N,N],[17,"TCP_REPAIR_QUEUE",E,E,N,N],[17,"TCP_QUEUE_SEQ",E,E,N,N],[17,"TCP_REPAIR_OPTIONS",E,E,N,N],[17,"TCP_FASTOPEN",E,E,N,N],[17,"TCP_TIMESTAMP",E,E,N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE",E,E,N,N],[17,"DCCP_SOCKOPT_SERVICE",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_L",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_R",E,E,N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS",E,E,N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT",E,E,N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS",E,E,N,N],[17,"DCCP_SOCKOPT_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_TX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_RX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO",E,E,N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN",E,"maximum number of services provided on the same listening…",N,N],[17,"SIGEV_THREAD_ID",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_EQUIV_CLASS_MAX",E,E,N,N],[17,"_SC_CHARCLASS_NAME_MAX",E,E,N,N],[17,"_SC_PII",E,E,N,N],[17,"_SC_PII_XTI",E,E,N,N],[17,"_SC_PII_SOCKET",E,E,N,N],[17,"_SC_PII_INTERNET",E,E,N,N],[17,"_SC_PII_OSI",E,E,N,N],[17,"_SC_POLL",E,E,N,N],[17,"_SC_SELECT",E,E,N,N],[17,"_SC_PII_INTERNET_STREAM",E,E,N,N],[17,"_SC_PII_INTERNET_DGRAM",E,E,N,N],[17,"_SC_PII_OSI_COTS",E,E,N,N],[17,"_SC_PII_OSI_CLTS",E,E,N,N],[17,"_SC_PII_OSI_M",E,E,N,N],[17,"_SC_T_IOV_MAX",E,E,N,N],[17,"_SC_2_C_VERSION",E,E,N,N],[17,"_SC_CHAR_BIT",E,E,N,N],[17,"_SC_CHAR_MAX",E,E,N,N],[17,"_SC_CHAR_MIN",E,E,N,N],[17,"_SC_INT_MAX",E,E,N,N],[17,"_SC_INT_MIN",E,E,N,N],[17,"_SC_LONG_BIT",E,E,N,N],[17,"_SC_WORD_BIT",E,E,N,N],[17,"_SC_MB_LEN_MAX",E,E,N,N],[17,"_SC_SSIZE_MAX",E,E,N,N],[17,"_SC_SCHAR_MAX",E,E,N,N],[17,"_SC_SCHAR_MIN",E,E,N,N],[17,"_SC_SHRT_MAX",E,E,N,N],[17,"_SC_SHRT_MIN",E,E,N,N],[17,"_SC_UCHAR_MAX",E,E,N,N],[17,"_SC_UINT_MAX",E,E,N,N],[17,"_SC_ULONG_MAX",E,E,N,N],[17,"_SC_USHRT_MAX",E,E,N,N],[17,"_SC_NL_ARGMAX",E,E,N,N],[17,"_SC_NL_LANGMAX",E,E,N,N],[17,"_SC_NL_MSGMAX",E,E,N,N],[17,"_SC_NL_NMAX",E,E,N,N],[17,"_SC_NL_SETMAX",E,E,N,N],[17,"_SC_NL_TEXTMAX",E,E,N,N],[17,"_SC_BASE",E,E,N,N],[17,"_SC_C_LANG_SUPPORT",E,E,N,N],[17,"_SC_C_LANG_SUPPORT_R",E,E,N,N],[17,"_SC_DEVICE_IO",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC_R",E,E,N,N],[17,"_SC_FD_MGMT",E,E,N,N],[17,"_SC_FIFO",E,E,N,N],[17,"_SC_PIPE",E,E,N,N],[17,"_SC_FILE_ATTRIBUTES",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_FILE_SYSTEM",E,E,N,N],[17,"_SC_MULTI_PROCESS",E,E,N,N],[17,"_SC_SINGLE_PROCESS",E,E,N,N],[17,"_SC_NETWORKING",E,E,N,N],[17,"_SC_REGEX_VERSION",E,E,N,N],[17,"_SC_SIGNALS",E,E,N,N],[17,"_SC_SYSTEM_DATABASE",E,E,N,N],[17,"_SC_SYSTEM_DATABASE_R",E,E,N,N],[17,"_SC_USER_GROUPS",E,E,N,N],[17,"_SC_USER_GROUPS_R",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"ST_RELATIME",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"ADFS_SUPER_MAGIC",E,E,N,N],[17,"AFFS_SUPER_MAGIC",E,E,N,N],[17,"CODA_SUPER_MAGIC",E,E,N,N],[17,"CRAMFS_MAGIC",E,E,N,N],[17,"EFS_SUPER_MAGIC",E,E,N,N],[17,"EXT2_SUPER_MAGIC",E,E,N,N],[17,"EXT3_SUPER_MAGIC",E,E,N,N],[17,"EXT4_SUPER_MAGIC",E,E,N,N],[17,"HPFS_SUPER_MAGIC",E,E,N,N],[17,"HUGETLBFS_MAGIC",E,E,N,N],[17,"ISOFS_SUPER_MAGIC",E,E,N,N],[17,"JFFS2_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC2",E,E,N,N],[17,"MINIX2_SUPER_MAGIC",E,E,N,N],[17,"MINIX2_SUPER_MAGIC2",E,E,N,N],[17,"MSDOS_SUPER_MAGIC",E,E,N,N],[17,"NCP_SUPER_MAGIC",E,E,N,N],[17,"NFS_SUPER_MAGIC",E,E,N,N],[17,"OPENPROM_SUPER_MAGIC",E,E,N,N],[17,"PROC_SUPER_MAGIC",E,E,N,N],[17,"QNX4_SUPER_MAGIC",E,E,N,N],[17,"REISERFS_SUPER_MAGIC",E,E,N,N],[17,"SMB_SUPER_MAGIC",E,E,N,N],[17,"TMPFS_MAGIC",E,E,N,N],[17,"USBDEVICE_SUPER_MAGIC",E,E,N,N],[17,"CPU_SETSIZE",E,E,N,N],[17,"PTRACE_TRACEME",E,E,N,N],[17,"PTRACE_PEEKTEXT",E,E,N,N],[17,"PTRACE_PEEKDATA",E,E,N,N],[17,"PTRACE_PEEKUSER",E,E,N,N],[17,"PTRACE_POKETEXT",E,E,N,N],[17,"PTRACE_POKEDATA",E,E,N,N],[17,"PTRACE_POKEUSER",E,E,N,N],[17,"PTRACE_CONT",E,E,N,N],[17,"PTRACE_KILL",E,E,N,N],[17,"PTRACE_SINGLESTEP",E,E,N,N],[17,"PTRACE_ATTACH",E,E,N,N],[17,"PTRACE_SYSCALL",E,E,N,N],[17,"PTRACE_SETOPTIONS",E,E,N,N],[17,"PTRACE_GETEVENTMSG",E,E,N,N],[17,"PTRACE_GETSIGINFO",E,E,N,N],[17,"PTRACE_SETSIGINFO",E,E,N,N],[17,"PTRACE_GETREGSET",E,E,N,N],[17,"PTRACE_SETREGSET",E,E,N,N],[17,"PTRACE_SEIZE",E,E,N,N],[17,"PTRACE_INTERRUPT",E,E,N,N],[17,"PTRACE_LISTEN",E,E,N,N],[17,"PTRACE_PEEKSIGINFO",E,E,N,N],[17,"EPOLLWAKEUP",E,E,N,N],[17,"SEEK_DATA",E,E,N,N],[17,"SEEK_HOLE",E,E,N,N],[17,"LINUX_REBOOT_MAGIC1",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2A",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2B",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2C",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART",E,E,N,N],[17,"LINUX_REBOOT_CMD_HALT",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_ON",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART2",E,E,N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND",E,E,N,N],[17,"LINUX_REBOOT_CMD_KEXEC",E,E,N,N],[17,"TCA_PAD",E,E,N,N],[17,"TCA_DUMP_INVISIBLE",E,E,N,N],[17,"TCA_CHAIN",E,E,N,N],[17,"TCA_HW_OFFLOAD",E,E,N,N],[17,"RTM_DELNETCONF",E,E,N,N],[17,"RTM_NEWSTATS",E,E,N,N],[17,"RTM_GETSTATS",E,E,N,N],[17,"RTM_NEWCACHEREPORT",E,E,N,N],[17,"RTM_F_LOOKUP_TABLE",E,E,N,N],[17,"RTM_F_FIB_MATCH",E,E,N,N],[17,"RTA_VIA",E,E,N,N],[17,"RTA_NEWDST",E,E,N,N],[17,"RTA_PREF",E,E,N,N],[17,"RTA_ENCAP_TYPE",E,E,N,N],[17,"RTA_ENCAP",E,E,N,N],[17,"RTA_EXPIRES",E,E,N,N],[17,"RTA_PAD",E,E,N,N],[17,"RTA_UID",E,E,N,N],[17,"RTA_TTL_PROPAGATE",E,E,N,N],[17,"NTF_EXT_LEARNED",E,E,N,N],[17,"NTF_OFFLOADED",E,E,N,N],[17,"NDA_MASTER",E,E,N,N],[17,"NDA_LINK_NETNSID",E,E,N,N],[17,"NDA_SRC_VNI",E,E,N,N],[17,"IFA_FLAGS",E,E,N,N],[17,"IFA_F_MANAGETEMPADDR",E,E,N,N],[17,"IFA_F_NOPREFIXROUTE",E,E,N,N],[17,"IFA_F_MCAUTOJOIN",E,E,N,N],[17,"IFA_F_STABLE_PRIVACY",E,E,N,N],[17,"MAX_LINKS",E,E,N,N],[17,"GENL_UNS_ADMIN_PERM",E,E,N,N],[17,"GENL_ID_VFS_DQUOT",E,E,N,N],[17,"GENL_ID_PMCRAID",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"NF_NETDEV_INGRESS",E,E,N,N],[17,"NF_NETDEV_NUMHOOKS",E,E,N,N],[17,"NFPROTO_INET",E,E,N,N],[17,"NFPROTO_NETDEV",E,E,N,N],[17,"NFT_TABLE_MAXNAMELEN",E,E,N,N],[17,"NFT_CHAIN_MAXNAMELEN",E,E,N,N],[17,"NFT_SET_MAXNAMELEN",E,E,N,N],[17,"NFT_OBJ_MAXNAMELEN",E,E,N,N],[17,"NFT_USERDATA_MAXLEN",E,E,N,N],[17,"NFT_REG_VERDICT",E,E,N,N],[17,"NFT_REG_1",E,E,N,N],[17,"NFT_REG_2",E,E,N,N],[17,"NFT_REG_3",E,E,N,N],[17,"NFT_REG_4",E,E,N,N],[17,"__NFT_REG_MAX",E,E,N,N],[17,"NFT_REG32_00",E,E,N,N],[17,"NFT_REG32_01",E,E,N,N],[17,"NFT_REG32_02",E,E,N,N],[17,"NFT_REG32_03",E,E,N,N],[17,"NFT_REG32_04",E,E,N,N],[17,"NFT_REG32_05",E,E,N,N],[17,"NFT_REG32_06",E,E,N,N],[17,"NFT_REG32_07",E,E,N,N],[17,"NFT_REG32_08",E,E,N,N],[17,"NFT_REG32_09",E,E,N,N],[17,"NFT_REG32_10",E,E,N,N],[17,"NFT_REG32_11",E,E,N,N],[17,"NFT_REG32_12",E,E,N,N],[17,"NFT_REG32_13",E,E,N,N],[17,"NFT_REG32_14",E,E,N,N],[17,"NFT_REG32_15",E,E,N,N],[17,"NFT_REG_SIZE",E,E,N,N],[17,"NFT_REG32_SIZE",E,E,N,N],[17,"NFT_CONTINUE",E,E,N,N],[17,"NFT_BREAK",E,E,N,N],[17,"NFT_JUMP",E,E,N,N],[17,"NFT_GOTO",E,E,N,N],[17,"NFT_RETURN",E,E,N,N],[17,"NFT_MSG_NEWTABLE",E,E,N,N],[17,"NFT_MSG_GETTABLE",E,E,N,N],[17,"NFT_MSG_DELTABLE",E,E,N,N],[17,"NFT_MSG_NEWCHAIN",E,E,N,N],[17,"NFT_MSG_GETCHAIN",E,E,N,N],[17,"NFT_MSG_DELCHAIN",E,E,N,N],[17,"NFT_MSG_NEWRULE",E,E,N,N],[17,"NFT_MSG_GETRULE",E,E,N,N],[17,"NFT_MSG_DELRULE",E,E,N,N],[17,"NFT_MSG_NEWSET",E,E,N,N],[17,"NFT_MSG_GETSET",E,E,N,N],[17,"NFT_MSG_DELSET",E,E,N,N],[17,"NFT_MSG_NEWSETELEM",E,E,N,N],[17,"NFT_MSG_GETSETELEM",E,E,N,N],[17,"NFT_MSG_DELSETELEM",E,E,N,N],[17,"NFT_MSG_NEWGEN",E,E,N,N],[17,"NFT_MSG_GETGEN",E,E,N,N],[17,"NFT_MSG_TRACE",E,E,N,N],[17,"NFT_MSG_NEWOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ",E,E,N,N],[17,"NFT_MSG_DELOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ_RESET",E,E,N,N],[17,"NFT_MSG_MAX",E,E,N,N],[17,"NFT_SET_ANONYMOUS",E,E,N,N],[17,"NFT_SET_CONSTANT",E,E,N,N],[17,"NFT_SET_INTERVAL",E,E,N,N],[17,"NFT_SET_MAP",E,E,N,N],[17,"NFT_SET_TIMEOUT",E,E,N,N],[17,"NFT_SET_EVAL",E,E,N,N],[17,"NFT_SET_POL_PERFORMANCE",E,E,N,N],[17,"NFT_SET_POL_MEMORY",E,E,N,N],[17,"NFT_SET_ELEM_INTERVAL_END",E,E,N,N],[17,"NFT_DATA_VALUE",E,E,N,N],[17,"NFT_DATA_VERDICT",E,E,N,N],[17,"NFT_DATA_RESERVED_MASK",E,E,N,N],[17,"NFT_DATA_VALUE_MAXLEN",E,E,N,N],[17,"NFT_BYTEORDER_NTOH",E,E,N,N],[17,"NFT_BYTEORDER_HTON",E,E,N,N],[17,"NFT_CMP_EQ",E,E,N,N],[17,"NFT_CMP_NEQ",E,E,N,N],[17,"NFT_CMP_LT",E,E,N,N],[17,"NFT_CMP_LTE",E,E,N,N],[17,"NFT_CMP_GT",E,E,N,N],[17,"NFT_CMP_GTE",E,E,N,N],[17,"NFT_RANGE_EQ",E,E,N,N],[17,"NFT_RANGE_NEQ",E,E,N,N],[17,"NFT_LOOKUP_F_INV",E,E,N,N],[17,"NFT_DYNSET_OP_ADD",E,E,N,N],[17,"NFT_DYNSET_OP_UPDATE",E,E,N,N],[17,"NFT_DYNSET_F_INV",E,E,N,N],[17,"NFT_PAYLOAD_LL_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_NONE",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_INET",E,E,N,N],[17,"NFT_META_LEN",E,E,N,N],[17,"NFT_META_PROTOCOL",E,E,N,N],[17,"NFT_META_PRIORITY",E,E,N,N],[17,"NFT_META_MARK",E,E,N,N],[17,"NFT_META_IIF",E,E,N,N],[17,"NFT_META_OIF",E,E,N,N],[17,"NFT_META_IIFNAME",E,E,N,N],[17,"NFT_META_OIFNAME",E,E,N,N],[17,"NFT_META_IIFTYPE",E,E,N,N],[17,"NFT_META_OIFTYPE",E,E,N,N],[17,"NFT_META_SKUID",E,E,N,N],[17,"NFT_META_SKGID",E,E,N,N],[17,"NFT_META_NFTRACE",E,E,N,N],[17,"NFT_META_RTCLASSID",E,E,N,N],[17,"NFT_META_SECMARK",E,E,N,N],[17,"NFT_META_NFPROTO",E,E,N,N],[17,"NFT_META_L4PROTO",E,E,N,N],[17,"NFT_META_BRI_IIFNAME",E,E,N,N],[17,"NFT_META_BRI_OIFNAME",E,E,N,N],[17,"NFT_META_PKTTYPE",E,E,N,N],[17,"NFT_META_CPU",E,E,N,N],[17,"NFT_META_IIFGROUP",E,E,N,N],[17,"NFT_META_OIFGROUP",E,E,N,N],[17,"NFT_META_CGROUP",E,E,N,N],[17,"NFT_META_PRANDOM",E,E,N,N],[17,"NFT_CT_STATE",E,E,N,N],[17,"NFT_CT_DIRECTION",E,E,N,N],[17,"NFT_CT_STATUS",E,E,N,N],[17,"NFT_CT_MARK",E,E,N,N],[17,"NFT_CT_SECMARK",E,E,N,N],[17,"NFT_CT_EXPIRATION",E,E,N,N],[17,"NFT_CT_HELPER",E,E,N,N],[17,"NFT_CT_L3PROTOCOL",E,E,N,N],[17,"NFT_CT_SRC",E,E,N,N],[17,"NFT_CT_DST",E,E,N,N],[17,"NFT_CT_PROTOCOL",E,E,N,N],[17,"NFT_CT_PROTO_SRC",E,E,N,N],[17,"NFT_CT_PROTO_DST",E,E,N,N],[17,"NFT_CT_LABELS",E,E,N,N],[17,"NFT_CT_PKTS",E,E,N,N],[17,"NFT_CT_BYTES",E,E,N,N],[17,"NFT_LIMIT_PKTS",E,E,N,N],[17,"NFT_LIMIT_PKT_BYTES",E,E,N,N],[17,"NFT_LIMIT_F_INV",E,E,N,N],[17,"NFT_QUEUE_FLAG_BYPASS",E,E,N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT",E,E,N,N],[17,"NFT_QUEUE_FLAG_MASK",E,E,N,N],[17,"NFT_QUOTA_F_INV",E,E,N,N],[17,"NFT_REJECT_ICMP_UNREACH",E,E,N,N],[17,"NFT_REJECT_TCP_RST",E,E,N,N],[17,"NFT_REJECT_ICMPX_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE",E,E,N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED",E,E,N,N],[17,"NFT_NAT_SNAT",E,E,N,N],[17,"NFT_NAT_DNAT",E,E,N,N],[17,"NFT_TRACETYPE_UNSPEC",E,E,N,N],[17,"NFT_TRACETYPE_POLICY",E,E,N,N],[17,"NFT_TRACETYPE_RETURN",E,E,N,N],[17,"NFT_TRACETYPE_RULE",E,E,N,N],[17,"NFT_NG_INCREMENTAL",E,E,N,N],[17,"NFT_NG_RANDOM",E,E,N,N],[17,"M_MXFAST",E,E,N,N],[17,"M_NLBLKS",E,E,N,N],[17,"M_GRAIN",E,E,N,N],[17,"M_KEEP",E,E,N,N],[17,"M_TRIM_THRESHOLD",E,E,N,N],[17,"M_TOP_PAD",E,E,N,N],[17,"M_MMAP_THRESHOLD",E,E,N,N],[17,"M_MMAP_MAX",E,E,N,N],[17,"M_CHECK_ACTION",E,E,N,N],[17,"M_PERTURB",E,E,N,N],[17,"M_ARENA_TEST",E,E,N,N],[17,"M_ARENA_MAX",E,E,N,N],[17,"AT_STATX_SYNC_TYPE",E,E,N,N],[17,"AT_STATX_SYNC_AS_STAT",E,E,N,N],[17,"AT_STATX_FORCE_SYNC",E,E,N,N],[17,"AT_STATX_DONT_SYNC",E,E,N,N],[17,"STATX_TYPE",E,E,N,N],[17,"STATX_MODE",E,E,N,N],[17,"STATX_NLINK",E,E,N,N],[17,"STATX_UID",E,E,N,N],[17,"STATX_GID",E,E,N,N],[17,"STATX_ATIME",E,E,N,N],[17,"STATX_MTIME",E,E,N,N],[17,"STATX_CTIME",E,E,N,N],[17,"STATX_INO",E,E,N,N],[17,"STATX_SIZE",E,E,N,N],[17,"STATX_BLOCKS",E,E,N,N],[17,"STATX_BASIC_STATS",E,E,N,N],[17,"STATX_BTIME",E,E,N,N],[17,"STATX_ALL",E,E,N,N],[17,"STATX__RESERVED",E,E,N,N],[17,"STATX_ATTR_COMPRESSED",E,E,N,N],[17,"STATX_ATTR_IMMUTABLE",E,E,N,N],[17,"STATX_ATTR_APPEND",E,E,N,N],[17,"STATX_ATTR_NODUMP",E,E,N,N],[17,"STATX_ATTR_ENCRYPTED",E,E,N,N],[17,"STATX_ATTR_AUTOMOUNT",E,E,N,N],[17,"PTHREAD_STACK_MIN",E,E,N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,"O_LARGEFILE",E,E,N,N],[17,"POSIX_FADV_DONTNEED",E,E,N,N],[17,"POSIX_FADV_NOREUSE",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"RTLD_DEEPBIND",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"TIOCGSOFTCAR",E,E,N,N],[17,"TIOCSSOFTCAR",E,E,N,N],[17,"TIOCGRS485",E,E,N,N],[17,"TIOCSRS485",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_RSYNC",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NOATIME",E,E,N,N],[17,"O_PATH",E,E,N,N],[17,"O_TMPFILE",E,E,N,N],[17,"MADV_SOFT_OFFLINE",E,E,N,N],[17,"MAP_GROWSDOWN",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENAMETOOLONG",E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ECHRNG",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[17,"EL3HLT",E,E,N,N],[17,"EL3RST",E,E,N,N],[17,"ELNRNG",E,E,N,N],[17,"EUNATCH",E,E,N,N],[17,"ENOCSI",E,E,N,N],[17,"EL2HLT",E,E,N,N],[17,"EBADE",E,E,N,N],[17,"EBADR",E,E,N,N],[17,"EXFULL",E,E,N,N],[17,"ENOANO",E,E,N,N],[17,"EBADRQC",E,E,N,N],[17,"EBADSLT",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"ENOTUNIQ",E,E,N,N],[17,"EBADFD",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EREMCHG",E,E,N,N],[17,"ELIBACC",E,E,N,N],[17,"ELIBBAD",E,E,N,N],[17,"ELIBSCN",E,E,N,N],[17,"ELIBMAX",E,E,N,N],[17,"ELIBEXEC",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ERESTART",E,E,N,N],[17,"ESTRPIPE",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,"EDESTADDRREQ",E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,"ENOPROTOOPT",E,E,N,N],[17,"EPROTONOSUPPORT",E,E,N,N],[17,"ESOCKTNOSUPPORT",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"EPFNOSUPPORT",E,E,N,N],[17,"EAFNOSUPPORT",E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,"EADDRNOTAVAIL",E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,"ENETUNREACH",E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,"ECONNABORTED",E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,"ETOOMANYREFS",E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,"ECONNREFUSED",E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,"EHOSTUNREACH",E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"EINPROGRESS",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ENOMEDIUM",E,E,N,N],[17,"EMEDIUMTYPE",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"ENOKEY",E,E,N,N],[17,"EKEYEXPIRED",E,E,N,N],[17,"EKEYREVOKED",E,E,N,N],[17,"EKEYREJECTED",E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"ENOTRECOVERABLE",E,E,N,N],[17,"EHWPOISON",E,E,N,N],[17,"ERFKILL",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDBUFFORCE",E,E,N,N],[17,"SO_RCVBUFFORCE",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_NO_CHECK",E,E,N,N],[17,"SO_PRIORITY",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_BSDCOMPAT",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_PASSCRED",E,E,N,N],[17,"SO_PEERCRED",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_SECURITY_AUTHENTICATION",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK",E,E,N,N],[17,"SO_BINDTODEVICE",E,E,N,N],[17,"SO_ATTACH_FILTER",E,E,N,N],[17,"SO_DETACH_FILTER",E,E,N,N],[17,"SO_GET_FILTER",E,E,N,N],[17,"SO_PEERNAME",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_PEERSEC",E,E,N,N],[17,"SO_PASSSEC",E,E,N,N],[17,"SO_TIMESTAMPNS",E,E,N,N],[17,"SCM_TIMESTAMPNS",E,E,N,N],[17,"SO_MARK",E,E,N,N],[17,"SO_PROTOCOL",E,E,N,N],[17,"SO_DOMAIN",E,E,N,N],[17,"SO_RXQ_OVFL",E,E,N,N],[17,"SO_WIFI_STATUS",E,E,N,N],[17,"SCM_WIFI_STATUS",E,E,N,N],[17,"SO_PEEK_OFF",E,E,N,N],[17,"SO_NOFCS",E,E,N,N],[17,"SO_LOCK_FILTER",E,E,N,N],[17,"SO_SELECT_ERR_QUEUE",E,E,N,N],[17,"SO_BUSY_POLL",E,E,N,N],[17,"SO_MAX_PACING_RATE",E,E,N,N],[17,"SO_BPF_EXTENSIONS",E,E,N,N],[17,"SO_INCOMING_CPU",E,E,N,N],[17,"SO_ATTACH_BPF",E,E,N,N],[17,"SO_DETACH_BPF",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_NOCLDWAIT",E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGSTKFLT",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGPWR",E,E,N,N],[17,"SIG_SETMASK",E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,"SIG_UNBLOCK",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"PTRACE_DETACH",E,E,N,N],[17,"EFD_NONBLOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"SFD_NONBLOCK",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"TIOCLINUX",E,E,N,N],[17,"TIOCGSERIAL",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"SFD_CLOEXEC",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"EBFONT",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENONET",E,E,N,N],[17,"ENOPKG",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"EADV",E,E,N,N],[17,"ESRMNT",E,E,N,N],[17,"ECOMM",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"EDOTDOT",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,"SA_RESETHAND",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,"SA_NOCLDSTOP",E,E,N,N],[17,"EPOLL_CLOEXEC",E,E,N,N],[17,"EFD_CLOEXEC",E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"O_DIRECT",E,E,N,N],[17,"O_DIRECTORY",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"MAP_HUGETLB",E,E,N,N],[17,"MAP_LOCKED",E,E,N,N],[17,"MAP_NORESERVE",E,E,N,N],[17,"MAP_32BIT",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"MAP_DENYWRITE",E,E,N,N],[17,"MAP_EXECUTABLE",E,E,N,N],[17,"MAP_POPULATE",E,E,N,N],[17,"MAP_NONBLOCK",E,E,N,N],[17,"MAP_STACK",E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"EUCLEAN",E,E,N,N],[17,"ENOTNAM",E,E,N,N],[17,"ENAVAIL",E,E,N,N],[17,"EISNAM",E,E,N,N],[17,"EREMOTEIO",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"PTRACE_GETFPREGS",E,E,N,N],[17,"PTRACE_SETFPREGS",E,E,N,N],[17,"PTRACE_GETFPXREGS",E,E,N,N],[17,"PTRACE_SETFPXREGS",E,E,N,N],[17,"PTRACE_GETREGS",E,E,N,N],[17,"PTRACE_SETREGS",E,E,N,N],[17,"PTRACE_PEEKSIGINFO_SHARED",E,E,N,N],[17,"MCL_CURRENT",E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"MINSIGSTKSZ",E,E,N,N],[17,"CBAUD",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS1",E,E,N,N],[17,"VT1",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"CIBAUD",E,E,N,N],[17,"CBAUDEX",E,E,N,N],[17,"VSWTC",E,E,N,N],[17,"OLCUC",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"XTABS",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"BOTHER",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"B460800",E,E,N,N],[17,"B500000",E,E,N,N],[17,"B576000",E,E,N,N],[17,"B921600",E,E,N,N],[17,"B1000000",E,E,N,N],[17,"B1152000",E,E,N,N],[17,"B1500000",E,E,N,N],[17,"B2000000",E,E,N,N],[17,"B2500000",E,E,N,N],[17,"B3000000",E,E,N,N],[17,"B3500000",E,E,N,N],[17,"B4000000",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TCGETS",E,E,N,N],[17,"TCSETS",E,E,N,N],[17,"TCSETSW",E,E,N,N],[17,"TCSETSF",E,E,N,N],[17,"TCGETA",E,E,N,N],[17,"TCSETA",E,E,N,N],[17,"TCSETAW",E,E,N,N],[17,"TCSETAF",E,E,N,N],[17,"TCSBRK",E,E,N,N],[17,"TCXONC",E,E,N,N],[17,"TCFLSH",E,E,N,N],[17,"TIOCINQ",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"R15",E,E,N,N],[17,"R14",E,E,N,N],[17,"R13",E,E,N,N],[17,"R12",E,E,N,N],[17,"RBP",E,E,N,N],[17,"RBX",E,E,N,N],[17,"R11",E,E,N,N],[17,"R10",E,E,N,N],[17,"R9",E,E,N,N],[17,"R8",E,E,N,N],[17,"RAX",E,E,N,N],[17,"RCX",E,E,N,N],[17,"RDX",E,E,N,N],[17,"RSI",E,E,N,N],[17,"RDI",E,E,N,N],[17,"ORIG_RAX",E,E,N,N],[17,"RIP",E,E,N,N],[17,"CS",E,E,N,N],[17,"EFLAGS",E,E,N,N],[17,"RSP",E,E,N,N],[17,"SS",E,E,N,N],[17,"FS_BASE",E,E,N,N],[17,"GS_BASE",E,E,N,N],[17,"DS",E,E,N,N],[17,"ES",E,E,N,N],[17,"FS",E,E,N,N],[17,"GS",E,E,N,N],[17,"REG_R8",E,E,N,N],[17,"REG_R9",E,E,N,N],[17,"REG_R10",E,E,N,N],[17,"REG_R11",E,E,N,N],[17,"REG_R12",E,E,N,N],[17,"REG_R13",E,E,N,N],[17,"REG_R14",E,E,N,N],[17,"REG_R15",E,E,N,N],[17,"REG_RDI",E,E,N,N],[17,"REG_RSI",E,E,N,N],[17,"REG_RBP",E,E,N,N],[17,"REG_RBX",E,E,N,N],[17,"REG_RDX",E,E,N,N],[17,"REG_RAX",E,E,N,N],[17,"REG_RCX",E,E,N,N],[17,"REG_RSP",E,E,N,N],[17,"REG_RIP",E,E,N,N],[17,"REG_EFL",E,E,N,N],[17,"REG_CSGSFS",E,E,N,N],[17,"REG_ERR",E,E,N,N],[17,"REG_TRAPNO",E,E,N,N],[17,"REG_OLDMASK",E,E,N,N],[17,"REG_CR2",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"SYS_read",E,E,N,N],[17,"SYS_write",E,E,N,N],[17,"SYS_open",E,E,N,N],[17,"SYS_close",E,E,N,N],[17,"SYS_stat",E,E,N,N],[17,"SYS_fstat",E,E,N,N],[17,"SYS_lstat",E,E,N,N],[17,"SYS_poll",E,E,N,N],[17,"SYS_lseek",E,E,N,N],[17,"SYS_mmap",E,E,N,N],[17,"SYS_mprotect",E,E,N,N],[17,"SYS_munmap",E,E,N,N],[17,"SYS_brk",E,E,N,N],[17,"SYS_rt_sigaction",E,E,N,N],[17,"SYS_rt_sigprocmask",E,E,N,N],[17,"SYS_rt_sigreturn",E,E,N,N],[17,"SYS_ioctl",E,E,N,N],[17,"SYS_pread64",E,E,N,N],[17,"SYS_pwrite64",E,E,N,N],[17,"SYS_readv",E,E,N,N],[17,"SYS_writev",E,E,N,N],[17,"SYS_access",E,E,N,N],[17,"SYS_pipe",E,E,N,N],[17,"SYS_select",E,E,N,N],[17,"SYS_sched_yield",E,E,N,N],[17,"SYS_mremap",E,E,N,N],[17,"SYS_msync",E,E,N,N],[17,"SYS_mincore",E,E,N,N],[17,"SYS_madvise",E,E,N,N],[17,"SYS_shmget",E,E,N,N],[17,"SYS_shmat",E,E,N,N],[17,"SYS_shmctl",E,E,N,N],[17,"SYS_dup",E,E,N,N],[17,"SYS_dup2",E,E,N,N],[17,"SYS_pause",E,E,N,N],[17,"SYS_nanosleep",E,E,N,N],[17,"SYS_getitimer",E,E,N,N],[17,"SYS_alarm",E,E,N,N],[17,"SYS_setitimer",E,E,N,N],[17,"SYS_getpid",E,E,N,N],[17,"SYS_sendfile",E,E,N,N],[17,"SYS_socket",E,E,N,N],[17,"SYS_connect",E,E,N,N],[17,"SYS_accept",E,E,N,N],[17,"SYS_sendto",E,E,N,N],[17,"SYS_recvfrom",E,E,N,N],[17,"SYS_sendmsg",E,E,N,N],[17,"SYS_recvmsg",E,E,N,N],[17,"SYS_shutdown",E,E,N,N],[17,"SYS_bind",E,E,N,N],[17,"SYS_listen",E,E,N,N],[17,"SYS_getsockname",E,E,N,N],[17,"SYS_getpeername",E,E,N,N],[17,"SYS_socketpair",E,E,N,N],[17,"SYS_setsockopt",E,E,N,N],[17,"SYS_getsockopt",E,E,N,N],[17,"SYS_clone",E,E,N,N],[17,"SYS_fork",E,E,N,N],[17,"SYS_vfork",E,E,N,N],[17,"SYS_execve",E,E,N,N],[17,"SYS_exit",E,E,N,N],[17,"SYS_wait4",E,E,N,N],[17,"SYS_kill",E,E,N,N],[17,"SYS_uname",E,E,N,N],[17,"SYS_semget",E,E,N,N],[17,"SYS_semop",E,E,N,N],[17,"SYS_semctl",E,E,N,N],[17,"SYS_shmdt",E,E,N,N],[17,"SYS_msgget",E,E,N,N],[17,"SYS_msgsnd",E,E,N,N],[17,"SYS_msgrcv",E,E,N,N],[17,"SYS_msgctl",E,E,N,N],[17,"SYS_fcntl",E,E,N,N],[17,"SYS_flock",E,E,N,N],[17,"SYS_fsync",E,E,N,N],[17,"SYS_fdatasync",E,E,N,N],[17,"SYS_truncate",E,E,N,N],[17,"SYS_ftruncate",E,E,N,N],[17,"SYS_getdents",E,E,N,N],[17,"SYS_getcwd",E,E,N,N],[17,"SYS_chdir",E,E,N,N],[17,"SYS_fchdir",E,E,N,N],[17,"SYS_rename",E,E,N,N],[17,"SYS_mkdir",E,E,N,N],[17,"SYS_rmdir",E,E,N,N],[17,"SYS_creat",E,E,N,N],[17,"SYS_link",E,E,N,N],[17,"SYS_unlink",E,E,N,N],[17,"SYS_symlink",E,E,N,N],[17,"SYS_readlink",E,E,N,N],[17,"SYS_chmod",E,E,N,N],[17,"SYS_fchmod",E,E,N,N],[17,"SYS_chown",E,E,N,N],[17,"SYS_fchown",E,E,N,N],[17,"SYS_lchown",E,E,N,N],[17,"SYS_umask",E,E,N,N],[17,"SYS_gettimeofday",E,E,N,N],[17,"SYS_getrlimit",E,E,N,N],[17,"SYS_getrusage",E,E,N,N],[17,"SYS_sysinfo",E,E,N,N],[17,"SYS_times",E,E,N,N],[17,"SYS_ptrace",E,E,N,N],[17,"SYS_getuid",E,E,N,N],[17,"SYS_syslog",E,E,N,N],[17,"SYS_getgid",E,E,N,N],[17,"SYS_setuid",E,E,N,N],[17,"SYS_setgid",E,E,N,N],[17,"SYS_geteuid",E,E,N,N],[17,"SYS_getegid",E,E,N,N],[17,"SYS_setpgid",E,E,N,N],[17,"SYS_getppid",E,E,N,N],[17,"SYS_getpgrp",E,E,N,N],[17,"SYS_setsid",E,E,N,N],[17,"SYS_setreuid",E,E,N,N],[17,"SYS_setregid",E,E,N,N],[17,"SYS_getgroups",E,E,N,N],[17,"SYS_setgroups",E,E,N,N],[17,"SYS_setresuid",E,E,N,N],[17,"SYS_getresuid",E,E,N,N],[17,"SYS_setresgid",E,E,N,N],[17,"SYS_getresgid",E,E,N,N],[17,"SYS_getpgid",E,E,N,N],[17,"SYS_setfsuid",E,E,N,N],[17,"SYS_setfsgid",E,E,N,N],[17,"SYS_getsid",E,E,N,N],[17,"SYS_capget",E,E,N,N],[17,"SYS_capset",E,E,N,N],[17,"SYS_rt_sigpending",E,E,N,N],[17,"SYS_rt_sigtimedwait",E,E,N,N],[17,"SYS_rt_sigqueueinfo",E,E,N,N],[17,"SYS_rt_sigsuspend",E,E,N,N],[17,"SYS_sigaltstack",E,E,N,N],[17,"SYS_utime",E,E,N,N],[17,"SYS_mknod",E,E,N,N],[17,"SYS_uselib",E,E,N,N],[17,"SYS_personality",E,E,N,N],[17,"SYS_ustat",E,E,N,N],[17,"SYS_statfs",E,E,N,N],[17,"SYS_fstatfs",E,E,N,N],[17,"SYS_sysfs",E,E,N,N],[17,"SYS_getpriority",E,E,N,N],[17,"SYS_setpriority",E,E,N,N],[17,"SYS_sched_setparam",E,E,N,N],[17,"SYS_sched_getparam",E,E,N,N],[17,"SYS_sched_setscheduler",E,E,N,N],[17,"SYS_sched_getscheduler",E,E,N,N],[17,"SYS_sched_get_priority_max",E,E,N,N],[17,"SYS_sched_get_priority_min",E,E,N,N],[17,"SYS_sched_rr_get_interval",E,E,N,N],[17,"SYS_mlock",E,E,N,N],[17,"SYS_munlock",E,E,N,N],[17,"SYS_mlockall",E,E,N,N],[17,"SYS_munlockall",E,E,N,N],[17,"SYS_vhangup",E,E,N,N],[17,"SYS_modify_ldt",E,E,N,N],[17,"SYS_pivot_root",E,E,N,N],[17,"SYS__sysctl",E,E,N,N],[17,"SYS_prctl",E,E,N,N],[17,"SYS_arch_prctl",E,E,N,N],[17,"SYS_adjtimex",E,E,N,N],[17,"SYS_setrlimit",E,E,N,N],[17,"SYS_chroot",E,E,N,N],[17,"SYS_sync",E,E,N,N],[17,"SYS_acct",E,E,N,N],[17,"SYS_settimeofday",E,E,N,N],[17,"SYS_mount",E,E,N,N],[17,"SYS_umount2",E,E,N,N],[17,"SYS_swapon",E,E,N,N],[17,"SYS_swapoff",E,E,N,N],[17,"SYS_reboot",E,E,N,N],[17,"SYS_sethostname",E,E,N,N],[17,"SYS_setdomainname",E,E,N,N],[17,"SYS_iopl",E,E,N,N],[17,"SYS_ioperm",E,E,N,N],[17,"SYS_create_module",E,E,N,N],[17,"SYS_init_module",E,E,N,N],[17,"SYS_delete_module",E,E,N,N],[17,"SYS_get_kernel_syms",E,E,N,N],[17,"SYS_query_module",E,E,N,N],[17,"SYS_quotactl",E,E,N,N],[17,"SYS_nfsservctl",E,E,N,N],[17,"SYS_getpmsg",E,E,N,N],[17,"SYS_putpmsg",E,E,N,N],[17,"SYS_afs_syscall",E,E,N,N],[17,"SYS_tuxcall",E,E,N,N],[17,"SYS_security",E,E,N,N],[17,"SYS_gettid",E,E,N,N],[17,"SYS_readahead",E,E,N,N],[17,"SYS_setxattr",E,E,N,N],[17,"SYS_lsetxattr",E,E,N,N],[17,"SYS_fsetxattr",E,E,N,N],[17,"SYS_getxattr",E,E,N,N],[17,"SYS_lgetxattr",E,E,N,N],[17,"SYS_fgetxattr",E,E,N,N],[17,"SYS_listxattr",E,E,N,N],[17,"SYS_llistxattr",E,E,N,N],[17,"SYS_flistxattr",E,E,N,N],[17,"SYS_removexattr",E,E,N,N],[17,"SYS_lremovexattr",E,E,N,N],[17,"SYS_fremovexattr",E,E,N,N],[17,"SYS_tkill",E,E,N,N],[17,"SYS_time",E,E,N,N],[17,"SYS_futex",E,E,N,N],[17,"SYS_sched_setaffinity",E,E,N,N],[17,"SYS_sched_getaffinity",E,E,N,N],[17,"SYS_set_thread_area",E,E,N,N],[17,"SYS_io_setup",E,E,N,N],[17,"SYS_io_destroy",E,E,N,N],[17,"SYS_io_getevents",E,E,N,N],[17,"SYS_io_submit",E,E,N,N],[17,"SYS_io_cancel",E,E,N,N],[17,"SYS_get_thread_area",E,E,N,N],[17,"SYS_lookup_dcookie",E,E,N,N],[17,"SYS_epoll_create",E,E,N,N],[17,"SYS_epoll_ctl_old",E,E,N,N],[17,"SYS_epoll_wait_old",E,E,N,N],[17,"SYS_remap_file_pages",E,E,N,N],[17,"SYS_getdents64",E,E,N,N],[17,"SYS_set_tid_address",E,E,N,N],[17,"SYS_restart_syscall",E,E,N,N],[17,"SYS_semtimedop",E,E,N,N],[17,"SYS_fadvise64",E,E,N,N],[17,"SYS_timer_create",E,E,N,N],[17,"SYS_timer_settime",E,E,N,N],[17,"SYS_timer_gettime",E,E,N,N],[17,"SYS_timer_getoverrun",E,E,N,N],[17,"SYS_timer_delete",E,E,N,N],[17,"SYS_clock_settime",E,E,N,N],[17,"SYS_clock_gettime",E,E,N,N],[17,"SYS_clock_getres",E,E,N,N],[17,"SYS_clock_nanosleep",E,E,N,N],[17,"SYS_exit_group",E,E,N,N],[17,"SYS_epoll_wait",E,E,N,N],[17,"SYS_epoll_ctl",E,E,N,N],[17,"SYS_tgkill",E,E,N,N],[17,"SYS_utimes",E,E,N,N],[17,"SYS_vserver",E,E,N,N],[17,"SYS_mbind",E,E,N,N],[17,"SYS_set_mempolicy",E,E,N,N],[17,"SYS_get_mempolicy",E,E,N,N],[17,"SYS_mq_open",E,E,N,N],[17,"SYS_mq_unlink",E,E,N,N],[17,"SYS_mq_timedsend",E,E,N,N],[17,"SYS_mq_timedreceive",E,E,N,N],[17,"SYS_mq_notify",E,E,N,N],[17,"SYS_mq_getsetattr",E,E,N,N],[17,"SYS_kexec_load",E,E,N,N],[17,"SYS_waitid",E,E,N,N],[17,"SYS_add_key",E,E,N,N],[17,"SYS_request_key",E,E,N,N],[17,"SYS_keyctl",E,E,N,N],[17,"SYS_ioprio_set",E,E,N,N],[17,"SYS_ioprio_get",E,E,N,N],[17,"SYS_inotify_init",E,E,N,N],[17,"SYS_inotify_add_watch",E,E,N,N],[17,"SYS_inotify_rm_watch",E,E,N,N],[17,"SYS_migrate_pages",E,E,N,N],[17,"SYS_openat",E,E,N,N],[17,"SYS_mkdirat",E,E,N,N],[17,"SYS_mknodat",E,E,N,N],[17,"SYS_fchownat",E,E,N,N],[17,"SYS_futimesat",E,E,N,N],[17,"SYS_newfstatat",E,E,N,N],[17,"SYS_unlinkat",E,E,N,N],[17,"SYS_renameat",E,E,N,N],[17,"SYS_linkat",E,E,N,N],[17,"SYS_symlinkat",E,E,N,N],[17,"SYS_readlinkat",E,E,N,N],[17,"SYS_fchmodat",E,E,N,N],[17,"SYS_faccessat",E,E,N,N],[17,"SYS_pselect6",E,E,N,N],[17,"SYS_ppoll",E,E,N,N],[17,"SYS_unshare",E,E,N,N],[17,"SYS_set_robust_list",E,E,N,N],[17,"SYS_get_robust_list",E,E,N,N],[17,"SYS_splice",E,E,N,N],[17,"SYS_tee",E,E,N,N],[17,"SYS_sync_file_range",E,E,N,N],[17,"SYS_vmsplice",E,E,N,N],[17,"SYS_move_pages",E,E,N,N],[17,"SYS_utimensat",E,E,N,N],[17,"SYS_epoll_pwait",E,E,N,N],[17,"SYS_signalfd",E,E,N,N],[17,"SYS_timerfd_create",E,E,N,N],[17,"SYS_eventfd",E,E,N,N],[17,"SYS_fallocate",E,E,N,N],[17,"SYS_timerfd_settime",E,E,N,N],[17,"SYS_timerfd_gettime",E,E,N,N],[17,"SYS_accept4",E,E,N,N],[17,"SYS_signalfd4",E,E,N,N],[17,"SYS_eventfd2",E,E,N,N],[17,"SYS_epoll_create1",E,E,N,N],[17,"SYS_dup3",E,E,N,N],[17,"SYS_pipe2",E,E,N,N],[17,"SYS_inotify_init1",E,E,N,N],[17,"SYS_preadv",E,E,N,N],[17,"SYS_pwritev",E,E,N,N],[17,"SYS_rt_tgsigqueueinfo",E,E,N,N],[17,"SYS_perf_event_open",E,E,N,N],[17,"SYS_recvmmsg",E,E,N,N],[17,"SYS_fanotify_init",E,E,N,N],[17,"SYS_fanotify_mark",E,E,N,N],[17,"SYS_prlimit64",E,E,N,N],[17,"SYS_name_to_handle_at",E,E,N,N],[17,"SYS_open_by_handle_at",E,E,N,N],[17,"SYS_clock_adjtime",E,E,N,N],[17,"SYS_syncfs",E,E,N,N],[17,"SYS_sendmmsg",E,E,N,N],[17,"SYS_setns",E,E,N,N],[17,"SYS_getcpu",E,E,N,N],[17,"SYS_process_vm_readv",E,E,N,N],[17,"SYS_process_vm_writev",E,E,N,N],[17,"SYS_kcmp",E,E,N,N],[17,"SYS_finit_module",E,E,N,N],[17,"SYS_sched_setattr",E,E,N,N],[17,"SYS_sched_getattr",E,E,N,N],[17,"SYS_renameat2",E,E,N,N],[17,"SYS_seccomp",E,E,N,N],[17,"SYS_getrandom",E,E,N,N],[17,"SYS_memfd_create",E,E,N,N],[17,"SYS_kexec_file_load",E,E,N,N],[17,"SYS_bpf",E,E,N,N],[17,"SYS_execveat",E,E,N,N],[17,"SYS_userfaultfd",E,E,N,N],[17,"SYS_membarrier",E,E,N,N],[17,"SYS_mlock2",E,E,N,N],[17,"SYS_copy_file_range",E,E,N,N],[17,"SYS_preadv2",E,E,N,N],[17,"SYS_pwritev2",E,E,N,N],[17,"SYS_pkey_mprotect",E,E,N,N],[17,"SYS_pkey_alloc",E,E,N,N],[17,"SYS_pkey_free",E,E,N,N],[17,"SYS_statx",E,E,N,N],[11,"from",E,E,133,[[[T]],[T]]],[11,R[20],E,E,133,[[[U]],[R[3]]]],[11,"into",E,E,133,[[],[U]]],[11,R[21],E,E,133,[[],[R[3]]]],[11,R[45],E,E,133,[[["self"]],[T]]],[11,R[22],E,E,133,[[["self"]],[T]]],[11,R[26],E,E,133,[[["self"]],[R[46]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,"into",E,E,11,[[],[U]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,"into",E,E,12,[[],[U]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,"into",E,E,13,[[],[U]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,"into",E,E,14,[[],[U]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,"into",E,E,15,[[],[U]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,"into",E,E,16,[[],[U]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,"into",E,E,18,[[],[U]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,"into",E,E,19,[[],[U]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,"into",E,E,20,[[],[U]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,"into",E,E,21,[[],[U]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,"into",E,E,22,[[],[U]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,"into",E,E,23,[[],[U]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,"into",E,E,24,[[],[U]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[20],E,E,134,[[[U]],[R[3]]]],[11,"into",E,E,134,[[],[U]]],[11,R[21],E,E,134,[[],[R[3]]]],[11,R[45],E,E,134,[[["self"]],[T]]],[11,R[22],E,E,134,[[["self"]],[T]]],[11,R[26],E,E,134,[[["self"]],[R[46]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,"into",E,E,25,[[],[U]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,"into",E,E,26,[[],[U]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,"into",E,E,30,[[],[U]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[20],E,E,135,[[[U]],[R[3]]]],[11,"into",E,E,135,[[],[U]]],[11,R[21],E,E,135,[[],[R[3]]]],[11,R[45],E,E,135,[[["self"]],[T]]],[11,R[22],E,E,135,[[["self"]],[T]]],[11,R[26],E,E,135,[[["self"]],[R[46]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,"into",E,E,31,[[],[U]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,"into",E,E,32,[[],[U]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,"into",E,E,33,[[],[U]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[20],E,E,34,[[[U]],[R[3]]]],[11,"into",E,E,34,[[],[U]]],[11,R[21],E,E,34,[[],[R[3]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[["self"]],[T]]],[11,R[26],E,E,34,[[["self"]],[R[46]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[20],E,E,35,[[[U]],[R[3]]]],[11,"into",E,E,35,[[],[U]]],[11,R[21],E,E,35,[[],[R[3]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[["self"]],[T]]],[11,R[26],E,E,35,[[["self"]],[R[46]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[20],E,E,36,[[[U]],[R[3]]]],[11,"into",E,E,36,[[],[U]]],[11,R[21],E,E,36,[[],[R[3]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[22],E,E,36,[[["self"]],[T]]],[11,R[26],E,E,36,[[["self"]],[R[46]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[20],E,E,37,[[[U]],[R[3]]]],[11,"into",E,E,37,[[],[U]]],[11,R[21],E,E,37,[[],[R[3]]]],[11,R[45],E,E,37,[[["self"]],[T]]],[11,R[22],E,E,37,[[["self"]],[T]]],[11,R[26],E,E,37,[[["self"]],[R[46]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[20],E,E,38,[[[U]],[R[3]]]],[11,"into",E,E,38,[[],[U]]],[11,R[21],E,E,38,[[],[R[3]]]],[11,R[45],E,E,38,[[["self"]],[T]]],[11,R[22],E,E,38,[[["self"]],[T]]],[11,R[26],E,E,38,[[["self"]],[R[46]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[20],E,E,39,[[[U]],[R[3]]]],[11,"into",E,E,39,[[],[U]]],[11,R[21],E,E,39,[[],[R[3]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[["self"]],[T]]],[11,R[26],E,E,39,[[["self"]],[R[46]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[20],E,E,40,[[[U]],[R[3]]]],[11,"into",E,E,40,[[],[U]]],[11,R[21],E,E,40,[[],[R[3]]]],[11,R[45],E,E,40,[[["self"]],[T]]],[11,R[22],E,E,40,[[["self"]],[T]]],[11,R[26],E,E,40,[[["self"]],[R[46]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[20],E,E,41,[[[U]],[R[3]]]],[11,"into",E,E,41,[[],[U]]],[11,R[21],E,E,41,[[],[R[3]]]],[11,R[45],E,E,41,[[["self"]],[T]]],[11,R[22],E,E,41,[[["self"]],[T]]],[11,R[26],E,E,41,[[["self"]],[R[46]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[20],E,E,42,[[[U]],[R[3]]]],[11,"into",E,E,42,[[],[U]]],[11,R[21],E,E,42,[[],[R[3]]]],[11,R[45],E,E,42,[[["self"]],[T]]],[11,R[22],E,E,42,[[["self"]],[T]]],[11,R[26],E,E,42,[[["self"]],[R[46]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[20],E,E,43,[[[U]],[R[3]]]],[11,"into",E,E,43,[[],[U]]],[11,R[21],E,E,43,[[],[R[3]]]],[11,R[45],E,E,43,[[["self"]],[T]]],[11,R[22],E,E,43,[[["self"]],[T]]],[11,R[26],E,E,43,[[["self"]],[R[46]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[20],E,E,44,[[[U]],[R[3]]]],[11,"into",E,E,44,[[],[U]]],[11,R[21],E,E,44,[[],[R[3]]]],[11,R[45],E,E,44,[[["self"]],[T]]],[11,R[22],E,E,44,[[["self"]],[T]]],[11,R[26],E,E,44,[[["self"]],[R[46]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[20],E,E,45,[[[U]],[R[3]]]],[11,"into",E,E,45,[[],[U]]],[11,R[21],E,E,45,[[],[R[3]]]],[11,R[45],E,E,45,[[["self"]],[T]]],[11,R[22],E,E,45,[[["self"]],[T]]],[11,R[26],E,E,45,[[["self"]],[R[46]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[20],E,E,46,[[[U]],[R[3]]]],[11,"into",E,E,46,[[],[U]]],[11,R[21],E,E,46,[[],[R[3]]]],[11,R[45],E,E,46,[[["self"]],[T]]],[11,R[22],E,E,46,[[["self"]],[T]]],[11,R[26],E,E,46,[[["self"]],[R[46]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[20],E,E,136,[[[U]],[R[3]]]],[11,"into",E,E,136,[[],[U]]],[11,R[21],E,E,136,[[],[R[3]]]],[11,R[45],E,E,136,[[["self"]],[T]]],[11,R[22],E,E,136,[[["self"]],[T]]],[11,R[26],E,E,136,[[["self"]],[R[46]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[20],E,E,47,[[[U]],[R[3]]]],[11,"into",E,E,47,[[],[U]]],[11,R[21],E,E,47,[[],[R[3]]]],[11,R[45],E,E,47,[[["self"]],[T]]],[11,R[22],E,E,47,[[["self"]],[T]]],[11,R[26],E,E,47,[[["self"]],[R[46]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[20],E,E,137,[[[U]],[R[3]]]],[11,"into",E,E,137,[[],[U]]],[11,R[21],E,E,137,[[],[R[3]]]],[11,R[45],E,E,137,[[["self"]],[T]]],[11,R[22],E,E,137,[[["self"]],[T]]],[11,R[26],E,E,137,[[["self"]],[R[46]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[20],E,E,48,[[[U]],[R[3]]]],[11,"into",E,E,48,[[],[U]]],[11,R[21],E,E,48,[[],[R[3]]]],[11,R[45],E,E,48,[[["self"]],[T]]],[11,R[22],E,E,48,[[["self"]],[T]]],[11,R[26],E,E,48,[[["self"]],[R[46]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[20],E,E,49,[[[U]],[R[3]]]],[11,"into",E,E,49,[[],[U]]],[11,R[21],E,E,49,[[],[R[3]]]],[11,R[45],E,E,49,[[["self"]],[T]]],[11,R[22],E,E,49,[[["self"]],[T]]],[11,R[26],E,E,49,[[["self"]],[R[46]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[20],E,E,50,[[[U]],[R[3]]]],[11,"into",E,E,50,[[],[U]]],[11,R[21],E,E,50,[[],[R[3]]]],[11,R[45],E,E,50,[[["self"]],[T]]],[11,R[22],E,E,50,[[["self"]],[T]]],[11,R[26],E,E,50,[[["self"]],[R[46]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[20],E,E,51,[[[U]],[R[3]]]],[11,"into",E,E,51,[[],[U]]],[11,R[21],E,E,51,[[],[R[3]]]],[11,R[45],E,E,51,[[["self"]],[T]]],[11,R[22],E,E,51,[[["self"]],[T]]],[11,R[26],E,E,51,[[["self"]],[R[46]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[20],E,E,52,[[[U]],[R[3]]]],[11,"into",E,E,52,[[],[U]]],[11,R[21],E,E,52,[[],[R[3]]]],[11,R[45],E,E,52,[[["self"]],[T]]],[11,R[22],E,E,52,[[["self"]],[T]]],[11,R[26],E,E,52,[[["self"]],[R[46]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[20],E,E,53,[[[U]],[R[3]]]],[11,"into",E,E,53,[[],[U]]],[11,R[21],E,E,53,[[],[R[3]]]],[11,R[45],E,E,53,[[["self"]],[T]]],[11,R[22],E,E,53,[[["self"]],[T]]],[11,R[26],E,E,53,[[["self"]],[R[46]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[20],E,E,54,[[[U]],[R[3]]]],[11,"into",E,E,54,[[],[U]]],[11,R[21],E,E,54,[[],[R[3]]]],[11,R[45],E,E,54,[[["self"]],[T]]],[11,R[22],E,E,54,[[["self"]],[T]]],[11,R[26],E,E,54,[[["self"]],[R[46]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[20],E,E,55,[[[U]],[R[3]]]],[11,"into",E,E,55,[[],[U]]],[11,R[21],E,E,55,[[],[R[3]]]],[11,R[45],E,E,55,[[["self"]],[T]]],[11,R[22],E,E,55,[[["self"]],[T]]],[11,R[26],E,E,55,[[["self"]],[R[46]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[20],E,E,56,[[[U]],[R[3]]]],[11,"into",E,E,56,[[],[U]]],[11,R[21],E,E,56,[[],[R[3]]]],[11,R[45],E,E,56,[[["self"]],[T]]],[11,R[22],E,E,56,[[["self"]],[T]]],[11,R[26],E,E,56,[[["self"]],[R[46]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[20],E,E,57,[[[U]],[R[3]]]],[11,"into",E,E,57,[[],[U]]],[11,R[21],E,E,57,[[],[R[3]]]],[11,R[45],E,E,57,[[["self"]],[T]]],[11,R[22],E,E,57,[[["self"]],[T]]],[11,R[26],E,E,57,[[["self"]],[R[46]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[20],E,E,58,[[[U]],[R[3]]]],[11,"into",E,E,58,[[],[U]]],[11,R[21],E,E,58,[[],[R[3]]]],[11,R[45],E,E,58,[[["self"]],[T]]],[11,R[22],E,E,58,[[["self"]],[T]]],[11,R[26],E,E,58,[[["self"]],[R[46]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[20],E,E,59,[[[U]],[R[3]]]],[11,"into",E,E,59,[[],[U]]],[11,R[21],E,E,59,[[],[R[3]]]],[11,R[45],E,E,59,[[["self"]],[T]]],[11,R[22],E,E,59,[[["self"]],[T]]],[11,R[26],E,E,59,[[["self"]],[R[46]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[20],E,E,60,[[[U]],[R[3]]]],[11,"into",E,E,60,[[],[U]]],[11,R[21],E,E,60,[[],[R[3]]]],[11,R[45],E,E,60,[[["self"]],[T]]],[11,R[22],E,E,60,[[["self"]],[T]]],[11,R[26],E,E,60,[[["self"]],[R[46]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[20],E,E,61,[[[U]],[R[3]]]],[11,"into",E,E,61,[[],[U]]],[11,R[21],E,E,61,[[],[R[3]]]],[11,R[45],E,E,61,[[["self"]],[T]]],[11,R[22],E,E,61,[[["self"]],[T]]],[11,R[26],E,E,61,[[["self"]],[R[46]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[20],E,E,62,[[[U]],[R[3]]]],[11,"into",E,E,62,[[],[U]]],[11,R[21],E,E,62,[[],[R[3]]]],[11,R[45],E,E,62,[[["self"]],[T]]],[11,R[22],E,E,62,[[["self"]],[T]]],[11,R[26],E,E,62,[[["self"]],[R[46]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[20],E,E,63,[[[U]],[R[3]]]],[11,"into",E,E,63,[[],[U]]],[11,R[21],E,E,63,[[],[R[3]]]],[11,R[45],E,E,63,[[["self"]],[T]]],[11,R[22],E,E,63,[[["self"]],[T]]],[11,R[26],E,E,63,[[["self"]],[R[46]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[20],E,E,64,[[[U]],[R[3]]]],[11,"into",E,E,64,[[],[U]]],[11,R[21],E,E,64,[[],[R[3]]]],[11,R[45],E,E,64,[[["self"]],[T]]],[11,R[22],E,E,64,[[["self"]],[T]]],[11,R[26],E,E,64,[[["self"]],[R[46]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[20],E,E,65,[[[U]],[R[3]]]],[11,"into",E,E,65,[[],[U]]],[11,R[21],E,E,65,[[],[R[3]]]],[11,R[45],E,E,65,[[["self"]],[T]]],[11,R[22],E,E,65,[[["self"]],[T]]],[11,R[26],E,E,65,[[["self"]],[R[46]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[20],E,E,66,[[[U]],[R[3]]]],[11,"into",E,E,66,[[],[U]]],[11,R[21],E,E,66,[[],[R[3]]]],[11,R[45],E,E,66,[[["self"]],[T]]],[11,R[22],E,E,66,[[["self"]],[T]]],[11,R[26],E,E,66,[[["self"]],[R[46]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[20],E,E,67,[[[U]],[R[3]]]],[11,"into",E,E,67,[[],[U]]],[11,R[21],E,E,67,[[],[R[3]]]],[11,R[45],E,E,67,[[["self"]],[T]]],[11,R[22],E,E,67,[[["self"]],[T]]],[11,R[26],E,E,67,[[["self"]],[R[46]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[20],E,E,68,[[[U]],[R[3]]]],[11,"into",E,E,68,[[],[U]]],[11,R[21],E,E,68,[[],[R[3]]]],[11,R[45],E,E,68,[[["self"]],[T]]],[11,R[22],E,E,68,[[["self"]],[T]]],[11,R[26],E,E,68,[[["self"]],[R[46]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[20],E,E,69,[[[U]],[R[3]]]],[11,"into",E,E,69,[[],[U]]],[11,R[21],E,E,69,[[],[R[3]]]],[11,R[45],E,E,69,[[["self"]],[T]]],[11,R[22],E,E,69,[[["self"]],[T]]],[11,R[26],E,E,69,[[["self"]],[R[46]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[20],E,E,70,[[[U]],[R[3]]]],[11,"into",E,E,70,[[],[U]]],[11,R[21],E,E,70,[[],[R[3]]]],[11,R[45],E,E,70,[[["self"]],[T]]],[11,R[22],E,E,70,[[["self"]],[T]]],[11,R[26],E,E,70,[[["self"]],[R[46]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[20],E,E,71,[[[U]],[R[3]]]],[11,"into",E,E,71,[[],[U]]],[11,R[21],E,E,71,[[],[R[3]]]],[11,R[45],E,E,71,[[["self"]],[T]]],[11,R[22],E,E,71,[[["self"]],[T]]],[11,R[26],E,E,71,[[["self"]],[R[46]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[20],E,E,72,[[[U]],[R[3]]]],[11,"into",E,E,72,[[],[U]]],[11,R[21],E,E,72,[[],[R[3]]]],[11,R[45],E,E,72,[[["self"]],[T]]],[11,R[22],E,E,72,[[["self"]],[T]]],[11,R[26],E,E,72,[[["self"]],[R[46]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[20],E,E,73,[[[U]],[R[3]]]],[11,"into",E,E,73,[[],[U]]],[11,R[21],E,E,73,[[],[R[3]]]],[11,R[45],E,E,73,[[["self"]],[T]]],[11,R[22],E,E,73,[[["self"]],[T]]],[11,R[26],E,E,73,[[["self"]],[R[46]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[20],E,E,74,[[[U]],[R[3]]]],[11,"into",E,E,74,[[],[U]]],[11,R[21],E,E,74,[[],[R[3]]]],[11,R[45],E,E,74,[[["self"]],[T]]],[11,R[22],E,E,74,[[["self"]],[T]]],[11,R[26],E,E,74,[[["self"]],[R[46]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[20],E,E,75,[[[U]],[R[3]]]],[11,"into",E,E,75,[[],[U]]],[11,R[21],E,E,75,[[],[R[3]]]],[11,R[45],E,E,75,[[["self"]],[T]]],[11,R[22],E,E,75,[[["self"]],[T]]],[11,R[26],E,E,75,[[["self"]],[R[46]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[20],E,E,76,[[[U]],[R[3]]]],[11,"into",E,E,76,[[],[U]]],[11,R[21],E,E,76,[[],[R[3]]]],[11,R[45],E,E,76,[[["self"]],[T]]],[11,R[22],E,E,76,[[["self"]],[T]]],[11,R[26],E,E,76,[[["self"]],[R[46]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[20],E,E,77,[[[U]],[R[3]]]],[11,"into",E,E,77,[[],[U]]],[11,R[21],E,E,77,[[],[R[3]]]],[11,R[45],E,E,77,[[["self"]],[T]]],[11,R[22],E,E,77,[[["self"]],[T]]],[11,R[26],E,E,77,[[["self"]],[R[46]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[20],E,E,138,[[[U]],[R[3]]]],[11,"into",E,E,138,[[],[U]]],[11,R[21],E,E,138,[[],[R[3]]]],[11,R[45],E,E,138,[[["self"]],[T]]],[11,R[22],E,E,138,[[["self"]],[T]]],[11,R[26],E,E,138,[[["self"]],[R[46]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[20],E,E,139,[[[U]],[R[3]]]],[11,"into",E,E,139,[[],[U]]],[11,R[21],E,E,139,[[],[R[3]]]],[11,R[45],E,E,139,[[["self"]],[T]]],[11,R[22],E,E,139,[[["self"]],[T]]],[11,R[26],E,E,139,[[["self"]],[R[46]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[20],E,E,78,[[[U]],[R[3]]]],[11,"into",E,E,78,[[],[U]]],[11,R[21],E,E,78,[[],[R[3]]]],[11,R[45],E,E,78,[[["self"]],[T]]],[11,R[22],E,E,78,[[["self"]],[T]]],[11,R[26],E,E,78,[[["self"]],[R[46]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[20],E,E,79,[[[U]],[R[3]]]],[11,"into",E,E,79,[[],[U]]],[11,R[21],E,E,79,[[],[R[3]]]],[11,R[45],E,E,79,[[["self"]],[T]]],[11,R[22],E,E,79,[[["self"]],[T]]],[11,R[26],E,E,79,[[["self"]],[R[46]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[20],E,E,80,[[[U]],[R[3]]]],[11,"into",E,E,80,[[],[U]]],[11,R[21],E,E,80,[[],[R[3]]]],[11,R[45],E,E,80,[[["self"]],[T]]],[11,R[22],E,E,80,[[["self"]],[T]]],[11,R[26],E,E,80,[[["self"]],[R[46]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[20],E,E,81,[[[U]],[R[3]]]],[11,"into",E,E,81,[[],[U]]],[11,R[21],E,E,81,[[],[R[3]]]],[11,R[45],E,E,81,[[["self"]],[T]]],[11,R[22],E,E,81,[[["self"]],[T]]],[11,R[26],E,E,81,[[["self"]],[R[46]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[20],E,E,82,[[[U]],[R[3]]]],[11,"into",E,E,82,[[],[U]]],[11,R[21],E,E,82,[[],[R[3]]]],[11,R[45],E,E,82,[[["self"]],[T]]],[11,R[22],E,E,82,[[["self"]],[T]]],[11,R[26],E,E,82,[[["self"]],[R[46]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[20],E,E,83,[[[U]],[R[3]]]],[11,"into",E,E,83,[[],[U]]],[11,R[21],E,E,83,[[],[R[3]]]],[11,R[45],E,E,83,[[["self"]],[T]]],[11,R[22],E,E,83,[[["self"]],[T]]],[11,R[26],E,E,83,[[["self"]],[R[46]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[20],E,E,84,[[[U]],[R[3]]]],[11,"into",E,E,84,[[],[U]]],[11,R[21],E,E,84,[[],[R[3]]]],[11,R[45],E,E,84,[[["self"]],[T]]],[11,R[22],E,E,84,[[["self"]],[T]]],[11,R[26],E,E,84,[[["self"]],[R[46]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[20],E,E,85,[[[U]],[R[3]]]],[11,"into",E,E,85,[[],[U]]],[11,R[21],E,E,85,[[],[R[3]]]],[11,R[45],E,E,85,[[["self"]],[T]]],[11,R[22],E,E,85,[[["self"]],[T]]],[11,R[26],E,E,85,[[["self"]],[R[46]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[20],E,E,86,[[[U]],[R[3]]]],[11,"into",E,E,86,[[],[U]]],[11,R[21],E,E,86,[[],[R[3]]]],[11,R[45],E,E,86,[[["self"]],[T]]],[11,R[22],E,E,86,[[["self"]],[T]]],[11,R[26],E,E,86,[[["self"]],[R[46]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[20],E,E,87,[[[U]],[R[3]]]],[11,"into",E,E,87,[[],[U]]],[11,R[21],E,E,87,[[],[R[3]]]],[11,R[45],E,E,87,[[["self"]],[T]]],[11,R[22],E,E,87,[[["self"]],[T]]],[11,R[26],E,E,87,[[["self"]],[R[46]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[20],E,E,88,[[[U]],[R[3]]]],[11,"into",E,E,88,[[],[U]]],[11,R[21],E,E,88,[[],[R[3]]]],[11,R[45],E,E,88,[[["self"]],[T]]],[11,R[22],E,E,88,[[["self"]],[T]]],[11,R[26],E,E,88,[[["self"]],[R[46]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[20],E,E,89,[[[U]],[R[3]]]],[11,"into",E,E,89,[[],[U]]],[11,R[21],E,E,89,[[],[R[3]]]],[11,R[45],E,E,89,[[["self"]],[T]]],[11,R[22],E,E,89,[[["self"]],[T]]],[11,R[26],E,E,89,[[["self"]],[R[46]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[20],E,E,90,[[[U]],[R[3]]]],[11,"into",E,E,90,[[],[U]]],[11,R[21],E,E,90,[[],[R[3]]]],[11,R[45],E,E,90,[[["self"]],[T]]],[11,R[22],E,E,90,[[["self"]],[T]]],[11,R[26],E,E,90,[[["self"]],[R[46]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[20],E,E,91,[[[U]],[R[3]]]],[11,"into",E,E,91,[[],[U]]],[11,R[21],E,E,91,[[],[R[3]]]],[11,R[45],E,E,91,[[["self"]],[T]]],[11,R[22],E,E,91,[[["self"]],[T]]],[11,R[26],E,E,91,[[["self"]],[R[46]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[20],E,E,92,[[[U]],[R[3]]]],[11,"into",E,E,92,[[],[U]]],[11,R[21],E,E,92,[[],[R[3]]]],[11,R[45],E,E,92,[[["self"]],[T]]],[11,R[22],E,E,92,[[["self"]],[T]]],[11,R[26],E,E,92,[[["self"]],[R[46]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[20],E,E,93,[[[U]],[R[3]]]],[11,"into",E,E,93,[[],[U]]],[11,R[21],E,E,93,[[],[R[3]]]],[11,R[45],E,E,93,[[["self"]],[T]]],[11,R[22],E,E,93,[[["self"]],[T]]],[11,R[26],E,E,93,[[["self"]],[R[46]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[20],E,E,94,[[[U]],[R[3]]]],[11,"into",E,E,94,[[],[U]]],[11,R[21],E,E,94,[[],[R[3]]]],[11,R[45],E,E,94,[[["self"]],[T]]],[11,R[22],E,E,94,[[["self"]],[T]]],[11,R[26],E,E,94,[[["self"]],[R[46]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[20],E,E,95,[[[U]],[R[3]]]],[11,"into",E,E,95,[[],[U]]],[11,R[21],E,E,95,[[],[R[3]]]],[11,R[45],E,E,95,[[["self"]],[T]]],[11,R[22],E,E,95,[[["self"]],[T]]],[11,R[26],E,E,95,[[["self"]],[R[46]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[20],E,E,96,[[[U]],[R[3]]]],[11,"into",E,E,96,[[],[U]]],[11,R[21],E,E,96,[[],[R[3]]]],[11,R[45],E,E,96,[[["self"]],[T]]],[11,R[22],E,E,96,[[["self"]],[T]]],[11,R[26],E,E,96,[[["self"]],[R[46]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[20],E,E,97,[[[U]],[R[3]]]],[11,"into",E,E,97,[[],[U]]],[11,R[21],E,E,97,[[],[R[3]]]],[11,R[45],E,E,97,[[["self"]],[T]]],[11,R[22],E,E,97,[[["self"]],[T]]],[11,R[26],E,E,97,[[["self"]],[R[46]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[20],E,E,98,[[[U]],[R[3]]]],[11,"into",E,E,98,[[],[U]]],[11,R[21],E,E,98,[[],[R[3]]]],[11,R[45],E,E,98,[[["self"]],[T]]],[11,R[22],E,E,98,[[["self"]],[T]]],[11,R[26],E,E,98,[[["self"]],[R[46]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[20],E,E,99,[[[U]],[R[3]]]],[11,"into",E,E,99,[[],[U]]],[11,R[21],E,E,99,[[],[R[3]]]],[11,R[45],E,E,99,[[["self"]],[T]]],[11,R[22],E,E,99,[[["self"]],[T]]],[11,R[26],E,E,99,[[["self"]],[R[46]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[20],E,E,100,[[[U]],[R[3]]]],[11,"into",E,E,100,[[],[U]]],[11,R[21],E,E,100,[[],[R[3]]]],[11,R[45],E,E,100,[[["self"]],[T]]],[11,R[22],E,E,100,[[["self"]],[T]]],[11,R[26],E,E,100,[[["self"]],[R[46]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[20],E,E,101,[[[U]],[R[3]]]],[11,"into",E,E,101,[[],[U]]],[11,R[21],E,E,101,[[],[R[3]]]],[11,R[45],E,E,101,[[["self"]],[T]]],[11,R[22],E,E,101,[[["self"]],[T]]],[11,R[26],E,E,101,[[["self"]],[R[46]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[20],E,E,102,[[[U]],[R[3]]]],[11,"into",E,E,102,[[],[U]]],[11,R[21],E,E,102,[[],[R[3]]]],[11,R[45],E,E,102,[[["self"]],[T]]],[11,R[22],E,E,102,[[["self"]],[T]]],[11,R[26],E,E,102,[[["self"]],[R[46]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[20],E,E,103,[[[U]],[R[3]]]],[11,"into",E,E,103,[[],[U]]],[11,R[21],E,E,103,[[],[R[3]]]],[11,R[45],E,E,103,[[["self"]],[T]]],[11,R[22],E,E,103,[[["self"]],[T]]],[11,R[26],E,E,103,[[["self"]],[R[46]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[20],E,E,104,[[[U]],[R[3]]]],[11,"into",E,E,104,[[],[U]]],[11,R[21],E,E,104,[[],[R[3]]]],[11,R[45],E,E,104,[[["self"]],[T]]],[11,R[22],E,E,104,[[["self"]],[T]]],[11,R[26],E,E,104,[[["self"]],[R[46]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[20],E,E,105,[[[U]],[R[3]]]],[11,"into",E,E,105,[[],[U]]],[11,R[21],E,E,105,[[],[R[3]]]],[11,R[45],E,E,105,[[["self"]],[T]]],[11,R[22],E,E,105,[[["self"]],[T]]],[11,R[26],E,E,105,[[["self"]],[R[46]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[20],E,E,106,[[[U]],[R[3]]]],[11,"into",E,E,106,[[],[U]]],[11,R[21],E,E,106,[[],[R[3]]]],[11,R[45],E,E,106,[[["self"]],[T]]],[11,R[22],E,E,106,[[["self"]],[T]]],[11,R[26],E,E,106,[[["self"]],[R[46]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[20],E,E,140,[[[U]],[R[3]]]],[11,"into",E,E,140,[[],[U]]],[11,R[21],E,E,140,[[],[R[3]]]],[11,R[45],E,E,140,[[["self"]],[T]]],[11,R[22],E,E,140,[[["self"]],[T]]],[11,R[26],E,E,140,[[["self"]],[R[46]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[20],E,E,107,[[[U]],[R[3]]]],[11,"into",E,E,107,[[],[U]]],[11,R[21],E,E,107,[[],[R[3]]]],[11,R[45],E,E,107,[[["self"]],[T]]],[11,R[22],E,E,107,[[["self"]],[T]]],[11,R[26],E,E,107,[[["self"]],[R[46]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[20],E,E,108,[[[U]],[R[3]]]],[11,"into",E,E,108,[[],[U]]],[11,R[21],E,E,108,[[],[R[3]]]],[11,R[45],E,E,108,[[["self"]],[T]]],[11,R[22],E,E,108,[[["self"]],[T]]],[11,R[26],E,E,108,[[["self"]],[R[46]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[20],E,E,109,[[[U]],[R[3]]]],[11,"into",E,E,109,[[],[U]]],[11,R[21],E,E,109,[[],[R[3]]]],[11,R[45],E,E,109,[[["self"]],[T]]],[11,R[22],E,E,109,[[["self"]],[T]]],[11,R[26],E,E,109,[[["self"]],[R[46]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[20],E,E,110,[[[U]],[R[3]]]],[11,"into",E,E,110,[[],[U]]],[11,R[21],E,E,110,[[],[R[3]]]],[11,R[45],E,E,110,[[["self"]],[T]]],[11,R[22],E,E,110,[[["self"]],[T]]],[11,R[26],E,E,110,[[["self"]],[R[46]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[20],E,E,111,[[[U]],[R[3]]]],[11,"into",E,E,111,[[],[U]]],[11,R[21],E,E,111,[[],[R[3]]]],[11,R[45],E,E,111,[[["self"]],[T]]],[11,R[22],E,E,111,[[["self"]],[T]]],[11,R[26],E,E,111,[[["self"]],[R[46]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[20],E,E,112,[[[U]],[R[3]]]],[11,"into",E,E,112,[[],[U]]],[11,R[21],E,E,112,[[],[R[3]]]],[11,R[45],E,E,112,[[["self"]],[T]]],[11,R[22],E,E,112,[[["self"]],[T]]],[11,R[26],E,E,112,[[["self"]],[R[46]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[20],E,E,113,[[[U]],[R[3]]]],[11,"into",E,E,113,[[],[U]]],[11,R[21],E,E,113,[[],[R[3]]]],[11,R[45],E,E,113,[[["self"]],[T]]],[11,R[22],E,E,113,[[["self"]],[T]]],[11,R[26],E,E,113,[[["self"]],[R[46]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[20],E,E,114,[[[U]],[R[3]]]],[11,"into",E,E,114,[[],[U]]],[11,R[21],E,E,114,[[],[R[3]]]],[11,R[45],E,E,114,[[["self"]],[T]]],[11,R[22],E,E,114,[[["self"]],[T]]],[11,R[26],E,E,114,[[["self"]],[R[46]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[20],E,E,115,[[[U]],[R[3]]]],[11,"into",E,E,115,[[],[U]]],[11,R[21],E,E,115,[[],[R[3]]]],[11,R[45],E,E,115,[[["self"]],[T]]],[11,R[22],E,E,115,[[["self"]],[T]]],[11,R[26],E,E,115,[[["self"]],[R[46]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[20],E,E,116,[[[U]],[R[3]]]],[11,"into",E,E,116,[[],[U]]],[11,R[21],E,E,116,[[],[R[3]]]],[11,R[45],E,E,116,[[["self"]],[T]]],[11,R[22],E,E,116,[[["self"]],[T]]],[11,R[26],E,E,116,[[["self"]],[R[46]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[20],E,E,117,[[[U]],[R[3]]]],[11,"into",E,E,117,[[],[U]]],[11,R[21],E,E,117,[[],[R[3]]]],[11,R[45],E,E,117,[[["self"]],[T]]],[11,R[22],E,E,117,[[["self"]],[T]]],[11,R[26],E,E,117,[[["self"]],[R[46]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[20],E,E,118,[[[U]],[R[3]]]],[11,"into",E,E,118,[[],[U]]],[11,R[21],E,E,118,[[],[R[3]]]],[11,R[45],E,E,118,[[["self"]],[T]]],[11,R[22],E,E,118,[[["self"]],[T]]],[11,R[26],E,E,118,[[["self"]],[R[46]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[20],E,E,141,[[[U]],[R[3]]]],[11,"into",E,E,141,[[],[U]]],[11,R[21],E,E,141,[[],[R[3]]]],[11,R[45],E,E,141,[[["self"]],[T]]],[11,R[22],E,E,141,[[["self"]],[T]]],[11,R[26],E,E,141,[[["self"]],[R[46]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[20],E,E,119,[[[U]],[R[3]]]],[11,"into",E,E,119,[[],[U]]],[11,R[21],E,E,119,[[],[R[3]]]],[11,R[45],E,E,119,[[["self"]],[T]]],[11,R[22],E,E,119,[[["self"]],[T]]],[11,R[26],E,E,119,[[["self"]],[R[46]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[20],E,E,120,[[[U]],[R[3]]]],[11,"into",E,E,120,[[],[U]]],[11,R[21],E,E,120,[[],[R[3]]]],[11,R[45],E,E,120,[[["self"]],[T]]],[11,R[22],E,E,120,[[["self"]],[T]]],[11,R[26],E,E,120,[[["self"]],[R[46]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[20],E,E,121,[[[U]],[R[3]]]],[11,"into",E,E,121,[[],[U]]],[11,R[21],E,E,121,[[],[R[3]]]],[11,R[45],E,E,121,[[["self"]],[T]]],[11,R[22],E,E,121,[[["self"]],[T]]],[11,R[26],E,E,121,[[["self"]],[R[46]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[20],E,E,122,[[[U]],[R[3]]]],[11,"into",E,E,122,[[],[U]]],[11,R[21],E,E,122,[[],[R[3]]]],[11,R[45],E,E,122,[[["self"]],[T]]],[11,R[22],E,E,122,[[["self"]],[T]]],[11,R[26],E,E,122,[[["self"]],[R[46]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[20],E,E,123,[[[U]],[R[3]]]],[11,"into",E,E,123,[[],[U]]],[11,R[21],E,E,123,[[],[R[3]]]],[11,R[45],E,E,123,[[["self"]],[T]]],[11,R[22],E,E,123,[[["self"]],[T]]],[11,R[26],E,E,123,[[["self"]],[R[46]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[20],E,E,124,[[[U]],[R[3]]]],[11,"into",E,E,124,[[],[U]]],[11,R[21],E,E,124,[[],[R[3]]]],[11,R[45],E,E,124,[[["self"]],[T]]],[11,R[22],E,E,124,[[["self"]],[T]]],[11,R[26],E,E,124,[[["self"]],[R[46]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[20],E,E,125,[[[U]],[R[3]]]],[11,"into",E,E,125,[[],[U]]],[11,R[21],E,E,125,[[],[R[3]]]],[11,R[45],E,E,125,[[["self"]],[T]]],[11,R[22],E,E,125,[[["self"]],[T]]],[11,R[26],E,E,125,[[["self"]],[R[46]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[20],E,E,126,[[[U]],[R[3]]]],[11,"into",E,E,126,[[],[U]]],[11,R[21],E,E,126,[[],[R[3]]]],[11,R[45],E,E,126,[[["self"]],[T]]],[11,R[22],E,E,126,[[["self"]],[T]]],[11,R[26],E,E,126,[[["self"]],[R[46]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[20],E,E,127,[[[U]],[R[3]]]],[11,"into",E,E,127,[[],[U]]],[11,R[21],E,E,127,[[],[R[3]]]],[11,R[45],E,E,127,[[["self"]],[T]]],[11,R[22],E,E,127,[[["self"]],[T]]],[11,R[26],E,E,127,[[["self"]],[R[46]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[20],E,E,128,[[[U]],[R[3]]]],[11,"into",E,E,128,[[],[U]]],[11,R[21],E,E,128,[[],[R[3]]]],[11,R[45],E,E,128,[[["self"]],[T]]],[11,R[22],E,E,128,[[["self"]],[T]]],[11,R[26],E,E,128,[[["self"]],[R[46]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[20],E,E,129,[[[U]],[R[3]]]],[11,"into",E,E,129,[[],[U]]],[11,R[21],E,E,129,[[],[R[3]]]],[11,R[45],E,E,129,[[["self"]],[T]]],[11,R[22],E,E,129,[[["self"]],[T]]],[11,R[26],E,E,129,[[["self"]],[R[46]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[20],E,E,130,[[[U]],[R[3]]]],[11,"into",E,E,130,[[],[U]]],[11,R[21],E,E,130,[[],[R[3]]]],[11,R[45],E,E,130,[[["self"]],[T]]],[11,R[22],E,E,130,[[["self"]],[T]]],[11,R[26],E,E,130,[[["self"]],[R[46]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[20],E,E,131,[[[U]],[R[3]]]],[11,"into",E,E,131,[[],[U]]],[11,R[21],E,E,131,[[],[R[3]]]],[11,R[45],E,E,131,[[["self"]],[T]]],[11,R[22],E,E,131,[[["self"]],[T]]],[11,R[26],E,E,131,[[["self"]],[R[46]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[20],E,E,142,[[[U]],[R[3]]]],[11,"into",E,E,142,[[],[U]]],[11,R[21],E,E,142,[[],[R[3]]]],[11,R[45],E,E,142,[[["self"]],[T]]],[11,R[22],E,E,142,[[["self"]],[T]]],[11,R[26],E,E,142,[[["self"]],[R[46]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[20],E,E,143,[[[U]],[R[3]]]],[11,"into",E,E,143,[[],[U]]],[11,R[21],E,E,143,[[],[R[3]]]],[11,R[45],E,E,143,[[["self"]],[T]]],[11,R[22],E,E,143,[[["self"]],[T]]],[11,R[26],E,E,143,[[["self"]],[R[46]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[20],E,E,144,[[[U]],[R[3]]]],[11,"into",E,E,144,[[],[U]]],[11,R[21],E,E,144,[[],[R[3]]]],[11,R[45],E,E,144,[[["self"]],[T]]],[11,R[22],E,E,144,[[["self"]],[T]]],[11,R[26],E,E,144,[[["self"]],[R[46]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[20],E,E,145,[[[U]],[R[3]]]],[11,"into",E,E,145,[[],[U]]],[11,R[21],E,E,145,[[],[R[3]]]],[11,R[45],E,E,145,[[["self"]],[T]]],[11,R[22],E,E,145,[[["self"]],[T]]],[11,R[26],E,E,145,[[["self"]],[R[46]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[20],E,E,146,[[[U]],[R[3]]]],[11,"into",E,E,146,[[],[U]]],[11,R[21],E,E,146,[[],[R[3]]]],[11,R[45],E,E,146,[[["self"]],[T]]],[11,R[22],E,E,146,[[["self"]],[T]]],[11,R[26],E,E,146,[[["self"]],[R[46]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[20],E,E,147,[[[U]],[R[3]]]],[11,"into",E,E,147,[[],[U]]],[11,R[21],E,E,147,[[],[R[3]]]],[11,R[45],E,E,147,[[["self"]],[T]]],[11,R[22],E,E,147,[[["self"]],[T]]],[11,R[26],E,E,147,[[["self"]],[R[46]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[20],E,E,148,[[[U]],[R[3]]]],[11,"into",E,E,148,[[],[U]]],[11,R[21],E,E,148,[[],[R[3]]]],[11,R[45],E,E,148,[[["self"]],[T]]],[11,R[22],E,E,148,[[["self"]],[T]]],[11,R[26],E,E,148,[[["self"]],[R[46]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[20],E,E,149,[[[U]],[R[3]]]],[11,"into",E,E,149,[[],[U]]],[11,R[21],E,E,149,[[],[R[3]]]],[11,R[45],E,E,149,[[["self"]],[T]]],[11,R[22],E,E,149,[[["self"]],[T]]],[11,R[26],E,E,149,[[["self"]],[R[46]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[20],E,E,132,[[[U]],[R[3]]]],[11,"into",E,E,132,[[],[U]]],[11,R[21],E,E,132,[[],[R[3]]]],[11,R[45],E,E,132,[[["self"]],[T]]],[11,R[22],E,E,132,[[["self"]],[T]]],[11,R[26],E,E,132,[[["self"]],[R[46]]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[20],E,E,150,[[[U]],[R[3]]]],[11,"into",E,E,150,[[],[U]]],[11,R[21],E,E,150,[[],[R[3]]]],[11,R[45],E,E,150,[[["self"]],[T]]],[11,R[22],E,E,150,[[["self"]],[T]]],[11,R[26],E,E,150,[[["self"]],[R[46]]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[20],E,E,151,[[[U]],[R[3]]]],[11,"into",E,E,151,[[],[U]]],[11,R[21],E,E,151,[[],[R[3]]]],[11,R[45],E,E,151,[[["self"]],[T]]],[11,R[22],E,E,151,[[["self"]],[T]]],[11,R[26],E,E,151,[[["self"]],[R[46]]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[20],E,E,152,[[[U]],[R[3]]]],[11,"into",E,E,152,[[],[U]]],[11,R[21],E,E,152,[[],[R[3]]]],[11,R[45],E,E,152,[[["self"]],[T]]],[11,R[22],E,E,152,[[["self"]],[T]]],[11,R[26],E,E,152,[[["self"]],[R[46]]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[20],E,E,153,[[[U]],[R[3]]]],[11,"into",E,E,153,[[],[U]]],[11,R[21],E,E,153,[[],[R[3]]]],[11,R[45],E,E,153,[[["self"]],[T]]],[11,R[22],E,E,153,[[["self"]],[T]]],[11,R[26],E,E,153,[[["self"]],[R[46]]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[20],E,E,154,[[[U]],[R[3]]]],[11,"into",E,E,154,[[],[U]]],[11,R[21],E,E,154,[[],[R[3]]]],[11,R[45],E,E,154,[[["self"]],[T]]],[11,R[22],E,E,154,[[["self"]],[T]]],[11,R[26],E,E,154,[[["self"]],[R[46]]]],[11,"fmt",E,E,133,[[["self"],[R[37]]],[["error"],[R[3],["error"]]]]],[11,"clone",E,E,150,[[["self"]],["dir"]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],["timespec"]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],["ipv6_mreq"]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],["itimerval"]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],["protoent"]]],[11,"clone",E,E,151,[[["self"]],["file"]]],[11,"clone",E,E,152,[[["self"]],["fpos_t"]]],[11,"clone",E,E,153,[[["self"]],["timezone"]]],[11,"clone",E,E,17,[[["self"]],["in_addr"]]],[11,"clone",E,E,18,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,19,[[["self"]],[R[1282]]]],[11,"clone",E,E,20,[[["self"]],["sockaddr"]]],[11,"clone",E,E,21,[[["self"]],[R[1283]]]],[11,"clone",E,E,22,[[["self"]],[R[1284]]]],[11,"clone",E,E,23,[[["self"]],["addrinfo"]]],[11,"clone",E,E,24,[[["self"]],[R[1285]]]],[11,"clone",E,E,134,[[["self"]],["fd_set"]]],[11,"clone",E,E,25,[[["self"]],["tm"]]],[11,"clone",E,E,26,[[["self"]],[R[1286]]]],[11,"clone",E,E,27,[[["self"]],["dl_info"]]],[11,"clone",E,E,28,[[["self"]],["lconv"]]],[11,"clone",E,E,29,[[["self"]],[R[1327]]]],[11,"clone",E,E,30,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,135,[[["self"]],["in6_rtmsg"]]],[11,"clone",E,E,31,[[["self"]],["arpreq"]]],[11,"clone",E,E,32,[[["self"]],[R[1328]]]],[11,"clone",E,E,33,[[["self"]],["arphdr"]]],[11,"clone",E,E,34,[[["self"]],["mmsghdr"]]],[11,"clone",E,E,35,[[["self"]],[R[1287]]]],[11,"clone",E,E,36,[[["self"]],[R[1288]]]],[11,"clone",E,E,37,[[["self"]],[R[1289]]]],[11,"clone",E,E,38,[[["self"]],["utsname"]]],[11,"clone",E,E,39,[[["self"]],["sigevent"]]],[11,"clone",E,E,154,[[["self"]],["fpos64_t"]]],[11,"clone",E,E,40,[[["self"]],["rlimit64"]]],[11,"clone",E,E,41,[[["self"]],["glob_t"]]],[11,"clone",E,E,42,[[["self"]],["passwd"]]],[11,"clone",E,E,43,[[["self"]],["spwd"]]],[11,"clone",E,E,44,[[["self"]],["dqblk"]]],[11,"clone",E,E,45,[[["self"]],[R[1290]]]],[11,"clone",E,E,46,[[["self"]],[R[1329]]]],[11,"clone",E,E,136,[[["self"]],["fsid_t"]]],[11,"clone",E,E,47,[[["self"]],[R[1291]]]],[11,"clone",E,E,137,[[["self"]],[R[1280]]]],[11,"clone",E,E,48,[[["self"]],[R[1281]]]],[11,"clone",E,E,49,[[["self"]],["msginfo"]]],[11,"clone",E,E,50,[[["self"]],["sembuf"]]],[11,"clone",E,E,51,[[["self"]],[R[1292]]]],[11,"clone",E,E,52,[[["self"]],["input_id"]]],[11,"clone",E,E,53,[[["self"]],[R[1293]]]],[11,"clone",E,E,54,[[["self"]],[R[1294]]]],[11,"clone",E,E,55,[[["self"]],[R[1330]]]],[11,"clone",E,E,56,[[["self"]],["ff_replay"]]],[11,"clone",E,E,57,[[["self"]],[R[1331]]]],[11,"clone",E,E,58,[[["self"]],[R[1295]]]],[11,"clone",E,E,59,[[["self"]],[R[1296]]]],[11,"clone",E,E,60,[[["self"]],[R[1297]]]],[11,"clone",E,E,61,[[["self"]],[R[1298]]]],[11,"clone",E,E,62,[[["self"]],[R[1299]]]],[11,"clone",E,E,63,[[["self"]],[R[1300]]]],[11,"clone",E,E,64,[[["self"]],["ff_effect"]]],[11,"clone",E,E,65,[[["self"]],[R[1301]]]],[11,"clone",E,E,66,[[["self"]],["elf32_ehdr"]]],[11,"clone",E,E,67,[[["self"]],["elf64_ehdr"]]],[11,"clone",E,E,68,[[["self"]],["elf32_sym"]]],[11,"clone",E,E,69,[[["self"]],["elf64_sym"]]],[11,"clone",E,E,70,[[["self"]],["elf32_phdr"]]],[11,"clone",E,E,71,[[["self"]],["elf64_phdr"]]],[11,"clone",E,E,72,[[["self"]],["elf32_shdr"]]],[11,"clone",E,E,73,[[["self"]],["elf64_shdr"]]],[11,"clone",E,E,74,[[["self"]],["elf32_chdr"]]],[11,"clone",E,E,75,[[["self"]],["elf64_chdr"]]],[11,"clone",E,E,76,[[["self"]],["ucred"]]],[11,"clone",E,E,77,[[["self"]],["mntent"]]],[11,"clone",E,E,138,[[["self"]],[R[1302]]]],[11,"clone",E,E,139,[[["self"]],[R[1303]]]],[11,"clone",E,E,78,[[["self"]],[R[1332]]]],[11,"clone",E,E,79,[[["self"]],[R[1304]]]],[11,"clone",E,E,80,[[["self"]],[R[1305]]]],[11,"clone",E,E,81,[[["self"]],[R[1306]]]],[11,"clone",E,E,82,[[["self"]],[R[1307]]]],[11,"clone",E,E,83,[[["self"]],[R[1308]]]],[11,"clone",E,E,84,[[["self"]],["dirent"]]],[11,"clone",E,E,85,[[["self"]],["dirent64"]]],[11,"clone",E,E,86,[[["self"]],[R[1309]]]],[11,"clone",E,E,87,[[["self"]],["af_alg_iv"]]],[11,"clone",E,E,88,[[["self"]],["mq_attr"]]],[11,"clone",E,E,89,[[["self"]],["statx"]]],[11,"clone",E,E,90,[[["self"]],[R[1310]]]],[11,"clone",E,E,91,[[["self"]],["aiocb"]]],[11,"clone",E,E,92,[[["self"]],[R[1311]]]],[11,"clone",E,E,93,[[["self"]],["__timeval"]]],[11,"clone",E,E,94,[[["self"]],["glob64_t"]]],[11,"clone",E,E,95,[[["self"]],["msghdr"]]],[11,"clone",E,E,96,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,97,[[["self"]],["termios"]]],[11,"clone",E,E,98,[[["self"]],["mallinfo"]]],[11,"clone",E,E,99,[[["self"]],["nlmsghdr"]]],[11,"clone",E,E,100,[[["self"]],["nlmsgerr"]]],[11,"clone",E,E,101,[[["self"]],[R[1333]]]],[11,"clone",E,E,102,[[["self"]],[R[1312]]]],[11,"clone",E,E,103,[[["self"]],[R[1313]]]],[11,"clone",E,E,104,[[["self"]],["nlattr"]]],[11,"clone",E,E,105,[[["self"]],["rtentry"]]],[11,"clone",E,E,106,[[["self"]],["utmpx"]]],[11,"clone",E,E,140,[[["self"]],["sigset_t"]]],[11,"clone",E,E,107,[[["self"]],["sysinfo"]]],[11,"clone",E,E,108,[[["self"]],["msqid_ds"]]],[11,"clone",E,E,109,[[["self"]],[R[1334]]]],[11,"clone",E,E,110,[[["self"]],["statfs"]]],[11,"clone",E,E,111,[[["self"]],["flock"]]],[11,"clone",E,E,112,[[["self"]],["flock64"]]],[11,"clone",E,E,113,[[["self"]],["siginfo_t"]]],[11,"clone",E,E,114,[[["self"]],["stack_t"]]],[11,"clone",E,E,115,[[["self"]],["stat"]]],[11,"clone",E,E,116,[[["self"]],["stat64"]]],[11,"clone",E,E,117,[[["self"]],["statfs64"]]],[11,"clone",E,E,118,[[["self"]],[R[1335]]]],[11,"clone",E,E,141,[[["self"]],[R[1314]]]],[11,"clone",E,E,119,[[["self"]],[R[1315]]]],[11,"clone",E,E,120,[[["self"]],[R[1316]]]],[11,"clone",E,E,121,[[["self"]],[R[1317]]]],[11,"clone",E,E,122,[[["self"]],[R[1318]]]],[11,"clone",E,E,123,[[["self"]],["user"]]],[11,"clone",E,E,124,[[["self"]],[R[1336]]]],[11,"clone",E,E,125,[[["self"]],["ipc_perm"]]],[11,"clone",E,E,126,[[["self"]],["shmid_ds"]]],[11,"clone",E,E,127,[[["self"]],["termios2"]]],[11,"clone",E,E,128,[[["self"]],["ip_mreqn"]]],[11,"clone",E,E,129,[[["self"]],[R[1319]]]],[11,"clone",E,E,130,[[["self"]],[R[1337]]]],[11,"clone",E,E,131,[[["self"]],["statvfs"]]],[11,"clone",E,E,142,[[["self"]],[R[1320]]]],[11,"clone",E,E,143,[[["self"]],["sem_t"]]],[11,"clone",E,E,144,[[["self"]],[R[1321]]]],[11,"clone",E,E,145,[[["self"]],[R[1322]]]],[11,"clone",E,E,146,[[["self"]],[R[1323]]]],[11,"clone",E,E,147,[[["self"]],[R[1324]]]],[11,"clone",E,E,148,[[["self"]],[R[1325]]]],[11,"clone",E,E,149,[[["self"]],[R[1326]]]],[11,"clone",E,E,132,[[["self"]],["in6_addr"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,R[1282]],[3,"sockaddr"],[3,R[1283]],[3,R[1284]],[3,"addrinfo"],[3,R[1285]],[3,"tm"],[3,R[1286]],[3,"Dl_info"],[3,"lconv"],[3,R[1327]],[3,"ifaddrs"],[3,"arpreq"],[3,R[1328]],[3,"arphdr"],[3,"mmsghdr"],[3,R[1287]],[3,R[1288]],[3,R[1289]],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,R[1290]],[3,R[1329]],[3,R[1291]],[3,R[1281]],[3,"msginfo"],[3,"sembuf"],[3,R[1292]],[3,"input_id"],[3,R[1293]],[3,R[1294]],[3,R[1330]],[3,"ff_replay"],[3,R[1331]],[3,R[1295]],[3,R[1296]],[3,R[1297]],[3,R[1298]],[3,R[1299]],[3,R[1300]],[3,"ff_effect"],[3,R[1301]],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,R[1332]],[3,R[1304]],[3,R[1305]],[3,R[1306]],[3,R[1307]],[3,R[1308]],[3,"dirent"],[3,"dirent64"],[3,R[1309]],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,R[1310]],[3,"aiocb"],[3,R[1311]],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,R[1333]],[3,R[1312]],[3,R[1313]],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,R[1334]],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,R[1335]],[3,R[1315]],[3,R[1316]],[3,R[1317]],[3,R[1318]],[3,"user"],[3,R[1336]],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,R[1319]],[3,R[1337]],[3,"statvfs"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,R[1280]],[3,R[1302]],[3,R[1303]],[3,"sigset_t"],[3,R[1314]],[3,R[1320]],[3,"sem_t"],[3,R[1321]],[3,R[1322]],[3,R[1323]],[3,R[1324]],[3,R[1325]],[3,R[1326]],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["lock_api"]={"doc":"This library provides type-safe and fully-featured `Mutex`…","i":[[3,R[902],"lock_api",R[807],N,N],[3,R[903],E,R[807],N,N],[3,"Mutex",E,R[1788],N,N],[3,R[879],E,R[1789],N,N],[3,R[880],E,R[1787],N,N],[3,R[881],E,R[1791],N,N],[3,R[882],E,R[1792],N,N],[3,R[883],E,R[1790],N,N],[3,"RwLock",E,R[1795],N,N],[3,R[884],E,R[1796],N,N],[3,R[885],E,R[1798],N,N],[3,R[886],E,R[1797],N,N],[3,R[887],E,R[1793],N,N],[3,R[888],E,R[1794],N,N],[11,"new",E,"Creates a new mutex in an unlocked state ready for use.",0,[[[T]],["mutex"]]],[11,R[109],E,R[816],0,[[],[T]]],[11,"lock",E,"Acquires a mutex, blocking the current thread until it is…",0,[[["self"]],[R[808]]]],[11,R[854],E,R[817],0,[[["self"]],[["option",[R[808]]],[R[808]]]]],[11,R[471],E,R[523],0,[[["self"]],[T]]],[11,R[819],E,R[820],0,[[["self"]]]],[11,"raw",E,R[821],0,[[["self"]],["r"]]],[11,R[822],E,"Forcibly unlocks the mutex using a fair unlock procotol.",0,[[["self"]]]],[11,R[823],E,R[809],0,[[["self"]],[["option",[R[808]]],[R[808]]]]],[11,R[824],E,R[809],0,[[["self"]],[["option",[R[808]]],[R[808]]]]],[11,"mutex",E,"Returns a reference to the original `Mutex` object.",1,[[["self"]],["mutex"]]],[11,"map",E,R[812],1,[[["f"]],[[R[810]],["sized"]]]],[11,R[843],E,R[813],1,[[["f"]],[[R[810]],[R[3],[R[810]]]]]],[11,R[840],E,R[811],1,[[["self"],["f"]],[U]]],[11,R[814],E,R[815],1,[[]]],[11,R[827],E,R[811],1,[[["self"],["f"]],[U]]],[11,"bump",E,R[828],1,[[["self"]]]],[11,"map",E,R[812],2,[[["f"]],[[R[810]],["sized"]]]],[11,R[843],E,R[813],2,[[["f"]],[[R[810]],[R[3],[R[810]]]]]],[11,R[814],E,R[815],2,[[]]],[11,"new",E,"Creates a new reentrant mutex in an unlocked state ready…",3,[[[T]],[R[825]]]],[11,R[109],E,R[816],3,[[],[T]]],[11,"lock",E,"Acquires a reentrant mutex, blocking the current thread…",3,[[["self"]],[R[818]]]],[11,R[854],E,R[817],3,[[["self"]],[[R[818]],["option",[R[818]]]]]],[11,R[471],E,R[523],3,[[["self"]],[T]]],[11,R[819],E,R[820],3,[[["self"]]]],[11,"raw",E,R[821],3,[[["self"]],["r"]]],[11,R[822],E,"Forcibly unlocks the mutex using a fair unlock protocol.",3,[[["self"]]]],[11,R[823],E,R[809],3,[[["self"]],[[R[818]],["option",[R[818]]]]]],[11,R[824],E,R[809],3,[[["self"]],[[R[818]],["option",[R[818]]]]]],[11,"remutex",E,"Returns a reference to the original `ReentrantMutex` object.",4,[[["self"]],[R[825]]]],[11,"map",E,R[829],4,[[["f"]],[[R[826]],["sized"]]]],[11,R[843],E,R[830],4,[[["f"]],[[R[826]],[R[3],[R[826]]]]]],[11,R[840],E,R[811],4,[[["self"],["f"]],[U]]],[11,R[814],E,R[815],4,[[]]],[11,R[827],E,R[811],4,[[["self"],["f"]],[U]]],[11,"bump",E,R[828],4,[[["self"]]]],[11,"map",E,R[829],5,[[["f"]],[[R[826]],["sized"]]]],[11,R[843],E,R[830],5,[[["f"]],[[R[826]],[R[3],[R[826]]]]]],[11,R[814],E,R[815],5,[[]]],[11,"new",E,"Creates a new instance of an `RwLock<T>` which is unlocked.",6,[[[T]],["rwlock"]]],[11,R[109],E,"Consumes this `RwLock`, returning the underlying data.",6,[[],[T]]],[11,"read",E,R[835],6,[[["self"]],[R[831]]]],[11,"try_read",E,R[836],6,[[["self"]],[["option",[R[831]]],[R[831]]]]],[11,"write",E,"Locks this `RwLock` with exclusive write access, blocking…",6,[[["self"]],[R[832]]]],[11,"try_write",E,"Attempts to lock this `RwLock` with exclusive write access.",6,[[["self"]],[[R[832]],["option",[R[832]]]]]],[11,R[471],E,R[523],6,[[["self"]],[T]]],[11,"force_unlock_read",E,"Forcibly unlocks a read lock.",6,[[["self"]]]],[11,"force_unlock_write",E,"Forcibly unlocks a write lock.",6,[[["self"]]]],[11,"raw",E,"Returns the underlying raw reader-writer lock object.",6,[[["self"]],["r"]]],[11,"force_unlock_read_fair",E,"Forcibly unlocks a read lock using a fair unlock procotol.",6,[[["self"]]]],[11,"force_unlock_write_fair",E,"Forcibly unlocks a write lock using a fair unlock procotol.",6,[[["self"]]]],[11,"try_read_for",E,R[833],6,[[["self"]],[["option",[R[831]]],[R[831]]]]],[11,"try_read_until",E,R[833],6,[[["self"]],[["option",[R[831]]],[R[831]]]]],[11,"try_write_for",E,R[834],6,[[["self"]],[[R[832]],["option",[R[832]]]]]],[11,"try_write_until",E,R[834],6,[[["self"]],[[R[832]],["option",[R[832]]]]]],[11,"read_recursive",E,R[835],6,[[["self"]],[R[831]]]],[11,"try_read_recursive",E,R[836],6,[[["self"]],[["option",[R[831]]],[R[831]]]]],[11,"try_read_recursive_for",E,R[833],6,[[["self"]],[["option",[R[831]]],[R[831]]]]],[11,"try_read_recursive_until",E,R[833],6,[[["self"]],[["option",[R[831]]],[R[831]]]]],[11,"upgradable_read",E,"Locks this `RwLock` with upgradable read access, blocking…",6,[[["self"]],[R[837]]]],[11,"try_upgradable_read",E,R[838],6,[[["self"]],[["option",[R[837]]],[R[837]]]]],[11,"try_upgradable_read_for",E,R[838],6,[[["self"]],[["option",[R[837]]],[R[837]]]]],[11,"try_upgradable_read_until",E,R[838],6,[[["self"]],[["option",[R[837]]],[R[837]]]]],[11,"rwlock",E,R[842],7,[[["self"]],["rwlock"]]],[11,"map",E,R[849],7,[[["f"]],[[R[839]],["sized"]]]],[11,R[843],E,R[850],7,[[["f"]],[[R[839]],[R[3],[R[839]]]]]],[11,R[840],E,R[841],7,[[["self"],["f"]],[U]]],[11,R[814],E,R[845],7,[[]]],[11,R[827],E,R[841],7,[[["self"],["f"]],[U]]],[11,"bump",E,R[846],7,[[["self"]]]],[11,"rwlock",E,R[842],8,[[["self"]],["rwlock"]]],[11,"map",E,R[851],8,[[["f"]],[[R[844]],["sized"]]]],[11,R[843],E,R[852],8,[[["f"]],[[R[3],[R[844]]],[R[844]]]]],[11,R[840],E,R[841],8,[[["self"],["f"]],[U]]],[11,R[847],E,R[853],8,[[],[R[831]]]],[11,R[865],E,"Atomically downgrades a write lock into an upgradable read…",8,[[],[R[837]]]],[11,R[814],E,R[845],8,[[]]],[11,R[827],E,R[841],8,[[["self"],["f"]],[U]]],[11,"bump",E,R[846],8,[[["self"]]]],[11,"rwlock",E,R[842],9,[[["self"]],["rwlock"]]],[11,R[840],E,R[841],9,[[["self"],["f"]],[U]]],[11,"upgrade",E,"Atomically upgrades an upgradable read lock lock into a…",9,[[],[R[832]]]],[11,R[863],E,R[848],9,[[],[[R[832]],[R[3],[R[832]]]]]],[11,R[814],E,R[845],9,[[]]],[11,R[827],E,R[841],9,[[["self"],["f"]],[U]]],[11,"bump",E,R[846],9,[[["self"]]]],[11,R[847],E,"Atomically downgrades an upgradable read lock lock into a…",9,[[],[R[831]]]],[11,R[867],E,R[848],9,[[],[[R[832]],[R[3],[R[832]]]]]],[11,R[869],E,R[848],9,[[],[[R[832]],[R[3],[R[832]]]]]],[11,"map",E,R[849],10,[[["f"]],[[R[839]],["sized"]]]],[11,R[843],E,R[850],10,[[["f"]],[[R[839]],[R[3],[R[839]]]]]],[11,R[814],E,R[845],10,[[]]],[11,"map",E,R[851],11,[[["f"]],[[R[844]],["sized"]]]],[11,R[843],E,R[852],11,[[["f"]],[[R[3],[R[844]]],[R[844]]]]],[11,R[847],E,R[853],11,[[],[R[839]]]],[11,R[814],E,R[845],11,[[]]],[8,"RawMutex",E,"Basic operations for a mutex.",N,N],[18,"INIT",E,R[870],12,N],[16,R[855],E,R[856],12,N],[10,"lock",E,"Acquires this mutex, blocking the current thread until it…",12,[[["self"]]]],[10,R[854],E,"Attempts to acquire this mutex without blocking.",12,[[["self"]],["bool"]]],[10,"unlock",E,"Unlocks this mutex.",12,[[["self"]]]],[8,R[889],E,"Additional methods for mutexes which support fair unlocking.",N,N],[10,R[814],E,"Unlocks this mutex using a fair unlock protocol.",13,[[["self"]]]],[11,"bump",E,R[828],13,[[["self"]]]],[8,R[890],E,"Additional methods for mutexes which support locking with…",N,N],[16,"Duration",E,R[857],14,N],[16,"Instant",E,R[858],14,N],[10,R[823],E,R[809],14,[[["self"]],["bool"]]],[10,R[824],E,R[809],14,[[["self"]],["bool"]]],[8,R[891],E,"Helper trait which returns a non-zero thread ID.",N,N],[18,"INIT",E,R[871],15,N],[10,R[1799],E,"Returns a non-zero thread ID which identifies the current…",15,[[["self"]],[R[442]]]],[8,R[892],E,"Basic operations for a reader-writer lock.",N,N],[18,"INIT",E,R[872],16,N],[16,R[855],E,R[856],16,N],[10,R[1803],E,"Acquires a shared lock, blocking the current thread until…",16,[[["self"]]]],[10,R[1804],E,"Attempts to acquire a shared lock without blocking.",16,[[["self"]],["bool"]]],[10,R[1805],E,"Releases a shared lock.",16,[[["self"]]]],[10,R[1800],E,"Acquires an exclusive lock, blocking the current thread…",16,[[["self"]]]],[10,R[1801],E,"Attempts to acquire an exclusive lock without blocking.",16,[[["self"]],["bool"]]],[10,R[1802],E,"Releases an exclusive lock.",16,[[["self"]]]],[8,R[893],E,"Additional methods for RwLocks which support fair unlocking.",N,N],[10,R[1806],E,"Releases a shared lock using a fair unlock protocol.",17,[[["self"]]]],[10,R[1807],E,"Releases an exclusive lock using a fair unlock protocol.",17,[[["self"]]]],[11,R[873],E,R[874],17,[[["self"]]]],[11,R[875],E,R[876],17,[[["self"]]]],[8,R[894],E,R[862],N,N],[10,R[847],E,"Atomically downgrades an exclusive lock into a shared lock…",18,[[["self"]]]],[8,R[895],E,"Additional methods for RwLocks which support locking with…",N,N],[16,"Duration",E,R[857],19,N],[16,"Instant",E,R[858],19,N],[10,R[1808],E,R[859],19,[[["self"]],["bool"]]],[10,R[1809],E,R[859],19,[[["self"]],["bool"]]],[10,R[1810],E,R[860],19,[[["self"]],["bool"]]],[10,R[1811],E,R[860],19,[[["self"]],["bool"]]],[8,R[896],E,R[861],N,N],[10,R[1812],E,"Acquires a shared lock without deadlocking in case of a…",20,[[["self"]]]],[10,R[1813],E,"Attempts to acquire a shared lock without deadlocking in…",20,[[["self"]],["bool"]]],[8,R[897],E,R[861],N,N],[10,R[1814],E,R[859],21,[[["self"]],["bool"]]],[10,R[1815],E,R[859],21,[[["self"]],["bool"]]],[8,R[898],E,R[862],N,N],[10,R[1816],E,"Acquires an upgradable lock, blocking the current thread…",22,[[["self"]]]],[10,R[1817],E,"Attempts to acquire an upgradable lock without blocking.",22,[[["self"]],["bool"]]],[10,R[1818],E,"Releases an upgradable lock.",22,[[["self"]]]],[10,"upgrade",E,"Upgrades an upgradable lock to an exclusive lock.",22,[[["self"]]]],[10,R[863],E,R[868],22,[[["self"]],["bool"]]],[8,R[899],E,R[864],N,N],[10,R[1819],E,"Releases an upgradable lock using a fair unlock protocol.",23,[[["self"]]]],[11,R[877],E,R[878],23,[[["self"]]]],[8,R[900],E,R[864],N,N],[10,R[1820],E,"Downgrades an upgradable lock to a shared lock.",24,[[["self"]]]],[10,R[865],E,"Downgrades an exclusive lock to an upgradable lock.",24,[[["self"]]]],[8,R[901],E,R[864],N,N],[10,R[1822],E,R[866],25,[[["self"]],["bool"]]],[10,R[1821],E,R[866],25,[[["self"]],["bool"]]],[10,R[867],E,R[868],25,[[["self"]],["bool"]]],[10,R[869],E,R[868],25,[[["self"]],["bool"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,"into",E,E,26,[[],[U]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,"from",E,E,0,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"from",E,E,3,[[],[T]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"from",E,E,6,[[],[T]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,"into",E,E,11,[[],[U]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"from",E,E,0,[[[T]],["mutex"]]],[11,"from",E,E,3,[[[T]],[R[825]]]],[11,"from",E,E,6,[[[T]],["rwlock"]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,4,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,5,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,7,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,8,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,9,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,10,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,11,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,3,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,4,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,5,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,6,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,7,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,8,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,9,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,10,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,11,[[[R[37]],["self"]],[R[3]]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"deref",E,E,4,[[["self"]],[T]]],[11,"deref",E,E,5,[[["self"]],[T]]],[11,"deref",E,E,7,[[["self"]],[T]]],[11,"deref",E,E,8,[[["self"]],[T]]],[11,"deref",E,E,9,[[["self"]],[T]]],[11,"deref",E,E,10,[[["self"]],[T]]],[11,"deref",E,E,11,[[["self"]],[T]]],[11,R[99],E,E,1,[[["self"]],[T]]],[11,R[99],E,E,2,[[["self"]],[T]]],[11,R[99],E,E,8,[[["self"]],[T]]],[11,R[99],E,E,11,[[["self"]],[T]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,"drop",E,E,8,[[["self"]]]],[11,"drop",E,E,9,[[["self"]]]],[11,"drop",E,E,10,[[["self"]]]],[11,"drop",E,E,11,[[["self"]]]],[11,R[90],E,E,0,[[],["mutex"]]],[11,R[90],E,E,3,[[],[R[825]]]],[11,R[90],E,E,6,[[],["rwlock"]]],[18,"INIT",E,R[870],12,N],[11,"bump",E,R[828],13,[[["self"]]]],[18,"INIT",E,R[871],15,N],[18,"INIT",E,R[872],16,N],[11,R[873],E,R[874],17,[[["self"]]]],[11,R[875],E,R[876],17,[[["self"]]]],[11,R[877],E,R[878],23,[[["self"]]]]],"p":[[3,"Mutex"],[3,R[879]],[3,R[880]],[3,R[881]],[3,R[882]],[3,R[883]],[3,"RwLock"],[3,R[884]],[3,R[885]],[3,R[886]],[3,R[887]],[3,R[888]],[8,"RawMutex"],[8,R[889]],[8,R[890]],[8,R[891]],[8,R[892]],[8,R[893]],[8,R[894]],[8,R[895]],[8,R[896]],[8,R[897]],[8,R[898]],[8,R[899]],[8,R[900]],[8,R[901]],[3,R[902]],[3,R[903]]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,R[1173],E,"Builder for `Record`.",N,N],[3,R[993],E,"Metadata about a log message.",N,N],[3,R[1174],E,"Builder for `Metadata`.",N,N],[3,R[1175],E,"The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,R[1000],E,"The type returned by [`from_str`] when the string doesn't…",N,N],[4,"Level",E,"An enum representing the available verbosity levels of the…",N,N],[13,"Error",E,R[1176],0,N],[13,"Warn",E,R[1177],0,N],[13,"Info",E,R[1178],0,N],[13,"Debug",E,R[1179],0,N],[13,"Trace",E,R[1180],0,N],[4,R[1172],E,"An enum representing the available verbosity level filters…",N,N],[13,"Off",E,"A level lower than all log levels.",1,N],[13,"Error",E,"Corresponds to the `Error` log level.",1,N],[13,"Warn",E,"Corresponds to the `Warn` log level.",1,N],[13,"Info",E,"Corresponds to the `Info` log level.",1,N],[13,"Debug",E,"Corresponds to the `Debug` log level.",1,N],[13,"Trace",E,"Corresponds to the `Trace` log level.",1,N],[5,"set_max_level",E,"Sets the global maximum log level.",N,[[[R[1161]]]]],[5,"max_level",E,"Returns the current maximum log level.",N,[[],[R[1161]]]],[5,"set_boxed_logger",E,"Sets the global logger to a `Box<Log>`.",N,[[["box",["log"]],["log"]],[[R[3],[R[1162]]],[R[1162]]]]],[5,"set_logger",E,"Sets the global logger to a `&'static Log`.",N,[[["log"]],[[R[3],[R[1162]]],[R[1162]]]]],[5,"set_logger_racy",E,"A thread-unsafe version of [`set_logger`].",N,[[["log"]],[[R[3],[R[1162]]],[R[1162]]]]],[5,"logger",E,"Returns a reference to the logger.",N,[[],["log"]]],[17,R[3136],E,"The statically resolved maximum log level.",N,N],[8,"Log",E,"A trait encapsulating the operations required of a logger.",N,N],[10,"enabled",E,"Determines if a log message with the specified metadata…",2,[[["self"],[R[939]]],["bool"]]],[10,"log",E,"Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush",E,"Flushes any buffered records.",2,[[["self"]]]],[11,"max",E,"Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter",E,"Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],[R[1161]]]],[11,"max",E,"Returns the most verbose logging level filter.",1,[[],[R[1161]]]],[11,"to_level",E,"Converts `self` to the equivalent `Level`.",1,[[["self"]],[["level"],["option",["level"]]]]],[11,"builder",E,R[1168],3,[[],[R[1164]]]],[11,"args",E,"The message body.",3,[[["self"]],[R[325]]]],[11,R[939],E,"Metadata about the log directive.",3,[[["self"]],[R[939]]]],[11,"level",E,R[1169],3,[[["self"]],["level"]]],[11,"target",E,R[1170],3,[[["self"]],["str"]]],[11,R[1165],E,"The module path of the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,R[1166],E,R[1163],3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file",E,"The source file containing the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,R[1167],E,R[1163],3,[[["self"]],[["option",["str"]],["str"]]]],[11,"line",E,"The line containing the message.",3,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"new",E,"Construct new `RecordBuilder`.",4,[[],[R[1164]]]],[11,"args",E,"Set `args`.",4,[[[R[325]],["self"]],[R[1164]]]],[11,R[939],E,"Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],[R[939]]],[R[1164]]]],[11,"level",E,"Set `Metadata::level`.",4,[[["self"],["level"]],[R[1164]]]],[11,"target",E,"Set `Metadata::target`",4,[[["self"],["str"]],[R[1164]]]],[11,R[1165],E,"Set `module_path`",4,[[["option",["str"]],["self"],["str"]],[R[1164]]]],[11,R[1166],E,"Set `module_path` to a `'static` string",4,[[["self"],["option",["str"]],["str"]],[R[1164]]]],[11,"file",E,"Set `file`",4,[[["option",["str"]],["self"],["str"]],[R[1164]]]],[11,R[1167],E,"Set `file` to a `'static` string.",4,[[["self"],["option",["str"]],["str"]],[R[1164]]]],[11,"line",E,"Set `line`",4,[[["self"],["u32"],["option",["u32"]]],[R[1164]]]],[11,"build",E,"Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder",E,R[1168],5,[[],[R[1171]]]],[11,"level",E,R[1169],5,[[["self"]],["level"]]],[11,"target",E,R[1170],5,[[["self"]],["str"]]],[11,"new",E,"Construct a new `MetadataBuilder`.",6,[[],[R[1171]]]],[11,"level",E,"Setter for `level`.",6,[[["self"],["level"]],[R[1171]]]],[11,"target",E,"Setter for `target`.",6,[[["self"],["str"]],[R[1171]]]],[11,"build",E,"Returns a `Metadata` object.",6,[[["self"]],[R[939]]]],[14,"log",E,"The standard logging macro.",N,N],[14,"error",E,R[4453],N,N],[14,"warn",E,R[4455],N,N],[14,"info",E,R[4451],N,N],[14,"debug",E,R[4452],N,N],[14,"trace",E,R[4454],N,N],[14,"log_enabled",E,"Determines if a message logged at the specified level in…",N,N],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[78],E,E,7,[[["self"]],["string"]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[78],E,E,8,[[["self"]],["string"]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[["self"]],["string"]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"clone",E,E,0,[[["self"]],["level"]]],[11,"clone",E,E,1,[[["self"]],[R[1161]]]],[11,"clone",E,E,3,[[["self"]],["record"]]],[11,"clone",E,E,5,[[["self"]],[R[939]]]],[11,"cmp",E,E,0,[[["level"],["self"]],[R[105]]]],[11,"cmp",E,E,1,[[[R[1161]],["self"]],[R[105]]]],[11,"cmp",E,E,5,[[["self"],[R[939]]],[R[105]]]],[11,"cmp",E,E,6,[[[R[1171]],["self"]],[R[105]]]],[11,"eq",E,E,0,[[["level"],["self"]],["bool"]]],[11,"eq",E,E,0,[[[R[1161]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[1161]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["level"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[939]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[939]]],["bool"]]],[11,"eq",E,E,6,[[[R[1171]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[1171]],["self"]],["bool"]]],[11,"eq",E,E,8,[[[R[990]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[990]],["self"]],["bool"]]],[11,R[106],E,E,0,[[["level"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,0,[[["level"],["self"]],["bool"]]],[11,"le",E,E,0,[[["level"],["self"]],["bool"]]],[11,"gt",E,E,0,[[["level"],["self"]],["bool"]]],[11,"ge",E,E,0,[[["level"],["self"]],["bool"]]],[11,R[106],E,E,0,[[[R[1161]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,0,[[[R[1161]],["self"]],["bool"]]],[11,"le",E,E,0,[[[R[1161]],["self"]],["bool"]]],[11,"gt",E,E,0,[[[R[1161]],["self"]],["bool"]]],[11,"ge",E,E,0,[[[R[1161]],["self"]],["bool"]]],[11,R[106],E,E,1,[[[R[1161]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,1,[[[R[1161]],["self"]],["bool"]]],[11,"le",E,E,1,[[[R[1161]],["self"]],["bool"]]],[11,"gt",E,E,1,[[[R[1161]],["self"]],["bool"]]],[11,"ge",E,E,1,[[[R[1161]],["self"]],["bool"]]],[11,R[106],E,E,1,[[["level"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,1,[[["level"],["self"]],["bool"]]],[11,"le",E,E,1,[[["level"],["self"]],["bool"]]],[11,"gt",E,E,1,[[["level"],["self"]],["bool"]]],[11,"ge",E,E,1,[[["level"],["self"]],["bool"]]],[11,R[106],E,E,5,[[["self"],[R[939]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,5,[[["self"],[R[939]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[939]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[939]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[939]]],["bool"]]],[11,R[106],E,E,6,[[[R[1171]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,6,[[[R[1171]],["self"]],["bool"]]],[11,"le",E,E,6,[[[R[1171]],["self"]],["bool"]]],[11,"gt",E,E,6,[[[R[1171]],["self"]],["bool"]]],[11,"ge",E,E,6,[[[R[1171]],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,R[457],E,E,0,[[["str"]],[[R[3],["level"]],["level"]]]],[11,R[457],E,E,1,[[["str"]],[[R[3],[R[1161]]],[R[1161]]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,R[38],E,E,7,[[["self"]],["str"]]],[11,R[38],E,E,8,[[["self"]],["str"]]]],"p":[[4,"Level"],[4,R[1172]],[8,"Log"],[3,"Record"],[3,R[1173]],[3,R[993]],[3,R[1174]],[3,R[1175]],[3,R[1000]]]};
searchIndex["malloc_size_of_derive"]={"doc":"A crate for deriving the MallocSizeOf trait.","i":[[24,R[3123],"malloc_size_of_derive",E,N,N]],"p":[]};
searchIndex["maybe_uninit"]={"doc":E,"i":[[19,R[685],"maybe_uninit",R[904],N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"clone",E,E,0,[[["self"]],[R[483]]]],[11,"new",E,R[905],0,[[[T]],[R[483]]]],[11,"uninit",E,R[906],0,[[],[R[483]]]],[18,"UNINIT",E,R[907],0,N],[11,"zeroed",E,R[908],0,[[],[R[483]]]],[11,"write",E,R[909],0,[[["self"],[T]],[T]]],[11,"as_ptr",E,R[910],0,[[["self"]]]],[11,R[600],E,R[911],0,[[["self"]]]],[11,R[518],E,R[912],0,[[],[T]]],[11,"read",E,R[913],0,[[["self"]],[T]]],[11,"get_ref",E,R[914],0,[[["self"]],[T]]],[11,R[471],E,R[915],0,[[["self"]],[T]]],[11,R[916],E,R[917],0,[[]]],[11,R[918],E,R[919],0,[[]]]],"p":[[19,R[685]]]};
searchIndex["memchr"]={"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",N,N],[3,"Memchr2",E,"An iterator for `memchr2`.",N,N],[3,"Memchr3",E,"An iterator for `memchr3`.",N,N],[5,"memchr_iter",E,R[1182],N,[[["u8"]],["memchr"]]],[5,"memchr2_iter",E,R[1181],N,[[["u8"]],["memchr2"]]],[5,"memchr3_iter",E,R[1181],N,[[["u8"]],["memchr3"]]],[5,"memrchr_iter",E,R[1182],N,[[["u8"]],[["rev",["memchr"]],["memchr"]]]],[5,"memrchr2_iter",E,R[1181],N,[[["u8"]],[["rev",["memchr2"]],["memchr2"]]]],[5,"memrchr3_iter",E,R[1181],N,[[["u8"]],[["rev",["memchr3"]],["memchr3"]]]],[5,"memchr",E,"Search for the first occurrence of a byte in a slice.",N,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memchr2",E,"Like `memchr`, but searches for two bytes instead of one.",N,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memchr3",E,"Like `memchr`, but searches for three bytes instead of one.",N,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr",E,"Search for the last occurrence of a byte in a slice.",N,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr2",E,"Like `memrchr`, but searches for two bytes instead of one.",N,[[["u8"]],[["option",["usize"]],["usize"]]]],[5,"memrchr3",E,"Like `memrchr`, but searches for three bytes instead of one.",N,[[["u8"]],[["option",["usize"]],["usize"]]]],[11,"new",E,R[1183],0,[[["u8"]],["memchr"]]],[11,"new",E,R[1183],1,[[["u8"]],["memchr2"]]],[11,"new",E,"Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[211],E,E,0,[[],["i"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[211],E,E,1,[[],["i"]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[211],E,E,2,[[],["i"]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"next",E,E,0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[292],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[292],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[292],E,E,2,[[["self"]]]],[11,R[295],E,E,0,[[["self"]],["option"]]],[11,R[295],E,E,1,[[["self"]],["option"]]],[11,R[295],E,E,2,[[["self"]],["option"]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["memory_db"]={"doc":R[3477],"i":[[3,"MemoryDB","memory_db",R[3477],N,N],[3,"HashKey",E,"Key function that only uses the hash",N,N],[3,R[3482],E,"Key function that concatenates prefix and hash.",N,N],[3,R[3483],E,"Key function that concatenates prefix and hash. This is…",N,N],[5,"hash_key",E,"Make database key from hash only.",N,[[["prefix"]]]],[5,R[3956],E,R[3957],N,[[["prefix"]],[["vec",["u8"]],["u8"]]]],[5,"legacy_prefixed_key",E,"Legacy method for db using previous version of prefix…",N,[[["prefix"]],[["vec",["u8"]],["u8"]]]],[8,R[3485],E,E,N,N],[8,R[3481],E,E,N,N],[16,"Key",E,E,0,N],[10,"key",E,E,0,[[["prefix"]]]],[11,"remove_and_purge",E,"Remove an element and delete it from storage if reference…",1,[[["self"],["prefix"]],["option"]]],[11,"from_null_node",E,"Create a new `MemoryDB` from a given null key/data",1,[[[T]],["self"]]],[11,"new",E,R[3484],1,[[],["self"]]],[11,"default_with_root",E,"Create a new default instance of `Self` and returns `Self`…",1,[[]]],[11,"clear",E,"Clear all data from the database.",1,[[["self"]]]],[11,"purge",E,"Purge all zero-referenced data from the database.",1,[[["self"]]]],[11,"drain",E,"Return the internal map of hashes to data, clearing the…",1,[[["self"]],["hashmap"]]],[11,"raw",E,"Grab the raw information associated with a key. Returns…",1,[[["prefix"],["self"]],["option"]]],[11,R[4090],E,"Consolidate all the entries of `other` into `self`.",1,[[["self"]]]],[11,"keys",E,"Get the keys in the database together with number of…",1,[[["self"]],[["hashmap",["i32"]],["i32"]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"key",E,E,2,[[["prefix"]]]],[11,"key",E,E,3,[[["prefix"]],[["vec",["u8"]],["u8"]]]],[11,"key",E,E,4,[[["prefix"]],[["vec",["u8"]],["u8"]]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",E,E,4,[[["self"]],["legacyprefixedkey"]]],[11,R[90],E,E,1,[[],["self"]]],[11,"eq",E,E,1,[[["memorydb"],["self"]],["bool"]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"get",E,E,1,[[["self"]],["option"]]],[11,R[114],E,E,1,[[["self"]],["bool"]]],[11,"emplace",E,E,1,[[["self"],[T]]]],[11,"remove",E,E,1,[[["self"]]]],[11,"get",E,E,1,[[["self"]],["option"]]],[11,R[114],E,E,1,[[["self"]],["bool"]]],[11,"get",E,E,1,[[["prefix"],["self"]],["option"]]],[11,R[114],E,E,1,[[["prefix"],["self"]],["bool"]]],[11,"emplace",E,E,1,[[["prefix"],["self"],[T]]]],[11,"insert",E,E,1,[[["prefix"],["self"]]]],[11,"remove",E,E,1,[[["prefix"],["self"]]]],[11,"get",E,E,1,[[["prefix"],["self"]],["option"]]],[11,R[114],E,E,1,[[["prefix"],["self"]],["bool"]]],[11,R[3964],E,E,1,[[["self"]],["hashdb"]]],[11,R[3478],E,E,1,[[["self"]],["hashdb"]]],[11,R[3479],E,E,1,[[["self"]],["plaindb"]]],[11,R[3480],E,E,1,[[["self"]],["plaindb"]]],[11,"size_of",E,E,1,[[[R[3126]],["self"]],["usize"]]]],"p":[[8,R[3481]],[3,"MemoryDB"],[3,"HashKey"],[3,R[3482]],[3,R[3483]]]};
searchIndex["memory_units"]={"doc":"Crate for safe conversion between units of memory.","i":[[3,"Bytes",R[100],R[2849],N,N],[12,"0",E,E,0,N],[5,"size_of",E,R[2846],N,[[],["bytes"]]],[0,"wasm32",E,R[2843],N,N],[3,"Words",R[102],R[2844],N,N],[12,"0",E,E,1,N],[3,"Pages",E,R[2845],N,N],[12,"0",E,E,2,N],[0,"target",R[100],"Sizes and units for the current compilation target.",N,N],[3,"Words",R[103],"Memory size specified in words.",N,N],[12,"0",E,E,3,N],[3,"Pages",E,"Memory size specified in [memory pages][memory page].",N,N],[12,"0",E,E,4,N],[8,R[107],R[100],R[2850],N,N],[10,R[101],E,R[2851],5,[[],[T]]],[8,"ByteSize",E,R[2847],N,N],[10,R[104],E,R[2848],6,[[],["bytes"]]],[11,R[101],E,E,0,[[],["bytes"]]],[11,R[101],E,E,0,[[],["words"]]],[11,R[101],E,E,0,[[],["pages"]]],[11,R[101],E,E,0,[[],["words"]]],[11,R[101],E,E,0,[[],["pages"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[101],R[102],E,1,[[],["bytes"]]],[11,R[101],E,E,1,[[],["words"]]],[11,R[101],E,E,1,[[],["pages"]]],[11,R[101],E,E,1,[[],["words"]]],[11,R[101],E,E,1,[[],["pages"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[101],E,E,2,[[],["bytes"]]],[11,R[101],E,E,2,[[],["words"]]],[11,R[101],E,E,2,[[],["pages"]]],[11,R[101],E,E,2,[[],["words"]]],[11,R[101],E,E,2,[[],["pages"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[101],R[103],E,3,[[],["bytes"]]],[11,R[101],E,E,3,[[],["words"]]],[11,R[101],E,E,3,[[],["pages"]]],[11,R[101],E,E,3,[[],["words"]]],[11,R[101],E,E,3,[[],["pages"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[101],E,E,4,[[],["bytes"]]],[11,R[101],E,E,4,[[],["words"]]],[11,R[101],E,E,4,[[],["pages"]]],[11,R[101],E,E,4,[[],["words"]]],[11,R[101],E,E,4,[[],["pages"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[104],R[100],E,0,[[],["bytes"]]],[11,R[104],R[102],E,1,[[],["bytes"]]],[11,R[104],E,E,2,[[],["bytes"]]],[11,R[104],R[103],E,3,[[],["bytes"]]],[11,R[104],E,E,4,[[],["bytes"]]],[11,"from",R[100],E,0,[[["words"]],["bytes"]]],[11,"from",E,E,0,[[["pages"]],["bytes"]]],[11,"from",E,E,0,[[["words"]],["bytes"]]],[11,"from",E,E,0,[[["pages"]],["bytes"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[102],E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[103],E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"div",R[100],E,0,[[[T]],["self"]]],[11,"div",R[102],E,1,[[[T]],["self"]]],[11,"div",E,E,2,[[[T]],["self"]]],[11,"div",R[103],E,3,[[[T]],["self"]]],[11,"div",E,E,4,[[[T]],["self"]]],[11,"sub",R[100],E,0,[[[T]],["self"]]],[11,"sub",R[102],E,1,[[[T]],["self"]]],[11,"sub",E,E,2,[[[T]],["self"]]],[11,"sub",R[103],E,3,[[[T]],["self"]]],[11,"sub",E,E,4,[[[T]],["self"]]],[11,"eq",R[100],E,0,[[["self"],["bytes"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["bytes"]],["bool"]]],[11,"eq",R[102],E,1,[[["words"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["words"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["pages"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["pages"]],["bool"]]],[11,"eq",R[103],E,3,[[["self"],["words"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["words"]],["bool"]]],[11,"eq",E,E,4,[[["pages"],["self"]],["bool"]]],[11,"ne",E,E,4,[[["pages"],["self"]],["bool"]]],[11,"cmp",R[100],E,0,[[["self"],["bytes"]],[R[105]]]],[11,"cmp",R[102],E,1,[[["words"],["self"]],[R[105]]]],[11,"cmp",E,E,2,[[["self"],["pages"]],[R[105]]]],[11,"cmp",R[103],E,3,[[["self"],["words"]],[R[105]]]],[11,"cmp",E,E,4,[[["pages"],["self"]],[R[105]]]],[11,R[106],R[100],E,0,[[["self"],["bytes"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,0,[[["self"],["bytes"]],["bool"]]],[11,"le",E,E,0,[[["self"],["bytes"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["bytes"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["bytes"]],["bool"]]],[11,R[106],R[102],E,1,[[["words"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,1,[[["words"],["self"]],["bool"]]],[11,"le",E,E,1,[[["words"],["self"]],["bool"]]],[11,"gt",E,E,1,[[["words"],["self"]],["bool"]]],[11,"ge",E,E,1,[[["words"],["self"]],["bool"]]],[11,R[106],E,E,2,[[["self"],["pages"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,2,[[["self"],["pages"]],["bool"]]],[11,"le",E,E,2,[[["self"],["pages"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["pages"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["pages"]],["bool"]]],[11,R[106],R[103],E,3,[[["self"],["words"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,3,[[["self"],["words"]],["bool"]]],[11,"le",E,E,3,[[["self"],["words"]],["bool"]]],[11,"gt",E,E,3,[[["self"],["words"]],["bool"]]],[11,"ge",E,E,3,[[["self"],["words"]],["bool"]]],[11,R[106],E,E,4,[[["pages"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,4,[[["pages"],["self"]],["bool"]]],[11,"le",E,E,4,[[["pages"],["self"]],["bool"]]],[11,"gt",E,E,4,[[["pages"],["self"]],["bool"]]],[11,"ge",E,E,4,[[["pages"],["self"]],["bool"]]],[11,"add",R[100],E,0,[[[T]],["self"]]],[11,"add",R[102],E,1,[[[T]],["self"]]],[11,"add",E,E,2,[[[T]],["self"]]],[11,"add",R[103],E,3,[[[T]],["self"]]],[11,"add",E,E,4,[[[T]],["self"]]],[11,"mul",R[100],E,0,[[[T]],["self"]]],[11,"mul",R[102],E,1,[[[T]],["self"]]],[11,"mul",E,E,2,[[[T]],["self"]]],[11,"mul",R[103],E,3,[[[T]],["self"]]],[11,"mul",E,E,4,[[[T]],["self"]]],[11,"clone",R[100],E,0,[[["self"]],["bytes"]]],[11,"clone",R[102],E,1,[[["self"]],["words"]]],[11,"clone",E,E,2,[[["self"]],["pages"]]],[11,"clone",R[103],E,3,[[["self"]],["words"]]],[11,"clone",E,E,4,[[["self"]],["pages"]]]],"p":[[3,"Bytes"],[3,"Words"],[3,"Pages"],[3,"Words"],[3,"Pages"],[8,R[107]],[8,"ByteSize"]]};
searchIndex["merlin"]={"doc":R[2652],"i":[[3,"Transcript","merlin","A transcript of a public-coin argument.",N,N],[3,R[3131],E,"An RNG providing synthetic randomness to the prover.",N,N],[3,R[3130],E,"Constructs a [`TranscriptRng`] by rekeying the…",N,N],[11,"new",E,"Initialize a new transcript with the supplied `label`,…",0,[[],[R[3310]]]],[11,"append_message",E,"Append a prover's `message` to the transcript.",0,[[["self"]]]],[11,R[3305],E,"Deprecated.  This function was renamed to `append_message`.",0,[[["self"]]]],[11,"append_u64",E,"Convenience method for appending a `u64` to the transcript.",0,[[["self"],["u64"]]]],[11,"commit_u64",E,"Deprecated.  This function was renamed to `append_u64`.",0,[[["self"],["u64"]]]],[11,R[3306],E,"Fill the supplied buffer with the verifier's challenge…",0,[[["self"]]]],[11,"build_rng",E,"Fork the current [`Transcript`] to construct an RNG whose…",0,[[["self"]],[R[3129]]]],[11,"rekey_with_witness_bytes",E,"Rekey the transcript using the provided witness data.",1,[[],[R[3129]]]],[11,"commit_witness_bytes",E,"Deprecated. This function was renamed to…",1,[[],[R[3129]]]],[11,"finalize",E,"Use the supplied external `rng` to rekey the transcript,…",1,[[["r"]],[R[3326]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"zeroize",E,E,0,[[["self"]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"clone",E,E,0,[[["self"]],[R[3310]]]],[11,"zeroize",E,E,0,[[["self"]]]],[11,R[27],E,E,2,[[["self"]],["u32"]]],[11,R[28],E,E,2,[[["self"]],["u64"]]],[11,R[29],E,E,2,[[["self"]]]],[11,R[30],E,E,2,[[["self"]],[[R[3],["error"]],["error"]]]]],"p":[[3,"Transcript"],[3,R[3130]],[3,R[3131]]]};
searchIndex["names"]={"doc":E,"i":[[3,"NameData","names","All data stored with a name in the database.",N,N],[12,"value",E,"The name's associated value.",0,N],[12,"owner",E,"The name's current owner.",0,N],[12,"expiration",E,"The block number when the name expires or None if it does…",0,N],[3,"Operation",E,"All data necessary to actually perform a name operation.…",N,N],[12,R[4853],E,"Type of this operation.",1,N],[12,"name",E,"The name being operated on.",1,N],[12,"value",E,"The value it is being set to.",1,N],[3,"Module",E,E,N,N],[4,R[4854],E,"Type of a name operation.",N,N],[13,"Registration",E,E,2,N],[13,"Update",E,E,2,N],[4,"Call",E,R[4849],N,N],[13,"update",E,R[4851],3,N],[13,"transfer",E,R[4852],3,N],[4,"RawEvent",E,R[4850],N,N],[13,"NameRegistered",E,"Event when a name is newly created.",4,N],[13,"NameUpdated",E,"Event when a name is updated (or created).",4,N],[13,"NameExpired",E,"Event when a name expires and is removed from the database.",4,N],[6,"Event",E,"[`RawEvent`] specialized for the configuration [`Trait`]",N,N],[8,"Trait",E,"The pallet's configuration trait.",N,N],[16,"Name",E,"Type for names.",5,N],[16,"Value",E,"Type for name values.",5,N],[16,"Currency",E,"Type for currency operations (in order to pay for names).",5,N],[16,"Event",E,"The overarching event type.",5,N],[10,"get_name_fee",E,"Computes and returns the currency fee the sender has to…",5,[[[R[4853]]],["option"]]],[10,"get_expiration",E,"For a given name operation, compute the number of blocks…",5,[[[R[4853]]],["option"]]],[10,"deposit_fee",E,"\"Takes ownership\" of the fee paid for a name registration.…",5,[[]]],[11,"update",E,R[4851],6,[[],[R[4543]]]],[11,"transfer",E,R[4852],6,[[],[R[4543]]]],[11,"check_assuming_signed",E,"Checks if a name operation is valid, assuming that we…",6,[[["option"],["option"]],[[R[3],[R[4853],"str"]],["str"],[R[4853]]]]],[11,"execute",E,"Executes the state change (and fires events) for a given…",6,[[[R[4853]]],[R[4543]]]],[11,R[939],E,E,4,[[]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"decode",E,E,0,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[292],E,E,0,[[["self"]],["usize"]]],[11,R[3525],E,E,0,[[["self"],["f"]],["r"]]],[11,"encode",E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,0,[[["w"],["self"]]]],[11,R[4625],E,E,0,[[["self"]]]],[11,R[4626],E,E,0,[[["self"]]]],[11,R[4814],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,0,[[["self"]]]],[11,R[4817],E,E,0,[[["self"]]]],[11,R[4815],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3604],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,0,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,0,[[],[T]]],[11,R[3779],E,R[3776],0,[[["outer"]],[T]]],[11,R[3780],E,R[3777],0,[[["outer"]],[T]]],[11,R[3601],E,E,0,[[],[T]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[3774],E,E,1,[[],[T]]],[11,R[3779],E,R[3776],1,[[["outer"]],[T]]],[11,R[3780],E,R[3777],1,[[["outer"]],[T]]],[11,R[3601],E,E,1,[[],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,R[3774],E,E,6,[[],[T]]],[11,R[3779],E,R[3776],6,[[["outer"]],[T]]],[11,R[3780],E,R[3777],6,[[["outer"]],[T]]],[11,R[3601],E,E,6,[[],[T]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[3774],E,E,2,[[],[T]]],[11,R[3779],E,R[3776],2,[[["outer"]],[T]]],[11,R[3780],E,R[3777],2,[[["outer"]],[T]]],[11,R[3601],E,E,2,[[],[T]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"decode",E,E,3,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[292],E,E,3,[[["self"]],["usize"]]],[11,R[3525],E,E,3,[[["self"],["f"]],["r"]]],[11,"encode",E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,3,[[["w"],["self"]]]],[11,R[4625],E,E,3,[[["self"]]]],[11,R[4626],E,E,3,[[["self"]]]],[11,R[4814],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,3,[[["self"]]]],[11,R[4817],E,E,3,[[["self"]]]],[11,R[4815],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3604],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,3,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,3,[[],[T]]],[11,R[3779],E,R[3776],3,[[["outer"]],[T]]],[11,R[3780],E,R[3777],3,[[["outer"]],[T]]],[11,R[3601],E,E,3,[[],[T]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"decode",E,E,4,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[292],E,E,4,[[["self"]],["usize"]]],[11,R[3525],E,E,4,[[["self"],["f"]],["r"]]],[11,"encode",E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,4,[[["w"],["self"]]]],[11,R[4625],E,E,4,[[["self"]]]],[11,R[4626],E,E,4,[[["self"]]]],[11,R[4814],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[4816],E,E,4,[[["self"]]]],[11,R[4817],E,E,4,[[["self"]]]],[11,R[4815],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3604],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,4,[[],[[R[3],["error"]],["error"]]]],[11,R[3774],E,E,4,[[],[T]]],[11,R[3779],E,R[3776],4,[[["outer"]],[T]]],[11,R[3780],E,R[3777],4,[[["outer"]],[T]]],[11,R[3601],E,E,4,[[],[T]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"clone",E,E,0,[[["self"]],["namedata"]]],[11,"clone",E,E,6,[[["self"]],["module"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",E,E,4,[[["self"]],["rawevent"]]],[11,"eq",E,E,0,[[["self"],["namedata"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["namedata"]],["bool"]]],[11,"eq",E,E,2,[[["operationtype"],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[4853]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[4853]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["module"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["module"]],["bool"]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["rawevent"],["self"]],["bool"]]],[11,"ne",E,E,4,[[["rawevent"],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"decode",E,E,0,[[["decin"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,3,[[["decin"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,4,[[["decin"]],[[R[3],["error"]],["error"]]]],[11,R[3603],E,E,0,[[["self"],["encout"]]]],[11,R[3603],E,E,3,[[["self"],["encout"]]]],[11,R[3603],E,E,4,[[["self"],["encout"]]]],[11,R[939],E,E,6,[[]]],[11,R[4826],E,E,3,[[["self"]],[R[4566]]]],[11,R[4637],E,E,6,[[],["weight"]]],[11,R[937],E,E,3,[[],[R[4543]]]],[11,R[4637],E,E,6,[[]]]],"p":[[3,"NameData"],[3,"Operation"],[4,R[4854]],[4,"Call"],[4,"RawEvent"],[8,"Trait"],[3,"Module"]]};
searchIndex["nodrop"]={"doc":"A wrapper type to inhibit drop (destructor).","i":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",N,N],[11,"new",E,"Create a new NoDrop.",0,[[[T]],["nodrop"]]],[11,R[109],E,"Extract the inner value.",0,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"deref",E,E,0,[[["self"]],[T]]],[11,R[99],E,E,0,[[["self"]],[T]]],[11,"drop",E,E,0,[[["self"]]]]],"p":[[3,"NoDrop"]]};
searchIndex["num_bigint"]={"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","i":[[3,R[1782],"num_bigint",E,N,N],[3,"BigUint",E,"A big unsigned integer type.",N,N],[3,"BigInt",E,"A big signed integer type.",N,N],[4,"Sign",E,"A Sign is a `BigInt`'s composing element.",N,N],[13,"Minus",E,E,0,N],[13,"NoSign",E,E,0,N],[13,"Plus",E,E,0,N],[11,"new",E,R[1776],1,[[["vec",["u32"]],["u32"],["sign"]],["bigint"]]],[11,"from_biguint",E,R[1740],1,[[["biguint"],["sign"]],["bigint"]]],[11,R[768],E,R[1740],1,[[["sign"]],["bigint"]]],[11,R[1746],E,"Reinitializes a `BigInt`.",1,[[["self"],["sign"]]]],[11,R[1747],E,R[1740],1,[[["sign"]],["bigint"]]],[11,R[1748],E,R[1740],1,[[["sign"]],["bigint"]]],[11,"from_signed_bytes_be",E,R[1741],1,[[],["bigint"]]],[11,"from_signed_bytes_le",E,R[1741],1,[[],["bigint"]]],[11,R[1749],E,R[1740],1,[[["u32"]],[["bigint"],["option",["bigint"]]]]],[11,R[1750],E,R[1742],1,[[["u32"],["sign"]],[["bigint"],["option",["bigint"]]]]],[11,R[1751],E,R[1742],1,[[["u32"],["sign"]],[["bigint"],["option",["bigint"]]]]],[11,R[1753],E,R[1743],1,[[["self"]]]],[11,R[1754],E,R[1743],1,[[["self"]]]],[11,R[1756],E,"Returns the sign and the u32 digits representation of the…",1,[[["self"]]]],[11,"to_signed_bytes_be",E,R[1744],1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_signed_bytes_le",E,R[1744],1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1757],E,R[1758],1,[[["u32"],["self"]],["string"]]],[11,R[1759],E,R[1760],1,[[["u32"],["self"]]]],[11,R[1761],E,R[1762],1,[[["u32"],["self"]]]],[11,"sign",E,"Returns the sign of the `BigInt` as a `Sign`.",1,[[["self"]],["sign"]]],[11,"bits",E,R[1763],1,[[["self"]],["usize"]]],[11,R[1767],E,"Converts this `BigInt` into a `BigUint`, if it's not…",1,[[["self"]],[["option",["biguint"]],["biguint"]]]],[11,R[1778],E,E,1,[[["bigint"],["self"]],[["bigint"],["option",["bigint"]]]]],[11,R[1779],E,E,1,[[["bigint"],["self"]],[["bigint"],["option",["bigint"]]]]],[11,R[1780],E,E,1,[[["bigint"],["self"]],[["bigint"],["option",["bigint"]]]]],[11,R[1781],E,E,1,[[["bigint"],["self"]],[["bigint"],["option",["bigint"]]]]],[11,"modpow",E,"Returns `(self ^ exponent) mod modulus`",1,[[["self"]],["self"]]],[11,"sqrt",E,R[1764],1,[[["self"]],["self"]]],[11,"cbrt",E,R[1765],1,[[["self"]],["self"]]],[11,"nth_root",E,R[1766],1,[[["u32"],["self"]],["self"]]],[11,"new",E,R[1745],2,[[["u32"],["vec",["u32"]]],["biguint"]]],[11,R[768],E,R[1745],2,[[],["biguint"]]],[11,R[1746],E,"Assign a value to a `BigUint`.",2,[[["self"]]]],[11,R[1747],E,R[1745],2,[[],["biguint"]]],[11,R[1748],E,R[1745],2,[[],["biguint"]]],[11,R[1749],E,"Creates and initializes a `BigUint`. The input slice must…",2,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,R[1750],E,R[1752],2,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,R[1751],E,R[1752],2,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,R[1753],E,R[1755],2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1754],E,R[1755],2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1756],E,"Returns the u32 digits representation of the `BigUint` in…",2,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,R[1757],E,R[1758],2,[[["u32"],["self"]],["string"]]],[11,R[1759],E,R[1760],2,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1761],E,R[1762],2,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"bits",E,R[1763],2,[[["self"]],["usize"]]],[11,"modpow",E,"Returns `(self ^ exponent) % modulus`.",2,[[["self"]],["self"]]],[11,"sqrt",E,R[1764],2,[[["self"]],["self"]]],[11,"cbrt",E,R[1765],2,[[["self"]],["self"]]],[11,"nth_root",E,R[1766],2,[[["u32"],["self"]],["self"]]],[8,"ToBigUint",E,"A generic trait for converting a value to a `BigUint`.",N,N],[10,R[1767],E,"Converts the value of `self` to a `BigUint`.",3,[[["self"]],[["option",["biguint"]],["biguint"]]]],[8,"ToBigInt",E,"A generic trait for converting a value to a `BigInt`. This…",N,N],[10,"to_bigint",E,"Converts the value of `self` to a `BigInt`.",4,[[["self"]],[["bigint"],["option",["bigint"]]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[["self"]],["string"]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[78],E,E,2,[[["self"]],["string"]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[["self"]],["string"]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"to_bigint",E,E,1,[[["self"]],[["bigint"],["option",["bigint"]]]]],[11,"to_bigint",E,E,2,[[["self"]],[["bigint"],["option",["bigint"]]]]],[11,R[1767],E,E,1,[[["self"]],[["option",["biguint"]],["biguint"]]]],[11,R[1767],E,E,2,[[["self"]],[["option",["biguint"]],["biguint"]]]],[11,"from",E,E,1,[[["i64"]],["self"]]],[11,"from",E,E,1,[[["i128"]],["self"]]],[11,"from",E,E,1,[[["i8"]],["self"]]],[11,"from",E,E,1,[[["i16"]],["self"]]],[11,"from",E,E,1,[[["i32"]],["self"]]],[11,"from",E,E,1,[[["isize"]],["self"]]],[11,"from",E,E,1,[[["u64"]],["self"]]],[11,"from",E,E,1,[[["u128"]],["self"]]],[11,"from",E,E,1,[[["u8"]],["self"]]],[11,"from",E,E,1,[[["u16"]],["self"]]],[11,"from",E,E,1,[[["u32"]],["self"]]],[11,"from",E,E,1,[[["usize"]],["self"]]],[11,"from",E,E,1,[[["biguint"]],["self"]]],[11,"from",E,E,2,[[["u64"]],["self"]]],[11,"from",E,E,2,[[["u128"]],["self"]]],[11,"from",E,E,2,[[["u8"]],["self"]]],[11,"from",E,E,2,[[["u16"]],["self"]]],[11,"from",E,E,2,[[["u32"]],["self"]]],[11,"from",E,E,2,[[["usize"]],["self"]]],[11,"clone",E,E,0,[[["self"]],["sign"]]],[11,"clone",E,E,1,[[["self"]],["bigint"]]],[11,"clone",E,E,2,[[["self"]],["biguint"]]],[11,"clone",E,E,5,[[["self"]],[R[1768]]]],[11,R[90],E,E,1,[[],["bigint"]]],[11,R[90],E,E,2,[[],["biguint"]]],[11,"cmp",E,E,0,[[["self"],["sign"]],[R[105]]]],[11,"cmp",E,E,1,[[["bigint"],["self"]],[R[105]]]],[11,"cmp",E,E,2,[[["biguint"],["self"]],[R[105]]]],[11,"eq",E,E,0,[[["self"],["sign"]],["bool"]]],[11,"eq",E,E,1,[[["bigint"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["biguint"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1768]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1768]]],["bool"]]],[11,R[106],E,E,0,[[["self"],["sign"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,1,[[["bigint"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,2,[[["biguint"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"div",E,E,1,[[["bigint"]],["bigint"]]],[11,"div",E,E,1,[[["bigint"]],["bigint"]]],[11,"div",E,E,1,[[["u8"]],["bigint"]]],[11,"div",E,E,1,[[["u8"]],["bigint"]]],[11,"div",E,E,1,[[["u16"]],["bigint"]]],[11,"div",E,E,1,[[["u16"]],["bigint"]]],[11,"div",E,E,1,[[["usize"]],["bigint"]]],[11,"div",E,E,1,[[["usize"]],["bigint"]]],[11,"div",E,E,1,[[["i8"]],["bigint"]]],[11,"div",E,E,1,[[["i8"]],["bigint"]]],[11,"div",E,E,1,[[["i16"]],["bigint"]]],[11,"div",E,E,1,[[["i16"]],["bigint"]]],[11,"div",E,E,1,[[["isize"]],["bigint"]]],[11,"div",E,E,1,[[["isize"]],["bigint"]]],[11,"div",E,E,1,[[["u32"]],["bigint"]]],[11,"div",E,E,1,[[["u64"]],["bigint"]]],[11,"div",E,E,1,[[["u128"]],["bigint"]]],[11,"div",E,E,1,[[["u32"]],["bigint"]]],[11,"div",E,E,1,[[["u64"]],["bigint"]]],[11,"div",E,E,1,[[["u128"]],["bigint"]]],[11,"div",E,E,1,[[["i32"]],["bigint"]]],[11,"div",E,E,1,[[["i64"]],["bigint"]]],[11,"div",E,E,1,[[["i128"]],["bigint"]]],[11,"div",E,E,1,[[["i32"]],["bigint"]]],[11,"div",E,E,1,[[["i64"]],["bigint"]]],[11,"div",E,E,1,[[["i128"]],["bigint"]]],[11,"div",E,E,2,[[["biguint"]],["biguint"]]],[11,"div",E,E,2,[[["biguint"]],["biguint"]]],[11,"div",E,E,2,[[["u8"]],["biguint"]]],[11,"div",E,E,2,[[["u8"]],["biguint"]]],[11,"div",E,E,2,[[["u16"]],["biguint"]]],[11,"div",E,E,2,[[["u16"]],["biguint"]]],[11,"div",E,E,2,[[["usize"]],["biguint"]]],[11,"div",E,E,2,[[["usize"]],["biguint"]]],[11,"div",E,E,2,[[["u32"]],["biguint"]]],[11,"div",E,E,2,[[["u64"]],["biguint"]]],[11,"div",E,E,2,[[["u128"]],["biguint"]]],[11,"div",E,E,2,[[["u32"]],["biguint"]]],[11,"div",E,E,2,[[["u64"]],["biguint"]]],[11,"div",E,E,2,[[["u128"]],["biguint"]]],[11,"rem",E,E,1,[[["bigint"]],["bigint"]]],[11,"rem",E,E,1,[[["bigint"]],["bigint"]]],[11,"rem",E,E,1,[[["u8"]],["bigint"]]],[11,"rem",E,E,1,[[["u8"]],["bigint"]]],[11,"rem",E,E,1,[[["u16"]],["bigint"]]],[11,"rem",E,E,1,[[["u16"]],["bigint"]]],[11,"rem",E,E,1,[[["usize"]],["bigint"]]],[11,"rem",E,E,1,[[["usize"]],["bigint"]]],[11,"rem",E,E,1,[[["i8"]],["bigint"]]],[11,"rem",E,E,1,[[["i8"]],["bigint"]]],[11,"rem",E,E,1,[[["i16"]],["bigint"]]],[11,"rem",E,E,1,[[["i16"]],["bigint"]]],[11,"rem",E,E,1,[[["isize"]],["bigint"]]],[11,"rem",E,E,1,[[["isize"]],["bigint"]]],[11,"rem",E,E,1,[[["u32"]],["bigint"]]],[11,"rem",E,E,1,[[["u64"]],["bigint"]]],[11,"rem",E,E,1,[[["u128"]],["bigint"]]],[11,"rem",E,E,1,[[["u32"]],["bigint"]]],[11,"rem",E,E,1,[[["u64"]],["bigint"]]],[11,"rem",E,E,1,[[["u128"]],["bigint"]]],[11,"rem",E,E,1,[[["i32"]],["bigint"]]],[11,"rem",E,E,1,[[["i64"]],["bigint"]]],[11,"rem",E,E,1,[[["i128"]],["bigint"]]],[11,"rem",E,E,1,[[["i32"]],["bigint"]]],[11,"rem",E,E,1,[[["i64"]],["bigint"]]],[11,"rem",E,E,1,[[["i128"]],["bigint"]]],[11,"rem",E,E,2,[[["biguint"]],["biguint"]]],[11,"rem",E,E,2,[[["biguint"]],["biguint"]]],[11,"rem",E,E,2,[[["u8"]],["biguint"]]],[11,"rem",E,E,2,[[["u8"]],["biguint"]]],[11,"rem",E,E,2,[[["u16"]],["biguint"]]],[11,"rem",E,E,2,[[["u16"]],["biguint"]]],[11,"rem",E,E,2,[[["usize"]],["biguint"]]],[11,"rem",E,E,2,[[["usize"]],["biguint"]]],[11,"rem",E,E,2,[[["u32"]],["biguint"]]],[11,"rem",E,E,2,[[["u32"]],["biguint"]]],[11,"rem",E,E,2,[[["u64"]],["biguint"]]],[11,"rem",E,E,2,[[["u128"]],["biguint"]]],[11,"rem",E,E,2,[[["u64"]],["biguint"]]],[11,"rem",E,E,2,[[["u128"]],["biguint"]]],[11,"sub",E,E,1,[[["bigint"]],["bigint"]]],[11,"sub",E,E,1,[[["bigint"]],["bigint"]]],[11,"sub",E,E,1,[[["u8"]],["bigint"]]],[11,"sub",E,E,1,[[["u8"]],["bigint"]]],[11,"sub",E,E,1,[[["u16"]],["bigint"]]],[11,"sub",E,E,1,[[["u16"]],["bigint"]]],[11,"sub",E,E,1,[[["usize"]],["bigint"]]],[11,"sub",E,E,1,[[["usize"]],["bigint"]]],[11,"sub",E,E,1,[[["i8"]],["bigint"]]],[11,"sub",E,E,1,[[["i8"]],["bigint"]]],[11,"sub",E,E,1,[[["i16"]],["bigint"]]],[11,"sub",E,E,1,[[["i16"]],["bigint"]]],[11,"sub",E,E,1,[[["isize"]],["bigint"]]],[11,"sub",E,E,1,[[["isize"]],["bigint"]]],[11,"sub",E,E,1,[[["u32"]],["bigint"]]],[11,"sub",E,E,1,[[["u64"]],["bigint"]]],[11,"sub",E,E,1,[[["u128"]],["bigint"]]],[11,"sub",E,E,1,[[["u32"]],["bigint"]]],[11,"sub",E,E,1,[[["u64"]],["bigint"]]],[11,"sub",E,E,1,[[["u128"]],["bigint"]]],[11,"sub",E,E,1,[[["i32"]],["bigint"]]],[11,"sub",E,E,1,[[["i64"]],["bigint"]]],[11,"sub",E,E,1,[[["i128"]],["bigint"]]],[11,"sub",E,E,1,[[["i32"]],["bigint"]]],[11,"sub",E,E,1,[[["i64"]],["bigint"]]],[11,"sub",E,E,1,[[["i128"]],["bigint"]]],[11,"sub",E,E,2,[[["biguint"]],["biguint"]]],[11,"sub",E,E,2,[[["biguint"]],["biguint"]]],[11,"sub",E,E,2,[[["u8"]],["biguint"]]],[11,"sub",E,E,2,[[["u8"]],["biguint"]]],[11,"sub",E,E,2,[[["u16"]],["biguint"]]],[11,"sub",E,E,2,[[["u16"]],["biguint"]]],[11,"sub",E,E,2,[[["usize"]],["biguint"]]],[11,"sub",E,E,2,[[["usize"]],["biguint"]]],[11,"sub",E,E,2,[[["u32"]],["biguint"]]],[11,"sub",E,E,2,[[["u64"]],["biguint"]]],[11,"sub",E,E,2,[[["u128"]],["biguint"]]],[11,"sub",E,E,2,[[["u32"]],["biguint"]]],[11,"sub",E,E,2,[[["u64"]],["biguint"]]],[11,"sub",E,E,2,[[["u128"]],["biguint"]]],[11,R[457],E,E,1,[[["str"]],[["bigint"],[R[1768]],[R[3],["bigint",R[1768]]]]]],[11,R[457],E,E,2,[[["str"]],[[R[3],["biguint",R[1768]]],["biguint"],[R[1768]]]]],[11,"add",E,E,1,[[["bigint"]],["bigint"]]],[11,"add",E,E,1,[[["bigint"]],["bigint"]]],[11,"add",E,E,1,[[["u8"]],["bigint"]]],[11,"add",E,E,1,[[["u8"]],["bigint"]]],[11,"add",E,E,1,[[["u16"]],["bigint"]]],[11,"add",E,E,1,[[["u16"]],["bigint"]]],[11,"add",E,E,1,[[["usize"]],["bigint"]]],[11,"add",E,E,1,[[["usize"]],["bigint"]]],[11,"add",E,E,1,[[["i8"]],["bigint"]]],[11,"add",E,E,1,[[["i8"]],["bigint"]]],[11,"add",E,E,1,[[["i16"]],["bigint"]]],[11,"add",E,E,1,[[["i16"]],["bigint"]]],[11,"add",E,E,1,[[["isize"]],["bigint"]]],[11,"add",E,E,1,[[["isize"]],["bigint"]]],[11,"add",E,E,1,[[["u32"]],["bigint"]]],[11,"add",E,E,1,[[["u64"]],["bigint"]]],[11,"add",E,E,1,[[["u128"]],["bigint"]]],[11,"add",E,E,1,[[["u32"]],["bigint"]]],[11,"add",E,E,1,[[["u64"]],["bigint"]]],[11,"add",E,E,1,[[["u128"]],["bigint"]]],[11,"add",E,E,1,[[["i32"]],["bigint"]]],[11,"add",E,E,1,[[["i64"]],["bigint"]]],[11,"add",E,E,1,[[["i128"]],["bigint"]]],[11,"add",E,E,1,[[["i32"]],["bigint"]]],[11,"add",E,E,1,[[["i64"]],["bigint"]]],[11,"add",E,E,1,[[["i128"]],["bigint"]]],[11,"add",E,E,2,[[["biguint"]],["biguint"]]],[11,"add",E,E,2,[[["biguint"]],["biguint"]]],[11,"add",E,E,2,[[["u8"]],["biguint"]]],[11,"add",E,E,2,[[["u8"]],["biguint"]]],[11,"add",E,E,2,[[["u16"]],["biguint"]]],[11,"add",E,E,2,[[["u16"]],["biguint"]]],[11,"add",E,E,2,[[["usize"]],["biguint"]]],[11,"add",E,E,2,[[["usize"]],["biguint"]]],[11,"add",E,E,2,[[["u32"]],["biguint"]]],[11,"add",E,E,2,[[["u64"]],["biguint"]]],[11,"add",E,E,2,[[["u128"]],["biguint"]]],[11,"add",E,E,2,[[["u32"]],["biguint"]]],[11,"add",E,E,2,[[["u64"]],["biguint"]]],[11,"add",E,E,2,[[["u128"]],["biguint"]]],[11,"mul",E,E,0,[[["sign"]],["sign"]]],[11,"mul",E,E,1,[[["bigint"]],["bigint"]]],[11,"mul",E,E,1,[[["bigint"]],["bigint"]]],[11,"mul",E,E,1,[[["u8"]],["bigint"]]],[11,"mul",E,E,1,[[["u8"]],["bigint"]]],[11,"mul",E,E,1,[[["u16"]],["bigint"]]],[11,"mul",E,E,1,[[["u16"]],["bigint"]]],[11,"mul",E,E,1,[[["usize"]],["bigint"]]],[11,"mul",E,E,1,[[["usize"]],["bigint"]]],[11,"mul",E,E,1,[[["i8"]],["bigint"]]],[11,"mul",E,E,1,[[["i8"]],["bigint"]]],[11,"mul",E,E,1,[[["i16"]],["bigint"]]],[11,"mul",E,E,1,[[["i16"]],["bigint"]]],[11,"mul",E,E,1,[[["isize"]],["bigint"]]],[11,"mul",E,E,1,[[["isize"]],["bigint"]]],[11,"mul",E,E,1,[[["u32"]],["bigint"]]],[11,"mul",E,E,1,[[["u64"]],["bigint"]]],[11,"mul",E,E,1,[[["u128"]],["bigint"]]],[11,"mul",E,E,1,[[["u32"]],["bigint"]]],[11,"mul",E,E,1,[[["u64"]],["bigint"]]],[11,"mul",E,E,1,[[["u128"]],["bigint"]]],[11,"mul",E,E,1,[[["i32"]],["bigint"]]],[11,"mul",E,E,1,[[["i64"]],["bigint"]]],[11,"mul",E,E,1,[[["i128"]],["bigint"]]],[11,"mul",E,E,1,[[["i32"]],["bigint"]]],[11,"mul",E,E,1,[[["i64"]],["bigint"]]],[11,"mul",E,E,1,[[["i128"]],["bigint"]]],[11,"mul",E,E,2,[[["biguint"]],["biguint"]]],[11,"mul",E,E,2,[[["biguint"]],["biguint"]]],[11,"mul",E,E,2,[[["u8"]],["biguint"]]],[11,"mul",E,E,2,[[["u8"]],["biguint"]]],[11,"mul",E,E,2,[[["u16"]],["biguint"]]],[11,"mul",E,E,2,[[["u16"]],["biguint"]]],[11,"mul",E,E,2,[[["usize"]],["biguint"]]],[11,"mul",E,E,2,[[["usize"]],["biguint"]]],[11,"mul",E,E,2,[[["u32"]],["biguint"]]],[11,"mul",E,E,2,[[["u64"]],["biguint"]]],[11,"mul",E,E,2,[[["u128"]],["biguint"]]],[11,"mul",E,E,2,[[["u32"]],["biguint"]]],[11,"mul",E,E,2,[[["u64"]],["biguint"]]],[11,"mul",E,E,2,[[["u128"]],["biguint"]]],[11,"neg",E,"Negate Sign value.",0,[[],["sign"]]],[11,"neg",E,E,1,[[],["bigint"]]],[11,"neg",E,E,2,[[],["biguint"]]],[11,R[423],E,E,1,[[["self"],["bigint"]]]],[11,R[423],E,E,1,[[["bigint"],["self"]]]],[11,R[423],E,E,1,[[["self"],["u8"]]]],[11,R[423],E,E,1,[[["u16"],["self"]]]],[11,R[423],E,E,1,[[["self"],["usize"]]]],[11,R[423],E,E,1,[[["self"],["i8"]]]],[11,R[423],E,E,1,[[["self"],["i16"]]]],[11,R[423],E,E,1,[[["isize"],["self"]]]],[11,R[423],E,E,1,[[["self"],["u32"]]]],[11,R[423],E,E,1,[[["self"],["u64"]]]],[11,R[423],E,E,1,[[["self"],["u128"]]]],[11,R[423],E,E,1,[[["self"],["i32"]]]],[11,R[423],E,E,1,[[["i64"],["self"]]]],[11,R[423],E,E,1,[[["self"],["i128"]]]],[11,R[423],E,E,2,[[["self"],["biguint"]]]],[11,R[423],E,E,2,[[["self"],["biguint"]]]],[11,R[423],E,E,2,[[["self"],["u8"]]]],[11,R[423],E,E,2,[[["u16"],["self"]]]],[11,R[423],E,E,2,[[["self"],["usize"]]]],[11,R[423],E,E,2,[[["self"],["u32"]]]],[11,R[423],E,E,2,[[["self"],["u64"]]]],[11,R[423],E,E,2,[[["self"],["u128"]]]],[11,R[463],E,E,1,[[["self"],["bigint"]]]],[11,R[463],E,E,1,[[["bigint"],["self"]]]],[11,R[463],E,E,1,[[["self"],["u8"]]]],[11,R[463],E,E,1,[[["u16"],["self"]]]],[11,R[463],E,E,1,[[["self"],["usize"]]]],[11,R[463],E,E,1,[[["self"],["i8"]]]],[11,R[463],E,E,1,[[["self"],["i16"]]]],[11,R[463],E,E,1,[[["isize"],["self"]]]],[11,R[463],E,E,1,[[["self"],["u32"]]]],[11,R[463],E,E,1,[[["self"],["u64"]]]],[11,R[463],E,E,1,[[["self"],["u128"]]]],[11,R[463],E,E,1,[[["self"],["i32"]]]],[11,R[463],E,E,1,[[["i64"],["self"]]]],[11,R[463],E,E,1,[[["self"],["i128"]]]],[11,R[463],E,E,2,[[["self"],["biguint"]]]],[11,R[463],E,E,2,[[["self"],["biguint"]]]],[11,R[463],E,E,2,[[["self"],["u8"]]]],[11,R[463],E,E,2,[[["u16"],["self"]]]],[11,R[463],E,E,2,[[["self"],["usize"]]]],[11,R[463],E,E,2,[[["self"],["u32"]]]],[11,R[463],E,E,2,[[["self"],["u64"]]]],[11,R[463],E,E,2,[[["self"],["u128"]]]],[11,R[476],E,E,1,[[["self"],["bigint"]]]],[11,R[476],E,E,1,[[["bigint"],["self"]]]],[11,R[476],E,E,1,[[["self"],["u8"]]]],[11,R[476],E,E,1,[[["u16"],["self"]]]],[11,R[476],E,E,1,[[["self"],["usize"]]]],[11,R[476],E,E,1,[[["self"],["i8"]]]],[11,R[476],E,E,1,[[["self"],["i16"]]]],[11,R[476],E,E,1,[[["isize"],["self"]]]],[11,R[476],E,E,1,[[["self"],["u32"]]]],[11,R[476],E,E,1,[[["self"],["u64"]]]],[11,R[476],E,E,1,[[["self"],["u128"]]]],[11,R[476],E,E,1,[[["self"],["i32"]]]],[11,R[476],E,E,1,[[["i64"],["self"]]]],[11,R[476],E,E,1,[[["self"],["i128"]]]],[11,R[476],E,E,2,[[["self"],["biguint"]]]],[11,R[476],E,E,2,[[["self"],["biguint"]]]],[11,R[476],E,E,2,[[["self"],["u8"]]]],[11,R[476],E,E,2,[[["u16"],["self"]]]],[11,R[476],E,E,2,[[["self"],["usize"]]]],[11,R[476],E,E,2,[[["self"],["u32"]]]],[11,R[476],E,E,2,[[["self"],["u64"]]]],[11,R[476],E,E,2,[[["self"],["u128"]]]],[11,R[421],E,E,1,[[["self"],["bigint"]]]],[11,R[421],E,E,1,[[["bigint"],["self"]]]],[11,R[421],E,E,1,[[["self"],["u8"]]]],[11,R[421],E,E,1,[[["u16"],["self"]]]],[11,R[421],E,E,1,[[["self"],["usize"]]]],[11,R[421],E,E,1,[[["self"],["i8"]]]],[11,R[421],E,E,1,[[["self"],["i16"]]]],[11,R[421],E,E,1,[[["isize"],["self"]]]],[11,R[421],E,E,1,[[["self"],["u32"]]]],[11,R[421],E,E,1,[[["self"],["u64"]]]],[11,R[421],E,E,1,[[["self"],["u128"]]]],[11,R[421],E,E,1,[[["self"],["i32"]]]],[11,R[421],E,E,1,[[["i64"],["self"]]]],[11,R[421],E,E,1,[[["self"],["i128"]]]],[11,R[421],E,E,2,[[["self"],["biguint"]]]],[11,R[421],E,E,2,[[["self"],["biguint"]]]],[11,R[421],E,E,2,[[["self"],["u8"]]]],[11,R[421],E,E,2,[[["u16"],["self"]]]],[11,R[421],E,E,2,[[["self"],["usize"]]]],[11,R[421],E,E,2,[[["self"],["u32"]]]],[11,R[421],E,E,2,[[["self"],["u64"]]]],[11,R[421],E,E,2,[[["self"],["u128"]]]],[11,R[462],E,E,1,[[["self"],["bigint"]]]],[11,R[462],E,E,1,[[["bigint"],["self"]]]],[11,R[462],E,E,1,[[["self"],["u8"]]]],[11,R[462],E,E,1,[[["u16"],["self"]]]],[11,R[462],E,E,1,[[["self"],["usize"]]]],[11,R[462],E,E,1,[[["self"],["i8"]]]],[11,R[462],E,E,1,[[["self"],["i16"]]]],[11,R[462],E,E,1,[[["isize"],["self"]]]],[11,R[462],E,E,1,[[["self"],["u32"]]]],[11,R[462],E,E,1,[[["self"],["u64"]]]],[11,R[462],E,E,1,[[["self"],["u128"]]]],[11,R[462],E,E,1,[[["self"],["i32"]]]],[11,R[462],E,E,1,[[["i64"],["self"]]]],[11,R[462],E,E,1,[[["self"],["i128"]]]],[11,R[462],E,E,2,[[["self"],["biguint"]]]],[11,R[462],E,E,2,[[["self"],["biguint"]]]],[11,R[462],E,E,2,[[["self"],["u8"]]]],[11,R[462],E,E,2,[[["u16"],["self"]]]],[11,R[462],E,E,2,[[["self"],["usize"]]]],[11,R[462],E,E,2,[[["self"],["u32"]]]],[11,R[462],E,E,2,[[["self"],["u64"]]]],[11,R[462],E,E,2,[[["self"],["u128"]]]],[11,"not",E,E,1,[[],["bigint"]]],[11,"bitand",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitand",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,2,[[["biguint"]],["biguint"]]],[11,"shl",E,E,1,[[["usize"]],["bigint"]]],[11,"shl",E,E,2,[[["usize"]],["biguint"]]],[11,"shr",E,E,1,[[["usize"]],["bigint"]]],[11,"shr",E,E,2,[[["usize"]],["biguint"]]],[11,R[458],E,E,1,[[["bigint"],["self"]]]],[11,R[458],E,E,1,[[["self"],["bigint"]]]],[11,R[458],E,E,2,[[["self"],["biguint"]]]],[11,R[458],E,E,2,[[["self"],["biguint"]]]],[11,R[473],E,E,1,[[["bigint"],["self"]]]],[11,R[473],E,E,1,[[["self"],["bigint"]]]],[11,R[473],E,E,2,[[["self"],["biguint"]]]],[11,R[473],E,E,2,[[["self"],["biguint"]]]],[11,R[496],E,E,1,[[["bigint"],["self"]]]],[11,R[496],E,E,1,[[["self"],["bigint"]]]],[11,R[496],E,E,2,[[["self"],["biguint"]]]],[11,R[496],E,E,2,[[["self"],["biguint"]]]],[11,R[456],E,E,1,[[["self"],["usize"]]]],[11,R[456],E,E,2,[[["self"],["usize"]]]],[11,R[435],E,E,1,[[["self"],["usize"]]]],[11,R[435],E,E,2,[[["self"],["usize"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"sum",E,E,1,[[["i"]],["self"]]],[11,"sum",E,E,2,[[["i"]],["self"]]],[11,R[424],E,E,1,[[["i"]],["self"]]],[11,R[424],E,E,2,[[["i"]],["self"]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,R[38],E,E,5,[[["self"]],["str"]]],[11,"nth_root",E,E,1,[[["u32"],["self"]],["self"]]],[11,"sqrt",E,E,1,[[["self"]],["self"]]],[11,"cbrt",E,E,1,[[["self"]],["self"]]],[11,"nth_root",E,E,2,[[["u32"],["self"]],["self"]]],[11,"sqrt",E,E,2,[[["self"]],["self"]]],[11,"cbrt",E,E,2,[[["self"]],["self"]]],[11,"div_rem",E,E,1,[[["bigint"],["self"]]]],[11,R[1783],E,E,1,[[["bigint"],["self"]],["bigint"]]],[11,R[1784],E,E,1,[[["bigint"],["self"]],["bigint"]]],[11,R[1584],E,E,1,[[["bigint"],["self"]]]],[11,"gcd",E,R[1769],1,[[["bigint"],["self"]],["bigint"]]],[11,"lcm",E,R[1770],1,[[["bigint"],["self"]],["bigint"]]],[11,"divides",E,R[1771],1,[[["bigint"],["self"]],["bool"]]],[11,R[1772],E,R[1773],1,[[["bigint"],["self"]],["bool"]]],[11,"is_even",E,R[1774],1,[[["self"]],["bool"]]],[11,"is_odd",E,R[1775],1,[[["self"]],["bool"]]],[11,"div_rem",E,E,2,[[["biguint"],["self"]]]],[11,R[1783],E,E,2,[[["biguint"],["self"]],["biguint"]]],[11,R[1784],E,E,2,[[["biguint"],["self"]],["biguint"]]],[11,R[1584],E,E,2,[[["biguint"],["self"]]]],[11,"gcd",E,R[1769],2,[[["self"]],["self"]]],[11,"lcm",E,R[1770],2,[[["biguint"],["self"]],["biguint"]]],[11,"divides",E,R[1771],2,[[["biguint"],["self"]],["bool"]]],[11,R[1772],E,R[1773],2,[[["biguint"],["self"]],["bool"]]],[11,"is_even",E,R[1774],2,[[["self"]],["bool"]]],[11,"is_odd",E,R[1775],2,[[["self"]],["bool"]]],[11,"to_i64",E,E,1,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_i128",E,E,1,[[["self"]],[["i128"],["option",["i128"]]]]],[11,"to_u64",E,E,1,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128",E,E,1,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32",E,E,1,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64",E,E,1,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"to_i64",E,E,2,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_i128",E,E,2,[[["self"]],[["i128"],["option",["i128"]]]]],[11,"to_u64",E,E,2,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128",E,E,2,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32",E,E,2,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64",E,E,2,[[["self"]],[["f64"],["option",["f64"]]]]],[11,R[2770],E,E,1,[[["i64"]],[["bigint"],["option",["bigint"]]]]],[11,R[2768],E,E,1,[[["i128"]],[["bigint"],["option",["bigint"]]]]],[11,R[2771],E,E,1,[[["u64"]],[["bigint"],["option",["bigint"]]]]],[11,R[2769],E,E,1,[[["u128"]],[["bigint"],["option",["bigint"]]]]],[11,R[2772],E,E,1,[[["f64"]],[["bigint"],["option",["bigint"]]]]],[11,R[2770],E,E,2,[[["i64"]],[["option",["biguint"]],["biguint"]]]],[11,R[2768],E,E,2,[[["i128"]],[["option",["biguint"]],["biguint"]]]],[11,R[2771],E,E,2,[[["u64"]],[["option",["biguint"]],["biguint"]]]],[11,R[2769],E,E,2,[[["u128"]],[["option",["biguint"]],["biguint"]]]],[11,R[2772],E,E,2,[[["f64"]],[["option",["biguint"]],["biguint"]]]],[11,R[1777],E,R[1776],1,[[["str"],["u32"]],[["bigint"],[R[1768]],[R[3],["bigint",R[1768]]]]]],[11,R[1777],E,R[1745],2,[[["str"],["u32"]],[[R[3],["biguint",R[1768]]],["biguint"],[R[1768]]]]],[11,"zero",E,E,1,[[],["bigint"]]],[11,"set_zero",E,E,1,[[["self"]]]],[11,"is_zero",E,E,1,[[["self"]],["bool"]]],[11,"zero",E,E,2,[[],["biguint"]]],[11,"set_zero",E,E,2,[[["self"]]]],[11,"is_zero",E,E,2,[[["self"]],["bool"]]],[11,"one",E,E,1,[[],["bigint"]]],[11,"set_one",E,E,1,[[["self"]]]],[11,"is_one",E,E,1,[[["self"]],["bool"]]],[11,"one",E,E,2,[[],["biguint"]]],[11,"set_one",E,E,2,[[["self"]]]],[11,"is_one",E,E,2,[[["self"]],["bool"]]],[11,R[1778],E,E,1,[[["bigint"],["self"]],[["bigint"],["option",["bigint"]]]]],[11,R[1778],E,E,2,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,R[1779],E,E,1,[[["bigint"],["self"]],[["bigint"],["option",["bigint"]]]]],[11,R[1779],E,E,2,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,R[1780],E,E,1,[[["bigint"],["self"]],[["bigint"],["option",["bigint"]]]]],[11,R[1780],E,E,2,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,R[1781],E,E,1,[[["bigint"],["self"]],[["bigint"],["option",["bigint"]]]]],[11,R[1781],E,E,2,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,"abs",E,E,1,[[["self"]],["bigint"]]],[11,"abs_sub",E,E,1,[[["bigint"],["self"]],["bigint"]]],[11,"signum",E,E,1,[[["self"]],["bigint"]]],[11,R[563],E,E,1,[[["self"]],["bool"]]],[11,R[565],E,E,1,[[["self"]],["bool"]]]],"p":[[4,"Sign"],[3,"BigInt"],[3,"BigUint"],[8,"ToBigUint"],[8,"ToBigInt"],[3,R[1782]]]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","i":[[3,R[1586],"num_integer","Greatest common divisor and Bézout coefficients",N,N],[12,"gcd",E,E,0,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[3,R[1587],E,"An iterator over binomial coefficients.",N,N],[5,"cbrt",E,R[1583],N,[[["roots"]],["roots"]]],[5,"nth_root",E,R[1581],N,[[["u32"],["roots"]],["roots"]]],[5,"sqrt",E,R[1582],N,[[["roots"]],["roots"]]],[5,"div_rem",E,"Simultaneous integer division and modulus",N,[[["integer"]]]],[5,R[1783],E,"Floored integer division",N,[[["integer"]],["integer"]]],[5,R[1784],E,"Floored integer modulus",N,[[["integer"]],["integer"]]],[5,R[1584],E,"Simultaneous floored integer division and modulus",N,[[["integer"]]]],[5,"div_ceil",E,"Ceiled integer division",N,[[["integer"]],["integer"]]],[5,"gcd",E,R[1769],N,[[["integer"]],["integer"]]],[5,"lcm",E,R[1770],N,[[["integer"]],["integer"]]],[5,"gcd_lcm",E,"Calculates the Greatest Common Divisor (GCD) and Lowest…",N,[[["integer"]]]],[5,"binomial",E,"Calculate the binomial coefficient.",N,[[["clone"],["integer"]],[["clone"],["integer"]]]],[5,"multinomial",E,"Calculate the multinomial coefficient.",N,[[],[["clone"],["integer"]]]],[8,"Roots",E,"Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root",E,R[1581],1,[[["u32"],["self"]],["self"]]],[11,"sqrt",E,R[1582],1,[[["self"]],["self"]]],[11,"cbrt",E,R[1583],1,[[["self"]],["self"]]],[8,"Integer",E,E,N,N],[10,R[1783],E,"Floored integer division.",2,[[["self"]],["self"]]],[10,R[1784],E,"Floored integer modulo, satisfying:",2,[[["self"]],["self"]]],[11,"div_ceil",E,"Ceiled integer division.",2,[[["self"]],["self"]]],[10,"gcd",E,"Greatest Common Divisor (GCD).",2,[[["self"]],["self"]]],[10,"lcm",E,"Lowest Common Multiple (LCM).",2,[[["self"]],["self"]]],[11,"gcd_lcm",E,"Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[["self"]]]],[11,"extended_gcd",E,"Greatest common divisor and Bézout coefficients.",2,[[["self"]],[R[1585]]]],[11,"extended_gcd_lcm",E,"Greatest common divisor, least common multiple, and Bézout…",2,[[["self"]]]],[10,"divides",E,R[1771],2,[[["self"]],["bool"]]],[10,R[1772],E,"Returns `true` if `self` is a multiple of `other`.",2,[[["self"]],["bool"]]],[10,"is_even",E,"Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd",E,"Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem",E,"Simultaneous truncated integer division and modulus.…",2,[[["self"]]]],[11,R[1584],E,"Simultaneous floored integer division and modulus. Returns…",2,[[["self"]]]],[11,"next_multiple_of",E,"Rounds up to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"prev_multiple_of",E,"Rounds down to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"new",E,"For a given n, iterate over all binomial coefficients…",3,[[[T]],["iterbinomial"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[211],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"eq",E,E,0,[[["self"],[R[1585]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1585]]],["bool"]]],[11,"next",E,E,3,[[["self"]],["option"]]],[11,"clone",E,E,0,[[["self"]],[R[1585]]]],[11,"sqrt",E,R[1582],1,[[["self"]],["self"]]],[11,"cbrt",E,R[1583],1,[[["self"]],["self"]]]],"p":[[3,R[1586]],[8,"Roots"],[8,"Integer"],[3,R[1587]]]};
searchIndex["num_rational"]={"doc":"Rational numbers","i":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",N,N],[3,R[2774],E,E,N,N],[6,"Rational",E,"Alias for a `Ratio` of machine-sized integers.",N,N],[6,"Rational32",E,"Alias for a `Ratio` of 32-bit-sized integers.",N,N],[6,"Rational64",E,"Alias for a `Ratio` of 64-bit-sized integers.",N,N],[6,"BigRational",E,"Alias for arbitrary precision rationals.",N,N],[11,"new",E,"Creates a new `Ratio`. Fails if `denom` is zero.",0,[[[T]],["ratio"]]],[11,"from_integer",E,"Creates a `Ratio` representing the integer `t`.",0,[[[T]],["ratio"]]],[11,"new_raw",E,"Creates a `Ratio` without checking for `denom == 0` or…",0,[[[T]],["ratio"]]],[11,"to_integer",E,"Converts to an integer, rounding towards zero.",0,[[["self"]],[T]]],[11,"numer",E,"Gets an immutable reference to the numerator.",0,[[["self"]],[T]]],[11,"denom",E,"Gets an immutable reference to the denominator.",0,[[["self"]],[T]]],[11,"is_integer",E,"Returns true if the rational number is an integer…",0,[[["self"]],["bool"]]],[11,"reduced",E,"Returns a reduced copy of self.",0,[[["self"]],["ratio"]]],[11,"recip",E,"Returns the reciprocal.",0,[[["self"]],["ratio"]]],[11,"floor",E,"Rounds towards minus infinity.",0,[[["self"]],["ratio"]]],[11,"ceil",E,"Rounds towards plus infinity.",0,[[["self"]],["ratio"]]],[11,"round",E,"Rounds to the nearest integer. Rounds half-way cases away…",0,[[["self"]],["ratio"]]],[11,"trunc",E,"Rounds towards zero.",0,[[["self"]],["ratio"]]],[11,"fract",E,"Returns the fractional part of a number, with division…",0,[[["self"]],["ratio"]]],[11,"pow",E,"Raises the `Ratio` to the power of an exponent.",0,[[["self"],["i32"]],["ratio"]]],[11,R[2840],E,"Converts a float into a rational number.",0,[[["floatcore"]],[[R[2766]],["option",[R[2766]]]]]],[11,"approximate_float",E,E,0,[[["numcast"],["floatcore"]],[["ratio"],["option",["ratio"]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[78],E,E,1,[[["self"]],["string"]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],["ratio"]]],[11,"from",E,E,0,[[],["ratio"]]],[11,"fmt",E,"Renders as `numer/denom`. If denom=1, renders as numer.",0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[2767]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2767]]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[105]]]],[11,R[106],E,E,0,[[["self"]],[[R[105]],["option",[R[105]]]]]],[11,R[457],E,"Parses `numer/denom` or just `numer`.",0,[[["str"]],[[R[2767]],[R[3],["ratio",R[2767]]],["ratio"]]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"neg",E,E,0,[[],["ratio"]]],[11,R[423],E,E,0,[[["self"],["ratio"]]]],[11,R[423],E,E,0,[[["self"],[T]]]],[11,R[423],E,E,0,[[["ratio"],["self"]]]],[11,R[423],E,E,0,[[["self"],[T]]]],[11,R[463],E,E,0,[[["self"],["ratio"]]]],[11,R[463],E,E,0,[[["self"],[T]]]],[11,R[463],E,E,0,[[["ratio"],["self"]]]],[11,R[463],E,E,0,[[["self"],[T]]]],[11,R[476],E,E,0,[[["self"],["ratio"]]]],[11,R[476],E,E,0,[[["self"],[T]]]],[11,R[476],E,E,0,[[["ratio"],["self"]]]],[11,R[476],E,E,0,[[["self"],[T]]]],[11,R[421],E,E,0,[[["self"],["ratio"]]]],[11,R[421],E,E,0,[[["self"],[T]]]],[11,R[421],E,E,0,[[["ratio"],["self"]]]],[11,R[421],E,E,0,[[["self"],[T]]]],[11,R[462],E,E,0,[[["self"],["ratio"]]]],[11,R[462],E,E,0,[[["self"],[T]]]],[11,R[462],E,E,0,[[["ratio"],["self"]]]],[11,R[462],E,E,0,[[["self"],[T]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,R[424],E,E,0,[[["i"]],["self"]]],[11,R[424],E,E,0,[[["i"]],["self"]]],[11,"into",E,E,0,[[]]],[11,"clone",E,E,0,[[["self"]],["ratio"]]],[11,"clone",E,E,1,[[["self"]],[R[2767]]]],[11,R[1778],E,E,0,[[["ratio"],["self"]],[["ratio"],["option",["ratio"]]]]],[11,R[1781],E,E,0,[[["ratio"],["self"]],[["ratio"],["option",["ratio"]]]]],[11,R[1780],E,E,0,[[["ratio"],["self"]],[["ratio"],["option",["ratio"]]]]],[11,R[1779],E,E,0,[[["ratio"],["self"]],[["ratio"],["option",["ratio"]]]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[2770],E,E,0,[[["i64"]],["option"]]],[11,R[2768],E,E,0,[[["i128"]],["option"]]],[11,R[2771],E,E,0,[[["u64"]],["option"]]],[11,R[2769],E,E,0,[[["u128"]],["option"]]],[11,R[2773],E,E,0,[[["f32"]],["option"]]],[11,R[2772],E,E,0,[[["f64"]],["option"]]],[11,R[1777],E,"Parses `numer/denom` where the numbers are in base `radix`.",0,[[["str"],["u32"]],[[R[2767]],[R[3],["ratio",R[2767]]],["ratio"]]]],[11,"one",E,E,0,[[],["ratio"]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,"set_one",E,E,0,[[["self"]]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[["usize"]],["ratio"]]],[11,"pow",E,E,0,[[["usize"]],["ratio"]]],[11,"abs",E,E,0,[[["self"]],["ratio"]]],[11,"abs_sub",E,E,0,[[["ratio"],["self"]],["ratio"]]],[11,"signum",E,E,0,[[["self"]],["ratio"]]],[11,R[563],E,E,0,[[["self"]],["bool"]]],[11,R[565],E,E,0,[[["self"]],["bool"]]],[11,"zero",E,E,0,[[],["ratio"]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,"set_zero",E,E,0,[[["self"]]]],[11,"inv",E,E,0,[[],["ratio"]]],[11,R[38],E,E,1,[[["self"]],["str"]]]],"p":[[3,"Ratio"],[3,R[2774]]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","i":[[3,R[687],R[1414],E,N,N],[12,"kind",E,E,0,N],[4,R[1480],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,"A value bounded by a minimum and a maximum",N,[[[R[1413]]],[R[1413]]]],[5,"clamp_min",E,"A value bounded by a minimum value",N,[[[R[1413]]],[R[1413]]]],[5,"clamp_max",E,"A value bounded by a maximum value",N,[[[R[1413]]],[R[1413]]]],[0,"bounds",E,E,N,N],[8,"Bounded","num_traits::bounds",R[3559],N,N],[10,R[534],E,R[3560],2,[[],["self"]]],[10,R[536],E,R[3561],2,[[],["self"]]],[0,"cast",R[1414],E,N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["numcast"]],[["option"],["numcast"]]]],[8,R[1481],E,"A generic trait for converting a value to a number.",N,N],[11,R[1402],E,"Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["option",["isize"]],["isize"]]]],[11,"to_i8",E,"Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16",E,"Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["i16"],["option",["i16"]]]]],[11,"to_i32",E,"Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64",E,"Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_i128",E,"Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["i128"],["option",["i128"]]]]],[11,"to_usize",E,"Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"to_u8",E,"Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16",E,"Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32",E,"Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64",E,"Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128",E,"Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_f32",E,"Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64",E,"Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["f64"],["option",["f64"]]]]],[8,R[1482],E,"A generic trait for converting a number to a value.",N,N],[11,"from_isize",E,"Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8",E,"Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16",E,"Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32",E,"Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,R[2770],E,"Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,R[2768],E,"Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize",E,"Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8",E,"Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16",E,"Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32",E,"Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,R[2771],E,"Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,R[2769],E,"Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,R[2773],E,"Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,R[2772],E,"Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast",E,"An interface for casting between machine scalars.",N,N],[10,"from",E,"Creates a number from another value that can be converted…",5,[[["toprimitive"]],["option"]]],[8,R[1483],E,"A generic interface for casting between machine scalars…",N,N],[10,"as_",E,"Convert a value to another, using the `as` operator.",6,[[],[T]]],[0,"float",R[1414],E,N,N],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",N,N],[10,"infinity",E,"Returns positive infinity.",7,[[],["self"]]],[10,R[1415],E,"Returns negative infinity.",7,[[],["self"]]],[10,"nan",E,"Returns NaN.",7,[[],["self"]]],[10,"neg_zero",E,R[1416],7,[[],["self"]]],[10,R[534],E,R[1417],7,[[],["self"]]],[10,R[1418],E,R[1419],7,[[],["self"]]],[10,"epsilon",E,R[1420],7,[[],["self"]]],[10,R[536],E,R[1421],7,[[],["self"]]],[11,"is_nan",E,"Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,R[1422],E,"Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite",E,"Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal",E,R[1423],7,[[],["bool"]]],[10,"classify",E,R[1424],7,[[],[R[486]]]],[11,"floor",E,R[1425],7,[[],["self"]]],[11,"ceil",E,R[1426],7,[[],["self"]]],[11,"round",E,R[1427],7,[[],["self"]]],[11,"trunc",E,R[1428],7,[[],["self"]]],[11,"fract",E,R[1429],7,[[],["self"]]],[11,"abs",E,R[1430],7,[[],["self"]]],[11,"signum",E,R[1431],7,[[],["self"]]],[11,R[1432],E,"Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,R[1433],E,"Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min",E,R[1436],7,[[],["self"]]],[11,"max",E,R[1435],7,[[],["self"]]],[11,"recip",E,"Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi",E,R[1434],7,[[["i32"]],["self"]]],[10,R[1455],E,"Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,R[1457],E,"Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,R[1437],E,R[1438],7,[[]]],[8,"Float",E,"Generic trait for floating point numbers",N,N],[10,"nan",E,"Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity",E,"Returns the infinite value.",8,[[],["self"]]],[10,R[1415],E,"Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero",E,R[1416],8,[[],["self"]]],[10,R[534],E,R[1417],8,[[],["self"]]],[10,R[1418],E,R[1419],8,[[],["self"]]],[11,"epsilon",E,R[1420],8,[[],["self"]]],[10,R[536],E,R[1421],8,[[],["self"]]],[10,"is_nan",E,"Returns `true` if this value is `NaN` and false otherwise.",8,[[],["bool"]]],[10,R[1422],E,"Returns `true` if this value is positive infinity or…",8,[[],["bool"]]],[10,"is_finite",E,"Returns `true` if this number is neither infinite nor `NaN`.",8,[[],["bool"]]],[10,"is_normal",E,R[1423],8,[[],["bool"]]],[10,"classify",E,R[1424],8,[[],[R[486]]]],[10,"floor",E,R[1425],8,[[],["self"]]],[10,"ceil",E,R[1426],8,[[],["self"]]],[10,"round",E,R[1427],8,[[],["self"]]],[10,"trunc",E,R[1428],8,[[],["self"]]],[10,"fract",E,R[1429],8,[[],["self"]]],[10,"abs",E,R[1430],8,[[],["self"]]],[10,"signum",E,R[1431],8,[[],["self"]]],[10,R[1432],E,R[1445],8,[[],["bool"]]],[10,R[1433],E,R[1446],8,[[],["bool"]]],[10,"mul_add",E,R[1442],8,[[],["self"]]],[10,"recip",E,R[1447],8,[[],["self"]]],[10,"powi",E,R[1434],8,[[["i32"]],["self"]]],[10,"powf",E,"Raise a number to a floating point power.",8,[[],["self"]]],[10,"sqrt",E,R[1448],8,[[],["self"]]],[10,"exp",E,R[1449],8,[[],["self"]]],[10,"exp2",E,R[1450],8,[[],["self"]]],[10,"ln",E,R[1451],8,[[],["self"]]],[10,"log",E,R[1452],8,[[],["self"]]],[10,"log2",E,R[1453],8,[[],["self"]]],[10,"log10",E,R[1454],8,[[],["self"]]],[11,R[1455],E,R[1456],8,[[],["self"]]],[11,R[1457],E,R[1458],8,[[],["self"]]],[10,"max",E,R[1435],8,[[],["self"]]],[10,"min",E,R[1436],8,[[],["self"]]],[10,"abs_sub",E,R[1459],8,[[],["self"]]],[10,"cbrt",E,R[1460],8,[[],["self"]]],[10,"hypot",E,R[1461],8,[[],["self"]]],[10,"sin",E,R[1462],8,[[],["self"]]],[10,"cos",E,R[1463],8,[[],["self"]]],[10,"tan",E,R[1464],8,[[],["self"]]],[10,"asin",E,R[1465],8,[[],["self"]]],[10,"acos",E,R[1466],8,[[],["self"]]],[10,"atan",E,R[1467],8,[[],["self"]]],[10,"atan2",E,R[1468],8,[[],["self"]]],[10,"sin_cos",E,R[1469],8,[[]]],[10,"exp_m1",E,R[1470],8,[[],["self"]]],[10,"ln_1p",E,R[1471],8,[[],["self"]]],[10,"sinh",E,R[1472],8,[[],["self"]]],[10,"cosh",E,R[1473],8,[[],["self"]]],[10,"tanh",E,R[1474],8,[[],["self"]]],[10,"asinh",E,R[1475],8,[[],["self"]]],[10,"acosh",E,R[1476],8,[[],["self"]]],[10,"atanh",E,R[1477],8,[[],["self"]]],[10,R[1437],E,R[1438],8,[[]]],[8,"FloatConst",E,E,N,N],[10,"E",E,"Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI",E,"Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2",E,"Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI",E,"Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI",E,"Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2",E,"Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3",E,"Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4",E,"Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6",E,"Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8",E,"Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10",E,"Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2",E,"Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E",E,"Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E",E,"Return `log2(e)`.",9,[[],["self"]]],[10,"PI",E,"Return Archimedes’ constant.",9,[[],["self"]]],[10,"SQRT_2",E,"Return `sqrt(2.0)`.",9,[[],["self"]]],[0,"identities",R[1414],E,N,N],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",N,[[],["zero"]]],[5,"one",E,"Returns the multiplicative identity, `1`.",N,[[],["one"]]],[8,"Zero",E,R[3551],N,N],[10,"zero",E,R[3552],10,[[],["self"]]],[11,"set_zero",E,R[3553],10,[[["self"]]]],[10,"is_zero",E,R[3554],10,[[["self"]],["bool"]]],[8,"One",E,R[3555],N,N],[10,"one",E,R[3556],11,[[],["self"]]],[11,"set_one",E,R[3557],11,[[["self"]]]],[11,"is_one",E,R[3558],11,[[["self"]],["bool"]]],[0,"int",R[1414],E,N,N],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",N,N],[10,R[538],E,R[539],12,[[],["u32"]]],[10,R[540],E,R[541],12,[[],["u32"]]],[10,R[559],E,R[560],12,[[],["u32"]]],[10,R[542],E,R[543],12,[[],["u32"]]],[10,R[544],E,R[1439],12,[[["u32"]],["self"]]],[10,R[546],E,R[1440],12,[[["u32"]],["self"]]],[10,"signed_shl",E,R[1439],12,[[["u32"]],["self"]]],[10,"signed_shr",E,R[1440],12,[[["u32"]],["self"]]],[10,"unsigned_shl",E,R[1439],12,[[["u32"]],["self"]]],[10,"unsigned_shr",E,R[1440],12,[[["u32"]],["self"]]],[10,R[548],E,R[549],12,[[],["self"]]],[10,R[557],E,"Convert an integer from big endian to the target's…",12,[[],["self"]]],[10,R[558],E,"Convert an integer from little endian to the target's…",12,[[],["self"]]],[10,"to_be",E,"Convert `self` to big endian from the target's endianness.",12,[[],["self"]]],[10,"to_le",E,"Convert `self` to little endian from the target's…",12,[[],["self"]]],[10,"pow",E,R[556],12,[[["u32"]],["self"]]],[0,"ops",R[1414],E,N,N],[0,"checked",R[1441],E,N,N],[8,R[3562],"num_traits::ops::checked",R[3563],N,N],[10,R[1778],E,R[3564],13,[[["self"]],["option"]]],[8,R[3565],E,R[3566],N,N],[10,R[1779],E,R[3567],14,[[["self"]],["option"]]],[8,R[3568],E,R[3569],N,N],[10,R[1780],E,R[3570],15,[[["self"]],["option"]]],[8,R[3571],E,R[3572],N,N],[10,R[1781],E,R[3573],16,[[["self"]],["option"]]],[8,"CheckedRem",E,"Performs an integral remainder that returns `None` instead…",N,N],[10,R[3618],E,"Finds the remainder of dividing two numbers, checking for…",17,[[["self"]],["option"]]],[8,"CheckedNeg",E,"Performs negation that returns `None` if the result can't…",N,N],[10,R[3619],E,"Negates a number, returning `None` for results that can't…",18,[[["self"]],["option"]]],[8,R[3574],E,R[3575],N,N],[10,R[3576],E,R[3577],19,[[["u32"],["self"]],["option"]]],[8,R[3578],E,R[3579],N,N],[10,R[3580],E,R[3581],20,[[["u32"],["self"]],["option"]]],[0,"inv",R[1441],E,N,N],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",N,N],[16,"Output",E,R[1444],21,N],[10,"inv",E,"Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add",R[1441],E,N,N],[8,"MulAdd","num_traits::ops::mul_add",R[1442],N,N],[16,"Output",E,"The resulting type after applying the fused multiply-add.",22,N],[10,"mul_add",E,R[1443],22,[[["a"],["b"]]]],[8,R[1484],E,"The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign",E,R[1443],23,[[["a"],["self"],["b"]]]],[0,"saturating",R[1441],E,N,N],[8,R[3582],"num_traits::ops::saturating","Saturating math operations",N,N],[10,R[3583],E,"Saturating addition operator. Returns a+b, saturating at…",24,[[],["self"]]],[10,R[3584],E,"Saturating subtraction operator. Returns a-b, saturating…",24,[[],["self"]]],[0,R[422],R[1441],E,N,N],[8,R[1485],"num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add",E,"Wrapping (modular) addition. Computes `self + other`,…",25,[[["self"]],["self"]]],[8,R[1486],E,"Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub",E,"Wrapping (modular) subtraction. Computes `self - other`,…",26,[[["self"]],["self"]]],[8,R[1487],E,"Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul",E,"Wrapping (modular) multiplication. Computes `self *…",27,[[["self"]],["self"]]],[8,R[1488],E,"Performs a left shift that does not panic.",N,N],[10,"wrapping_shl",E,"Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["u32"],["self"]],["self"]]],[8,R[1489],E,"Performs a right shift that does not panic.",N,N],[10,"wrapping_shr",E,"Panic-free bitwise shift-right; yields `self >>…",29,[[["u32"],["self"]],["self"]]],[0,"pow",R[1414],E,N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",N,[[["clone"],["mul"],["usize"],["one"]],[["clone"],["mul"],["one"]]]],[5,"checked_pow",E,"Raises a value to the power of exp, returning `None` if an…",N,[[["clone"],["checkedmul"],["one"],["usize"]],[["option"],["clone"],["checkedmul"],["one"]]]],[8,"Pow",E,"Binary operator for raising a value to a power.",N,N],[16,"Output",E,R[1444],30,N],[10,"pow",E,"Returns `self` to the power `rhs`.",30,[[["rhs"]]]],[0,"real",R[1414],E,N,N],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",N,N],[10,R[534],E,R[1417],31,[[],["self"]]],[10,R[1418],E,R[1419],31,[[],["self"]]],[10,"epsilon",E,R[1420],31,[[],["self"]]],[10,R[536],E,R[1421],31,[[],["self"]]],[10,"floor",E,R[1425],31,[[],["self"]]],[10,"ceil",E,R[1426],31,[[],["self"]]],[10,"round",E,R[1427],31,[[],["self"]]],[10,"trunc",E,R[1428],31,[[],["self"]]],[10,"fract",E,R[1429],31,[[],["self"]]],[10,"abs",E,R[1430],31,[[],["self"]]],[10,"signum",E,R[1431],31,[[],["self"]]],[10,R[1432],E,R[1445],31,[[],["bool"]]],[10,R[1433],E,R[1446],31,[[],["bool"]]],[10,"mul_add",E,R[1442],31,[[],["self"]]],[10,"recip",E,R[1447],31,[[],["self"]]],[10,"powi",E,R[1434],31,[[["i32"]],["self"]]],[10,"powf",E,"Raise a number to a real number power.",31,[[],["self"]]],[10,"sqrt",E,R[1448],31,[[],["self"]]],[10,"exp",E,R[1449],31,[[],["self"]]],[10,"exp2",E,R[1450],31,[[],["self"]]],[10,"ln",E,R[1451],31,[[],["self"]]],[10,"log",E,R[1452],31,[[],["self"]]],[10,"log2",E,R[1453],31,[[],["self"]]],[10,"log10",E,R[1454],31,[[],["self"]]],[10,R[1455],E,R[1456],31,[[],["self"]]],[10,R[1457],E,R[1458],31,[[],["self"]]],[10,"max",E,R[1435],31,[[],["self"]]],[10,"min",E,R[1436],31,[[],["self"]]],[10,"abs_sub",E,R[1459],31,[[],["self"]]],[10,"cbrt",E,R[1460],31,[[],["self"]]],[10,"hypot",E,R[1461],31,[[],["self"]]],[10,"sin",E,R[1462],31,[[],["self"]]],[10,"cos",E,R[1463],31,[[],["self"]]],[10,"tan",E,R[1464],31,[[],["self"]]],[10,"asin",E,R[1465],31,[[],["self"]]],[10,"acos",E,R[1466],31,[[],["self"]]],[10,"atan",E,R[1467],31,[[],["self"]]],[10,"atan2",E,R[1468],31,[[],["self"]]],[10,"sin_cos",E,R[1469],31,[[]]],[10,"exp_m1",E,R[1470],31,[[],["self"]]],[10,"ln_1p",E,R[1471],31,[[],["self"]]],[10,"sinh",E,R[1472],31,[[],["self"]]],[10,"cosh",E,R[1473],31,[[],["self"]]],[10,"tanh",E,R[1474],31,[[],["self"]]],[10,"asinh",E,R[1475],31,[[],["self"]]],[10,"acosh",E,R[1476],31,[[],["self"]]],[10,"atanh",E,R[1477],31,[[],["self"]]],[0,"sign",R[1414],E,N,N],[5,"abs","num_traits::sign",R[1478],N,[[["signed"]],["signed"]]],[5,"abs_sub",E,R[1459],N,[[["signed"]],["signed"]]],[5,"signum",E,R[1479],N,[[["signed"]],["signed"]]],[8,"Signed",E,"Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs",E,R[1478],32,[[["self"]],["self"]]],[10,"abs_sub",E,R[1459],32,[[["self"]],["self"]]],[10,"signum",E,R[1479],32,[[["self"]],["self"]]],[10,R[563],E,"Returns true if the number is positive and false if the…",32,[[["self"]],["bool"]]],[10,R[565],E,"Returns true if the number is negative and false if the…",32,[[["self"]],["bool"]]],[8,"Unsigned",E,"A trait for values which cannot be negative",N,N],[8,"Num",R[1414],"The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr",E,E,33,N],[10,R[1777],E,"Convert from a string and radix <= 36.",33,[[["str"],["u32"]],[R[3]]]],[8,"NumOps",E,"The trait for types implementing basic numeric operations",N,N],[8,"NumRef",E,"The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum",E,"The trait for references which implement numeric…",N,N],[8,"NumAssignOps",E,"The trait for types implementing numeric assignment…",N,N],[8,"NumAssign",E,"The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef",E,"The trait for `NumAssign` types which also implement…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]]],"p":[[3,R[687]],[4,R[1480]],[8,"Bounded"],[8,R[1481]],[8,R[1482]],[8,"NumCast"],[8,R[1483]],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,R[3562]],[8,R[3565]],[8,R[3568]],[8,R[3571]],[8,"CheckedRem"],[8,"CheckedNeg"],[8,R[3574]],[8,R[3578]],[8,"Inv"],[8,"MulAdd"],[8,R[1484]],[8,R[3582]],[8,R[1485]],[8,R[1486]],[8,R[1487]],[8,R[1488]],[8,R[1489]],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["once_cell"]={"doc":"Overview","i":[[0,"unsync",R[298],E,N,N],[3,R[310],R[307],"A cell which can be written to only once. Not thread safe.",N,N],[3,"Lazy",E,R[299],N,N],[18,"INIT",E,R[2894],0,N],[11,"new",E,R[300],0,[[],[R[309]]]],[11,"get",E,R[301],0,[[["self"]],[[T],["option"]]]],[11,"set",E,R[302],0,[[["self"],[T]],[R[3]]]],[11,R[303],E,R[297],0,[[["fnonce"],["self"]],[T]]],[11,"get_or_try_init",E,R[297],0,[[["fnonce"],["self"]],[[R[3]],[T]]]],[11,"new",E,R[305],1,[[["f"]],["lazy"]]],[11,"force",E,R[306],1,[[["lazy"]],[T]]],[0,"sync",R[298],E,N,N],[3,R[310],R[308],"A thread-safe cell which can be written to only once.",N,N],[3,"Lazy",E,R[299],N,N],[11,"new",E,R[305],2,[[["f"]],["lazy"]]],[11,"force",E,R[306],2,[[["lazy"]],[T]]],[14,"unsync_lazy",R[298],R[2893],N,N],[14,"sync_lazy",E,R[2893],N,N],[11,"into",R[308],E,3,[[],[U]]],[11,"from",E,E,3,[[],[T]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",R[307],E,0,[[],[U]]],[11,"from",E,E,0,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",R[308],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"from",E,E,3,[[[T]],["self"]]],[11,"from",R[307],E,0,[[[T]],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[309]]]],[11,R[90],R[308],E,3,[[],[R[309]]]],[11,R[90],R[307],E,0,[[],["self"]]],[11,"eq",R[308],E,3,[[["self"],[R[309]]],["bool"]]],[11,"eq",R[307],E,0,[[["self"]],["bool"]]],[11,"fmt",R[308],E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[307],E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[308],E,2,[[["self"],[R[37]]],[R[3]]]],[11,"deref",R[307],E,1,[[["self"]],[T]]],[11,"deref",R[308],E,2,[[["self"]],[T]]],[18,"INIT",E,R[2894],3,N],[11,"new",E,R[300],3,[[],[R[309]]]],[11,"get",E,R[301],3,[[["self"]],[[T],["option"]]]],[11,"set",E,R[302],3,[[["self"],[T]],[R[3]]]],[11,R[303],E,R[297],3,[[["fnonce"],["self"]],[T]]]],"p":[[3,R[310]],[3,"Lazy"],[3,"Lazy"],[3,R[310]]]};
searchIndex["opaque_debug"]={"doc":"Macro for opaque `Debug` trait implementation.","i":[[14,"impl_opaque_debug","opaque_debug","Macro for defining opaque `Debug` implementation.",N,N]],"p":[]};
searchIndex["parity_scale_codec"]={"doc":"Parity SCALE Codec","i":[[24,"Encode","parity_scale_codec",R[3539],N,N],[24,"Decode",E,R[3540],N,N],[24,R[3541],E,R[3542],N,N],[3,"Error",E,"Descriptive error type",N,N],[3,"OptionBool",E,"Shim type because we can't do a specialised implementation…",N,N],[12,"0",E,E,0,N],[3,"IoReader",E,"Wrapper that implements Input for any `Read` and `Seek`…",N,N],[12,"0",E,E,1,N],[3,"Compact",E,"Compact-encoded variant of T. This is more space-efficient…",N,N],[12,"0",E,E,2,N],[3,"Ref",E,"Reference wrapper that implement encode like any type that…",N,N],[11,"what",E,"Error description",3,[[["self"]],["str"]]],[8,"Input",E,R[4606],N,N],[10,R[3524],E,R[4607],4,[[["self"]],[[R[3],["option","error"]],["option",["usize"]],["error"]]]],[10,"read",E,R[4608],4,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"read_byte",E,R[3528],4,[[["self"]],[["u8"],["error"],[R[3],["u8","error"]]]]],[8,"Output",E,R[4609],N,N],[10,"write",E,R[4610],5,[[["self"]]]],[11,"push_byte",E,R[3529],5,[[["self"],["u8"]]]],[11,"push",E,R[3530],5,[[["self"],["v"]]]],[8,"Decode",E,R[4611],N,N],[10,"decode",E,R[4612],6,[[["i"]],[["error"],[R[3],["error"]]]]],[8,"Encode",E,R[4613],N,N],[11,R[292],E,R[3531],7,[[["self"]],["usize"]]],[11,R[3603],E,R[3532],7,[[["self"],[T]]]],[11,"encode",E,R[3533],7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,R[3534],7,[[["fnonce"],["self"]],["r"]]],[8,"Codec",E,R[4614],N,N],[8,R[3535],E,R[4615],N,N],[16,"RefType",E,R[4616],8,N],[8,"WrapperTypeEncode",E,"A marker trait for types that wrap other encodable type.",N,N],[8,R[3536],E,"A marker trait for types that can be created solely from…",N,N],[16,"Wrapped",E,"A wrapped type.",9,N],[8,R[3537],E,"Trait that allows the length of a collection to be read,…",N,N],[10,"len",E,"Return the number of elements in `self_encoded`.",10,[[],[["error"],["usize"],[R[3],["usize","error"]]]]],[8,"FullCodec",E,"Trait that bound `EncodeLike` along with `Codec`. Usefull…",N,N],[8,"FullEncode",E,"Trait that bound `EncodeLike` along with `Encode`. Usefull…",N,N],[8,R[4617],E,R[4618],N,N],[16,"Type",E,R[4619],11,N],[8,R[3541],E,"Allow foreign structs to be wrap in Compact",N,N],[16,"As",E,"A compact-encodable type that should be used as the…",12,N],[10,R[3610],E,"Returns the encodable type.",12,[[["self"]]]],[10,R[3609],E,"Create `Self` from the decodable type.",12,[[],["self"]]],[8,"CompactLen",E,"Something that can return the compact encoded length for a…",N,N],[10,R[3526],E,"Returns the compact encoded length for the given value.",13,[[[T]],["usize"]]],[8,"Joiner",E,"Trait to allow itself to be serialised into a value which…",N,N],[10,"and",E,"Append encoding of value to `Self`.",14,[[["v"]],["self"]]],[8,"KeyedVec",E,"Trait to allow itself to be serialised and prepended by a…",N,N],[10,R[3604],E,"Return an encoding of `Self` prepended by given slice.",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[8,"DecodeAll",E,"Extension trait to [`Decode`] that ensures that the given…",N,N],[10,R[3605],E,"Decode `Self` and consume all of the given input data. If…",16,[[],[["error"],[R[3],["error"]]]]],[8,R[3538],E,"Trait that allows to append items to an encoded…",N,N],[16,"Item",E,"The item that will be appended.",17,N],[10,"append",E,R[3523],17,[[["vec",["u8"]],[R[294]],["u8"]],[["error"],["vec",["u8"]],[R[3],["vec","error"]]]]],[10,R[4620],E,R[3523],17,[[["vec",["u8"]],["i"],["u8"]],[["error"],["vec",["u8"]],[R[3],["vec","error"]]]]],[8,"EncodeLike",E,R[4621],N,N],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[78],E,E,3,[[["self"]],["string"]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[],[T]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,R[3524],E,E,1,[[["self"]],[[R[3],["option","error"]],["option",["usize"]],["error"]]]],[11,"read",E,E,1,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[292],E,E,0,[[["self"]],["usize"]]],[11,R[3525],E,E,0,[[["fnonce"],["self"]],["r"]]],[11,R[292],E,E,2,[[["self"]],["usize"]]],[11,R[3603],E,E,2,[[["w"],["self"]]]],[11,"encode",E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,2,[[["fnonce"],["self"]],["r"]]],[11,"decode",E,E,0,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,2,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,2,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,2,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,2,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,2,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,2,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,2,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3526],E,E,2,[[["u8"]],["usize"]]],[11,R[3526],E,E,2,[[["u16"]],["usize"]]],[11,R[3526],E,E,2,[[["u32"]],["usize"]]],[11,R[3526],E,E,2,[[["u64"]],["usize"]]],[11,R[3526],E,E,2,[[["u128"]],["usize"]]],[11,"from",E,E,3,[[["str"]],["error"]]],[11,"from",E,E,3,[[["error"]],["self"]]],[11,"from",E,E,2,[[[T]],["compact"]]],[11,"from",E,E,2,[[[T]],["compact"]]],[11,"from",E,E,18,[[[T]],["self"]]],[11,"clone",E,E,3,[[["self"]],["error"]]],[11,"clone",E,E,0,[[["self"]],[R[3527]]]],[11,"clone",E,E,2,[[["self"]],["compact"]]],[11,"cmp",E,E,2,[[["self"],["compact"]],[R[105]]]],[11,"eq",E,E,3,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,3,[[["error"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[3527]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[3527]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["compact"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["compact"]],["bool"]]],[11,R[106],E,E,2,[[["self"],["compact"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,2,[[["self"],["compact"]],["bool"]]],[11,"le",E,E,2,[[["self"],["compact"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["compact"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["compact"]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"deref",E,E,18,[[["self"]]]],[11,R[38],E,E,3,[[["self"]],["str"]]],[11,R[132],E,E,2,[[["s"],["self"]],[R[3]]]],[11,R[173],E,E,2,[[["d"]],[R[3]]]],[11,"read_byte",E,R[3528],4,[[["self"]],[["u8"],["error"],[R[3],["u8","error"]]]]],[11,"push_byte",E,R[3529],5,[[["self"],["u8"]]]],[11,"push",E,R[3530],5,[[["self"],["v"]]]],[11,R[292],E,R[3531],7,[[["self"]],["usize"]]],[11,R[3603],E,R[3532],7,[[["self"],[T]]]],[11,"encode",E,R[3533],7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,R[3534],7,[[["fnonce"],["self"]],["r"]]]],"p":[[3,"OptionBool"],[3,"IoReader"],[3,"Compact"],[3,"Error"],[8,"Input"],[8,"Output"],[8,"Decode"],[8,"Encode"],[8,R[3535]],[8,R[3536]],[8,R[3537]],[8,R[4617]],[8,R[3541]],[8,"CompactLen"],[8,"Joiner"],[8,"KeyedVec"],[8,"DecodeAll"],[8,R[3538]],[3,"Ref"]]};
searchIndex["parity_scale_codec_derive"]={"doc":"Derives serialization and deserialization codec for…","i":[[24,"Encode","parity_scale_codec_derive",R[3539],N,N],[24,"Decode",E,R[3540],N,N],[24,R[3541],E,R[3542],N,N]],"p":[]};
searchIndex["parity_util_mem"]={"doc":"Crate for parity memory management related utilities. It…","i":[[24,R[3123],R[3124],E,N,N],[3,R[3128],E,"Operations used when measuring heap usage of data…",N,N],[0,"allocators",E,"default allocator management Features are: - windows: - no…",N,N],[5,"new_malloc_size_ops","parity_util_mem::allocators","Get a new instance of a MallocSizeOfOps",N,[[],[R[3126]]]],[8,R[3127],E,"Extension methods for `MallocSizeOf` trait, do not…",N,N],[11,R[3125],E,"Method to launch a heapsize measurement with a fresh state.",0,[[["self"]],["usize"]]],[11,"new",R[3124],E,1,[[["box",["fnmut"]],["option"],["option",["box"]]],["self"]]],[11,R[3125],E,"Call `size_of_op` on `ptr`, first checking that the…",1,[[["self"]],["usize"]]],[11,"has_malloc_enclosing_size_of",E,"Is an `enclosing_size_of_op` available?",1,[[["self"]],["bool"]]],[11,"malloc_enclosing_size_of",E,"Call `enclosing_size_of_op`, which must be available, on…",1,[[["self"]],["usize"]]],[11,"have_seen_ptr",E,"Call `have_seen_ptr_op` on `ptr`.",1,[[["self"]],["bool"]]],[8,R[3123],E,"Trait for measuring the \"deep\" heap usage of a data…",N,N],[10,"size_of",E,"Measure the heap usage of all descendant heap-allocated…",2,[[["self"],[R[3126]]],["usize"]]],[14,"malloc_size_of_is_0",E,E,N,N],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]]],"p":[[8,R[3127]],[3,R[3128]],[8,R[3123]]]};
searchIndex["parity_wasm"]={"doc":"WebAssembly format library","i":[[5,R[130],R[186],R[131],N,[[],["usize"]]],[0,R[187],E,"Elements of the WebAssembly binary format.",N,N],[3,"Module",R[121],"WebAssembly module",N,N],[3,R[240],E,"Section with function signatures definition.",N,N],[3,R[245],E,"Section with function bodies of the module.",N,N],[3,R[242],E,"Section with table definition (currently only one entry is…",N,N],[3,R[247],E,"Data entries definitions.",N,N],[3,R[239],E,"Section of the imports definition.",N,N],[3,R[244],E,"List of exports definition.",N,N],[3,R[243],E,"Globals definition section.",N,N],[3,R[238],E,"Section with type declarations.",N,N],[3,R[246],E,"Element entries section.",N,N],[3,R[241],E,"Section with table definition (currently only one is…",N,N],[3,R[237],E,"Custom section.",N,N],[3,R[253],E,"Import entry.",N,N],[3,R[251],E,"Memory and table limits.",N,N],[3,R[252],E,"Memory entry.",N,N],[3,R[250],E,"Table entry",N,N],[3,R[249],E,"Global definition struct",N,N],[3,R[254],E,"Export entry.",N,N],[3,R[255],E,"Global entry in the module.",N,N],[3,R[282],E,"Unsigned variable-length integer, limited to 32 bits,…",N,N],[3,"VarUint7",E,"7-bit unsigned integer, encoded in LEB128 (always 1 byte…",N,N],[3,"Uint8",E,"8-bit unsigned integer, NOT encoded in LEB128; it's just a…",N,N],[3,"VarUint1",E,"VarUint1, 1-bit value (0/1).",N,N],[3,"VarInt7",E,"7-bit signed integer, encoded in LEB128 (always 1 byte…",N,N],[3,"Uint32",E,"32-bit unsigned integer, encoded in little endian.",N,N],[3,"VarInt32",E,"32-bit signed integer, encoded in LEB128 (can be 1-5 bytes…",N,N],[3,"VarInt64",E,"64-bit signed integer, encoded in LEB128 (can be 1-9 bytes…",N,N],[3,"Uint64",E,"64-bit unsigned integer, encoded in little endian.",N,N],[3,R[283],E,"Unsigned variable-length integer, limited to 64 bits,…",N,N],[3,R[235],E,"List for reading sequence of elements typed `T`, given…",N,N],[3,R[236],E,"Helper struct to write payload which is preceded by it's…",N,N],[3,R[226],E,"Helper struct to write series of `T` preceded by the…",N,N],[12,"0",E,E,0,N],[12,"1",E,E,0,N],[3,R[248],E,"Function signature type.",N,N],[3,R[256],E,"List of instructions (usually inside a block section).",N,N],[3,"InitExpr",E,"Initialization expression.",N,N],[3,R[227],E,E,N,N],[12,"table",E,E,1,N],[12,R[90],E,E,1,N],[3,"Func",E,"Function signature (type reference)",N,N],[3,"FuncBody",E,"Function body definition.",N,N],[3,"Local",E,"Local definition inside the function body.",N,N],[3,R[257],E,"Entry in the element section.",N,N],[3,R[258],E,"Data segment definition.",N,N],[3,"IndexMap",E,"A map from non-contiguous `u32` keys to values of type…",N,N],[3,R[259],E,"Debug name information.",N,N],[3,R[260],E,R[180],N,N],[3,R[261],E,"The names of the functions in this module.",N,N],[3,R[262],E,"The names of the local variables in this module's functions.",N,N],[3,R[263],E,"Relocation information.",N,N],[3,R[228],E,"Unparsed part of the module/section.",N,N],[12,"0",E,E,2,N],[4,R[229],E,"Type of the import entry to count",N,N],[13,R[122],E,"Count functions",3,N],[13,"Global",E,"Count globals",3,N],[13,"Table",E,"Count tables",3,N],[13,"Memory",E,"Count memories",3,N],[4,"Section",E,"Section in the WebAssembly module.",N,N],[13,R[228],E,"Section is unparsed.",4,N],[12,"id","parity_wasm::elements::Section","id of the unparsed section.",4,N],[12,"payload",E,"raw bytes of the unparsed section.",4,N],[13,"Custom",R[121],"Custom section (`id=0`).",4,N],[13,"Type",E,"Types section.",4,N],[13,"Import",E,"Import section.",4,N],[13,R[122],E,"Function signatures section.",4,N],[13,"Table",E,"Table definition section.",4,N],[13,"Memory",E,"Memory definition section.",4,N],[13,"Global",E,"Global entries section.",4,N],[13,"Export",E,"Export definitions.",4,N],[13,"Start",E,"Entry reference of the module.",4,N],[13,"Element",E,"Elements section.",4,N],[13,"DataCount",E,"Number of passive data entries in the data section",4,N],[13,"Code",E,"Function bodies section.",4,N],[13,"Data",E,"Data definition section.",4,N],[13,"Name",E,"Name section.",4,N],[13,"Reloc",E,"Relocation section.",4,N],[4,"External",E,"External to local binding.",N,N],[13,R[122],E,"Binds to a function whose type is associated with the…",5,N],[13,"Table",E,"Describes local table definition to be imported as.",5,N],[13,"Memory",E,"Describes local memory definition to be imported as.",5,N],[13,"Global",E,"Describes local global entry to be imported as.",5,N],[4,"Internal",E,"Internal reference of the exported entry.",N,N],[13,R[122],E,"Function reference.",6,N],[13,"Table",E,"Table reference.",6,N],[13,"Memory",E,"Memory reference.",6,N],[13,"Global",E,"Global reference.",6,N],[4,"Type",E,"Type definition in types section. Currently can be only of…",N,N],[13,R[122],E,"Function type.",7,N],[4,R[230],E,"Value type.",N,N],[13,"I32",E,"32-bit signed integer",8,N],[13,"I64",E,"64-bit signed integer",8,N],[13,"F32",E,"32-bit float",8,N],[13,"F64",E,"64-bit float",8,N],[4,R[231],E,"Block type which is basically `ValueType` + NoResult (to…",N,N],[13,"Value",E,"Value-type specified block type",9,N],[13,"NoResult",E,"No specified block type",9,N],[4,R[232],E,"Table element type.",N,N],[13,"AnyFunc",E,"A reference to a function with any signature.",10,N],[4,R[233],E,"Instruction.",N,N],[13,R[2826],E,E,11,N],[13,"Nop",E,E,11,N],[13,"Block",E,E,11,N],[13,"Loop",E,E,11,N],[13,"If",E,E,11,N],[13,"Else",E,E,11,N],[13,"End",E,E,11,N],[13,"Br",E,E,11,N],[13,"BrIf",E,E,11,N],[13,"BrTable",E,E,11,N],[13,"Return",E,E,11,N],[13,"Call",E,E,11,N],[13,"CallIndirect",E,E,11,N],[13,"Drop",E,E,11,N],[13,"Select",E,E,11,N],[13,"GetLocal",E,E,11,N],[13,"SetLocal",E,E,11,N],[13,"TeeLocal",E,E,11,N],[13,"GetGlobal",E,E,11,N],[13,"SetGlobal",E,E,11,N],[13,"I32Load",E,E,11,N],[13,"I64Load",E,E,11,N],[13,"F32Load",E,E,11,N],[13,"F64Load",E,E,11,N],[13,"I32Load8S",E,E,11,N],[13,"I32Load8U",E,E,11,N],[13,"I32Load16S",E,E,11,N],[13,"I32Load16U",E,E,11,N],[13,"I64Load8S",E,E,11,N],[13,"I64Load8U",E,E,11,N],[13,"I64Load16S",E,E,11,N],[13,"I64Load16U",E,E,11,N],[13,"I64Load32S",E,E,11,N],[13,"I64Load32U",E,E,11,N],[13,"I32Store",E,E,11,N],[13,"I64Store",E,E,11,N],[13,"F32Store",E,E,11,N],[13,"F64Store",E,E,11,N],[13,"I32Store8",E,E,11,N],[13,"I32Store16",E,E,11,N],[13,"I64Store8",E,E,11,N],[13,"I64Store16",E,E,11,N],[13,"I64Store32",E,E,11,N],[13,"CurrentMemory",E,E,11,N],[13,"GrowMemory",E,E,11,N],[13,"I32Const",E,E,11,N],[13,"I64Const",E,E,11,N],[13,"F32Const",E,E,11,N],[13,"F64Const",E,E,11,N],[13,"I32Eqz",E,E,11,N],[13,"I32Eq",E,E,11,N],[13,"I32Ne",E,E,11,N],[13,"I32LtS",E,E,11,N],[13,"I32LtU",E,E,11,N],[13,"I32GtS",E,E,11,N],[13,"I32GtU",E,E,11,N],[13,"I32LeS",E,E,11,N],[13,"I32LeU",E,E,11,N],[13,"I32GeS",E,E,11,N],[13,"I32GeU",E,E,11,N],[13,"I64Eqz",E,E,11,N],[13,"I64Eq",E,E,11,N],[13,"I64Ne",E,E,11,N],[13,"I64LtS",E,E,11,N],[13,"I64LtU",E,E,11,N],[13,"I64GtS",E,E,11,N],[13,"I64GtU",E,E,11,N],[13,"I64LeS",E,E,11,N],[13,"I64LeU",E,E,11,N],[13,"I64GeS",E,E,11,N],[13,"I64GeU",E,E,11,N],[13,"F32Eq",E,E,11,N],[13,"F32Ne",E,E,11,N],[13,"F32Lt",E,E,11,N],[13,"F32Gt",E,E,11,N],[13,"F32Le",E,E,11,N],[13,"F32Ge",E,E,11,N],[13,"F64Eq",E,E,11,N],[13,"F64Ne",E,E,11,N],[13,"F64Lt",E,E,11,N],[13,"F64Gt",E,E,11,N],[13,"F64Le",E,E,11,N],[13,"F64Ge",E,E,11,N],[13,"I32Clz",E,E,11,N],[13,"I32Ctz",E,E,11,N],[13,"I32Popcnt",E,E,11,N],[13,"I32Add",E,E,11,N],[13,"I32Sub",E,E,11,N],[13,"I32Mul",E,E,11,N],[13,"I32DivS",E,E,11,N],[13,"I32DivU",E,E,11,N],[13,"I32RemS",E,E,11,N],[13,"I32RemU",E,E,11,N],[13,"I32And",E,E,11,N],[13,"I32Or",E,E,11,N],[13,"I32Xor",E,E,11,N],[13,"I32Shl",E,E,11,N],[13,"I32ShrS",E,E,11,N],[13,"I32ShrU",E,E,11,N],[13,"I32Rotl",E,E,11,N],[13,"I32Rotr",E,E,11,N],[13,"I64Clz",E,E,11,N],[13,"I64Ctz",E,E,11,N],[13,"I64Popcnt",E,E,11,N],[13,"I64Add",E,E,11,N],[13,"I64Sub",E,E,11,N],[13,"I64Mul",E,E,11,N],[13,"I64DivS",E,E,11,N],[13,"I64DivU",E,E,11,N],[13,"I64RemS",E,E,11,N],[13,"I64RemU",E,E,11,N],[13,"I64And",E,E,11,N],[13,"I64Or",E,E,11,N],[13,"I64Xor",E,E,11,N],[13,"I64Shl",E,E,11,N],[13,"I64ShrS",E,E,11,N],[13,"I64ShrU",E,E,11,N],[13,"I64Rotl",E,E,11,N],[13,"I64Rotr",E,E,11,N],[13,"F32Abs",E,E,11,N],[13,"F32Neg",E,E,11,N],[13,"F32Ceil",E,E,11,N],[13,"F32Floor",E,E,11,N],[13,"F32Trunc",E,E,11,N],[13,"F32Nearest",E,E,11,N],[13,"F32Sqrt",E,E,11,N],[13,"F32Add",E,E,11,N],[13,"F32Sub",E,E,11,N],[13,"F32Mul",E,E,11,N],[13,"F32Div",E,E,11,N],[13,"F32Min",E,E,11,N],[13,"F32Max",E,E,11,N],[13,"F32Copysign",E,E,11,N],[13,"F64Abs",E,E,11,N],[13,"F64Neg",E,E,11,N],[13,"F64Ceil",E,E,11,N],[13,"F64Floor",E,E,11,N],[13,"F64Trunc",E,E,11,N],[13,"F64Nearest",E,E,11,N],[13,"F64Sqrt",E,E,11,N],[13,"F64Add",E,E,11,N],[13,"F64Sub",E,E,11,N],[13,"F64Mul",E,E,11,N],[13,"F64Div",E,E,11,N],[13,"F64Min",E,E,11,N],[13,"F64Max",E,E,11,N],[13,"F64Copysign",E,E,11,N],[13,"I32WrapI64",E,E,11,N],[13,"I32TruncSF32",E,E,11,N],[13,"I32TruncUF32",E,E,11,N],[13,"I32TruncSF64",E,E,11,N],[13,"I32TruncUF64",E,E,11,N],[13,"I64ExtendSI32",E,E,11,N],[13,"I64ExtendUI32",E,E,11,N],[13,"I64TruncSF32",E,E,11,N],[13,"I64TruncUF32",E,E,11,N],[13,"I64TruncSF64",E,E,11,N],[13,"I64TruncUF64",E,E,11,N],[13,"F32ConvertSI32",E,E,11,N],[13,"F32ConvertUI32",E,E,11,N],[13,"F32ConvertSI64",E,E,11,N],[13,"F32ConvertUI64",E,E,11,N],[13,"F32DemoteF64",E,E,11,N],[13,"F64ConvertSI32",E,E,11,N],[13,"F64ConvertUI32",E,E,11,N],[13,"F64ConvertSI64",E,E,11,N],[13,"F64ConvertUI64",E,E,11,N],[13,"F64PromoteF32",E,E,11,N],[13,"I32ReinterpretF32",E,E,11,N],[13,"I64ReinterpretF64",E,E,11,N],[13,"F32ReinterpretI32",E,E,11,N],[13,"F64ReinterpretI64",E,E,11,N],[4,R[234],E,"Relocation entry.",N,N],[13,"FunctionIndexLeb",E,"Function index.",12,N],[12,"offset",R[123],R[124],12,N],[12,"index",E,R[125],12,N],[13,"TableIndexSleb",R[121],R[126],12,N],[12,"offset",R[123],R[124],12,N],[12,"index",E,R[125],12,N],[13,"TableIndexI32",R[121],R[126],12,N],[12,"offset",R[123],R[124],12,N],[12,"index",E,R[125],12,N],[13,"MemoryAddressLeb",R[121],R[127],12,N],[12,"offset",R[123],R[124],12,N],[12,"index",E,R[128],12,N],[12,"addend",E,R[129],12,N],[13,"MemoryAddressSleb",R[121],R[127],12,N],[12,"offset",R[123],R[124],12,N],[12,"index",E,R[128],12,N],[12,"addend",E,R[129],12,N],[13,"MemoryAddressI32",R[121],R[127],12,N],[12,"offset",R[123],R[124],12,N],[12,"index",E,R[128],12,N],[12,"addend",E,R[129],12,N],[13,"TypeIndexLeb",R[121],"Type table index.",12,N],[12,"offset",R[123],R[124],12,N],[12,"index",E,"Index of the type used.",12,N],[13,"GlobalIndexLeb",R[121],"Global index.",12,N],[12,"offset",R[123],R[124],12,N],[12,"index",E,"Index of the global symbol in the symbol table.",12,N],[4,"Error",R[121],"Deserialization/serialization error",N,N],[13,"UnexpectedEof",E,"Unexpected end of input.",13,N],[13,"InvalidMagic",E,"Invalid magic.",13,N],[13,"UnsupportedVersion",E,"Unsupported version.",13,N],[13,"InconsistentLength",E,"Inconsistence between declared and actual length.",13,N],[12,"expected","parity_wasm::elements::Error","Expected length of the definition.",13,N],[12,"actual",E,"Actual length of the definition.",13,N],[13,"Other",R[121],"Other static error.",13,N],[13,"HeapOther",E,"Other allocated error.",13,N],[13,"UnknownValueType",E,"Invalid/unknown value type declaration.",13,N],[13,"UnknownTableElementType",E,"Invalid/unknown table element type declaration.",13,N],[13,"NonUtf8String",E,"Non-utf8 string.",13,N],[13,"UnknownExternalKind",E,"Unknown external kind code.",13,N],[13,"UnknownInternalKind",E,"Unknown internal kind code.",13,N],[13,"UnknownOpcode",E,"Unknown opcode encountered.",13,N],[13,"InvalidVarUint1",E,"Invalid VarUint1 value.",13,N],[13,"InvalidVarInt32",E,"Invalid VarInt32 value.",13,N],[13,"InvalidVarInt64",E,"Invalid VarInt64 value.",13,N],[13,"InvalidVarUint32",E,"Invalid VarUint32 value.",13,N],[13,"InvalidVarUint64",E,"Invalid VarUint64 value.",13,N],[13,"InconsistentMetadata",E,"Inconsistent metadata.",13,N],[13,"InvalidSectionId",E,"Invalid section id.",13,N],[13,"SectionsOutOfOrder",E,"Sections are out of order.",13,N],[13,"DuplicatedSections",E,"Duplicated sections.",13,N],[13,"InvalidMemoryReference",E,"Invalid memory reference (should be 0).",13,N],[13,"InvalidTableReference",E,"Invalid table reference (should be 0).",13,N],[13,"InvalidLimitsFlags",E,"Invalid value used for flags in limits type.",13,N],[13,"UnknownFunctionForm",E,"Unknown function form (should be 0x60).",13,N],[13,"InvalidVarInt7",E,"Invalid varint7 (should be in -64..63 range).",13,N],[13,"InconsistentCode",E,"Number of function body entries and signatures does not…",13,N],[13,"InvalidSegmentFlags",E,"Only flags 0, 1, and 2 are accepted on segments.",13,N],[13,"TooManyLocals",E,"Sum of counts of locals is greater than 2^32.",13,N],[13,"DuplicatedNameSubsections",E,"Duplicated name subsections.",13,N],[13,"UnknownNameSubsectionType",E,"Unknown name subsection type.",13,N],[5,R[130],E,R[131],N,[[],["usize"]]],[5,"deserialize_buffer",E,"Deserialize deserializable type from buffer.",N,[[],[[R[3]],[R[173]]]]],[5,R[132],E,"Create buffer with serialized value.",N,[[[R[132]]],[[R[3],["vec"]],["vec",["u8"]]]]],[5,"deserialize_file",E,"Deserialize module from the file.",N,[[["asref",["path"]],["path"]],[["module"],[R[3],["module","error"]],["error"]]]],[5,"serialize_to_file",E,"Serialize module to the file",N,[[["asref",["path"]],["module"],["path"]],[[R[3],["error"]],["error"]]]],[11,R[109],E,"Destroy counted list returing inner vector.",14,[[],["vec"]]],[11,"new",E,"New counted writer on top of the given serial writer.",15,[[["w"]],["self"]]],[11,"done",E,"Finish counted writer routing, which writes accumulated…",15,[[],[["error"],[R[3],["error"]]]]],[11,"new",E,"New module with sections",16,[[["vec",[R[191]]],[R[191]]],["self"]]],[11,R[3269],E,"Construct a module from a slice.",16,[[["asref"]],[["error"],[R[3],["error"]]]]],[11,R[3268],E,"Serialize a module to a vector.",16,[[],[[R[3],["vec","error"]],["vec",["u8"]],["error"]]]],[11,"into_sections",E,"Destructure the module, yielding sections",16,[[],[[R[191]],["vec",[R[191]]]]]],[11,"version",E,"Version of module.",16,[[["self"]],["u32"]]],[11,"sections",E,"Sections list.",16,[[["self"]]]],[11,"sections_mut",E,"Sections list (mutable).",16,[[["self"]],["vec"]]],[11,"insert_section",E,"Insert a section, in the correct section ordering. This…",16,[[["self"],[R[191]]],[[R[3],["error"]],["error"]]]],[11,"code_section",E,"Code section reference, if any.",16,[[["self"]],[[R[133]],["option",[R[133]]]]]],[11,"code_section_mut",E,"Code section mutable reference, if any.",16,[[["self"]],[["option",[R[133]]],[R[133]]]]],[11,"type_section",E,"Types section reference, if any.",16,[[["self"]],[["option",[R[134]]],[R[134]]]]],[11,"type_section_mut",E,"Types section mutable reference, if any.",16,[[["self"]],[[R[134]],["option",[R[134]]]]]],[11,"import_section",E,"Imports section reference, if any.",16,[[["self"]],[["option",[R[135]]],[R[135]]]]],[11,"import_section_mut",E,"Imports section mutable reference, if any.",16,[[["self"]],[[R[135]],["option",[R[135]]]]]],[11,"global_section",E,"Globals section reference, if any.",16,[[["self"]],[["option",[R[136]]],[R[136]]]]],[11,"global_section_mut",E,"Globals section mutable reference, if any.",16,[[["self"]],[[R[136]],["option",[R[136]]]]]],[11,"export_section",E,"Exports section reference, if any.",16,[[["self"]],[[R[137]],["option",[R[137]]]]]],[11,"export_section_mut",E,"Exports section mutable reference, if any.",16,[[["self"]],[["option",[R[137]]],[R[137]]]]],[11,"table_section",E,"Table section reference, if any.",16,[[["self"]],[["option",[R[138]]],[R[138]]]]],[11,"table_section_mut",E,"Table section mutable reference, if any.",16,[[["self"]],[["option",[R[138]]],[R[138]]]]],[11,"data_section",E,"Data section reference, if any.",16,[[["self"]],[["option",[R[139]]],[R[139]]]]],[11,"data_section_mut",E,"Data section mutable reference, if any.",16,[[["self"]],[["option",[R[139]]],[R[139]]]]],[11,"elements_section",E,"Element section reference, if any.",16,[[["self"]],[["option",[R[140]]],[R[140]]]]],[11,"elements_section_mut",E,"Element section mutable reference, if any.",16,[[["self"]],[[R[140]],["option",[R[140]]]]]],[11,"memory_section",E,"Memory section reference, if any.",16,[[["self"]],[["option",[R[141]]],[R[141]]]]],[11,"memory_section_mut",E,"Memory section mutable reference, if any.",16,[[["self"]],[[R[141]],["option",[R[141]]]]]],[11,"function_section",E,R[144],16,[[["self"]],[["option",[R[142]]],[R[142]]]]],[11,"function_section_mut",E,R[146],16,[[["self"]],[["option",[R[142]]],[R[142]]]]],[11,"start_section",E,"Start section, if any.",16,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"set_start_section",E,"Changes the module's start section.",16,[[["self"],["u32"]]]],[11,"clear_start_section",E,"Removes the module's start section.",16,[[["self"]]]],[11,"custom_sections",E,"Returns an iterator over the module's custom sections",16,[[["self"]]]],[11,"set_custom_section",E,"Sets the payload associated with the given custom section,…",16,[[["vec",["u8"]],["self"],["u8"]]]],[11,"clear_custom_section",E,"Removes the given custom section, if it exists. Returns…",16,[[["self"]],[["option",[R[143]]],[R[143]]]]],[11,"has_names_section",E,"True if a name section is present.",16,[[["self"]],["bool"]]],[11,"names_section",E,R[144],16,[[["self"]],[[R[145]],["option",[R[145]]]]]],[11,"names_section_mut",E,R[146],16,[[["self"]],[["option",[R[145]]],[R[145]]]]],[11,"parse_names",E,"Try to parse name section in place.",16,[[],[R[3]]]],[11,"parse_reloc",E,"Try to parse reloc section in place.",16,[[],[R[3]]]],[11,"import_count",E,"Count imports by provided type.",16,[[[R[213]],["self"]],["usize"]]],[11,"functions_space",E,"Query functions space.",16,[[["self"]],["usize"]]],[11,"globals_space",E,"Query globals space.",16,[[["self"]],["usize"]]],[11,"table_space",E,"Query table space.",16,[[["self"]],["usize"]]],[11,"memory_space",E,"Query memory space.",16,[[["self"]],["usize"]]],[11,"new",E,"Creates a new custom section with the given name and…",17,[[["string"],["vec",["u8"]],["u8"]],[R[143]]]],[11,"name",E,"Name of the custom section.",17,[[["self"]],["str"]]],[11,"payload",E,"Payload of the custom section.",17,[[["self"]]]],[11,R[183],E,"Name of the custom section (mutable).",17,[[["self"]],["string"]]],[11,"payload_mut",E,"Payload of the custom section (mutable).",17,[[["self"]],["vec"]]],[11,"with_types",E,"New type section with provided types.",18,[[["type"],["vec",["type"]]],["self"]]],[11,"types",E,"List of type declarations.",18,[[["self"]]]],[11,"types_mut",E,"List of type declarations (mutable).",18,[[["self"]],["vec"]]],[11,R[148],E,"New import section with provided types.",19,[[["vec",[R[147]]],[R[147]]],["self"]]],[11,R[153],E,"List of import entries.",19,[[["self"]]]],[11,R[149],E,"List of import entries (mutable).",19,[[["self"]],["vec"]]],[11,R[178],E,"Returns number of functions.",19,[[["self"]],["usize"]]],[11,"globals",E,"Returns number of globals",19,[[["self"]],["usize"]]],[11,R[148],E,"New function signatures section with provided entries.",20,[[["vec",["func"]],["func"]],["self"]]],[11,R[149],E,"List of all functions in the section, mutable.",20,[[["self"]],["vec"]]],[11,R[153],E,"List of all functions in the section.",20,[[["self"]]]],[11,R[153],E,"Table entries.",21,[[["self"]]]],[11,R[148],E,"New table section with provided table entries.",21,[[[R[150]],["vec",[R[150]]]],["self"]]],[11,R[149],E,"Mutable table entries.",21,[[["self"]],["vec"]]],[11,R[153],E,"List of all memory entries in the section",22,[[["self"]]]],[11,R[148],E,"New memory section with memory types.",22,[[["vec",[R[151]]],[R[151]]],["self"]]],[11,R[149],E,"Mutable list of all memory entries in the section.",22,[[["self"]],["vec"]]],[11,R[153],E,"List of all global entries in the section.",23,[[["self"]]]],[11,R[148],E,"New global section from list of global entries.",23,[[["vec",[R[152]]],[R[152]]],["self"]]],[11,R[149],E,"List of all global entries in the section (mutable).",23,[[["self"]],["vec"]]],[11,R[153],E,"List of all export entries in the section.",24,[[["self"]]]],[11,R[148],E,"New export section from list of export entries.",24,[[["vec",[R[154]]],[R[154]]],["self"]]],[11,R[149],E,"List of all export entries in the section (mutable).",24,[[["self"]],["vec"]]],[11,"with_bodies",E,"New code section with specified function bodies.",25,[[["vec",[R[203]]],[R[203]]],["self"]]],[11,"bodies",E,"All function bodies in the section.",25,[[["self"]]]],[11,"bodies_mut",E,"All function bodies in the section, mutable.",25,[[["self"]],["vec"]]],[11,R[148],E,"New elements section.",26,[[["vec",[R[155]]],[R[155]]],["self"]]],[11,R[153],E,"New elements entries in the section.",26,[[["self"]]]],[11,R[149],E,R[157],26,[[["self"]],["vec"]]],[11,R[148],E,"New data section.",27,[[["vec",[R[156]]],[R[156]]],["self"]]],[11,R[153],E,"List of all data entries in the section.",27,[[["self"]]]],[11,R[149],E,R[157],27,[[["self"]],["vec"]]],[11,"new",E,"New function type given the signature in-params(`params`)…",28,[[["vec",[R[158]]],[R[158]],["option",[R[158]]]],["self"]]],[11,"form",E,"Function form (currently only valid value is `0x60`)",28,[[["self"]],["u8"]]],[11,"params",E,"Parameters in the function signature.",28,[[["self"]]]],[11,"params_mut",E,"Mutable parameters in the function signature.",28,[[["self"]],["vec"]]],[11,R[199],E,"Return type in the function signature, if any.",28,[[["self"]],[[R[158]],["option",[R[158]]]]]],[11,"return_type_mut",E,"Mutable type in the function signature, if any.",28,[[["self"]],["option"]]],[11,"new",E,"New global type",29,[[[R[158]],["bool"]],["self"]]],[11,"content_type",E,"Type of the global entry",29,[[["self"]],[R[158]]]],[11,R[2842],E,"Is global entry is declared as mutable",29,[[["self"]],["bool"]]],[11,"new",E,"New table definition",30,[[["u32"],["option",["u32"]]],["self"]]],[11,"limits",E,"Table memory specification",30,[[["self"]],[R[159]]]],[11,"elem_type",E,"Table element type",30,[[["self"]],[R[214]]]],[11,"new",E,"New memory limits definition.",31,[[["u32"],["option",["u32"]]],["self"]]],[11,"initial",E,"Initial size.",31,[[["self"]],["u32"]]],[11,"maximum",E,"Maximum size.",31,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"new",E,"New memory definition",32,[[["u32"],["option",["u32"]]],["self"]]],[11,"limits",E,"Limits of the memory entry.",32,[[["self"]],[R[159]]]],[11,"new",E,"New import entry.",33,[[["string"],[R[160]]],["self"]]],[11,"module",E,"Module reference of the import entry.",33,[[["self"]],["str"]]],[11,R[177],E,"Module reference of the import entry (mutable).",33,[[["self"]],["string"]]],[11,"field",E,"Field reference of the import entry.",33,[[["self"]],["str"]]],[11,R[161],E,"Field reference of the import entry (mutable)",33,[[["self"]],["string"]]],[11,R[160],E,"Local binidng of the import entry.",33,[[["self"]],[R[160]]]],[11,"external_mut",E,"Local binidng of the import entry (mutable)",33,[[["self"]],[R[160]]]],[11,"new",E,"New export entry.",34,[[[R[162]],["string"]],["self"]]],[11,"field",E,"Public name.",34,[[["self"]],["str"]]],[11,R[161],E,"Public name (mutable).",34,[[["self"]],["string"]]],[11,R[162],E,"Internal reference of the export entry.",34,[[["self"]],[R[162]]]],[11,"internal_mut",E,"Internal reference of the export entry (mutable).",34,[[["self"]],[R[162]]]],[11,"new",E,"New global entry.",35,[[[R[164]],[R[163]]],["self"]]],[11,"global_type",E,"Global type.",35,[[["self"]],[R[163]]]],[11,R[205],E,"Initialization expression (instructions) for global.",35,[[["self"]],[R[164]]]],[11,"global_type_mut",E,"Global type (mutable).",35,[[["self"]],[R[163]]]],[11,"init_expr_mut",E,"Initialization expression (instructions) for global…",35,[[["self"]],[R[164]]]],[11,"new",E,"New list of instructions from vector of instructions.",36,[[["vec",[R[165]]],[R[165]]],["self"]]],[11,"empty",E,R[166],36,[[],["self"]]],[11,R[187],E,R[168],36,[[["self"]]]],[11,"elements_mut",E,"Individual instructions, mutable.",36,[[["self"]],["vec"]]],[11,"new",E,"New initialization expression from instruction list.",37,[[["vec",[R[165]]],[R[165]]],["self"]]],[11,"empty",E,R[166],37,[[],["self"]]],[11,"code",E,R[167],37,[[["self"]]]],[11,"code_mut",E,R[167],37,[[["self"]],["vec"]]],[11,"is_block",E,"Is this instruction starts the new block (which should end…",11,[[["self"]],["bool"]]],[11,"is_terminal",E,"Is this instruction determines the termination of…",11,[[["self"]],["bool"]]],[11,"new",E,"New function signature",38,[[["u32"]],["self"]]],[11,"type_ref",E,"Function signature type reference.",38,[[["self"]],["u32"]]],[11,"type_ref_mut",E,"Function signature type reference (mutable).",38,[[["self"]],["u32"]]],[11,"new",E,"New local with `count` and `value_type`.",39,[[["u32"],[R[158]]],["self"]]],[11,"count",E,"Number of locals with the shared type.",39,[[["self"]],["u32"]]],[11,R[206],E,"Type of the locals.",39,[[["self"]],[R[158]]]],[11,"new",E,"New function body with given `locals` and `instructions`.",40,[[["vec",["local"]],[R[169]],["local"]],["self"]]],[11,"empty",E,R[168],40,[[],["self"]]],[11,"locals",E,"Locals declared in function body.",40,[[["self"]]]],[11,"code",E,"Instruction list of the function body. Minimal instruction…",40,[[["self"]],[R[169]]]],[11,R[179],E,"Locals declared in function body (mutable).",40,[[["self"]],["vec"]]],[11,"code_mut",E,"Instruction list of the function body (mutable).",40,[[["self"]],[R[169]]]],[11,"new",E,"New element segment.",41,[[[R[164]],["u32"],["vec",["u32"]],["option",[R[164]]]],["self"]]],[11,"members",E,"Sequence of function indices.",41,[[["self"]]]],[11,"members_mut",E,"Sequence of function indices (mutable)",41,[[["self"]],["vec"]]],[11,"index",E,"Table index (currently valid only value of `0`)",41,[[["self"]],["u32"]]],[11,"offset",E,R[170],41,[[["self"]],["option"]]],[11,R[171],E,R[170],41,[[["self"]],["option"]]],[11,"new",E,"New data segments.",42,[[[R[164]],["u32"],["vec",["u8"]],["u8"],["option",[R[164]]]],["self"]]],[11,"index",E,"Linear memory index (currently the only valid value is `0`).",42,[[["self"]],["u32"]]],[11,"offset",E,R[170],42,[[["self"]],["option"]]],[11,R[171],E,R[170],42,[[["self"]],["option"]]],[11,"value",E,"Initial value of the data segment.",42,[[["self"]]]],[11,"value_mut",E,"Initial value of the data segment (mutable).",42,[[["self"]],["vec"]]],[11,R[287],E,"Create an empty `IndexMap`, preallocating enough space to…",43,[[["usize"]],[R[172]]]],[11,"clear",E,"Clear the map.",43,[[["self"]]]],[11,"get",E,"Return the name for the specified index, if it exists.",43,[[["u32"],["self"]],[[T],["option"]]]],[11,R[610],E,"Does the map contain an entry for the specified index?",43,[[["u32"],["self"]],["bool"]]],[11,"insert",E,"Insert a name into our map, returning the existing value…",43,[[["self"],["u32"],[T]],["option"]]],[11,"remove",E,"Remove an item if present and return it.",43,[[["self"],["u32"]],["option"]]],[11,"len",E,"The number of items in this map.",43,[[["self"]],["usize"]]],[11,R[340],E,"Is this map empty?",43,[[["self"]],["bool"]]],[11,"iter",E,"Create a non-consuming iterator over this `IndexMap`'s…",43,[[["self"]],["iter"]]],[11,"deserialize_with",E,"Custom deserialization routine.",43,[[["f"],["usize"],["r"]],[[R[3],[R[172],"error"]],[R[172]],["error"]]]],[11,R[173],E,"Deserialize a map containing simple values that support…",43,[[["usize"],["r"]],[["error"],[R[3],["error"]]]]],[11,"new",E,"Creates a new name section.",44,[[[R[174]],["option",[R[174]]],["option",[R[176]]],[R[175]],["option",[R[175]]],[R[176]]],["self"]]],[11,"module",E,"Module name subsection of this section.",44,[[["self"]],[["option",[R[174]]],[R[174]]]]],[11,R[177],E,"Module name subsection of this section (mutable).",44,[[["self"]],["option"]]],[11,R[178],E,"Functions name subsection of this section.",44,[[["self"]],[[R[175]],["option",[R[175]]]]]],[11,"functions_mut",E,"Functions name subsection of this section (mutable).",44,[[["self"]],["option"]]],[11,"locals",E,"Local name subsection of this section.",44,[[["self"]],[[R[176]],["option",[R[176]]]]]],[11,R[179],E,"Local name subsection of this section (mutable).",44,[[["self"]],["option"]]],[11,R[173],E,"Deserialize a name section.",44,[[["module"],["r"]],[["error"],[R[3],["error"]]]]],[11,"new",E,"Create a new module name section with the specified name.",45,[[["into",["string"]],["string"]],[R[174]]]],[11,"name",E,R[180],45,[[["self"]],["str"]]],[11,R[183],E,"The name of this module (mutable).",45,[[["self"]],["string"]]],[11,"names",E,"A map from function indices to names.",46,[[["self"]],["namemap"]]],[11,"names_mut",E,"A map from function indices to names (mutable).",46,[[["self"]],["namemap"]]],[11,R[173],E,R[182],46,[[["module"],["r"]],[[R[175]],["error"],[R[3],[R[175],"error"]]]]],[11,"local_names",E,R[181],47,[[["self"]],[R[172]]]],[11,"local_names_mut",E,R[181],47,[[["self"]],[R[172]]]],[11,R[173],E,R[182],47,[[["module"],["r"]],[[R[3],[R[176],"error"]],[R[176]],["error"]]]],[11,"name",E,"Name of this section.",48,[[["self"]],["str"]]],[11,R[183],E,"Name of this section (mutable).",48,[[["self"]],["string"]]],[11,"section_id",E,R[184],48,[[["self"]],["u32"]]],[11,"section_id_mut",E,R[184],48,[[["self"]],["u32"]]],[11,"relocation_section_name",E,R[185],48,[[["self"]],[["option",["str"]],["str"]]]],[11,"relocation_section_name_mut",E,R[185],48,[[["self"]],["option"]]],[11,R[153],E,"List of relocation entries.",48,[[["self"]]]],[11,R[149],E,"List of relocation entries (mutable).",48,[[["self"]],["vec"]]],[11,R[173],E,"Deserialize a reloc section.",48,[[["string"],["r"]],[["error"],[R[3],["error"]]]]],[0,"opcodes",E,E,N,N],[17,"UNREACHABLE","parity_wasm::elements::opcodes",E,N,N],[17,"NOP",E,E,N,N],[17,"BLOCK",E,E,N,N],[17,"LOOP",E,E,N,N],[17,"IF",E,E,N,N],[17,"ELSE",E,E,N,N],[17,"END",E,E,N,N],[17,"BR",E,E,N,N],[17,"BRIF",E,E,N,N],[17,"BRTABLE",E,E,N,N],[17,"RETURN",E,E,N,N],[17,"CALL",E,E,N,N],[17,"CALLINDIRECT",E,E,N,N],[17,"DROP",E,E,N,N],[17,"SELECT",E,E,N,N],[17,"GETLOCAL",E,E,N,N],[17,"SETLOCAL",E,E,N,N],[17,"TEELOCAL",E,E,N,N],[17,"GETGLOBAL",E,E,N,N],[17,"SETGLOBAL",E,E,N,N],[17,"I32LOAD",E,E,N,N],[17,"I64LOAD",E,E,N,N],[17,"F32LOAD",E,E,N,N],[17,"F64LOAD",E,E,N,N],[17,"I32LOAD8S",E,E,N,N],[17,"I32LOAD8U",E,E,N,N],[17,"I32LOAD16S",E,E,N,N],[17,"I32LOAD16U",E,E,N,N],[17,"I64LOAD8S",E,E,N,N],[17,"I64LOAD8U",E,E,N,N],[17,"I64LOAD16S",E,E,N,N],[17,"I64LOAD16U",E,E,N,N],[17,"I64LOAD32S",E,E,N,N],[17,"I64LOAD32U",E,E,N,N],[17,"I32STORE",E,E,N,N],[17,"I64STORE",E,E,N,N],[17,"F32STORE",E,E,N,N],[17,"F64STORE",E,E,N,N],[17,"I32STORE8",E,E,N,N],[17,"I32STORE16",E,E,N,N],[17,"I64STORE8",E,E,N,N],[17,"I64STORE16",E,E,N,N],[17,"I64STORE32",E,E,N,N],[17,"CURRENTMEMORY",E,E,N,N],[17,"GROWMEMORY",E,E,N,N],[17,"I32CONST",E,E,N,N],[17,"I64CONST",E,E,N,N],[17,"F32CONST",E,E,N,N],[17,"F64CONST",E,E,N,N],[17,"I32EQZ",E,E,N,N],[17,"I32EQ",E,E,N,N],[17,"I32NE",E,E,N,N],[17,"I32LTS",E,E,N,N],[17,"I32LTU",E,E,N,N],[17,"I32GTS",E,E,N,N],[17,"I32GTU",E,E,N,N],[17,"I32LES",E,E,N,N],[17,"I32LEU",E,E,N,N],[17,"I32GES",E,E,N,N],[17,"I32GEU",E,E,N,N],[17,"I64EQZ",E,E,N,N],[17,"I64EQ",E,E,N,N],[17,"I64NE",E,E,N,N],[17,"I64LTS",E,E,N,N],[17,"I64LTU",E,E,N,N],[17,"I64GTS",E,E,N,N],[17,"I64GTU",E,E,N,N],[17,"I64LES",E,E,N,N],[17,"I64LEU",E,E,N,N],[17,"I64GES",E,E,N,N],[17,"I64GEU",E,E,N,N],[17,"F32EQ",E,E,N,N],[17,"F32NE",E,E,N,N],[17,"F32LT",E,E,N,N],[17,"F32GT",E,E,N,N],[17,"F32LE",E,E,N,N],[17,"F32GE",E,E,N,N],[17,"F64EQ",E,E,N,N],[17,"F64NE",E,E,N,N],[17,"F64LT",E,E,N,N],[17,"F64GT",E,E,N,N],[17,"F64LE",E,E,N,N],[17,"F64GE",E,E,N,N],[17,"I32CLZ",E,E,N,N],[17,"I32CTZ",E,E,N,N],[17,"I32POPCNT",E,E,N,N],[17,"I32ADD",E,E,N,N],[17,"I32SUB",E,E,N,N],[17,"I32MUL",E,E,N,N],[17,"I32DIVS",E,E,N,N],[17,"I32DIVU",E,E,N,N],[17,"I32REMS",E,E,N,N],[17,"I32REMU",E,E,N,N],[17,"I32AND",E,E,N,N],[17,"I32OR",E,E,N,N],[17,"I32XOR",E,E,N,N],[17,"I32SHL",E,E,N,N],[17,"I32SHRS",E,E,N,N],[17,"I32SHRU",E,E,N,N],[17,"I32ROTL",E,E,N,N],[17,"I32ROTR",E,E,N,N],[17,"I64CLZ",E,E,N,N],[17,"I64CTZ",E,E,N,N],[17,"I64POPCNT",E,E,N,N],[17,"I64ADD",E,E,N,N],[17,"I64SUB",E,E,N,N],[17,"I64MUL",E,E,N,N],[17,"I64DIVS",E,E,N,N],[17,"I64DIVU",E,E,N,N],[17,"I64REMS",E,E,N,N],[17,"I64REMU",E,E,N,N],[17,"I64AND",E,E,N,N],[17,"I64OR",E,E,N,N],[17,"I64XOR",E,E,N,N],[17,"I64SHL",E,E,N,N],[17,"I64SHRS",E,E,N,N],[17,"I64SHRU",E,E,N,N],[17,"I64ROTL",E,E,N,N],[17,"I64ROTR",E,E,N,N],[17,"F32ABS",E,E,N,N],[17,"F32NEG",E,E,N,N],[17,"F32CEIL",E,E,N,N],[17,"F32FLOOR",E,E,N,N],[17,"F32TRUNC",E,E,N,N],[17,"F32NEAREST",E,E,N,N],[17,"F32SQRT",E,E,N,N],[17,"F32ADD",E,E,N,N],[17,"F32SUB",E,E,N,N],[17,"F32MUL",E,E,N,N],[17,"F32DIV",E,E,N,N],[17,"F32MIN",E,E,N,N],[17,"F32MAX",E,E,N,N],[17,"F32COPYSIGN",E,E,N,N],[17,"F64ABS",E,E,N,N],[17,"F64NEG",E,E,N,N],[17,"F64CEIL",E,E,N,N],[17,"F64FLOOR",E,E,N,N],[17,"F64TRUNC",E,E,N,N],[17,"F64NEAREST",E,E,N,N],[17,"F64SQRT",E,E,N,N],[17,"F64ADD",E,E,N,N],[17,"F64SUB",E,E,N,N],[17,"F64MUL",E,E,N,N],[17,"F64DIV",E,E,N,N],[17,"F64MIN",E,E,N,N],[17,"F64MAX",E,E,N,N],[17,"F64COPYSIGN",E,E,N,N],[17,"I32WRAPI64",E,E,N,N],[17,"I32TRUNCSF32",E,E,N,N],[17,"I32TRUNCUF32",E,E,N,N],[17,"I32TRUNCSF64",E,E,N,N],[17,"I32TRUNCUF64",E,E,N,N],[17,"I64EXTENDSI32",E,E,N,N],[17,"I64EXTENDUI32",E,E,N,N],[17,"I64TRUNCSF32",E,E,N,N],[17,"I64TRUNCUF32",E,E,N,N],[17,"I64TRUNCSF64",E,E,N,N],[17,"I64TRUNCUF64",E,E,N,N],[17,"F32CONVERTSI32",E,E,N,N],[17,"F32CONVERTUI32",E,E,N,N],[17,"F32CONVERTSI64",E,E,N,N],[17,"F32CONVERTUI64",E,E,N,N],[17,"F32DEMOTEF64",E,E,N,N],[17,"F64CONVERTSI32",E,E,N,N],[17,"F64CONVERTUI32",E,E,N,N],[17,"F64CONVERTSI64",E,E,N,N],[17,"F64CONVERTUI64",E,E,N,N],[17,"F64PROMOTEF32",E,E,N,N],[17,"I32REINTERPRETF32",E,E,N,N],[17,"I64REINTERPRETF64",E,E,N,N],[17,"F32REINTERPRETI32",E,E,N,N],[17,"F64REINTERPRETI64",E,E,N,N],[6,"NameMap",R[121],"A map from indices to names.",N,N],[8,R[264],E,"Deserialization from serial i/o.",N,N],[16,"Error",E,"Serialization error produced by deserialization routine.",49,N],[10,R[173],E,"Deserialize type from serial i/o",49,[[["r"]],[R[3]]]],[8,R[265],E,"Serialization to serial i/o. Takes self by value to…",N,N],[16,"Error",E,"Serialization error produced by serialization routine.",50,N],[10,R[132],E,"Serialize type to serial i/o",50,[[["w"]],[R[3]]]],[0,"builder",R[186],"Various builders to generate/alter wasm components",N,N],[3,R[270],R[209],"Signature builder",N,N],[3,R[272],E,"Multiple signatures builder",N,N],[3,R[274],E,"Function definition builder",N,N],[3,R[271],E,"Type (signature) reference builder (for…",N,N],[3,R[273],E,"Function body (code) builder",N,N],[3,R[266],E,"Function definition (extended structure to specify…",N,N],[12,"is_main",E,"Is this function is start function",51,N],[12,R[188],E,"Signature description",51,N],[12,"code",E,"Body (code) of the function",51,N],[3,R[281],E,"Data segment builder",N,N],[3,R[278],E,"Export entry builder",N,N],[3,R[279],E,"Internal mapping builder for export entry",N,N],[3,R[280],E,"Global builder",N,N],[3,R[275],E,"Import builder",N,N],[3,"Identity",E,"Identity chain element",N,N],[3,R[276],E,"Memory and static regions builder",N,N],[3,R[269],E,"Module builder",N,N],[3,R[277],E,"Table builder",N,N],[3,R[267],E,"Table definition",N,N],[12,"min",E,"Minimum length",52,N],[12,"max",E,"Maximum length, if any",52,N],[12,R[187],E,"Element segments, if any",52,N],[3,R[268],E,"Table elements entry definition",N,N],[12,"offset",E,"Offset initialization expression",53,N],[12,"values",E,"Values of initialization",53,N],[5,"signatures",E,"New builder of signature list",N,[[],[R[193]]]],[5,R[188],E,R[197],N,[[],[R[202]]]],[5,R[4169],E,"New builder of function (signature & body)",N,[[],[R[192]]]],[5,"export",E,R[189],N,[[],[R[195]]]],[5,"global",E,R[189],N,[[],[R[196]]]],[5,"import",E,"New builder for import entry",N,[[],[R[194]]]],[5,"module",E,"Start new module builder # Examples",N,[[],[R[190]]]],[5,"from_module",E,"Start builder to extend existing module",N,[[["module"]],[R[190]]]],[11,"new",E,"New empty module builder",54,[[],["self"]]],[11,R[198],E,"New module builder with bound callback",54,[[["f"]],["self"]]],[11,"with_module",E,"Builder from raw module",54,[[["module"]],["self"]]],[11,"with_sections",E,"Fill module with sections from iterator",54,[[["i"]],["self"]]],[11,"with_section",E,"Add additional section",54,[[[R[191]]],["self"]]],[11,"with_signatures",E,"Binds to the type section, creates additional types when…",54,[[["vec",[R[188]]],[R[188]]],["self"]]],[11,"push_function",E,"Push stand-alone function definition, creating sections,…",54,[[["self"],["functiondefinition"]],["codelocation"]]],[11,R[1349],E,"Push linear memory region",54,[[["memorydefinition"],["self"]],["u32"]]],[11,"push_table",E,"Push table",54,[[["self"],[R[224]]],["u32"]]],[11,"push_signature",E,"Push one function signature, returning it's calling index.…",54,[[["self"],[R[188]]],["u32"]]],[11,"push_signatures",E,"Push signatures in the module, returning corresponding…",54,[[["self"],["vec",[R[188]]],[R[188]]],[["u32"],["vec",["u32"]]]]],[11,"push_import",E,"Push import entry to module. Note that this does not…",54,[[["self"],[R[147]]],["u32"]]],[11,"push_export",E,"Push export entry to module.",54,[[["self"],[R[154]]],["u32"]]],[11,R[4169],E,"Add new function using dedicated builder",54,[[],[R[192]]]],[11,"memory",E,"Add new linear memory using dedicated builder",54,[[],["memorybuilder"]]],[11,"table",E,"Add new table using dedicated builder",54,[[],["tablebuilder"]]],[11,R[178],E,"Define functions section",54,[[],[R[193]]]],[11,"with_export",E,"With inserted export entry",54,[[[R[154]]],["self"]]],[11,"with_import",E,"With inserted import entry",54,[[[R[147]]],["self"]]],[11,"import",E,"Import entry builder # Examples ``` use…",54,[[],[R[194]]]],[11,"with_global",E,"With global variable",54,[[[R[152]]],["self"]]],[11,"with_table",E,"With table",54,[[[R[150]]],["self"]]],[11,"export",E,"Export entry builder # Examples ``` use…",54,[[],[R[195]]]],[11,"global",E,"Glboal entry builder # Examples ``` use…",54,[[],[R[196]]]],[11,"with_data_segment",E,"Add data segment to the builder",54,[[[R[156]]],["self"]]],[11,"data",E,"Data entry builder",54,[[],["datasegmentbuilder"]]],[11,"build",E,"Build module (final step)",54,[[]]],[11,"new",E,R[197],55,[[],["self"]]],[11,R[198],E,"New builder with callback function specified",55,[[["f"]],["self"]]],[11,"with_param",E,"Add argument to signature builder",55,[[[R[158]]],["self"]]],[11,"with_params",E,"Add multiple arguments to signature builder",55,[[[R[158]],["vec",[R[158]]]],["self"]]],[11,"with_return_type",E,"Override signature return type",55,[[[R[158]],["option",[R[158]]]],["self"]]],[11,"param",E,"Start build new argument",55,[[],[R[207]]]],[11,"params",E,"Start build multiple arguments",55,[[],["valuetypesbuilder"]]],[11,R[199],E,"Start building return type",55,[[],["optionalvaluetypebuilder"]]],[11,"build",E,R[200],55,[[]]],[11,"build_sig",E,"Finish current builder returning intermediate `Signature`…",55,[[],[R[188]]]],[11,R[198],E,R[201],56,[[["f"]],["self"]]],[11,"val",E,"Set/override of type reference",56,[[["u32"]],["self"]]],[11,"build",E,R[200],56,[[]]],[11,"new",E,"New empty functions section builder",57,[[],["self"]]],[11,R[198],E,R[201],57,[[["f"]],["self"]]],[11,R[204],E,"Push new signature into the builder output",57,[[[R[188]]],["self"]]],[11,"type_ref",E,"Start building new signature with `TypeRefBuilder`",57,[[],["typerefbuilder"]]],[11,R[188],E,"Start building new signature with dedicated builder",57,[[],[R[202]]]],[11,"build",E,"Finalize builder spawning element",57,[[]]],[11,"bind",E,"Bind signature list",57,[[]]],[11,R[198],E,"New body (code) builder given the chain callback",58,[[["f"]],["self"]]],[11,"with_func",E,"Set/override entirely with FuncBody struct",58,[[[R[203]]],["self"]]],[11,"with_locals",E,"Extend function local list with new entries",58,[[["local"],["vec",["local"]]],["self"]]],[11,"with_instructions",E,"Set code of the function",58,[[[R[169]]],["self"]]],[11,"build",E,"Finish current builder spawning resulting struct",58,[[]]],[11,"new",E,"New function builder",59,[[],["self"]]],[11,R[198],E,"New function builder with chained callback",59,[[["f"]],["self"]]],[11,"main",E,"Set that this function is main entry point",59,[[],["self"]]],[11,R[188],E,"Start signature builder of the function",59,[[],[R[202]]]],[11,R[204],E,"Override current signature entirely with new one from…",59,[[[R[188]]],["self"]]],[11,"body",E,"Start code (body) builder",59,[[],["funcbodybuilder"]]],[11,"with_body",E,"Set body (code) for this function",59,[[[R[203]]],["self"]]],[11,"build",E,"Finalize current builder spawning resulting struct in the…",59,[[]]],[11,"new",E,"New import builder",60,[[],["self"]]],[11,R[198],E,"New import builder with callback (in chained context)",60,[[["f"]],["self"]]],[11,"module",E,"Set/override module name",60,[[["str"]],["self"]]],[11,"field",E,"Set/override field name",60,[[["str"]],["self"]]],[11,"path",E,"Set/override both module name and field name",60,[[["str"]],["self"]]],[11,"with_external",E,"Set/override external mapping for this import",60,[[[R[160]]],["self"]]],[11,R[160],E,"Start new external mapping builder",60,[[],["importexternalbuilder"]]],[11,"build",E,"Finalize current builder spawning the resulting struct",60,[[]]],[11,"new",E,"New memory builder",61,[[],["self"]]],[11,R[198],E,"New memory builder with callback (in chained context)",61,[[["f"]],["self"]]],[11,"with_min",E,"Set/override minimum size",61,[[["u32"]],["self"]]],[11,"with_max",E,"Set/override maximum size",61,[[["u32"],["option",["u32"]]],["self"]]],[11,"with_data",E,"Push new static region with initialized offset expression…",61,[[["u32"],["vec",["u8"]],["u8"]],["self"]]],[11,"build",E,"Finalize current builder, spawning resulting struct",61,[[]]],[11,"new",E,"New table builder",62,[[],["self"]]],[11,R[198],E,"New table builder with callback in chained context",62,[[["f"]],["self"]]],[11,"with_min",E,"Set/override minimum length",62,[[["u32"]],["self"]]],[11,"with_max",E,"Set/override maximum length",62,[[["u32"],["option",["u32"]]],["self"]]],[11,"with_element",E,"Generate initialization expression and element values on…",62,[[["u32"],["vec",["u32"]]],["self"]]],[11,"build",E,R[208],62,[[]]],[11,"new",E,"New export builder",63,[[],["self"]]],[11,R[198],E,"New export entry builder in the specified chained context",63,[[["f"]],["self"]]],[11,"field",E,"Set the field name of the export entry",63,[[["str"]],["self"]]],[11,"with_internal",E,"Specify the internal module mapping for this entry",63,[[[R[162]]],["self"]]],[11,R[162],E,"Start the internal builder for this export entry",63,[[],["exportinternalbuilder"]]],[11,"build",E,"Finalize export entry builder spawning the resulting struct",63,[[]]],[11,R[198],E,"New export entry internal mapping for the chained context",64,[[["f"]],["self"]]],[11,"func",E,"Map to function by index",64,[[["u32"]]]],[11,"memory",E,"Map to memory",64,[[["u32"]]]],[11,"table",E,"Map to table",64,[[["u32"]]]],[11,"global",E,"Map to global",64,[[["u32"]]]],[11,"new",E,"New global builder",65,[[],["self"]]],[11,R[198],E,"New global builder with callback (in chained context)",65,[[["f"]],["self"]]],[11,"with_type",E,"Set/override resulting global type",65,[[[R[158]]],["self"]]],[11,"mutable",E,"Set mutabilty to true",65,[[],["self"]]],[11,R[205],E,"Set initialization expression instruction for this global…",65,[[[R[165]]],["self"]]],[11,R[206],E,"Start value type builder",65,[[],[R[207]]]],[11,"build",E,R[208],65,[[]]],[11,"new",E,"New data segment builder",66,[[],["self"]]],[11,R[198],E,"New data segment builder inside the chain context",66,[[["f"]],["self"]]],[11,"offset",E,"Set offset initialization instruction. `End` instruction…",66,[[[R[165]]],["self"]]],[11,"value",E,"Set the bytes value of the segment",66,[[["vec",["u8"]],["u8"]],["self"]]],[11,"build",E,"Finish current builder, spawning resulting struct",66,[[]]],[11,"into",R[121],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[24],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"],[T]]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[24],E,E,25,[[["self"]],[T]]],[11,R[25],E,E,25,[[["self"],[T]]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[24],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"],[T]]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[24],E,E,27,[[["self"]],[T]]],[11,R[25],E,E,27,[[["self"],[T]]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"],[T]]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[24],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"],[T]]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"],[T]]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[24],E,E,26,[[["self"]],[T]]],[11,R[25],E,E,26,[[["self"],[T]]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[24],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"],[T]]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[24],E,E,33,[[["self"]],[T]]],[11,R[25],E,E,33,[[["self"],[T]]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[24],E,E,31,[[["self"]],[T]]],[11,R[25],E,E,31,[[["self"],[T]]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[24],E,E,32,[[["self"]],[T]]],[11,R[25],E,E,32,[[["self"],[T]]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[24],E,E,30,[[["self"]],[T]]],[11,R[25],E,E,30,[[["self"],[T]]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[24],E,E,29,[[["self"]],[T]]],[11,R[25],E,E,29,[[["self"],[T]]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[24],E,E,34,[[["self"]],[T]]],[11,R[25],E,E,34,[[["self"],[T]]]],[11,R[20],E,E,34,[[[U]],[R[3]]]],[11,R[21],E,E,34,[[],[R[3]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[["self"]],[T]]],[11,R[26],E,E,34,[[["self"]],[R[46]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[24],E,E,35,[[["self"]],[T]]],[11,R[25],E,E,35,[[["self"],[T]]]],[11,R[20],E,E,35,[[[U]],[R[3]]]],[11,R[21],E,E,35,[[],[R[3]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[["self"]],[T]]],[11,R[26],E,E,35,[[["self"]],[R[46]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[24],E,E,67,[[["self"]],[T]]],[11,R[25],E,E,67,[[["self"],[T]]]],[11,R[20],E,E,67,[[[U]],[R[3]]]],[11,R[21],E,E,67,[[],[R[3]]]],[11,R[45],E,E,67,[[["self"]],[T]]],[11,R[22],E,E,67,[[["self"]],[T]]],[11,R[26],E,E,67,[[["self"]],[R[46]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[24],E,E,68,[[["self"]],[T]]],[11,R[25],E,E,68,[[["self"],[T]]]],[11,R[20],E,E,68,[[[U]],[R[3]]]],[11,R[21],E,E,68,[[],[R[3]]]],[11,R[45],E,E,68,[[["self"]],[T]]],[11,R[22],E,E,68,[[["self"]],[T]]],[11,R[26],E,E,68,[[["self"]],[R[46]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[24],E,E,69,[[["self"]],[T]]],[11,R[25],E,E,69,[[["self"],[T]]]],[11,R[20],E,E,69,[[[U]],[R[3]]]],[11,R[21],E,E,69,[[],[R[3]]]],[11,R[45],E,E,69,[[["self"]],[T]]],[11,R[22],E,E,69,[[["self"]],[T]]],[11,R[26],E,E,69,[[["self"]],[R[46]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[24],E,E,70,[[["self"]],[T]]],[11,R[25],E,E,70,[[["self"],[T]]]],[11,R[20],E,E,70,[[[U]],[R[3]]]],[11,R[21],E,E,70,[[],[R[3]]]],[11,R[45],E,E,70,[[["self"]],[T]]],[11,R[22],E,E,70,[[["self"]],[T]]],[11,R[26],E,E,70,[[["self"]],[R[46]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[24],E,E,71,[[["self"]],[T]]],[11,R[25],E,E,71,[[["self"],[T]]]],[11,R[20],E,E,71,[[[U]],[R[3]]]],[11,R[21],E,E,71,[[],[R[3]]]],[11,R[45],E,E,71,[[["self"]],[T]]],[11,R[22],E,E,71,[[["self"]],[T]]],[11,R[26],E,E,71,[[["self"]],[R[46]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[24],E,E,72,[[["self"]],[T]]],[11,R[25],E,E,72,[[["self"],[T]]]],[11,R[20],E,E,72,[[[U]],[R[3]]]],[11,R[21],E,E,72,[[],[R[3]]]],[11,R[45],E,E,72,[[["self"]],[T]]],[11,R[22],E,E,72,[[["self"]],[T]]],[11,R[26],E,E,72,[[["self"]],[R[46]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[24],E,E,73,[[["self"]],[T]]],[11,R[25],E,E,73,[[["self"],[T]]]],[11,R[20],E,E,73,[[[U]],[R[3]]]],[11,R[21],E,E,73,[[],[R[3]]]],[11,R[45],E,E,73,[[["self"]],[T]]],[11,R[22],E,E,73,[[["self"]],[T]]],[11,R[26],E,E,73,[[["self"]],[R[46]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[24],E,E,74,[[["self"]],[T]]],[11,R[25],E,E,74,[[["self"],[T]]]],[11,R[20],E,E,74,[[[U]],[R[3]]]],[11,R[21],E,E,74,[[],[R[3]]]],[11,R[45],E,E,74,[[["self"]],[T]]],[11,R[22],E,E,74,[[["self"]],[T]]],[11,R[26],E,E,74,[[["self"]],[R[46]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[24],E,E,75,[[["self"]],[T]]],[11,R[25],E,E,75,[[["self"],[T]]]],[11,R[20],E,E,75,[[[U]],[R[3]]]],[11,R[21],E,E,75,[[],[R[3]]]],[11,R[45],E,E,75,[[["self"]],[T]]],[11,R[22],E,E,75,[[["self"]],[T]]],[11,R[26],E,E,75,[[["self"]],[R[46]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[24],E,E,76,[[["self"]],[T]]],[11,R[25],E,E,76,[[["self"],[T]]]],[11,R[20],E,E,76,[[[U]],[R[3]]]],[11,R[21],E,E,76,[[],[R[3]]]],[11,R[45],E,E,76,[[["self"]],[T]]],[11,R[22],E,E,76,[[["self"]],[T]]],[11,R[26],E,E,76,[[["self"]],[R[46]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[24],E,E,28,[[["self"]],[T]]],[11,R[25],E,E,28,[[["self"],[T]]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[24],E,E,36,[[["self"]],[T]]],[11,R[25],E,E,36,[[["self"],[T]]]],[11,R[20],E,E,36,[[[U]],[R[3]]]],[11,R[21],E,E,36,[[],[R[3]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[22],E,E,36,[[["self"]],[T]]],[11,R[26],E,E,36,[[["self"]],[R[46]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[24],E,E,37,[[["self"]],[T]]],[11,R[25],E,E,37,[[["self"],[T]]]],[11,R[20],E,E,37,[[[U]],[R[3]]]],[11,R[21],E,E,37,[[],[R[3]]]],[11,R[45],E,E,37,[[["self"]],[T]]],[11,R[22],E,E,37,[[["self"]],[T]]],[11,R[26],E,E,37,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[24],E,E,38,[[["self"]],[T]]],[11,R[25],E,E,38,[[["self"],[T]]]],[11,R[20],E,E,38,[[[U]],[R[3]]]],[11,R[21],E,E,38,[[],[R[3]]]],[11,R[45],E,E,38,[[["self"]],[T]]],[11,R[22],E,E,38,[[["self"]],[T]]],[11,R[26],E,E,38,[[["self"]],[R[46]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[24],E,E,40,[[["self"]],[T]]],[11,R[25],E,E,40,[[["self"],[T]]]],[11,R[20],E,E,40,[[[U]],[R[3]]]],[11,R[21],E,E,40,[[],[R[3]]]],[11,R[45],E,E,40,[[["self"]],[T]]],[11,R[22],E,E,40,[[["self"]],[T]]],[11,R[26],E,E,40,[[["self"]],[R[46]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[24],E,E,39,[[["self"]],[T]]],[11,R[25],E,E,39,[[["self"],[T]]]],[11,R[20],E,E,39,[[[U]],[R[3]]]],[11,R[21],E,E,39,[[],[R[3]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[["self"]],[T]]],[11,R[26],E,E,39,[[["self"]],[R[46]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[24],E,E,41,[[["self"]],[T]]],[11,R[25],E,E,41,[[["self"],[T]]]],[11,R[20],E,E,41,[[[U]],[R[3]]]],[11,R[21],E,E,41,[[],[R[3]]]],[11,R[45],E,E,41,[[["self"]],[T]]],[11,R[22],E,E,41,[[["self"]],[T]]],[11,R[26],E,E,41,[[["self"]],[R[46]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[24],E,E,42,[[["self"]],[T]]],[11,R[25],E,E,42,[[["self"],[T]]]],[11,R[20],E,E,42,[[[U]],[R[3]]]],[11,R[21],E,E,42,[[],[R[3]]]],[11,R[45],E,E,42,[[["self"]],[T]]],[11,R[22],E,E,42,[[["self"]],[T]]],[11,R[26],E,E,42,[[["self"]],[R[46]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[211],E,E,43,[[],["i"]]],[11,R[24],E,E,43,[[["self"]],[T]]],[11,R[25],E,E,43,[[["self"],[T]]]],[11,R[20],E,E,43,[[[U]],[R[3]]]],[11,R[21],E,E,43,[[],[R[3]]]],[11,R[45],E,E,43,[[["self"]],[T]]],[11,R[22],E,E,43,[[["self"]],[T]]],[11,R[26],E,E,43,[[["self"]],[R[46]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[24],E,E,44,[[["self"]],[T]]],[11,R[25],E,E,44,[[["self"],[T]]]],[11,R[20],E,E,44,[[[U]],[R[3]]]],[11,R[21],E,E,44,[[],[R[3]]]],[11,R[45],E,E,44,[[["self"]],[T]]],[11,R[22],E,E,44,[[["self"]],[T]]],[11,R[26],E,E,44,[[["self"]],[R[46]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[24],E,E,45,[[["self"]],[T]]],[11,R[25],E,E,45,[[["self"],[T]]]],[11,R[20],E,E,45,[[[U]],[R[3]]]],[11,R[21],E,E,45,[[],[R[3]]]],[11,R[45],E,E,45,[[["self"]],[T]]],[11,R[22],E,E,45,[[["self"]],[T]]],[11,R[26],E,E,45,[[["self"]],[R[46]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[24],E,E,46,[[["self"]],[T]]],[11,R[25],E,E,46,[[["self"],[T]]]],[11,R[20],E,E,46,[[[U]],[R[3]]]],[11,R[21],E,E,46,[[],[R[3]]]],[11,R[45],E,E,46,[[["self"]],[T]]],[11,R[22],E,E,46,[[["self"]],[T]]],[11,R[26],E,E,46,[[["self"]],[R[46]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[24],E,E,47,[[["self"]],[T]]],[11,R[25],E,E,47,[[["self"],[T]]]],[11,R[20],E,E,47,[[[U]],[R[3]]]],[11,R[21],E,E,47,[[],[R[3]]]],[11,R[45],E,E,47,[[["self"]],[T]]],[11,R[22],E,E,47,[[["self"]],[T]]],[11,R[26],E,E,47,[[["self"]],[R[46]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[24],E,E,48,[[["self"]],[T]]],[11,R[25],E,E,48,[[["self"],[T]]]],[11,R[20],E,E,48,[[[U]],[R[3]]]],[11,R[21],E,E,48,[[],[R[3]]]],[11,R[45],E,E,48,[[["self"]],[T]]],[11,R[22],E,E,48,[[["self"]],[T]]],[11,R[26],E,E,48,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[78],E,E,8,[[["self"]],["string"]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[78],E,E,11,[[["self"]],["string"]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"],[T]]]],[11,R[78],E,E,13,[[["self"]],["string"]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"into",R[209],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[20],E,E,55,[[[U]],[R[3]]]],[11,R[21],E,E,55,[[],[R[3]]]],[11,R[45],E,E,55,[[["self"]],[T]]],[11,R[22],E,E,55,[[["self"]],[T]]],[11,R[26],E,E,55,[[["self"]],[R[46]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[20],E,E,57,[[[U]],[R[3]]]],[11,R[21],E,E,57,[[],[R[3]]]],[11,R[45],E,E,57,[[["self"]],[T]]],[11,R[22],E,E,57,[[["self"]],[T]]],[11,R[26],E,E,57,[[["self"]],[R[46]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[20],E,E,59,[[[U]],[R[3]]]],[11,R[21],E,E,59,[[],[R[3]]]],[11,R[45],E,E,59,[[["self"]],[T]]],[11,R[22],E,E,59,[[["self"]],[T]]],[11,R[26],E,E,59,[[["self"]],[R[46]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[20],E,E,56,[[[U]],[R[3]]]],[11,R[21],E,E,56,[[],[R[3]]]],[11,R[45],E,E,56,[[["self"]],[T]]],[11,R[22],E,E,56,[[["self"]],[T]]],[11,R[26],E,E,56,[[["self"]],[R[46]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[20],E,E,58,[[[U]],[R[3]]]],[11,R[21],E,E,58,[[],[R[3]]]],[11,R[45],E,E,58,[[["self"]],[T]]],[11,R[22],E,E,58,[[["self"]],[T]]],[11,R[26],E,E,58,[[["self"]],[R[46]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[20],E,E,51,[[[U]],[R[3]]]],[11,R[21],E,E,51,[[],[R[3]]]],[11,R[45],E,E,51,[[["self"]],[T]]],[11,R[22],E,E,51,[[["self"]],[T]]],[11,R[26],E,E,51,[[["self"]],[R[46]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[20],E,E,66,[[[U]],[R[3]]]],[11,R[21],E,E,66,[[],[R[3]]]],[11,R[45],E,E,66,[[["self"]],[T]]],[11,R[22],E,E,66,[[["self"]],[T]]],[11,R[26],E,E,66,[[["self"]],[R[46]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[20],E,E,63,[[[U]],[R[3]]]],[11,R[21],E,E,63,[[],[R[3]]]],[11,R[45],E,E,63,[[["self"]],[T]]],[11,R[22],E,E,63,[[["self"]],[T]]],[11,R[26],E,E,63,[[["self"]],[R[46]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[20],E,E,64,[[[U]],[R[3]]]],[11,R[21],E,E,64,[[],[R[3]]]],[11,R[45],E,E,64,[[["self"]],[T]]],[11,R[22],E,E,64,[[["self"]],[T]]],[11,R[26],E,E,64,[[["self"]],[R[46]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[20],E,E,65,[[[U]],[R[3]]]],[11,R[21],E,E,65,[[],[R[3]]]],[11,R[45],E,E,65,[[["self"]],[T]]],[11,R[22],E,E,65,[[["self"]],[T]]],[11,R[26],E,E,65,[[["self"]],[R[46]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[20],E,E,60,[[[U]],[R[3]]]],[11,R[21],E,E,60,[[],[R[3]]]],[11,R[45],E,E,60,[[["self"]],[T]]],[11,R[22],E,E,60,[[["self"]],[T]]],[11,R[26],E,E,60,[[["self"]],[R[46]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[20],E,E,77,[[[U]],[R[3]]]],[11,R[21],E,E,77,[[],[R[3]]]],[11,R[45],E,E,77,[[["self"]],[T]]],[11,R[22],E,E,77,[[["self"]],[T]]],[11,R[26],E,E,77,[[["self"]],[R[46]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[20],E,E,61,[[[U]],[R[3]]]],[11,R[21],E,E,61,[[],[R[3]]]],[11,R[45],E,E,61,[[["self"]],[T]]],[11,R[22],E,E,61,[[["self"]],[T]]],[11,R[26],E,E,61,[[["self"]],[R[46]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[20],E,E,54,[[[U]],[R[3]]]],[11,R[21],E,E,54,[[],[R[3]]]],[11,R[45],E,E,54,[[["self"]],[T]]],[11,R[22],E,E,54,[[["self"]],[T]]],[11,R[26],E,E,54,[[["self"]],[R[46]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[20],E,E,62,[[[U]],[R[3]]]],[11,R[21],E,E,62,[[],[R[3]]]],[11,R[45],E,E,62,[[["self"]],[T]]],[11,R[22],E,E,62,[[["self"]],[T]]],[11,R[26],E,E,62,[[["self"]],[R[46]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[20],E,E,52,[[[U]],[R[3]]]],[11,R[21],E,E,52,[[],[R[3]]]],[11,R[45],E,E,52,[[["self"]],[T]]],[11,R[22],E,E,52,[[["self"]],[T]]],[11,R[26],E,E,52,[[["self"]],[R[46]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[20],E,E,53,[[[U]],[R[3]]]],[11,R[21],E,E,53,[[],[R[3]]]],[11,R[45],E,E,53,[[["self"]],[T]]],[11,R[22],E,E,53,[[["self"]],[T]]],[11,R[26],E,E,53,[[["self"]],[R[46]]]],[11,R[173],R[121],E,67,[[["r"]],[R[3]]]],[11,R[173],E,E,76,[[["r"]],[R[3]]]],[11,R[173],E,E,68,[[["r"]],[R[3]]]],[11,R[173],E,E,71,[[["r"]],[R[3]]]],[11,R[173],E,E,69,[[["r"]],[R[3]]]],[11,R[173],E,E,73,[[["r"]],[R[3]]]],[11,R[173],E,E,74,[[["r"]],[R[3]]]],[11,R[173],E,E,72,[[["r"]],[R[3]]]],[11,R[173],E,E,75,[[["r"]],[R[3]]]],[11,R[173],E,E,70,[[["r"]],[R[3]]]],[11,R[173],E,E,14,[[["r"]],[R[3]]]],[11,R[173],E,E,16,[[["r"]],[R[3]]]],[11,R[173],E,E,4,[[["r"]],[R[3]]]],[11,R[173],E,E,17,[[["r"]],[R[3]]]],[11,R[173],E,E,18,[[["r"]],[R[3]]]],[11,R[173],E,E,19,[[["r"]],[R[3]]]],[11,R[173],E,E,20,[[["r"]],[R[3]]]],[11,R[173],E,E,21,[[["r"]],[R[3]]]],[11,R[173],E,E,22,[[["r"]],[R[3]]]],[11,R[173],E,E,23,[[["r"]],[R[3]]]],[11,R[173],E,E,24,[[["r"]],[R[3]]]],[11,R[173],E,E,25,[[["r"]],[R[3]]]],[11,R[173],E,E,26,[[["r"]],[R[3]]]],[11,R[173],E,E,27,[[["r"]],[R[3]]]],[11,R[173],E,E,7,[[["r"]],[R[3]]]],[11,R[173],E,E,8,[[["r"]],[R[3]]]],[11,R[173],E,E,9,[[["r"]],[R[3]]]],[11,R[173],E,E,28,[[["r"]],[R[3]]]],[11,R[173],E,E,10,[[["r"]],[R[3]]]],[11,R[173],E,E,29,[[["r"]],[R[3]]]],[11,R[173],E,E,30,[[["r"]],[R[3]]]],[11,R[173],E,E,31,[[["r"]],[R[3]]]],[11,R[173],E,E,32,[[["r"]],[R[3]]]],[11,R[173],E,E,5,[[["r"]],[R[3]]]],[11,R[173],E,E,33,[[["r"]],[R[3]]]],[11,R[173],E,E,6,[[["r"]],[R[3]]]],[11,R[173],E,E,34,[[["r"]],[R[3]]]],[11,R[173],E,E,35,[[["r"]],[R[3]]]],[11,R[173],E,E,36,[[["r"]],[R[3]]]],[11,R[173],E,E,37,[[["r"]],[R[3]]]],[11,R[173],E,E,11,[[["r"]],[R[3]]]],[11,R[173],E,E,38,[[["r"]],[R[3]]]],[11,R[173],E,E,39,[[["r"]],[R[3]]]],[11,R[173],E,E,40,[[["r"]],[R[3]]]],[11,R[173],E,E,41,[[["r"]],[R[3]]]],[11,R[173],E,E,42,[[["r"]],[R[3]]]],[11,R[173],E,E,45,[[["r"]],[[R[3],[R[174],"error"]],[R[174]],["error"]]]],[11,R[173],E,E,12,[[["r"]],[R[3]]]],[11,R[173],E,E,2,[[["r"]],[R[3]]]],[11,R[132],E,E,67,[[["w"]],[R[3]]]],[11,R[132],E,E,76,[[["w"]],[R[3]]]],[11,R[132],E,E,68,[[["w"]],[R[3]]]],[11,R[132],E,E,71,[[["w"]],[R[3]]]],[11,R[132],E,E,69,[[["w"]],[R[3]]]],[11,R[132],E,E,73,[[["w"]],[R[3]]]],[11,R[132],E,E,74,[[["w"]],[R[3]]]],[11,R[132],E,E,72,[[["w"]],[R[3]]]],[11,R[132],E,E,75,[[["w"]],[R[3]]]],[11,R[132],E,E,70,[[["w"]],[R[3]]]],[11,R[132],E,E,0,[[["w"]],[R[3]]]],[11,R[132],E,E,16,[[["w"]],[R[3]]]],[11,R[132],E,E,4,[[["w"]],[R[3]]]],[11,R[132],E,E,17,[[["w"]],[R[3]]]],[11,R[132],E,E,18,[[["w"]],[R[3]]]],[11,R[132],E,E,19,[[["w"]],[R[3]]]],[11,R[132],E,E,20,[[["w"]],[R[3]]]],[11,R[132],E,E,21,[[["w"]],[R[3]]]],[11,R[132],E,E,22,[[["w"]],[R[3]]]],[11,R[132],E,E,23,[[["w"]],[R[3]]]],[11,R[132],E,E,24,[[["w"]],[R[3]]]],[11,R[132],E,E,25,[[["w"]],[R[3]]]],[11,R[132],E,E,26,[[["w"]],[R[3]]]],[11,R[132],E,E,27,[[["w"]],[R[3]]]],[11,R[132],E,E,7,[[["w"]],[R[3]]]],[11,R[132],E,E,8,[[["w"]],[R[3]]]],[11,R[132],E,E,9,[[["w"]],[R[3]]]],[11,R[132],E,E,28,[[["w"]],[R[3]]]],[11,R[132],E,E,10,[[["w"]],[R[3]]]],[11,R[132],E,E,29,[[["w"]],[R[3]]]],[11,R[132],E,E,30,[[["w"]],[R[3]]]],[11,R[132],E,E,31,[[["w"]],[R[3]]]],[11,R[132],E,E,32,[[["w"]],[R[3]]]],[11,R[132],E,E,5,[[["w"]],[R[3]]]],[11,R[132],E,E,33,[[["w"]],[R[3]]]],[11,R[132],E,E,6,[[["w"]],[R[3]]]],[11,R[132],E,E,34,[[["w"]],[R[3]]]],[11,R[132],E,E,35,[[["w"]],[R[3]]]],[11,R[132],E,E,11,[[["w"]],[R[3]]]],[11,R[132],E,E,36,[[["w"]],[R[3]]]],[11,R[132],E,E,37,[[["w"]],[R[3]]]],[11,R[132],E,E,38,[[["w"]],[R[3]]]],[11,R[132],E,E,39,[[["w"]],[R[3]]]],[11,R[132],E,E,40,[[["w"]],[R[3]]]],[11,R[132],E,E,41,[[["w"]],[R[3]]]],[11,R[132],E,E,42,[[["w"]],[R[3]]]],[11,R[132],E,E,43,[[["w"]],[R[3]]]],[11,R[132],E,E,44,[[["w"]],[[R[3],["error"]],["error"]]]],[11,R[132],E,E,45,[[["w"]],[[R[3],["error"]],["error"]]]],[11,R[132],E,E,46,[[["w"]],[[R[3],["error"]],["error"]]]],[11,R[132],E,E,47,[[["w"]],[[R[3],["error"]],["error"]]]],[11,R[132],E,E,48,[[["w"]],[[R[3],["error"]],["error"]]]],[11,R[132],E,E,12,[[["w"]],[[R[3],["error"]],["error"]]]],[11,"from",E,E,67,[[["u32"]],[R[210]]]],[11,"from",E,E,67,[[["usize"]],[R[210]]]],[11,"from",E,E,76,[[["u64"]],[R[212]]]],[11,"from",E,E,68,[[["u8"]],["self"]]],[11,"from",E,E,71,[[["i8"]],["varint7"]]],[11,"from",E,E,69,[[["u8"]],["self"]]],[11,"from",E,E,73,[[["i32"]],[R[216]]]],[11,"from",E,E,74,[[["i64"]],[R[217]]]],[11,"from",E,E,72,[[["u32"]],["self"]]],[11,"from",E,E,75,[[["u64"]],["self"]]],[11,"from",E,E,70,[[["bool"]],["self"]]],[11,"from",E,E,13,[[],["self"]]],[11,R[211],E,E,43,[[],[R[485]]]],[11,"clone",E,E,67,[[["self"]],[R[210]]]],[11,"clone",E,E,76,[[["self"]],[R[212]]]],[11,"clone",E,E,68,[[["self"]],[R[215]]]],[11,"clone",E,E,71,[[["self"]],["varint7"]]],[11,"clone",E,E,69,[[["self"]],["uint8"]]],[11,"clone",E,E,73,[[["self"]],[R[216]]]],[11,"clone",E,E,74,[[["self"]],[R[217]]]],[11,"clone",E,E,72,[[["self"]],["uint32"]]],[11,"clone",E,E,75,[[["self"]],["uint64"]]],[11,"clone",E,E,70,[[["self"]],[R[218]]]],[11,"clone",E,E,14,[[["self"]],["countedlist"]]],[11,"clone",E,E,0,[[["self"]],["countedlistwriter"]]],[11,"clone",E,E,16,[[["self"]],["module"]]],[11,"clone",E,E,3,[[["self"]],[R[213]]]],[11,"clone",E,E,4,[[["self"]],[R[191]]]],[11,"clone",E,E,17,[[["self"]],[R[143]]]],[11,"clone",E,E,18,[[["self"]],[R[134]]]],[11,"clone",E,E,19,[[["self"]],[R[135]]]],[11,"clone",E,E,20,[[["self"]],[R[142]]]],[11,"clone",E,E,21,[[["self"]],[R[138]]]],[11,"clone",E,E,22,[[["self"]],[R[141]]]],[11,"clone",E,E,23,[[["self"]],[R[136]]]],[11,"clone",E,E,24,[[["self"]],[R[137]]]],[11,"clone",E,E,25,[[["self"]],[R[133]]]],[11,"clone",E,E,26,[[["self"]],[R[140]]]],[11,"clone",E,E,27,[[["self"]],[R[139]]]],[11,"clone",E,E,7,[[["self"]],["type"]]],[11,"clone",E,E,8,[[["self"]],[R[158]]]],[11,"clone",E,E,9,[[["self"]],[R[219]]]],[11,"clone",E,E,28,[[["self"]],[R[220]]]],[11,"clone",E,E,10,[[["self"]],[R[214]]]],[11,"clone",E,E,29,[[["self"]],[R[163]]]],[11,"clone",E,E,30,[[["self"]],[R[150]]]],[11,"clone",E,E,31,[[["self"]],[R[159]]]],[11,"clone",E,E,32,[[["self"]],[R[151]]]],[11,"clone",E,E,5,[[["self"]],[R[160]]]],[11,"clone",E,E,33,[[["self"]],[R[147]]]],[11,"clone",E,E,6,[[["self"]],[R[162]]]],[11,"clone",E,E,34,[[["self"]],[R[154]]]],[11,"clone",E,E,35,[[["self"]],[R[152]]]],[11,"clone",E,E,36,[[["self"]],[R[169]]]],[11,"clone",E,E,37,[[["self"]],[R[164]]]],[11,"clone",E,E,11,[[["self"]],[R[165]]]],[11,"clone",E,E,1,[[["self"]],[R[221]]]],[11,"clone",E,E,38,[[["self"]],["func"]]],[11,"clone",E,E,39,[[["self"]],["local"]]],[11,"clone",E,E,40,[[["self"]],[R[203]]]],[11,"clone",E,E,41,[[["self"]],[R[155]]]],[11,"clone",E,E,42,[[["self"]],[R[156]]]],[11,"clone",E,E,43,[[["self"]],[R[172]]]],[11,"clone",E,E,44,[[["self"]],[R[145]]]],[11,"clone",E,E,45,[[["self"]],[R[174]]]],[11,"clone",E,E,46,[[["self"]],[R[175]]]],[11,"clone",E,E,47,[[["self"]],[R[176]]]],[11,"clone",E,E,48,[[["self"]],[R[222]]]],[11,"clone",E,E,12,[[["self"]],[R[223]]]],[11,"clone",E,E,13,[[["self"]],["error"]]],[11,R[90],E,E,16,[[],["self"]]],[11,R[90],E,E,17,[[],[R[143]]]],[11,R[90],E,E,18,[[],[R[134]]]],[11,R[90],E,E,19,[[],[R[135]]]],[11,R[90],E,E,20,[[],[R[142]]]],[11,R[90],E,E,21,[[],[R[138]]]],[11,R[90],E,E,22,[[],[R[141]]]],[11,R[90],E,E,23,[[],[R[136]]]],[11,R[90],E,E,24,[[],[R[137]]]],[11,R[90],E,E,25,[[],[R[133]]]],[11,R[90],E,E,26,[[],[R[140]]]],[11,R[90],E,E,27,[[],[R[139]]]],[11,R[90],E,E,28,[[],["self"]]],[11,R[90],E,E,43,[[],[R[172]]]],[11,R[90],E,E,46,[[],[R[175]]]],[11,R[90],E,E,47,[[],[R[176]]]],[11,R[90],R[209],E,51,[[],["self"]]],[11,R[90],E,E,52,[[],["self"]]],[11,"eq",R[121],E,67,[[[R[210]],["self"]],["bool"]]],[11,"ne",E,E,67,[[[R[210]],["self"]],["bool"]]],[11,"eq",E,E,76,[[[R[212]],["self"]],["bool"]]],[11,"ne",E,E,76,[[[R[212]],["self"]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[215]]],["bool"]]],[11,"ne",E,E,68,[[["self"],[R[215]]],["bool"]]],[11,"eq",E,E,71,[[["self"],["varint7"]],["bool"]]],[11,"ne",E,E,71,[[["self"],["varint7"]],["bool"]]],[11,"eq",E,E,69,[[["self"],["uint8"]],["bool"]]],[11,"ne",E,E,69,[[["self"],["uint8"]],["bool"]]],[11,"eq",E,E,73,[[[R[216]],["self"]],["bool"]]],[11,"ne",E,E,73,[[[R[216]],["self"]],["bool"]]],[11,"eq",E,E,74,[[[R[217]],["self"]],["bool"]]],[11,"ne",E,E,74,[[[R[217]],["self"]],["bool"]]],[11,"eq",E,E,72,[[["self"],["uint32"]],["bool"]]],[11,"ne",E,E,72,[[["self"],["uint32"]],["bool"]]],[11,"eq",E,E,75,[[["self"],["uint64"]],["bool"]]],[11,"ne",E,E,75,[[["self"],["uint64"]],["bool"]]],[11,"eq",E,E,70,[[["self"],[R[218]]],["bool"]]],[11,"ne",E,E,70,[[["self"],[R[218]]],["bool"]]],[11,"eq",E,E,16,[[["self"],["module"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["module"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[213]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[191]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[191]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[143]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[143]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[134]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[134]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[135]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[135]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[142]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[142]]],["bool"]]],[11,"eq",E,E,21,[[[R[138]],["self"]],["bool"]]],[11,"ne",E,E,21,[[[R[138]],["self"]],["bool"]]],[11,"eq",E,E,22,[[[R[141]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[141]],["self"]],["bool"]]],[11,"eq",E,E,23,[[[R[136]],["self"]],["bool"]]],[11,"ne",E,E,23,[[[R[136]],["self"]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[137]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[137]]],["bool"]]],[11,"eq",E,E,25,[[[R[133]],["self"]],["bool"]]],[11,"ne",E,E,25,[[[R[133]],["self"]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[140]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[140]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[139]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[139]]],["bool"]]],[11,"eq",E,E,7,[[["type"],["self"]],["bool"]]],[11,"ne",E,E,7,[[["type"],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[158]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[219]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[219]]],["bool"]]],[11,"eq",E,E,28,[[[R[220]],["self"]],["bool"]]],[11,"ne",E,E,28,[[[R[220]],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[214]]],["bool"]]],[11,"eq",E,E,29,[[[R[163]],["self"]],["bool"]]],[11,"ne",E,E,29,[[[R[163]],["self"]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[150]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[150]]],["bool"]]],[11,"eq",E,E,31,[[[R[159]],["self"]],["bool"]]],[11,"ne",E,E,31,[[[R[159]],["self"]],["bool"]]],[11,"eq",E,E,32,[[[R[151]],["self"]],["bool"]]],[11,"ne",E,E,32,[[[R[151]],["self"]],["bool"]]],[11,"eq",E,E,5,[[[R[160]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[160]],["self"]],["bool"]]],[11,"eq",E,E,33,[[[R[147]],["self"]],["bool"]]],[11,"ne",E,E,33,[[[R[147]],["self"]],["bool"]]],[11,"eq",E,E,6,[[[R[162]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[162]],["self"]],["bool"]]],[11,"eq",E,E,34,[[[R[154]],["self"]],["bool"]]],[11,"ne",E,E,34,[[[R[154]],["self"]],["bool"]]],[11,"eq",E,E,35,[[[R[152]],["self"]],["bool"]]],[11,"ne",E,E,35,[[[R[152]],["self"]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[169]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[169]]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[164]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[164]]],["bool"]]],[11,"eq",E,E,11,[[[R[165]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[165]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[221]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[221]]],["bool"]]],[11,"eq",E,E,38,[[["self"],["func"]],["bool"]]],[11,"ne",E,E,38,[[["self"],["func"]],["bool"]]],[11,"eq",E,E,39,[[["local"],["self"]],["bool"]]],[11,"ne",E,E,39,[[["local"],["self"]],["bool"]]],[11,"eq",E,E,40,[[[R[203]],["self"]],["bool"]]],[11,"ne",E,E,40,[[[R[203]],["self"]],["bool"]]],[11,"eq",E,E,41,[[[R[155]],["self"]],["bool"]]],[11,"ne",E,E,41,[[[R[155]],["self"]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[156]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[156]]],["bool"]]],[11,"eq",E,E,43,[[[R[172]],["self"]],["bool"]]],[11,"eq",E,E,44,[[[R[145]],["self"]],["bool"]]],[11,"ne",E,E,44,[[[R[145]],["self"]],["bool"]]],[11,"eq",E,E,45,[[[R[174]],["self"]],["bool"]]],[11,"ne",E,E,45,[[[R[174]],["self"]],["bool"]]],[11,"eq",E,E,46,[[["self"],[R[175]]],["bool"]]],[11,"ne",E,E,46,[[["self"],[R[175]]],["bool"]]],[11,"eq",E,E,47,[[[R[176]],["self"]],["bool"]]],[11,"ne",E,E,47,[[[R[176]],["self"]],["bool"]]],[11,"eq",E,E,48,[[[R[222]],["self"]],["bool"]]],[11,"ne",E,E,48,[[[R[222]],["self"]],["bool"]]],[11,"eq",E,E,12,[[[R[223]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[223]],["self"]],["bool"]]],[11,"eq",R[209],E,52,[[["self"],[R[224]]],["bool"]]],[11,"ne",E,E,52,[[["self"],[R[224]]],["bool"]]],[11,"eq",E,E,53,[[[R[225]],["self"]],["bool"]]],[11,"ne",E,E,53,[[[R[225]],["self"]],["bool"]]],[11,"fmt",R[121],E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,76,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,74,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,75,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,70,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[209],E,52,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[37]]],[R[3]]]],[11,"hash",R[121],E,7,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,R[293],E,"Create an `IndexMap` from an iterator.",43,[[["i"]],["self"]]],[11,R[38],E,E,13,[[["self"]],["str"]]]],"p":[[3,R[226]],[3,R[227]],[3,R[228]],[4,R[229]],[4,"Section"],[4,"External"],[4,"Internal"],[4,"Type"],[4,R[230]],[4,R[231]],[4,R[232]],[4,R[233]],[4,R[234]],[4,"Error"],[3,R[235]],[3,R[236]],[3,"Module"],[3,R[237]],[3,R[238]],[3,R[239]],[3,R[240]],[3,R[241]],[3,R[242]],[3,R[243]],[3,R[244]],[3,R[245]],[3,R[246]],[3,R[247]],[3,R[248]],[3,R[249]],[3,R[250]],[3,R[251]],[3,R[252]],[3,R[253]],[3,R[254]],[3,R[255]],[3,R[256]],[3,"InitExpr"],[3,"Func"],[3,"Local"],[3,"FuncBody"],[3,R[257]],[3,R[258]],[3,"IndexMap"],[3,R[259]],[3,R[260]],[3,R[261]],[3,R[262]],[3,R[263]],[8,R[264]],[8,R[265]],[3,R[266]],[3,R[267]],[3,R[268]],[3,R[269]],[3,R[270]],[3,R[271]],[3,R[272]],[3,R[273]],[3,R[274]],[3,R[275]],[3,R[276]],[3,R[277]],[3,R[278]],[3,R[279]],[3,R[280]],[3,R[281]],[3,R[282]],[3,"VarUint7"],[3,"Uint8"],[3,"VarUint1"],[3,"VarInt7"],[3,"Uint32"],[3,"VarInt32"],[3,"VarInt64"],[3,"Uint64"],[3,R[283]],[3,"Identity"]]};
searchIndex["parking_lot"]={"doc":"This library provides implementations of `Mutex`,…","i":[[3,"Condvar","parking_lot","A Condition Variable",N,N],[3,R[1823],E,"A type indicating whether a timed wait on a condition…",N,N],[3,"Once",E,"A synchronization primitive which can be used to run a…",N,N],[3,"RawMutex",E,"Raw mutex type backed by the parking lot.",N,N],[3,R[892],E,"Raw reader-writer lock type backed by the parking lot.",N,N],[3,R[1824],E,"Implementation of the `GetThreadId` trait for…",N,N],[4,"OnceState",E,"Current state of a `Once`.",N,N],[13,"New",E,"A closure has not been executed yet",0,N],[13,"Poisoned",E,"A closure was executed but panicked.",0,N],[13,"InProgress",E,"A thread is currently executing a closure.",0,N],[13,"Done",E,"A closure has completed successfully.",0,N],[11,"timed_out",E,"Returns whether the wait was known to have timed out.",1,[[["self"]],["bool"]]],[11,"new",E,"Creates a new condition variable which is ready to be…",2,[[],["condvar"]]],[11,"notify_one",E,"Wakes up one blocked thread on this condvar.",2,[[["self"]],["bool"]]],[11,"notify_all",E,"Wakes up all blocked threads on this condvar.",2,[[["self"]],["usize"]]],[11,"wait",E,"Blocks the current thread until this condition variable…",2,[[["self"],[R[808]]]]],[11,"wait_until",E,R[1785],2,[[["instant"],["self"],[R[808]]],[R[1786]]]],[11,"wait_for",E,R[1785],2,[[[R[3770]],["self"],[R[808]]],[R[1786]]]],[11,"poisoned",E,"Returns whether the associated `Once` has been poisoned.",0,[[["self"]],["bool"]]],[11,"done",E,"Returns whether the associated `Once` has successfully…",0,[[["self"]],["bool"]]],[11,"new",E,"Creates a new `Once` value.",3,[[],["once"]]],[11,"state",E,"Returns the current state of this `Once`.",3,[[["self"]],["oncestate"]]],[11,R[502],E,"Performs an initialization routine once and only once. The…",3,[[["self"],["f"]]]],[11,"call_once_force",E,"Performs the same function as `call_once` except ignores…",3,[[["self"],["f"]]]],[6,R[880],E,R[1787],N,N],[6,"Mutex",E,R[1788],N,N],[6,R[879],E,R[1789],N,N],[6,R[883],E,R[1790],N,N],[6,R[881],E,R[1791],N,N],[6,R[882],E,R[1792],N,N],[6,R[887],E,R[1793],N,N],[6,R[888],E,R[1794],N,N],[6,"RwLock",E,R[1795],N,N],[6,R[884],E,R[1796],N,N],[6,R[886],E,R[1797],N,N],[6,R[885],E,R[1798],N,N],[17,"ONCE_INIT",E,"Initialization value for static `Once` values.",N,N],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"clone",E,E,1,[[["self"]],[R[1786]]]],[11,"clone",E,E,0,[[["self"]],["oncestate"]]],[11,R[90],E,E,2,[[],["condvar"]]],[11,R[90],E,E,3,[[],["once"]]],[11,"eq",E,E,1,[[["self"],[R[1786]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1786]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["oncestate"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"lock",E,E,4,[[["self"]]]],[11,R[854],E,E,4,[[["self"]],["bool"]]],[11,"unlock",E,E,4,[[["self"]]]],[11,R[814],E,E,4,[[["self"]]]],[11,"bump",E,E,4,[[["self"]]]],[11,R[824],E,E,4,[[["instant"],["self"]],["bool"]]],[11,R[823],E,E,4,[[["self"],[R[3770]]],["bool"]]],[11,R[1799],E,E,6,[[["self"]],["usize"]]],[11,R[1800],E,E,5,[[["self"]]]],[11,R[1801],E,E,5,[[["self"]],["bool"]]],[11,R[1802],E,E,5,[[["self"]]]],[11,R[1803],E,E,5,[[["self"]]]],[11,R[1804],E,E,5,[[["self"]],["bool"]]],[11,R[1805],E,E,5,[[["self"]]]],[11,R[1806],E,E,5,[[["self"]]]],[11,R[1807],E,E,5,[[["self"]]]],[11,R[873],E,E,5,[[["self"]]]],[11,R[875],E,E,5,[[["self"]]]],[11,R[847],E,E,5,[[["self"]]]],[11,R[1808],E,E,5,[[["self"]],["bool"]]],[11,R[1809],E,E,5,[[["self"]],["bool"]]],[11,R[1810],E,E,5,[[["self"],[R[3770]]],["bool"]]],[11,R[1811],E,E,5,[[["instant"],["self"]],["bool"]]],[11,R[1812],E,E,5,[[["self"]]]],[11,R[1813],E,E,5,[[["self"]],["bool"]]],[11,R[1814],E,E,5,[[["self"]],["bool"]]],[11,R[1815],E,E,5,[[["self"]],["bool"]]],[11,R[1816],E,E,5,[[["self"]]]],[11,R[1817],E,E,5,[[["self"]],["bool"]]],[11,R[1818],E,E,5,[[["self"]]]],[11,"upgrade",E,E,5,[[["self"]]]],[11,R[863],E,E,5,[[["self"]],["bool"]]],[11,R[1819],E,E,5,[[["self"]]]],[11,R[877],E,E,5,[[["self"]]]],[11,R[1820],E,E,5,[[["self"]]]],[11,R[865],E,E,5,[[["self"]]]],[11,R[1821],E,E,5,[[["instant"],["self"]],["bool"]]],[11,R[1822],E,E,5,[[["self"],[R[3770]]],["bool"]]],[11,R[869],E,E,5,[[["instant"],["self"]],["bool"]]],[11,R[867],E,E,5,[[["self"],[R[3770]]],["bool"]]]],"p":[[4,"OnceState"],[3,R[1823]],[3,"Condvar"],[3,"Once"],[3,"RawMutex"],[3,R[892]],[3,R[1824]]]};
searchIndex["parking_lot_core"]={"doc":"This library exposes a low-level API for creating your own…","i":[[3,"ParkToken",R[1624],"A value associated with a parked thread which can be used…",N,N],[12,"0",E,E,0,N],[3,R[1628],E,"Result of an unpark operation.",N,N],[12,"unparked_threads",E,"The number of threads that were unparked.",1,N],[12,"requeued_threads",E,"The number of threads that were requeued.",1,N],[12,"have_more_threads",E,"Whether there are any threads remaining in the queue. This…",1,N],[12,"be_fair",E,"This is set to true on average once every 0.5ms for any…",1,N],[3,R[1629],E,"A value which is passed from an unparker to a parked thread.",N,N],[12,"0",E,E,2,N],[3,"SpinWait",E,"A counter used to perform exponential backoff in spin loops.",N,N],[4,"FilterOp",E,"Operation that `unpark_filter` should perform for each…",N,N],[13,"Unpark",E,"Unpark the thread and continue scanning the list of parked…",3,N],[13,"Skip",E,"Don't unpark the thread and continue scanning the list of…",3,N],[13,"Stop",E,"Don't unpark the thread and stop scanning the list of…",3,N],[4,"ParkResult",E,"Result of a park operation.",N,N],[13,"Unparked",E,"We were unparked by another thread with the given token.",4,N],[13,"Invalid",E,"The validation callback returned false.",4,N],[13,"TimedOut",E,"The timeout expired.",4,N],[4,"RequeueOp",E,"Operation that `unpark_requeue` should perform.",N,N],[13,"Abort",E,"Abort the operation without doing anything.",5,N],[13,"UnparkOneRequeueRest",E,"Unpark one thread and requeue the rest onto the target…",5,N],[13,"RequeueAll",E,"Requeue all threads onto the target queue.",5,N],[13,"UnparkOne",E,"Unpark one thread and leave the rest parked. No requeuing…",5,N],[13,"RequeueOne",E,"Requeue one thread and leave the rest parked on the…",5,N],[5,"park",E,"Parks the current thread in the queue associated with the…",N,[[[T],["usize"],[R[1627]],["option",["instant"]],["instant"],["b"],["v"]],[R[1626]]]],[5,"unpark_all",E,"Unparks all threads in the queue associated with the given…",N,[[[R[1625]],["usize"]],["usize"]]],[5,"unpark_filter",E,"Unparks a number of threads from the front of the queue…",N,[[["c"],["usize"],["f"]],[R[1623]]]],[5,"unpark_one",E,"Unparks one thread from the queue associated with the…",N,[[["c"],["usize"]],[R[1623]]]],[5,"unpark_requeue",E,"Removes all threads from the queue associated with…",N,[[["c"],["usize"],["v"]],[R[1623]]]],[11,"is_unparked",E,"Returns true if we were unparked by another thread.",4,[[],["bool"]]],[11,"new",E,"Creates a new `SpinWait`.",6,[[],["spinwait"]]],[11,"reset",E,"Resets a `SpinWait` to its initial state.",6,[[["self"]]]],[11,"spin",E,"Spins until the sleep threshold has been reached.",6,[[["self"]],["bool"]]],[11,"spin_no_yield",E,"Spins without yielding the thread to the OS.",6,[[["self"]]]],[0,"deadlock",E,"[Experimental] Deadlock detection",N,N],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock…",N,[[["usize"]]]],[5,"release_resource",E,"Release a resource identified by key in the deadlock…",N,[[["usize"]]]],[17,"DEFAULT_PARK_TOKEN",R[1624],"A default park token to use.",N,N],[17,"DEFAULT_UNPARK_TOKEN",E,"A default unpark token to use.",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"clone",E,E,4,[[["self"]],[R[1626]]]],[11,"clone",E,E,1,[[["self"]],[R[1623]]]],[11,"clone",E,E,5,[[["self"]],["requeueop"]]],[11,"clone",E,E,3,[[["self"]],["filterop"]]],[11,"clone",E,E,2,[[["self"]],[R[1625]]]],[11,"clone",E,E,0,[[["self"]],[R[1627]]]],[11,R[90],E,E,1,[[],[R[1623]]]],[11,R[90],E,E,6,[[],["spinwait"]]],[11,"eq",E,E,4,[[["self"],[R[1626]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[1626]]],["bool"]]],[11,"eq",E,E,1,[[[R[1623]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[1623]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["requeueop"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["filterop"]],["bool"]]],[11,"eq",E,E,2,[[[R[1625]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[1625]],["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[1627]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1627]]],["bool"]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]]],"p":[[3,"ParkToken"],[3,R[1628]],[3,R[1629]],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["paste"]={"doc":"The nightly-only [`concat_idents!`] macro in the Rust…","i":[[14,"item","paste",R[3132],N,N],[14,R[3133],E,R[3132],N,N],[14,"expr",E,R[3132],N,N]],"p":[]};
searchIndex["paste_impl"]={"doc":E,"i":[[14,"item","paste_impl",E,N,N],[14,R[3133],E,E,N,N],[24,"proc_macro_hack_expr",E,E,N,N]],"p":[]};
searchIndex["pbkdf2"]={"doc":"This crate implements the PBKDF2 key derivation function…","i":[[5,"pbkdf2","pbkdf2","Generic implementation of PBKDF2 algorithm.",N,[[["usize"]]]]],"p":[]};
searchIndex["ppv_lite86"]={"doc":E,"i":[[0,"x86_64",R[83],E,N,N],[3,"YesS3",R[85],E,N,N],[3,"NoS3",E,E,N,N],[3,"YesS4",E,E,N,N],[3,"NoS4",E,E,N,N],[3,"YesA1",E,E,N,N],[3,"NoA1",E,E,N,N],[3,"YesA2",E,E,N,N],[3,"NoA2",E,E,N,N],[3,"YesNI",E,E,N,N],[3,"NoNI",E,E,N,N],[3,R[97],E,E,N,N],[3,R[98],E,E,N,N],[19,R[87],E,"Generic wrapper for unparameterized storage of any of the…",N,N],[19,R[88],E,E,N,N],[19,R[89],E,E,N,N],[6,"SSE2",E,E,N,N],[6,"SSSE3",E,E,N,N],[6,"SSE41",E,E,N,N],[6,"AVX",E,"AVX but not AVX2: only 128-bit integer operations, but use…",N,N],[6,"AVX2",E,E,N,N],[11,"new128",E,E,0,[[],["self"]]],[11,R[82],E,E,0,[[]]],[11,"new128",E,E,1,[[],["self"]]],[11,R[82],E,E,1,[[]]],[8,"AndNot",R[83],E,N,N],[16,"Output",E,E,2,N],[10,"andnot",E,E,2,[[]]],[8,"BSwap",E,E,N,N],[10,"bswap",E,E,3,[[],["self"]]],[8,"ArithOps",E,"Ops that depend on word size",N,N],[8,"BitOps0",E,"Ops that are independent of word size and endian",N,N],[8,"BitOps32",E,E,N,N],[8,"BitOps64",E,E,N,N],[8,"BitOps128",E,E,N,N],[8,R[91],E,E,N,N],[10,"rotate_each_word_right7",E,E,4,[[],["self"]]],[10,"rotate_each_word_right8",E,E,4,[[],["self"]]],[10,"rotate_each_word_right11",E,E,4,[[],["self"]]],[10,"rotate_each_word_right12",E,E,4,[[],["self"]]],[10,"rotate_each_word_right16",E,E,4,[[],["self"]]],[10,"rotate_each_word_right20",E,E,4,[[],["self"]]],[10,"rotate_each_word_right24",E,E,4,[[],["self"]]],[10,"rotate_each_word_right25",E,E,4,[[],["self"]]],[8,R[92],E,E,N,N],[10,"rotate_each_word_right32",E,E,5,[[],["self"]]],[8,"RotateEachWord128",E,E,N,N],[8,R[93],E,E,N,N],[10,"unsafe_from",E,E,6,[[[T]],["self"]]],[8,"Vec2",E,"A vector composed of two elements, which may be words or…",N,N],[10,"extract",E,E,7,[[["u32"]],["w"]]],[10,"insert",E,E,7,[[["w"],["u32"]],["self"]]],[8,"Vec4",E,"A vector composed of four elements, which may be words or…",N,N],[10,"extract",E,E,8,[[["u32"]],["w"]]],[10,"insert",E,E,8,[[["w"],["u32"]],["self"]]],[8,"Words4",E,"A vector composed of four words; depending on their size,…",N,N],[10,"shuffle1230",E,E,9,[[],["self"]]],[10,"shuffle2301",E,E,9,[[],["self"]]],[10,"shuffle3012",E,E,9,[[],["self"]]],[8,R[94],E,"A vector composed one or more lanes each composed of four…",N,N],[10,"shuffle_lane_words1230",E,E,10,[[],["self"]]],[10,"shuffle_lane_words2301",E,E,10,[[],["self"]]],[10,"shuffle_lane_words3012",E,E,10,[[],["self"]]],[8,"Swap64",E,"Exchange neigboring ranges of bits of the specified size",N,N],[10,"swap1",E,E,11,[[],["self"]]],[10,"swap2",E,E,11,[[],["self"]]],[10,"swap4",E,E,11,[[],["self"]]],[10,"swap8",E,E,11,[[],["self"]]],[10,"swap16",E,E,11,[[],["self"]]],[10,"swap32",E,E,11,[[],["self"]]],[10,"swap64",E,E,11,[[],["self"]]],[8,"u32x4",E,E,N,N],[8,"u64x2",E,E,N,N],[8,"u128x1",E,E,N,N],[8,"u32x4x2",E,E,N,N],[8,"u64x2x2",E,E,N,N],[8,"u64x4",E,E,N,N],[8,"u128x2",E,E,N,N],[8,"u32x4x4",E,E,N,N],[8,"u64x2x4",E,E,N,N],[8,"u128x4",E,E,N,N],[8,R[95],E,"A vector composed of multiple 128-bit lanes.",N,N],[10,"to_lanes",E,"Split a multi-lane vector into single-lane vectors.",12,[[],["lanes"]]],[10,"from_lanes",E,"Build a multi-lane vector from individual lanes.",12,[[["lanes"]],["self"]]],[8,"VZip",E,"Combine single vectors into a multi-lane vector.",N,N],[10,"vzip",E,E,13,[[],["v"]]],[8,"Machine",E,E,N,N],[16,"u32x4",E,E,14,N],[16,"u64x2",E,E,14,N],[16,"u128x1",E,E,14,N],[16,"u32x4x2",E,E,14,N],[16,"u64x2x2",E,E,14,N],[16,"u64x4",E,E,14,N],[16,"u128x2",E,E,14,N],[16,"u32x4x4",E,E,14,N],[16,"u64x2x4",E,E,14,N],[16,"u128x4",E,E,14,N],[11,"unpack",E,E,14,[[["s"]],["store"]]],[11,"vec",E,E,14,[[["a"]],["v"]]],[11,"read_le",E,E,14,[[],["v"]]],[11,"read_be",E,E,14,[[],["v"]]],[10,R[86],E,E,14,[[],["self"]]],[8,"Store",E,E,N,N],[10,"unpack",E,E,15,[[["s"]],["self"]]],[8,R[96],E,E,N,N],[10,"unsafe_read_le",E,E,16,[[],["self"]]],[10,"unsafe_read_be",E,E,16,[[],["self"]]],[10,"write_le",E,E,16,[[]]],[10,"write_be",E,E,16,[[]]],[14,R[937],E,"Generate the full set of optimized implementations to take…",N,N],[14,"dispatch_light128",E,R[84],N,N],[14,"dispatch_light256",E,R[84],N,N],[11,"from",R[85],E,17,[[[T]],[T]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,"into",E,E,18,[[],[U]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,"into",E,E,19,[[],[U]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,"into",E,E,20,[[],[U]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,"into",E,E,21,[[],[U]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,"into",E,E,22,[[],[U]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,"into",E,E,23,[[],[U]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,"into",E,E,24,[[],[U]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,"into",E,E,25,[[],[U]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,"into",E,E,26,[[],[U]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[86],E,E,27,[[],["self"]]],[11,R[86],E,E,28,[[],["self"]]],[11,"unpack",E,E,29,[[[R[87]]],["self"]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,1,[[]]],[11,"into",E,E,1,[[]]],[11,"into",E,E,1,[[]]],[11,"clone",E,E,17,[[["self"]],["yess3"]]],[11,"clone",E,E,18,[[["self"]],["nos3"]]],[11,"clone",E,E,19,[[["self"]],["yess4"]]],[11,"clone",E,E,20,[[["self"]],["nos4"]]],[11,"clone",E,E,21,[[["self"]],["yesa1"]]],[11,"clone",E,E,22,[[["self"]],["noa1"]]],[11,"clone",E,E,23,[[["self"]],["yesa2"]]],[11,"clone",E,E,24,[[["self"]],["noa2"]]],[11,"clone",E,E,25,[[["self"]],["yesni"]]],[11,"clone",E,E,26,[[["self"]],["noni"]]],[11,"clone",E,E,27,[[["self"]],["ssemachine"]]],[11,"clone",E,E,28,[[["self"]],["avx2machine"]]],[11,"clone",E,E,29,[[["self"]],[R[87]]]],[11,"clone",E,E,0,[[["self"]],[R[88]]]],[11,"clone",E,E,1,[[["self"]],[R[89]]]],[11,R[90],E,E,29,[[],["self"]]],[11,R[90],E,E,0,[[],["self"]]],[11,R[90],E,E,1,[[],["self"]]],[11,"unpack",R[83],E,14,[[["s"]],["store"]]],[11,"vec",E,E,14,[[["a"]],["v"]]],[11,"read_le",E,E,14,[[],["v"]]],[11,"read_be",E,E,14,[[],["v"]]]],"p":[[19,R[88]],[19,R[89]],[8,"AndNot"],[8,"BSwap"],[8,R[91]],[8,R[92]],[8,R[93]],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,R[94]],[8,"Swap64"],[8,R[95]],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,R[96]],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,R[97]],[3,R[98]],[19,R[87]]]};
searchIndex["primitive_types"]={"doc":"Primitive types shared by Substrate and Parity Ethereum.","i":[[3,"U128","primitive_types",R[3616],N,N],[12,"0",E,E,0,N],[3,"U256",E,R[3616],N,N],[12,"0",E,E,1,N],[3,"U512",E,R[3616],N,N],[12,"0",E,E,2,N],[3,"H160",E,R[3717],N,N],[12,"0",E,E,3,N],[3,"H256",E,R[3718],N,N],[12,"0",E,E,4,N],[3,"H512",E,R[3719],N,N],[12,"0",E,E,5,N],[4,"Error",E,"Error type for conversion.",N,N],[13,"Overflow",E,"Overflow encountered.",6,N],[18,"MAX",E,R[3620],0,N],[11,R[3621],E,R[3622],0,[[["str"]],[[R[3],[R[3617]]],[R[3617]]]]],[11,"low_u32",E,R[3623],0,[[["self"]],["u32"]]],[11,"low_u64",E,R[3624],0,[[["self"]],["u64"]]],[11,"as_u32",E,R[3625],0,[[["self"]],["u32"]]],[11,"as_u64",E,R[3626],0,[[["self"]],["u64"]]],[11,"as_usize",E,R[3627],0,[[["self"]],["usize"]]],[11,"is_zero",E,R[3628],0,[[["self"]],["bool"]]],[11,"bits",E,R[3629],0,[[["self"]],["usize"]]],[11,"bit",E,R[3630],0,[[["self"],["usize"]],["bool"]]],[11,R[559],E,R[560],0,[[["self"]],["u32"]]],[11,R[542],E,R[560],0,[[["self"]],["u32"]]],[11,"byte",E,R[3631],0,[[["self"],["usize"]],["u8"]]],[11,R[3632],E,R[3633],0,[[["self"]]]],[11,R[3634],E,R[3635],0,[[["self"]]]],[11,"exp10",E,R[3636],0,[[["usize"]],["self"]]],[11,"zero",E,R[3637],0,[[],["self"]]],[11,"one",E,R[3638],0,[[],["self"]]],[11,R[536],E,R[3639],0,[[],["self"]]],[11,"div_mod",E,R[3640],0,[[]]],[11,"pow",E,R[3641],0,[[],["self"]]],[11,R[3642],E,R[3643],0,[[]]],[11,R[3644],E,R[3645],0,[[["u128"]]]],[11,R[3583],E,R[3646],0,[[["u128"]],["u128"]]],[11,R[1778],E,R[3647],0,[[["u128"]],[["option",["u128"]],["u128"]]]],[11,R[3648],E,R[3649],0,[[["u128"]]]],[11,R[3584],E,R[3650],0,[[["u128"]],["u128"]]],[11,R[1779],E,R[3651],0,[[["u128"]],[["option",["u128"]],["u128"]]]],[11,R[3652],E,R[3653],0,[[["u128"]]]],[11,R[3602],E,R[3654],0,[[["u128"]],["u128"]]],[11,R[1780],E,R[3655],0,[[["u128"]],[["option",["u128"]],["u128"]]]],[11,R[1781],E,R[3656],0,[[["u128"]],[["option",["u128"]],["u128"]]]],[11,R[3618],E,R[3657],0,[[["u128"]],[["option",["u128"]],["u128"]]]],[11,R[3658],E,R[3659],0,[[]]],[11,R[3619],E,R[3660],0,[[],[["option",["u128"]],["u128"]]]],[11,R[3661],E,R[3662],0,[[],["self"]]],[11,R[2870],E,R[3663],0,[[],["self"]]],[11,"low_u128",E,R[3664],0,[[["self"]],["u128"]]],[11,"as_u128",E,R[3665],0,[[["self"]],["u128"]]],[18,"MAX",E,R[3620],1,N],[11,R[3621],E,R[3622],1,[[["str"]],[[R[3],[R[3617]]],[R[3617]]]]],[11,"low_u32",E,R[3623],1,[[["self"]],["u32"]]],[11,"low_u64",E,R[3624],1,[[["self"]],["u64"]]],[11,"as_u32",E,R[3625],1,[[["self"]],["u32"]]],[11,"as_u64",E,R[3626],1,[[["self"]],["u64"]]],[11,"as_usize",E,R[3627],1,[[["self"]],["usize"]]],[11,"is_zero",E,R[3628],1,[[["self"]],["bool"]]],[11,"bits",E,R[3629],1,[[["self"]],["usize"]]],[11,"bit",E,R[3630],1,[[["self"],["usize"]],["bool"]]],[11,R[559],E,R[560],1,[[["self"]],["u32"]]],[11,R[542],E,R[560],1,[[["self"]],["u32"]]],[11,"byte",E,R[3631],1,[[["self"],["usize"]],["u8"]]],[11,R[3632],E,R[3633],1,[[["self"]]]],[11,R[3634],E,R[3635],1,[[["self"]]]],[11,"exp10",E,R[3636],1,[[["usize"]],["self"]]],[11,"zero",E,R[3637],1,[[],["self"]]],[11,"one",E,R[3638],1,[[],["self"]]],[11,R[536],E,R[3639],1,[[],["self"]]],[11,"div_mod",E,R[3640],1,[[]]],[11,"pow",E,R[3641],1,[[],["self"]]],[11,R[3642],E,R[3643],1,[[]]],[11,R[3644],E,R[3645],1,[[["u256"]]]],[11,R[3583],E,R[3646],1,[[["u256"]],["u256"]]],[11,R[1778],E,R[3647],1,[[["u256"]],[["u256"],["option",["u256"]]]]],[11,R[3648],E,R[3649],1,[[["u256"]]]],[11,R[3584],E,R[3650],1,[[["u256"]],["u256"]]],[11,R[1779],E,R[3651],1,[[["u256"]],[["u256"],["option",["u256"]]]]],[11,R[3652],E,R[3653],1,[[["u256"]]]],[11,R[3602],E,R[3654],1,[[["u256"]],["u256"]]],[11,R[1780],E,R[3655],1,[[["u256"]],[["u256"],["option",["u256"]]]]],[11,R[1781],E,R[3656],1,[[["u256"]],[["u256"],["option",["u256"]]]]],[11,R[3618],E,R[3657],1,[[["u256"]],[["u256"],["option",["u256"]]]]],[11,R[3658],E,R[3659],1,[[]]],[11,R[3619],E,R[3660],1,[[],[["u256"],["option",["u256"]]]]],[11,R[3661],E,R[3662],1,[[],["self"]]],[11,R[2870],E,R[3663],1,[[],["self"]]],[11,"low_u128",E,R[3664],1,[[["self"]],["u128"]]],[11,"as_u128",E,R[3665],1,[[["self"]],["u128"]]],[18,"MAX",E,R[3620],2,N],[11,R[3621],E,R[3622],2,[[["str"]],[[R[3],[R[3617]]],[R[3617]]]]],[11,"low_u32",E,R[3623],2,[[["self"]],["u32"]]],[11,"low_u64",E,R[3624],2,[[["self"]],["u64"]]],[11,"as_u32",E,R[3625],2,[[["self"]],["u32"]]],[11,"as_u64",E,R[3626],2,[[["self"]],["u64"]]],[11,"as_usize",E,R[3627],2,[[["self"]],["usize"]]],[11,"is_zero",E,R[3628],2,[[["self"]],["bool"]]],[11,"bits",E,R[3629],2,[[["self"]],["usize"]]],[11,"bit",E,R[3630],2,[[["self"],["usize"]],["bool"]]],[11,R[559],E,R[560],2,[[["self"]],["u32"]]],[11,R[542],E,R[560],2,[[["self"]],["u32"]]],[11,"byte",E,R[3631],2,[[["self"],["usize"]],["u8"]]],[11,R[3632],E,R[3633],2,[[["self"]]]],[11,R[3634],E,R[3635],2,[[["self"]]]],[11,"exp10",E,R[3636],2,[[["usize"]],["self"]]],[11,"zero",E,R[3637],2,[[],["self"]]],[11,"one",E,R[3638],2,[[],["self"]]],[11,R[536],E,R[3639],2,[[],["self"]]],[11,"div_mod",E,R[3640],2,[[]]],[11,"pow",E,R[3641],2,[[],["self"]]],[11,R[3642],E,R[3643],2,[[]]],[11,R[3644],E,R[3645],2,[[["u512"]]]],[11,R[3583],E,R[3646],2,[[["u512"]],["u512"]]],[11,R[1778],E,R[3647],2,[[["u512"]],[["option",["u512"]],["u512"]]]],[11,R[3648],E,R[3649],2,[[["u512"]]]],[11,R[3584],E,R[3650],2,[[["u512"]],["u512"]]],[11,R[1779],E,R[3651],2,[[["u512"]],[["option",["u512"]],["u512"]]]],[11,R[3652],E,R[3653],2,[[["u512"]]]],[11,R[3602],E,R[3654],2,[[["u512"]],["u512"]]],[11,R[1780],E,R[3655],2,[[["u512"]],[["option",["u512"]],["u512"]]]],[11,R[1781],E,R[3656],2,[[["u512"]],[["option",["u512"]],["u512"]]]],[11,R[3618],E,R[3657],2,[[["u512"]],[["option",["u512"]],["u512"]]]],[11,R[3658],E,R[3659],2,[[]]],[11,R[3619],E,R[3660],2,[[],[["option",["u512"]],["u512"]]]],[11,R[3661],E,R[3662],2,[[],["self"]]],[11,R[2870],E,R[3663],2,[[],["self"]]],[11,"low_u128",E,R[3664],2,[[["self"]],["u128"]]],[11,"as_u128",E,R[3665],2,[[["self"]],["u128"]]],[11,R[3668],E,R[3669],3,[[["u8"]],["h160"]]],[11,"zero",E,R[3670],3,[[],["h160"]]],[11,R[3847],E,R[3671],3,[[],["usize"]]],[11,R[2616],E,R[3672],3,[[["self"]]]],[11,R[3673],E,R[3674],3,[[["self"]]]],[11,R[3675],E,R[3666],3,[[["self"]]]],[11,R[3676],E,R[3666],3,[[["self"]]]],[11,R[3677],E,R[3678],3,[[]]],[11,"as_ptr",E,R[3679],3,[[["self"]]]],[11,R[600],E,R[3680],3,[[["self"]]]],[11,R[1746],E,R[3681],3,[[["self"]]]],[11,R[768],E,R[3682],3,[[],["self"]]],[11,"covers",E,R[3683],3,[[["self"]],["bool"]]],[11,"is_zero",E,R[3684],3,[[["self"]],["bool"]]],[11,R[3685],E,R[3686],3,[[["self"]],["u64"]]],[11,R[3687],E,R[3688],3,[[["self"]],["u64"]]],[11,R[3689],E,R[3690],3,[[["self"]],["u64"]]],[11,R[3691],E,R[3667],3,[[["u64"]],["self"]]],[11,R[3692],E,R[3667],3,[[["u64"]],["self"]]],[11,R[3693],E,R[3667],3,[[["u64"]],["self"]]],[11,R[3694],E,R[3695],3,[[["self"],["r"]]]],[11,R[3848],E,R[3696],3,[[["self"]]]],[11,R[3697],E,R[3698],3,[[["r"]],["self"]]],[11,"random",E,R[3699],3,[[],["self"]]],[11,R[3668],E,R[3669],4,[[["u8"]],["h256"]]],[11,"zero",E,R[3670],4,[[],["h256"]]],[11,R[3847],E,R[3671],4,[[],["usize"]]],[11,R[2616],E,R[3672],4,[[["self"]]]],[11,R[3673],E,R[3674],4,[[["self"]]]],[11,R[3675],E,R[3666],4,[[["self"]]]],[11,R[3676],E,R[3666],4,[[["self"]]]],[11,R[3677],E,R[3678],4,[[]]],[11,"as_ptr",E,R[3679],4,[[["self"]]]],[11,R[600],E,R[3680],4,[[["self"]]]],[11,R[1746],E,R[3681],4,[[["self"]]]],[11,R[768],E,R[3682],4,[[],["self"]]],[11,"covers",E,R[3683],4,[[["self"]],["bool"]]],[11,"is_zero",E,R[3684],4,[[["self"]],["bool"]]],[11,R[3685],E,R[3686],4,[[["self"]],["u64"]]],[11,R[3687],E,R[3688],4,[[["self"]],["u64"]]],[11,R[3689],E,R[3690],4,[[["self"]],["u64"]]],[11,R[3691],E,R[3667],4,[[["u64"]],["self"]]],[11,R[3692],E,R[3667],4,[[["u64"]],["self"]]],[11,R[3693],E,R[3667],4,[[["u64"]],["self"]]],[11,R[3694],E,R[3695],4,[[["self"],["r"]]]],[11,R[3848],E,R[3696],4,[[["self"]]]],[11,R[3697],E,R[3698],4,[[["r"]],["self"]]],[11,"random",E,R[3699],4,[[],["self"]]],[11,R[3668],E,R[3669],5,[[["u8"]],["h512"]]],[11,"zero",E,R[3670],5,[[],["h512"]]],[11,R[3847],E,R[3671],5,[[],["usize"]]],[11,R[2616],E,R[3672],5,[[["self"]]]],[11,R[3673],E,R[3674],5,[[["self"]]]],[11,R[3675],E,R[3666],5,[[["self"]]]],[11,R[3676],E,R[3666],5,[[["self"]]]],[11,R[3677],E,R[3678],5,[[]]],[11,"as_ptr",E,R[3679],5,[[["self"]]]],[11,R[600],E,R[3680],5,[[["self"]]]],[11,R[1746],E,R[3681],5,[[["self"]]]],[11,R[768],E,R[3682],5,[[],["self"]]],[11,"covers",E,R[3683],5,[[["self"]],["bool"]]],[11,"is_zero",E,R[3684],5,[[["self"]],["bool"]]],[11,R[3685],E,R[3686],5,[[["self"]],["u64"]]],[11,R[3687],E,R[3688],5,[[["self"]],["u64"]]],[11,R[3689],E,R[3690],5,[[["self"]],["u64"]]],[11,R[3691],E,R[3667],5,[[["u64"]],["self"]]],[11,R[3692],E,R[3667],5,[[["u64"]],["self"]]],[11,R[3693],E,R[3667],5,[[["u64"]],["self"]]],[11,R[3694],E,R[3695],5,[[["self"],["r"]]]],[11,R[3848],E,R[3696],5,[[["self"]]]],[11,R[3697],E,R[3698],5,[[["r"]],["self"]]],[11,"random",E,R[3699],5,[[],["self"]]],[11,"full_mul",E,R[3849],1,[[["u256"]],["u512"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[292],E,E,0,[[["self"]],["usize"]]],[11,R[3525],E,E,0,[[["self"],["f"]],["r"]]],[11,"encode",E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,0,[[["w"],["self"]]]],[11,"decode",E,E,0,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,0,[[],[[R[3],["error"]],["error"]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[["self"]],["string"]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[292],E,E,1,[[["self"]],["usize"]]],[11,R[3525],E,E,1,[[["self"],["f"]],["r"]]],[11,"encode",E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,1,[[["w"],["self"]]]],[11,"decode",E,E,1,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,1,[[],[[R[3],["error"]],["error"]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[78],E,E,2,[[["self"]],["string"]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[292],E,E,2,[[["self"]],["usize"]]],[11,R[3525],E,E,2,[[["self"],["f"]],["r"]]],[11,"encode",E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,2,[[["w"],["self"]]]],[11,"decode",E,E,2,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,2,[[],[[R[3],["error"]],["error"]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[78],E,E,3,[[["self"]],["string"]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[292],E,E,3,[[["self"]],["usize"]]],[11,R[3525],E,E,3,[[["self"],["f"]],["r"]]],[11,"encode",E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,3,[[["w"],["self"]]]],[11,"decode",E,E,3,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,3,[[],[[R[3],["error"]],["error"]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[78],E,E,4,[[["self"]],["string"]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[292],E,E,4,[[["self"]],["usize"]]],[11,R[3525],E,E,4,[[["self"],["f"]],["r"]]],[11,"encode",E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,4,[[["w"],["self"]]]],[11,"decode",E,E,4,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,4,[[],[[R[3],["error"]],["error"]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[["self"]],["string"]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[292],E,E,5,[[["self"]],["usize"]]],[11,R[3525],E,E,5,[[["self"],["f"]],["r"]]],[11,"encode",E,E,5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,5,[[["w"],["self"]]]],[11,"decode",E,E,5,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,5,[[],[[R[3],["error"]],["error"]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"as_ref",E,E,1,[[["self"]]]],[11,"as_ref",E,E,2,[[["self"]]]],[11,"as_ref",E,E,3,[[["self"]]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,"as_ref",E,E,5,[[["self"]]]],[11,"as_mut",E,E,3,[[["self"]]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"as_mut",E,E,5,[[["self"]]]],[11,"from",E,E,0,[[["u128"]],["u128"]]],[11,"from",E,E,0,[[],["self"]]],[11,"from",E,E,0,[[],["self"]]],[11,"from",E,E,0,[[["u64"]],["u128"]]],[11,"from",E,E,0,[[["u8"]],["u128"]]],[11,"from",E,E,0,[[["u16"]],["u128"]]],[11,"from",E,E,0,[[["u32"]],["u128"]]],[11,"from",E,E,0,[[["usize"]],["u128"]]],[11,"from",E,E,0,[[["i64"]],["u128"]]],[11,"from",E,E,0,[[["i8"]],["u128"]]],[11,"from",E,E,0,[[["i16"]],["u128"]]],[11,"from",E,E,0,[[["i32"]],["u128"]]],[11,"from",E,E,0,[[["isize"]],["u128"]]],[11,"from",E,E,0,[[],["u128"]]],[11,"from",E,E,0,[[["str"]],["self"]]],[11,"from",E,E,0,[[["u128"]],["u128"]]],[11,"from",E,E,0,[[["i128"]],["u128"]]],[11,"from",E,E,1,[[["u256"]],["u256"]]],[11,"from",E,E,1,[[],["self"]]],[11,"from",E,E,1,[[],["self"]]],[11,"from",E,E,1,[[["u64"]],["u256"]]],[11,"from",E,E,1,[[["u8"]],["u256"]]],[11,"from",E,E,1,[[["u16"]],["u256"]]],[11,"from",E,E,1,[[["u32"]],["u256"]]],[11,"from",E,E,1,[[["usize"]],["u256"]]],[11,"from",E,E,1,[[["i64"]],["u256"]]],[11,"from",E,E,1,[[["i8"]],["u256"]]],[11,"from",E,E,1,[[["i16"]],["u256"]]],[11,"from",E,E,1,[[["i32"]],["u256"]]],[11,"from",E,E,1,[[["isize"]],["u256"]]],[11,"from",E,E,1,[[],["u256"]]],[11,"from",E,E,1,[[["str"]],["self"]]],[11,"from",E,E,1,[[["u128"]],["u256"]]],[11,"from",E,E,1,[[["i128"]],["u256"]]],[11,"from",E,E,2,[[["u512"]],["u512"]]],[11,"from",E,E,2,[[],["self"]]],[11,"from",E,E,2,[[],["self"]]],[11,"from",E,E,2,[[["u64"]],["u512"]]],[11,"from",E,E,2,[[["u8"]],["u512"]]],[11,"from",E,E,2,[[["u16"]],["u512"]]],[11,"from",E,E,2,[[["u32"]],["u512"]]],[11,"from",E,E,2,[[["usize"]],["u512"]]],[11,"from",E,E,2,[[["i64"]],["u512"]]],[11,"from",E,E,2,[[["i8"]],["u512"]]],[11,"from",E,E,2,[[["i16"]],["u512"]]],[11,"from",E,E,2,[[["i32"]],["u512"]]],[11,"from",E,E,2,[[["isize"]],["u512"]]],[11,"from",E,E,2,[[],["u512"]]],[11,"from",E,E,2,[[["str"]],["self"]]],[11,"from",E,E,2,[[["u128"]],["u512"]]],[11,"from",E,E,2,[[["i128"]],["u512"]]],[11,"from",E,R[3701],3,[[],["self"]]],[11,"from",E,R[3700],3,[[],["self"]]],[11,"from",E,R[3700],3,[[],["self"]]],[11,"from",E,R[3701],4,[[],["self"]]],[11,"from",E,R[3700],4,[[],["self"]]],[11,"from",E,R[3700],4,[[],["self"]]],[11,"from",E,R[3701],5,[[],["self"]]],[11,"from",E,R[3700],5,[[],["self"]]],[11,"from",E,R[3700],5,[[],["self"]]],[11,"from",E,E,4,[[["h160"]],["h256"]]],[11,"from",E,E,3,[[["h256"]],["h160"]]],[11,"from",E,E,2,[[["u256"]],["u512"]]],[11,"from",E,E,2,[[["u128"]],["u512"]]],[11,"from",E,E,1,[[["u128"]],["u256"]]],[11,"from",E,E,2,[[["u256"]],["u512"]]],[11,"clone",E,E,0,[[["self"]],["u128"]]],[11,"clone",E,E,1,[[["self"]],["u256"]]],[11,"clone",E,E,2,[[["self"]],["u512"]]],[11,"clone",E,E,3,[[["self"]],["h160"]]],[11,"clone",E,E,4,[[["self"]],["h256"]]],[11,"clone",E,E,5,[[["self"]],["h512"]]],[11,R[90],E,E,0,[[],["self"]]],[11,R[90],E,E,1,[[],["self"]]],[11,R[90],E,E,2,[[],["self"]]],[11,R[90],E,E,3,[[],["self"]]],[11,R[90],E,E,4,[[],["self"]]],[11,R[90],E,E,5,[[],["self"]]],[11,"cmp",E,E,0,[[["u128"],["self"]],[R[105]]]],[11,"cmp",E,E,1,[[["u256"],["self"]],[R[105]]]],[11,"cmp",E,E,2,[[["u512"],["self"]],[R[105]]]],[11,"cmp",E,E,3,[[["self"]],[R[105]]]],[11,"cmp",E,E,4,[[["self"]],[R[105]]]],[11,"cmp",E,E,5,[[["self"]],[R[105]]]],[11,"eq",E,E,6,[[["error"],["self"]],["bool"]]],[11,"eq",E,E,0,[[["u128"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["u128"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["u256"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["u256"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["u512"],["self"]],["bool"]]],[11,"ne",E,E,2,[[["u512"],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"]],["bool"]]],[11,R[106],E,E,0,[[["u128"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,1,[[["u256"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,2,[[["u512"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,3,[[["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,4,[[["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[["self"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"div",E,E,0,[[[T]],["u128"]]],[11,"div",E,E,1,[[[T]],["u256"]]],[11,"div",E,E,2,[[[T]],["u512"]]],[11,"rem",E,E,0,[[[T]],["u128"]]],[11,"rem",E,E,1,[[[T]],["u256"]]],[11,"rem",E,E,2,[[[T]],["u512"]]],[11,"sub",E,E,0,[[[T]],["u128"]]],[11,"sub",E,E,1,[[[T]],["u256"]]],[11,"sub",E,E,2,[[[T]],["u512"]]],[11,R[20],E,E,0,[[["u256"]],[["error"],[R[3],["u128","error"]],["u128"]]]],[11,R[20],E,E,1,[[["u512"]],[["u256"],["error"],[R[3],["u256","error"]]]]],[11,R[20],E,E,0,[[["u512"]],[["error"],[R[3],["u128","error"]],["u128"]]]],[11,R[20],E,E,1,[[["u512"]],[["u256"],["error"],[R[3],["u256","error"]]]]],[11,R[457],E,E,0,[[["str"]],[["u128"],[R[3],["u128"]]]]],[11,R[457],E,E,1,[[["str"]],[[R[3],["u256"]],["u256"]]]],[11,R[457],E,E,2,[[["str"]],[["u512"],[R[3],["u512"]]]]],[11,R[457],E,R[3702],3,[[["str"]],[["h160"],[R[3],["h160",R[79]]],[R[79]]]]],[11,R[457],E,R[3702],4,[[["str"]],[["h256"],[R[3],["h256",R[79]]],[R[79]]]]],[11,R[457],E,R[3702],5,[[["str"]],[[R[79]],["h512"],[R[3],["h512",R[79]]]]]],[11,"add",E,E,0,[[[T]],["u128"]]],[11,"add",E,E,1,[[[T]],["u256"]]],[11,"add",E,E,2,[[[T]],["u512"]]],[11,"mul",E,E,0,[[["u128"]],["u128"]]],[11,"mul",E,E,0,[[["u128"]],["u128"]]],[11,"mul",E,E,0,[[["u8"]],["u128"]]],[11,"mul",E,E,0,[[["u8"]],["u128"]]],[11,"mul",E,E,0,[[["u16"]],["u128"]]],[11,"mul",E,E,0,[[["u16"]],["u128"]]],[11,"mul",E,E,0,[[["u32"]],["u128"]]],[11,"mul",E,E,0,[[["u32"]],["u128"]]],[11,"mul",E,E,0,[[["u64"]],["u128"]]],[11,"mul",E,E,0,[[["u64"]],["u128"]]],[11,"mul",E,E,0,[[["usize"]],["u128"]]],[11,"mul",E,E,0,[[["usize"]],["u128"]]],[11,"mul",E,E,0,[[["i8"]],["u128"]]],[11,"mul",E,E,0,[[["i8"]],["u128"]]],[11,"mul",E,E,0,[[["i16"]],["u128"]]],[11,"mul",E,E,0,[[["i16"]],["u128"]]],[11,"mul",E,E,0,[[["i32"]],["u128"]]],[11,"mul",E,E,0,[[["i32"]],["u128"]]],[11,"mul",E,E,0,[[["i64"]],["u128"]]],[11,"mul",E,E,0,[[["i64"]],["u128"]]],[11,"mul",E,E,0,[[["isize"]],["u128"]]],[11,"mul",E,E,0,[[["isize"]],["u128"]]],[11,"mul",E,E,1,[[["u256"]],["u256"]]],[11,"mul",E,E,1,[[["u256"]],["u256"]]],[11,"mul",E,E,1,[[["u8"]],["u256"]]],[11,"mul",E,E,1,[[["u8"]],["u256"]]],[11,"mul",E,E,1,[[["u16"]],["u256"]]],[11,"mul",E,E,1,[[["u16"]],["u256"]]],[11,"mul",E,E,1,[[["u32"]],["u256"]]],[11,"mul",E,E,1,[[["u32"]],["u256"]]],[11,"mul",E,E,1,[[["u64"]],["u256"]]],[11,"mul",E,E,1,[[["u64"]],["u256"]]],[11,"mul",E,E,1,[[["usize"]],["u256"]]],[11,"mul",E,E,1,[[["usize"]],["u256"]]],[11,"mul",E,E,1,[[["i8"]],["u256"]]],[11,"mul",E,E,1,[[["i8"]],["u256"]]],[11,"mul",E,E,1,[[["i16"]],["u256"]]],[11,"mul",E,E,1,[[["i16"]],["u256"]]],[11,"mul",E,E,1,[[["i32"]],["u256"]]],[11,"mul",E,E,1,[[["i32"]],["u256"]]],[11,"mul",E,E,1,[[["i64"]],["u256"]]],[11,"mul",E,E,1,[[["i64"]],["u256"]]],[11,"mul",E,E,1,[[["isize"]],["u256"]]],[11,"mul",E,E,1,[[["isize"]],["u256"]]],[11,"mul",E,E,2,[[["u512"]],["u512"]]],[11,"mul",E,E,2,[[["u512"]],["u512"]]],[11,"mul",E,E,2,[[["u8"]],["u512"]]],[11,"mul",E,E,2,[[["u8"]],["u512"]]],[11,"mul",E,E,2,[[["u16"]],["u512"]]],[11,"mul",E,E,2,[[["u16"]],["u512"]]],[11,"mul",E,E,2,[[["u32"]],["u512"]]],[11,"mul",E,E,2,[[["u32"]],["u512"]]],[11,"mul",E,E,2,[[["u64"]],["u512"]]],[11,"mul",E,E,2,[[["u64"]],["u512"]]],[11,"mul",E,E,2,[[["usize"]],["u512"]]],[11,"mul",E,E,2,[[["usize"]],["u512"]]],[11,"mul",E,E,2,[[["i8"]],["u512"]]],[11,"mul",E,E,2,[[["i8"]],["u512"]]],[11,"mul",E,E,2,[[["i16"]],["u512"]]],[11,"mul",E,E,2,[[["i16"]],["u512"]]],[11,"mul",E,E,2,[[["i32"]],["u512"]]],[11,"mul",E,E,2,[[["i32"]],["u512"]]],[11,"mul",E,E,2,[[["i64"]],["u512"]]],[11,"mul",E,E,2,[[["i64"]],["u512"]]],[11,"mul",E,E,2,[[["isize"]],["u512"]]],[11,"mul",E,E,2,[[["isize"]],["u512"]]],[11,R[423],E,E,0,[[["self"],["u128"]]]],[11,R[423],E,E,1,[[["u256"],["self"]]]],[11,R[423],E,E,2,[[["self"],["u512"]]]],[11,R[463],E,E,0,[[["self"],["u128"]]]],[11,R[463],E,E,1,[[["u256"],["self"]]]],[11,R[463],E,E,2,[[["self"],["u512"]]]],[11,R[476],E,E,0,[[["self"],["u128"]]]],[11,R[476],E,E,0,[[["self"],["u8"]]]],[11,R[476],E,E,0,[[["u16"],["self"]]]],[11,R[476],E,E,0,[[["self"],["u32"]]]],[11,R[476],E,E,0,[[["self"],["u64"]]]],[11,R[476],E,E,0,[[["self"],["usize"]]]],[11,R[476],E,E,0,[[["self"],["i8"]]]],[11,R[476],E,E,0,[[["self"],["i16"]]]],[11,R[476],E,E,0,[[["self"],["i32"]]]],[11,R[476],E,E,0,[[["i64"],["self"]]]],[11,R[476],E,E,0,[[["isize"],["self"]]]],[11,R[476],E,E,1,[[["u256"],["self"]]]],[11,R[476],E,E,1,[[["self"],["u8"]]]],[11,R[476],E,E,1,[[["u16"],["self"]]]],[11,R[476],E,E,1,[[["self"],["u32"]]]],[11,R[476],E,E,1,[[["self"],["u64"]]]],[11,R[476],E,E,1,[[["self"],["usize"]]]],[11,R[476],E,E,1,[[["self"],["i8"]]]],[11,R[476],E,E,1,[[["self"],["i16"]]]],[11,R[476],E,E,1,[[["self"],["i32"]]]],[11,R[476],E,E,1,[[["i64"],["self"]]]],[11,R[476],E,E,1,[[["isize"],["self"]]]],[11,R[476],E,E,2,[[["self"],["u512"]]]],[11,R[476],E,E,2,[[["self"],["u8"]]]],[11,R[476],E,E,2,[[["u16"],["self"]]]],[11,R[476],E,E,2,[[["self"],["u32"]]]],[11,R[476],E,E,2,[[["self"],["u64"]]]],[11,R[476],E,E,2,[[["self"],["usize"]]]],[11,R[476],E,E,2,[[["self"],["i8"]]]],[11,R[476],E,E,2,[[["self"],["i16"]]]],[11,R[476],E,E,2,[[["self"],["i32"]]]],[11,R[476],E,E,2,[[["i64"],["self"]]]],[11,R[476],E,E,2,[[["isize"],["self"]]]],[11,R[421],E,E,0,[[["self"],[T]]]],[11,R[421],E,E,1,[[["self"],[T]]]],[11,R[421],E,E,2,[[["self"],[T]]]],[11,R[462],E,E,0,[[["self"],[T]]]],[11,R[462],E,E,1,[[["self"],[T]]]],[11,R[462],E,E,2,[[["self"],[T]]]],[11,"not",E,E,0,[[],["u128"]]],[11,"not",E,E,1,[[],["u256"]]],[11,"not",E,E,2,[[],["u512"]]],[11,"bitand",E,E,0,[[["u128"]],["u128"]]],[11,"bitand",E,E,1,[[["u256"]],["u256"]]],[11,"bitand",E,E,2,[[["u512"]],["u512"]]],[11,"bitand",E,E,3,[[]]],[11,"bitand",E,E,4,[[]]],[11,"bitand",E,E,5,[[]]],[11,"bitor",E,E,0,[[["u128"]],["u128"]]],[11,"bitor",E,E,1,[[["u256"]],["u256"]]],[11,"bitor",E,E,2,[[["u512"]],["u512"]]],[11,"bitor",E,E,3,[[]]],[11,"bitor",E,E,4,[[]]],[11,"bitor",E,E,5,[[]]],[11,"bitxor",E,E,0,[[["u128"]],["u128"]]],[11,"bitxor",E,E,1,[[["u256"]],["u256"]]],[11,"bitxor",E,E,2,[[["u512"]],["u512"]]],[11,"bitxor",E,E,3,[[]]],[11,"bitxor",E,E,4,[[]]],[11,"bitxor",E,E,5,[[]]],[11,"shl",E,E,0,[[[T]],["u128"]]],[11,"shl",E,E,1,[[[T]],["u256"]]],[11,"shl",E,E,2,[[[T]],["u512"]]],[11,"shr",E,E,0,[[[T]],["u128"]]],[11,"shr",E,E,1,[[[T]],["u256"]]],[11,"shr",E,E,2,[[[T]],["u512"]]],[11,R[458],E,E,3,[[["h160"],["self"]]]],[11,R[458],E,E,3,[[["h160"],["self"]]]],[11,R[458],E,E,4,[[["h256"],["self"]]]],[11,R[458],E,E,4,[[["self"],["h256"]]]],[11,R[458],E,E,5,[[["self"],["h512"]]]],[11,R[458],E,E,5,[[["self"],["h512"]]]],[11,R[473],E,E,3,[[["h160"],["self"]]]],[11,R[473],E,E,3,[[["h160"],["self"]]]],[11,R[473],E,E,4,[[["h256"],["self"]]]],[11,R[473],E,E,4,[[["self"],["h256"]]]],[11,R[473],E,E,5,[[["self"],["h512"]]]],[11,R[473],E,E,5,[[["self"],["h512"]]]],[11,R[496],E,E,3,[[["h160"],["self"]]]],[11,R[496],E,E,3,[[["h160"],["self"]]]],[11,R[496],E,E,4,[[["h256"],["self"]]]],[11,R[496],E,E,4,[[["self"],["h256"]]]],[11,R[496],E,E,5,[[["self"],["h512"]]]],[11,R[496],E,E,5,[[["self"],["h512"]]]],[11,R[456],E,E,0,[[["self"],[T]]]],[11,R[456],E,E,1,[[["self"],[T]]]],[11,R[456],E,E,2,[[["self"],[T]]]],[11,R[435],E,E,0,[[["self"],[T]]]],[11,R[435],E,E,1,[[["self"],[T]]]],[11,R[435],E,E,2,[[["self"],[T]]]],[11,"index",E,E,3,[[["i"],["self"]]]],[11,"index",E,E,4,[[["i"],["self"]]]],[11,"index",E,E,5,[[["i"],["self"]]]],[11,R[350],E,E,3,[[["self"],["i"]]]],[11,R[350],E,E,4,[[["self"],["i"]]]],[11,R[350],E,E,5,[[["self"],["i"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["h"]]]],[11,"hash",E,E,4,[[["self"],["h"]]]],[11,"hash",E,E,5,[[["self"],["h"]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,R[132],E,E,0,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,1,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,2,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,3,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,4,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,5,[[["s"],["self"]],[R[3]]]],[11,R[173],E,E,0,[[["d"]],[R[3]]]],[11,R[173],E,E,1,[[["d"]],[R[3]]]],[11,R[173],E,E,2,[[["d"]],[R[3]]]],[11,R[173],E,E,3,[[["d"]],[R[3]]]],[11,R[173],E,E,4,[[["d"]],[R[3]]]],[11,R[173],E,E,5,[[["d"]],[R[3]]]],[11,R[3525],E,E,0,[[["fnonce"],["self"]],["r"]]],[11,R[3525],E,E,1,[[["fnonce"],["self"]],["r"]]],[11,R[3525],E,E,2,[[["fnonce"],["self"]],["r"]]],[11,R[3525],E,E,3,[[["fnonce"],["self"]],["r"]]],[11,R[3525],E,E,4,[[["fnonce"],["self"]],["r"]]],[11,R[3525],E,E,5,[[["fnonce"],["self"]],["r"]]],[11,"decode",E,E,0,[[["i"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,1,[[["i"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,2,[[["i"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,3,[[["i"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,4,[[["i"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,5,[[["i"]],[[R[3],["error"]],["error"]]]]],"p":[[3,"U128"],[3,"U256"],[3,"U512"],[3,"H160"],[3,"H256"],[3,"H512"],[4,"Error"]]};
searchIndex["proc_macro2"]={"doc":"A wrapper around the procedural macro API of the…","i":[[3,R[1160],R[1151],"An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError",E,"Error returned from `TokenStream::from_str`.",N,N],[3,"Span",E,"A region of source code, along with macro expansion…",N,N],[3,"Group",E,"A delimited token stream.",N,N],[3,"Punct",E,"An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident",E,R[1844],N,N],[3,"Literal",E,"A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,"TokenTree",E,"A single token or a delimited sequence of token trees…",N,N],[13,"Group",E,"A token stream surrounded by bracket delimiters.",0,N],[13,"Ident",E,"An identifier.",0,N],[13,"Punct",E,"A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal",E,"A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,"Delimiter",E,"Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis",E,"`( ... )`",1,N],[13,"Brace",E,"`{ ... }`",1,N],[13,"Bracket",E,"`[ ... ]`",1,N],[13,"None",E,"`Ø ... Ø`",1,N],[4,"Spacing",E,"Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone",E,"E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint",E,"E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.",2,N],[0,R[2008],E,"Public implementation details for the `TokenStream` type,…",N,N],[3,R[339],R[1157],"An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new",R[1151],"Returns an empty `TokenStream` containing no token trees.",3,[[],[R[1152]]]],[11,R[340],E,"Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site",E,"The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap",E,"Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"join",E,"Create a new span encompassing `self` and `other`.",4,[[["self"],["span"]],[["option",["span"]],["span"]]]],[11,"span",E,"Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,R[2001],E,"Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Group` with the given delimiter and token…",5,[[[R[1152]],[R[1159]]],["group"]]],[11,R[1159],E,"Returns the delimiter of this `Group`",5,[[["self"]],[R[1159]]]],[11,"stream",E,"Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],[R[1152]]]],[11,"span",E,"Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"span_open",E,"Returns the span pointing to the opening delimiter of this…",5,[[["self"]],["span"]]],[11,"span_close",E,"Returns the span pointing to the closing delimiter of this…",5,[[["self"]],["span"]]],[11,R[2001],E,"Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Punct` from the given character and spacing.",6,[[["spacing"],["char"]],["punct"]]],[11,"as_char",E,"Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing",E,"Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span",E,"Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,R[2001],E,"Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new",E,R[2502],7,[[["str"],["span"]],["ident"]]],[11,"span",E,R[2503],7,[[["self"]],["span"]]],[11,R[2001],E,R[2504],7,[[["self"],["span"]]]],[11,"u8_suffixed",E,R[1153],8,[[["u8"]],["literal"]]],[11,"u16_suffixed",E,R[1153],8,[[["u16"]],["literal"]]],[11,"u32_suffixed",E,R[1153],8,[[["u32"]],["literal"]]],[11,"u64_suffixed",E,R[1153],8,[[["u64"]],["literal"]]],[11,"u128_suffixed",E,R[1153],8,[[["u128"]],["literal"]]],[11,"usize_suffixed",E,R[1153],8,[[["usize"]],["literal"]]],[11,"i8_suffixed",E,R[1153],8,[[["i8"]],["literal"]]],[11,"i16_suffixed",E,R[1153],8,[[["i16"]],["literal"]]],[11,"i32_suffixed",E,R[1153],8,[[["i32"]],["literal"]]],[11,"i64_suffixed",E,R[1153],8,[[["i64"]],["literal"]]],[11,"i128_suffixed",E,R[1153],8,[[["i128"]],["literal"]]],[11,"isize_suffixed",E,R[1153],8,[[["isize"]],["literal"]]],[11,"u8_unsuffixed",E,R[1154],8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed",E,R[1154],8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed",E,R[1154],8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed",E,R[1154],8,[[["u64"]],["literal"]]],[11,"u128_unsuffixed",E,R[1154],8,[[["u128"]],["literal"]]],[11,"usize_unsuffixed",E,R[1154],8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed",E,R[1154],8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed",E,R[1154],8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed",E,R[1154],8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed",E,R[1154],8,[[["i64"]],["literal"]]],[11,"i128_unsuffixed",E,R[1154],8,[[["i128"]],["literal"]]],[11,"isize_unsuffixed",E,R[1154],8,[[["isize"]],["literal"]]],[11,"f64_unsuffixed",E,R[1155],8,[[["f64"]],["literal"]]],[11,"f64_suffixed",E,R[1156],8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed",E,R[1155],8,[[["f32"]],["literal"]]],[11,"f32_suffixed",E,R[1156],8,[[["f32"]],["literal"]]],[11,"string",E,"String literal.",8,[[["str"]],["literal"]]],[11,"character",E,"Character literal.",8,[[["char"]],["literal"]]],[11,"byte_string",E,"Byte string literal.",8,[[],["literal"]]],[11,"span",E,"Returns the span encompassing this literal.",8,[[["self"]],["span"]]],[11,R[2001],E,"Configures the span associated for this literal.",8,[[["self"],["span"]]]],[11,"subspan",E,"Returns a `Span` that is a subset of `self.span()`…",8,[[["usize"],["self"],["rangebounds",["usize"]]],[["option",["span"]],["span"]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[211],E,E,3,[[],["i"]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[78],E,E,3,[[["self"]],["string"]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[["self"]],["string"]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[78],E,E,6,[[["self"]],["string"]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[78],E,E,7,[[["self"]],["string"]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[78],E,E,8,[[["self"]],["string"]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",R[1157],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[211],E,E,10,[[],["i"]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"from",R[1151],E,4,[[["span"]],["span"]]],[11,"from",E,E,3,[[[R[1152]]],[R[1152]]]],[11,"from",E,E,3,[[[R[1158]]],["self"]]],[11,"from",E,E,0,[[["group"]],[R[1158]]]],[11,"from",E,E,0,[[["ident"]],[R[1158]]]],[11,"from",E,E,0,[[["punct"]],[R[1158]]]],[11,"from",E,E,0,[[["literal"]],[R[1158]]]],[11,"next",R[1157],E,10,[[["self"]],[["option",[R[1158]]],[R[1158]]]]],[11,"extend",R[1151],E,3,[[["self"],[R[294]]]]],[11,"extend",E,E,3,[[["self"],[R[294]]]]],[11,R[211],E,E,3,[[],[R[485]]]],[11,"clone",E,E,3,[[["self"]],[R[1152]]]],[11,"clone",E,E,4,[[["self"]],["span"]]],[11,"clone",E,E,0,[[["self"]],[R[1158]]]],[11,"clone",E,E,5,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],[R[1159]]]],[11,"clone",E,E,6,[[["self"]],["punct"]]],[11,"clone",E,E,2,[[["self"]],["spacing"]]],[11,"clone",E,E,7,[[["self"]],["ident"]]],[11,"clone",E,E,8,[[["self"]],["literal"]]],[11,"clone",R[1157],E,10,[[["self"]],[R[485]]]],[11,R[90],R[1151],E,3,[[],["self"]]],[11,"cmp",E,E,7,[[["self"],["ident"]],[R[105]]]],[11,"eq",E,E,1,[[[R[1159]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["spacing"],["self"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["ident"]],["bool"]]],[11,"eq",E,E,7,[[[T],["self"]],["bool"]]],[11,R[106],E,E,7,[[["self"],["ident"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1157],E,10,[[["self"],[R[37]]],[R[3]]]],[11,R[457],R[1151],E,3,[[["str"]],[[R[3],[R[1152],"lexerror"]],[R[1152]],["lexerror"]]]],[11,"hash",E,E,7,[[["self"],["h"]]]],[11,R[293],E,E,3,[[[R[294]]],["self"]]],[11,R[293],E,E,3,[[[R[294]]],["self"]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,R[1160]],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,R[339]]]};
searchIndex["proc_macro_crate"]={"doc":"   Build Status","i":[[5,"crate_name","proc_macro_crate","Find the crate name for the given `orig_name` in the…",N,[[["str"]],[["string"],[R[3],["string","string"]]]]]],"p":[]};
searchIndex["proc_macro_hack"]={"doc":"As of Rust 1.30, the language supports user-defined…","i":[[23,R[2775],R[2775],E,N,N]],"p":[]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,R[1410],"quote","TokenStream extension trait with methods for appending…",N,N],[10,"append",E,R[1405],0,[[[U],["self"]]]],[10,"append_all",E,R[1405],0,[[["self"],["i"]]]],[10,"append_separated",E,R[1405],0,[[[U],["self"],["i"]]]],[10,"append_terminated",E,R[1405],0,[[[U],["self"],["i"]]]],[8,R[1411],E,"Specialized formatting trait used by `format_ident!`.",N,N],[10,"fmt",E,"Format this value as an identifier fragment.",1,[[["self"],[R[37]]],[R[3]]]],[11,"span",E,R[1407],1,[[["self"]],[["span"],["option",["span"]]]]],[8,"ToTokens",E,"Types that can be interpolated inside a `quote!` invocation.",N,N],[10,R[2501],E,"Write `self` to the given `TokenStream`.",2,[[["self"],[R[1152]]]]],[11,R[1408],E,R[1406],2,[[["self"]],[R[1152]]]],[11,R[1409],E,R[1406],2,[[],[R[1152]]]],[14,"format_ident",E,"Formatting macro for constructing `Ident`s.",N,N],[14,"quote",E,"The whole point.",N,N],[14,"quote_spanned",E,"Same as `quote!`, but applies a given span to all tokens…",N,N],[11,"span",E,R[1407],1,[[["self"]],[["span"],["option",["span"]]]]],[11,R[1408],E,R[1406],2,[[["self"]],[R[1152]]]],[11,R[1409],E,R[1406],2,[[],[R[1152]]]]],"p":[[8,R[1410]],[8,R[1411]],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[8,"RngCore","rand",R[1692],N,N],[10,R[27],E,R[1693],0,[[["self"]],["u32"]]],[10,R[28],E,R[1694],0,[[["self"]],["u64"]]],[10,R[29],E,R[1695],0,[[["self"]]]],[10,R[30],E,R[1696],0,[[["self"]],[[R[3],["error"]],["error"]]]],[8,"CryptoRng",E,R[1697],N,N],[8,R[44],E,R[1698],N,N],[16,"Seed",E,R[1699],1,N],[10,R[31],E,R[1700],1,[[],["self"]]],[11,R[32],E,R[1701],1,[[["u64"]],["self"]]],[11,R[33],E,R[1702],1,[[["r"]],[[R[3],["error"]],["error"]]]],[11,R[1662],E,R[2611],1,[[],["self"]]],[3,"Error",E,R[1691],N,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[0,"distributions",E,"Generating random samples from probability distributions",N,N],[3,R[1683],R[1651],"Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform",E,R[1648],N,N],[3,R[1684],E,R[1647],N,N],[3,"Open01",E,R[1647],N,N],[3,"Bernoulli",E,"The Bernoulli distribution.",N,N],[3,R[1675],E,"Samples uniformly from the surface of the unit sphere in…",N,N],[3,"UnitCircle",E,"Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma",E,"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared",E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta",E,"The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal",E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,R[1685],E,"Samples floating-point numbers according to the normal…",N,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1",E,"Samples floating-point numbers according to the…",N,N],[3,"Pareto",E,"Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson",E,"The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial",E,"The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy",E,"The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet",E,"The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular",E,"The triangular distribution.",N,N],[3,"Weibull",E,"Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter",E,"An iterator that generates random values of `T` with…",N,N],[3,"Standard",E,"A generic random value distribution, implemented for many…",N,N],[4,R[2605],E,"Error type returned from `Bernoulli::new`.",N,N],[13,"InvalidProbability",E,"`p < 0` or `p > 1`.",2,N],[0,"uniform",E,"A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform",R[1660],R[1648],N,N],[3,"UniformInt",E,"The back-end implementing [`UniformSampler`] for integer…",N,N],[3,R[1686],E,"The back-end implementing [`UniformSampler`] for…",N,N],[3,R[1687],E,"The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,R[1671],E,"Helper trait for creating objects using the correct…",N,N],[16,"Sampler",E,"The `UniformSampler` implementation supporting type `X`.",3,N],[8,R[1672],E,"Helper trait handling actual uniform sampling.",N,N],[16,"X",E,"The type sampled by this implementation.",4,N],[10,"new",E,"Construct self, with inclusive lower bound and exclusive…",4,[[["b2"],["b1"]],["self"]]],[10,R[1649],E,"Construct self, with inclusive bounds `[low, high]`.",4,[[["b2"],["b1"]],["self"]]],[10,"sample",E,"Sample a value.",4,[[["self"],["r"]]]],[11,R[1666],E,"Sample a single value uniformly from a range with…",4,[[["b2"],["b1"],["r"]]]],[8,R[1673],E,"Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,R[45],E,"Immutably borrows from an owned value. See…",5,[[["self"]],["borrowed"]]],[11,"new",E,R[1650],6,[[["b2"],["b1"]],["uniform"]]],[11,R[1649],E,R[1650],6,[[["b2"],["b1"]],["uniform"]]],[11,"new",R[1651],"Construct a new `Bernoulli` with the given probability of…",7,[[["f64"]],[[R[2600]],[R[3],[R[2601],R[2600]]],[R[2601]]]]],[11,"from_ratio",E,"Construct a new `Bernoulli` with the probability of…",7,[[["u32"]],[[R[2600]],[R[3],[R[2601],R[2600]]],[R[2601]]]]],[0,"weighted",E,"Weighted index sampling",N,N],[3,R[1674],R[2603],R[2602],N,N],[4,R[1670],E,"Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem",E,"The provided weight collection contains no items.",8,N],[13,"InvalidWeight",E,"A weight is either less than zero, greater than the…",8,N],[13,"AllWeightsZero",E,"All items in the provided weight collection are zero.",8,N],[13,"TooMany",E,"Too many weights are provided (length greater than…",8,N],[0,"alias_method",E,"This module contains an implementation of alias method for…",N,N],[3,R[1674],R[2604],R[2602],N,N],[8,"Weight",E,"Trait that must be implemented for weights, that are used…",N,N],[18,"MAX",E,"Maximum number representable by `Self`.",9,N],[18,"ZERO",E,"Element of `Self` equivalent to 0.",9,N],[10,"try_from_u32_lossy",E,"Produce an instance of `Self` from a `u32` value, or…",9,[[["u32"]],["option"]]],[11,"sum",E,"Sums all values in slice `values`.",9,[[],["self"]]],[11,"new",E,"Creates a new [`WeightedIndex`].",10,[[["vec"]],[[R[1653]],[R[3],[R[1653]]]]]],[11,"new",R[2603],"Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],[[R[1652]],[R[1653]],[R[3],[R[1652],R[1653]]]]]],[11,"update_weights",E,"Update a subset of weights, without changing the number of…",11,[[["self"]],[[R[1653]],[R[3],[R[1653]]]]]],[11,"new",R[1651],"Construct a new `UnitSphereSurface` distribution.",12,[[],[R[1668]]]],[11,"new",E,"Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",15,[[["f64"]],["chisquared"]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",16,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new",E,"Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"]],["beta"]]],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",19,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",20,[[["f64"]],["lognormal"]]],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new",E,"Construct a new Pareto distribution with given `scale` and…",22,[[["f64"]],["pareto"]]],[11,"new",E,"Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new",E,"Construct a new `Binomial` with the given shape parameters…",24,[[["f64"],["u64"]],["binomial"]]],[11,"new",E,"Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"]],["cauchy"]]],[11,"new",E,"Construct a new `Dirichlet` with the given alpha parameter…",26,[[["into",["vec"]],["vec",["f64"]]],["dirichlet"]]],[11,"new_with_param",E,"Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],["usize"]],["dirichlet"]]],[11,"new",E,"Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"]],["triangular"]]],[11,"new",E,"Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"]],["weibull"]]],[8,R[1676],E,"Types (distributions) that can be used to create a random…",N,N],[10,"sample",E,"Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],[T]]],[11,R[1654],E,"Create an iterator that generates random values of `T`,…",29,[[["r"]],["distiter"]]],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"rngs",E,"Random number generators and adapters",N,N],[3,"OsRng",R[1661],R[2606],N,N],[3,"EntropyRng",E,"An interface returning random data from external…",N,N],[3,"StdRng",E,"The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng",E,"The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter",E,"Wrappers / adapters forming RNGs",N,N],[3,"ReadRng",R[1663],"An RNG that reads random bytes straight from any type…",N,N],[3,"ReadError",E,"`ReadRng` error type",N,N],[3,R[1678],E,"A wrapper around any PRNG that implements…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new",E,"Create a new `ReseedingRng` from an existing PRNG,…",31,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed",E,"Reseed the internal PRNG.",31,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"new",R[1661],"Create a new `EntropyRng`.",32,[[],["self"]]],[0,"mock",E,"Mock random number generator",N,N],[3,"StepRng",R[1664],"A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new",E,"Create a `StepRng`, yielding an arithmetic sequence…",33,[[["u64"]],["self"]]],[0,"seq","rand","Sequence-related functionality",N,N],[3,R[1688],R[1667],"An iterator over multiple slice elements.",N,N],[0,"index",E,"Low-level API for sampling indices",N,N],[4,"IndexVec",R[1665],"A vector of indices.",N,N],[4,R[1689],E,"Return type of `IndexVec::iter`.",N,N],[4,R[1690],E,"Return type of `IndexVec::into_iter`.",N,N],[5,"sample",E,"Randomly sample exactly `amount` distinct indices from…",N,[[["usize"],["r"]],["indexvec"]]],[11,"len",E,"Returns the number of indices",34,[[["self"]],["usize"]]],[11,R[340],E,"Returns `true` if the length is 0.",34,[[["self"]],["bool"]]],[11,"index",E,"Return the value at the given `index`.",34,[[["self"],["usize"]],["usize"]]],[11,"into_vec",E,"Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],[["usize"],["vec",["usize"]]]]],[11,"iter",E,"Iterate over the indices as a sequence of `usize` values",34,[[["self"]],["indexveciter"]]],[11,R[211],E,"Convert into an iterator over the indices as a sequence of…",34,[[],[R[1669]]]],[8,R[1679],R[1667],"Extension trait on slices, providing random mutation and…",N,N],[16,"Item",E,"The element type.",35,N],[10,"choose",E,"Returns a reference to one random element of the slice, or…",35,[[["self"],["r"]],["option"]]],[10,"choose_mut",E,"Returns a mutable reference to one random element of the…",35,[[["self"],["r"]],["option"]]],[10,R[1655],E,"Chooses `amount` elements from the slice at random,…",35,[[["usize"],["self"],["r"]],["slicechooseiter"]]],[10,"choose_weighted",E,"Similar to [`choose`], but where the likelihood of each…",35,[[["f"],["self"],["r"]],[[R[1653]],[R[3],[R[1653]]]]]],[10,"choose_weighted_mut",E,"Similar to [`choose_mut`], but where the likelihood of…",35,[[["self"],["f"],["r"]],[[R[3],[R[1653]]],[R[1653]]]]],[10,"shuffle",E,R[1659],35,[[["self"],["r"]]]],[10,"partial_shuffle",E,"Shuffle a slice in place, but exit early.",35,[[["self"],["usize"],["r"]]]],[8,R[1680],E,"Extension trait on iterators, providing random sampling…",N,N],[11,"choose",E,"Choose one element at random from the iterator.",36,[[["r"]],["option"]]],[11,"choose_multiple_fill",E,"Collects values at random from the iterator into a…",36,[[["r"]],["usize"]]],[11,R[1655],E,R[1656],36,[[["usize"],["r"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen",E,"Return a random value supporting the [`Standard`]…",37,[[["self"]],[T]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`), i.e.…",37,[[["b2"],["self"],["b1"]],["sampleuniform"]]],[11,"sample",E,"Sample a new value, using the given distribution.",37,[[["self"],[R[1657]]],[T]]],[11,R[1654],E,"Create an iterator that generates values using the given…",37,[[["d"]],["distiter"]]],[11,"fill",E,R[1658],37,[[["self"],[T]]]],[11,"try_fill",E,R[1658],37,[[["self"],[T]],[["error"],[R[3],["error"]]]]],[11,"gen_bool",E,"Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio",E,"Return a bool with a probability of…",37,[[["self"],["u32"]],["bool"]]],[8,R[1681],E,"Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut",E,"Return a mutable reference to self as a byte slice",38,[[["self"]]]],[10,"to_le",E,"Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[["self"]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[78],E,E,39,[[["self"]],["string"]]],[11,R[20],E,E,39,[[[U]],[R[3]]]],[11,R[21],E,E,39,[[],[R[3]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[["self"]],[T]]],[11,R[26],E,E,39,[[["self"]],[R[46]]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"into",R[1651],E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[20],E,E,40,[[[U]],[R[3]]]],[11,R[21],E,E,40,[[],[R[3]]]],[11,R[45],E,E,40,[[["self"]],[T]]],[11,R[22],E,E,40,[[["self"]],[T]]],[11,R[26],E,E,40,[[["self"]],[R[46]]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"into",R[1660],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",R[1651],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[24],E,E,41,[[["self"]],[T]]],[11,R[25],E,E,41,[[["self"],[T]]]],[11,R[20],E,E,41,[[[U]],[R[3]]]],[11,R[21],E,E,41,[[],[R[3]]]],[11,R[45],E,E,41,[[["self"]],[T]]],[11,R[22],E,E,41,[[["self"]],[T]]],[11,R[26],E,E,41,[[["self"]],[R[46]]]],[11,"vzip",E,E,41,[[],["v"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[24],E,E,42,[[["self"]],[T]]],[11,R[25],E,E,42,[[["self"],[T]]]],[11,R[20],E,E,42,[[[U]],[R[3]]]],[11,R[21],E,E,42,[[],[R[3]]]],[11,R[45],E,E,42,[[["self"]],[T]]],[11,R[22],E,E,42,[[["self"]],[T]]],[11,R[26],E,E,42,[[["self"]],[R[46]]]],[11,"vzip",E,E,42,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"],[T]]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"],[T]]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"],[T]]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[24],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"],[T]]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[24],E,E,43,[[["self"]],[T]]],[11,R[25],E,E,43,[[["self"],[T]]]],[11,R[20],E,E,43,[[[U]],[R[3]]]],[11,R[21],E,E,43,[[],[R[3]]]],[11,R[45],E,E,43,[[["self"]],[T]]],[11,R[22],E,E,43,[[["self"]],[T]]],[11,R[26],E,E,43,[[["self"]],[R[46]]]],[11,"vzip",E,E,43,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[24],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"],[T]]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[24],E,E,44,[[["self"]],[T]]],[11,R[25],E,E,44,[[["self"],[T]]]],[11,R[20],E,E,44,[[[U]],[R[3]]]],[11,R[21],E,E,44,[[],[R[3]]]],[11,R[45],E,E,44,[[["self"]],[T]]],[11,R[22],E,E,44,[[["self"]],[T]]],[11,R[26],E,E,44,[[["self"]],[R[46]]]],[11,"vzip",E,E,44,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[24],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"],[T]]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[24],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"],[T]]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[24],E,E,25,[[["self"]],[T]]],[11,R[25],E,E,25,[[["self"],[T]]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[24],E,E,26,[[["self"]],[T]]],[11,R[25],E,E,26,[[["self"],[T]]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[24],E,E,27,[[["self"]],[T]]],[11,R[25],E,E,27,[[["self"],[T]]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[24],E,E,28,[[["self"]],[T]]],[11,R[25],E,E,28,[[["self"],[T]]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[211],E,E,45,[[],["i"]]],[11,R[20],E,E,45,[[[U]],[R[3]]]],[11,R[21],E,E,45,[[],[R[3]]]],[11,R[45],E,E,45,[[["self"]],[T]]],[11,R[22],E,E,45,[[["self"]],[T]]],[11,R[26],E,E,45,[[["self"]],[R[46]]]],[11,"vzip",E,E,45,[[],["v"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[24],E,E,46,[[["self"]],[T]]],[11,R[25],E,E,46,[[["self"],[T]]]],[11,R[20],E,E,46,[[[U]],[R[3]]]],[11,R[21],E,E,46,[[],[R[3]]]],[11,R[45],E,E,46,[[["self"]],[T]]],[11,R[22],E,E,46,[[["self"]],[T]]],[11,R[26],E,E,46,[[["self"]],[R[46]]]],[11,"vzip",E,E,46,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",R[1660],E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[24],E,E,47,[[["self"]],[T]]],[11,R[25],E,E,47,[[["self"],[T]]]],[11,R[20],E,E,47,[[[U]],[R[3]]]],[11,R[21],E,E,47,[[],[R[3]]]],[11,R[45],E,E,47,[[["self"]],[T]]],[11,R[22],E,E,47,[[["self"]],[T]]],[11,R[26],E,E,47,[[["self"]],[R[46]]]],[11,"vzip",E,E,47,[[],["v"]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[24],E,E,48,[[["self"]],[T]]],[11,R[25],E,E,48,[[["self"],[T]]]],[11,R[20],E,E,48,[[[U]],[R[3]]]],[11,R[21],E,E,48,[[],[R[3]]]],[11,R[45],E,E,48,[[["self"]],[T]]],[11,R[22],E,E,48,[[["self"]],[T]]],[11,R[26],E,E,48,[[["self"]],[R[46]]]],[11,"vzip",E,E,48,[[],["v"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[24],E,E,49,[[["self"]],[T]]],[11,R[25],E,E,49,[[["self"],[T]]]],[11,R[20],E,E,49,[[[U]],[R[3]]]],[11,R[21],E,E,49,[[],[R[3]]]],[11,R[45],E,E,49,[[["self"]],[T]]],[11,R[22],E,E,49,[[["self"]],[T]]],[11,R[26],E,E,49,[[["self"]],[R[46]]]],[11,"vzip",E,E,49,[[],["v"]]],[11,"into",R[2603],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[78],E,E,8,[[["self"]],["string"]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",R[2604],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",R[1661],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[24],E,E,50,[[["self"]],[T]]],[11,R[25],E,E,50,[[["self"],[T]]]],[11,R[20],E,E,50,[[[U]],[R[3]]]],[11,R[21],E,E,50,[[],[R[3]]]],[11,R[45],E,E,50,[[["self"]],[T]]],[11,R[22],E,E,50,[[["self"]],[T]]],[11,R[26],E,E,50,[[["self"]],[R[46]]]],[11,"vzip",E,E,50,[[],["v"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[24],E,E,51,[[["self"]],[T]]],[11,R[25],E,E,51,[[["self"],[T]]]],[11,R[20],E,E,51,[[[U]],[R[3]]]],[11,R[21],E,E,51,[[],[R[3]]]],[11,R[45],E,E,51,[[["self"]],[T]]],[11,R[22],E,E,51,[[["self"]],[T]]],[11,R[26],E,E,51,[[["self"]],[R[46]]]],[11,"vzip",E,E,51,[[],["v"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[24],E,E,52,[[["self"]],[T]]],[11,R[25],E,E,52,[[["self"],[T]]]],[11,R[20],E,E,52,[[[U]],[R[3]]]],[11,R[21],E,E,52,[[],[R[3]]]],[11,R[45],E,E,52,[[["self"]],[T]]],[11,R[22],E,E,52,[[["self"]],[T]]],[11,R[26],E,E,52,[[["self"]],[R[46]]]],[11,"vzip",E,E,52,[[],["v"]]],[11,"into",R[1663],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[78],E,E,53,[[["self"]],["string"]]],[11,R[20],E,E,53,[[[U]],[R[3]]]],[11,R[21],E,E,53,[[],[R[3]]]],[11,R[45],E,E,53,[[["self"]],[T]]],[11,R[22],E,E,53,[[["self"]],[T]]],[11,R[26],E,E,53,[[["self"]],[R[46]]]],[11,"vzip",E,E,53,[[],["v"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[24],E,E,31,[[["self"]],[T]]],[11,R[25],E,E,31,[[["self"],[T]]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,"into",R[1664],E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[24],E,E,33,[[["self"]],[T]]],[11,R[25],E,E,33,[[["self"],[T]]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,"into",R[1667],E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[211],E,E,54,[[],["i"]]],[11,R[20],E,E,54,[[[U]],[R[3]]]],[11,R[21],E,E,54,[[],[R[3]]]],[11,R[45],E,E,54,[[["self"]],[T]]],[11,R[22],E,E,54,[[["self"]],[T]]],[11,R[26],E,E,54,[[["self"]],[R[46]]]],[11,"vzip",E,E,54,[[],["v"]]],[11,"into",R[1665],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[24],E,E,34,[[["self"]],[T]]],[11,R[25],E,E,34,[[["self"],[T]]]],[11,R[20],E,E,34,[[[U]],[R[3]]]],[11,R[21],E,E,34,[[],[R[3]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[["self"]],[T]]],[11,R[26],E,E,34,[[["self"]],[R[46]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[211],E,E,55,[[],["i"]]],[11,R[20],E,E,55,[[[U]],[R[3]]]],[11,R[21],E,E,55,[[],[R[3]]]],[11,R[45],E,E,55,[[["self"]],[T]]],[11,R[22],E,E,55,[[["self"]],[T]]],[11,R[26],E,E,55,[[["self"]],[R[46]]]],[11,"vzip",E,E,55,[[],["v"]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[211],E,E,56,[[],["i"]]],[11,R[24],E,E,56,[[["self"]],[T]]],[11,R[25],E,E,56,[[["self"],[T]]]],[11,R[20],E,E,56,[[[U]],[R[3]]]],[11,R[21],E,E,56,[[],[R[3]]]],[11,R[45],E,E,56,[[["self"]],[T]]],[11,R[22],E,E,56,[[["self"]],[T]]],[11,R[26],E,E,56,[[["self"]],[R[46]]]],[11,"vzip",E,E,56,[[],["v"]]],[11,"read","rand",E,0,[[["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,"clone",R[1661],E,50,[[["self"]],["osrng"]]],[11,R[90],E,E,50,[[],["osrng"]]],[11,"from","rand",E,39,[[["error"]],["error"]]],[11,"from",E,E,39,[[[R[438]]],["error"]]],[11,"fmt",E,E,39,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[1661],E,50,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt","rand",E,39,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[27],R[1661],E,50,[[["self"]],["u32"]]],[11,R[28],E,E,50,[[["self"]],["u64"]]],[11,R[29],E,E,50,[[["self"]]]],[11,R[30],E,E,50,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"source","rand",E,39,[[["self"]],[["error"],["option",["error"]]]]],[11,"new",R[1660],E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,47,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,47,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,R[1666],E,E,47,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[1666],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[1666],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[1649],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]],[R[3770]]]],[11,"sample",E,E,6,[[["self"],["r"]],["x"]]],[11,"sample",R[1651],E,7,[[["self"],["r"]],["bool"]]],[11,"sample",R[2604],E,10,[[["self"],["r"]],["usize"]]],[11,"sample",R[2603],E,11,[[["self"],["r"]],["usize"]]],[11,"sample",R[1651],E,12,[[["self"],["r"]]]],[11,"sample",E,E,13,[[["self"],["r"]]]],[11,"sample",E,E,14,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,15,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,16,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,17,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,18,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,19,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,20,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,21,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,22,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,23,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,24,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,25,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,26,[[["self"],["r"]],[["f64"],["vec",["f64"]]]]],[11,"sample",E,E,27,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,28,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,41,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,42,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,46,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,41,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,42,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u8"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u16"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u32"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["u128"]]],[11,"sample",E,E,46,[[["self"],["r"]],["usize"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i8"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i16"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i32"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i64"]]],[11,"sample",E,E,46,[[["self"],["r"]],["i128"]]],[11,"sample",E,E,46,[[["self"],["r"]],["isize"]]],[11,"sample",E,E,46,[[["self"],["r"]],[R[447]]]],[11,"sample",E,E,46,[[["self"],["r"]],[R[452]]]],[11,"sample",E,E,46,[[["self"],["r"]],[R[438]]]],[11,"sample",E,E,46,[[["self"],["r"]],[R[448]]]],[11,"sample",E,E,46,[[["self"],["r"]],[R[451]]]],[11,"sample",E,E,46,[[["self"],["r"]],[R[442]]]],[11,"sample",E,E,46,[[["self"],["r"]],["char"]]],[11,"sample",E,E,40,[[["self"],["r"]],["char"]]],[11,"sample",E,E,46,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]]]],[11,"sample",E,E,46,[[["self"],["r"]],["option"]]],[11,"sample",E,E,46,[[["self"],["r"]],[R[422]]]],[11,"from",R[1660],E,6,[[["range"]],["uniform"]]],[11,"from",E,E,6,[[[R[484]]],["uniform"]]],[11,"from",R[1665],E,34,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from",E,E,34,[[["usize"],["vec",["usize"]]],["self"]]],[11,"next",R[1651],E,45,[[["self"]],["option"]]],[11,R[292],E,E,45,[[["self"]]]],[11,"next",R[1665],E,55,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[292],E,E,55,[[["self"]]]],[11,"next",E,E,56,[[["self"]],["option"]]],[11,R[292],E,E,56,[[["self"]]]],[11,"next",R[1667],E,54,[[["self"]],["option"]]],[11,R[292],E,E,54,[[["self"]]]],[11,"len",E,E,54,[[["self"]],["usize"]]],[11,"clone",R[1660],E,6,[[["self"]],["uniform"]]],[11,"clone",E,E,47,[[["self"]],["uniformint"]]],[11,"clone",E,E,48,[[["self"]],["uniformfloat"]]],[11,"clone",E,E,49,[[["self"]],["uniformduration"]]],[11,"clone",R[1651],E,7,[[["self"]],[R[2601]]]],[11,"clone",E,E,2,[[["self"]],[R[2600]]]],[11,"clone",R[2604],E,10,[[["self"]],["self"]]],[11,"clone",R[2603],E,11,[[["self"]],[R[1652]]]],[11,"clone",E,E,8,[[["self"]],[R[1653]]]],[11,"clone",R[1651],E,12,[[["self"]],[R[1668]]]],[11,"clone",E,E,13,[[["self"]],["unitcircle"]]],[11,"clone",E,E,14,[[["self"]],["gamma"]]],[11,"clone",E,E,15,[[["self"]],["chisquared"]]],[11,"clone",E,E,16,[[["self"]],["fisherf"]]],[11,"clone",E,E,17,[[["self"]],["studentt"]]],[11,"clone",E,E,18,[[["self"]],["beta"]]],[11,"clone",E,E,43,[[["self"]],["standardnormal"]]],[11,"clone",E,E,19,[[["self"]],["normal"]]],[11,"clone",E,E,20,[[["self"]],["lognormal"]]],[11,"clone",E,E,44,[[["self"]],["exp1"]]],[11,"clone",E,E,21,[[["self"]],["exp"]]],[11,"clone",E,E,22,[[["self"]],["pareto"]]],[11,"clone",E,E,23,[[["self"]],["poisson"]]],[11,"clone",E,E,24,[[["self"]],["binomial"]]],[11,"clone",E,E,25,[[["self"]],["cauchy"]]],[11,"clone",E,E,26,[[["self"]],["dirichlet"]]],[11,"clone",E,E,27,[[["self"]],["triangular"]]],[11,"clone",E,E,28,[[["self"]],["weibull"]]],[11,"clone",E,E,41,[[["self"]],["openclosed01"]]],[11,"clone",E,E,42,[[["self"]],["open01"]]],[11,"clone",E,E,46,[[["self"]],["standard"]]],[11,"clone",R[1663],E,31,[[["self"]],["reseedingrng"]]],[11,"clone",R[1664],E,33,[[["self"]],["steprng"]]],[11,"clone",R[1661],E,51,[[["self"]],["stdrng"]]],[11,"clone",E,E,52,[[["self"]],["threadrng"]]],[11,"clone",R[1665],E,34,[[["self"]],["indexvec"]]],[11,"clone",E,E,56,[[["self"]],[R[1669]]]],[11,R[90],R[1661],E,32,[[],["self"]]],[11,R[90],E,E,52,[[],["threadrng"]]],[11,"eq",R[1651],E,2,[[["self"],[R[2600]]],["bool"]]],[11,"eq",R[2603],E,8,[[[R[1653]],["self"]],["bool"]]],[11,"eq",R[1665],E,34,[[["self"],["indexvec"]],["bool"]]],[11,"fmt",R[2603],E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1663],E,53,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1660],E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1651],E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[2604],E,10,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[2603],E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1651],E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1663],E,30,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1661],E,32,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1664],E,33,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1661],E,51,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1665],E,34,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1667],E,54,[[["self"],[R[37]]],[R[3]]]],[11,R[38],R[2603],E,8,[[["self"]],["str"]]],[11,"cause",E,E,8,[[["self"]],[["option",["error"]],["error"]]]],[11,"source",R[1663],E,53,[[["self"]],[["option",["error"]],["error"]]]],[11,R[27],E,E,30,[[["self"]],["u32"]]],[11,R[28],E,E,30,[[["self"]],["u64"]]],[11,R[29],E,E,30,[[["self"]]]],[11,R[30],E,E,30,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[27],E,E,31,[[["self"]],["u32"]]],[11,R[28],E,E,31,[[["self"]],["u64"]]],[11,R[29],E,E,31,[[["self"]]]],[11,R[30],E,E,31,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[27],R[1661],E,32,[[["self"]],["u32"]]],[11,R[28],E,E,32,[[["self"]],["u64"]]],[11,R[29],E,E,32,[[["self"]]]],[11,R[30],E,E,32,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[27],R[1664],E,33,[[["self"]],["u32"]]],[11,R[28],E,E,33,[[["self"]],["u64"]]],[11,R[29],E,E,33,[[["self"]]]],[11,R[30],E,E,33,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[27],R[1661],E,51,[[["self"]],["u32"]]],[11,R[28],E,E,51,[[["self"]],["u64"]]],[11,R[29],E,E,51,[[["self"]]]],[11,R[30],E,E,51,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[27],E,E,52,[[["self"]],["u32"]]],[11,R[28],E,E,52,[[["self"]],["u64"]]],[11,R[29],E,E,52,[[["self"]]]],[11,R[30],E,E,52,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[31],E,E,51,[[],["self"]]],[11,R[33],E,E,51,[[[R[34]]],[["error"],[R[3],["error"]]]]],[11,"new","rand",R[2607],39,[[["e"]],["error"]]],[11,"inner",E,R[2608],39,[[["self"]],["error"]]],[11,"take_inner",E,R[2609],39,[[],[["box",["error"]],["error"]]]],[18,R[1641],E,R[1642],39,N],[18,R[1643],E,R[1644],39,N],[11,R[1645],E,R[1646],39,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code",E,R[2610],39,[[["self"]],[[R[438]],["option",[R[438]]]]]]],"p":[[8,"RngCore"],[8,R[44]],[4,R[2605]],[8,R[1671]],[8,R[1672]],[8,R[1673]],[3,"Uniform"],[3,"Bernoulli"],[4,R[1670]],[8,"Weight"],[3,R[1674]],[3,R[1674]],[3,R[1675]],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,R[1676]],[3,"ReadRng"],[3,R[1678]],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,R[1679]],[8,R[1680]],[8,"Rng"],[8,R[1681]],[3,"Error"],[3,R[1683]],[3,R[1684]],[3,"Open01"],[3,R[1685]],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,R[1686]],[3,R[1687]],[3,"OsRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,R[1688]],[4,R[1689]],[4,R[1690]]]};
searchIndex["rand_chacha"]={"doc":"The ChaCha random number generator.","i":[[3,R[1837],"rand_chacha","ChaCha with 12 rounds",N,N],[3,R[1836],E,R[1412],N,N],[3,R[1838],E,R[1831],N,N],[3,R[1835],E,R[1412],N,N],[3,R[1839],E,"ChaCha with 8 rounds",N,N],[3,"ChaCha8Rng",E,R[1412],N,N],[11,R[1825],E,R[1826],0,[[["self"]],["u128"]]],[11,R[1827],E,R[1828],0,[[["self"],["u128"]]]],[11,R[1830],E,R[1829],0,[[["self"],["u64"]]]],[11,R[1825],E,R[1826],1,[[["self"]],["u128"]]],[11,R[1827],E,R[1828],1,[[["self"],["u128"]]]],[11,R[1830],E,R[1829],1,[[["self"],["u64"]]]],[11,R[1825],E,R[1826],2,[[["self"]],["u128"]]],[11,R[1827],E,R[1828],2,[[["self"],["u128"]]]],[11,R[1830],E,R[1829],2,[[["self"],["u64"]]]],[6,"ChaChaRng",E,R[1831],N,N],[6,"ChaChaCore",E,"ChaCha with 20 rounds, low-level interface",N,N],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"from",E,E,0,[[[R[1832]]],["self"]]],[11,"from",E,E,1,[[[R[1833]]],["self"]]],[11,"from",E,E,2,[[[R[1834]]],["self"]]],[11,"clone",E,E,4,[[["self"]],[R[1832]]]],[11,"clone",E,E,0,[[["self"]],["chacha20rng"]]],[11,"clone",E,E,3,[[["self"]],[R[1833]]]],[11,"clone",E,E,1,[[["self"]],["chacha12rng"]]],[11,"clone",E,E,5,[[["self"]],[R[1834]]]],[11,"clone",E,E,2,[[["self"]],["chacha8rng"]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,R[1622],E,E,4,[[["self"]]]],[11,R[1622],E,E,3,[[["self"]]]],[11,R[1622],E,E,5,[[["self"]]]],[11,R[27],E,E,0,[[["self"]],["u32"]]],[11,R[28],E,E,0,[[["self"]],["u64"]]],[11,R[29],E,E,0,[[["self"]]]],[11,R[30],E,E,0,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[27],E,E,1,[[["self"]],["u32"]]],[11,R[28],E,E,1,[[["self"]],["u64"]]],[11,R[29],E,E,1,[[["self"]]]],[11,R[30],E,E,1,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[27],E,E,2,[[["self"]],["u32"]]],[11,R[28],E,E,2,[[["self"]],["u64"]]],[11,R[29],E,E,2,[[["self"]]]],[11,R[30],E,E,2,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[31],E,E,4,[[],["self"]]],[11,R[31],E,E,0,[[],["self"]]],[11,R[31],E,E,3,[[],["self"]]],[11,R[31],E,E,1,[[],["self"]]],[11,R[31],E,E,5,[[],["self"]]],[11,R[31],E,E,2,[[],["self"]]]],"p":[[3,R[1835]],[3,R[1836]],[3,"ChaCha8Rng"],[3,R[1837]],[3,R[1838]],[3,R[1839]]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","i":[[3,"Error",R[18],R[1691],N,N],[3,"OsRng",E,R[2606],N,N],[11,"new",E,R[2607],0,[[["e"]],["self"]]],[11,"inner",E,R[2608],0,[[["self"]],["error"]]],[11,"take_inner",E,R[2609],0,[[],[["error"],["box",["error"]]]]],[18,R[1641],E,R[1642],0,N],[18,R[1643],E,R[1644],0,N],[11,R[1645],E,R[1646],0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code",E,R[2610],0,[[["self"]],[[R[438]],["option",[R[438]]]]]],[0,"block",E,"The `BlockRngCore` trait and implementation helpers",N,N],[3,R[41],R[23],R[11],N,N],[12,"core",E,R[12],1,N],[3,R[42],E,R[11],N,N],[12,"core",E,R[12],2,N],[8,R[43],E,"A trait for RNGs which do not generate random numbers…",N,N],[16,"Item",E,"Results element type, e.g. `u32`.",3,N],[16,"Results",E,"Results type. This is the 'block' an RNG implementing…",3,N],[10,R[1622],E,"Generate a new block of results.",3,[[["self"]]]],[11,"new",E,R[13],1,[[["r"]],[R[35]]]],[11,"index",E,R[14],1,[[["self"]],["usize"]]],[11,"reset",E,R[15],1,[[["self"]]]],[11,R[16],E,R[17],1,[[["self"],["usize"]]]],[11,"new",E,R[13],2,[[["r"]],[R[36]]]],[11,"index",E,R[14],2,[[["self"]],["usize"]]],[11,"reset",E,R[15],2,[[["self"]]]],[11,R[16],E,R[17],2,[[["self"],["usize"]]]],[0,"impls",R[18],"Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next",E,"Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,[[["r"]]]],[5,"fill_via_u32_chunks",E,R[19],N,[[]]],[5,"fill_via_u64_chunks",E,R[19],N,[[]]],[5,"next_u32_via_fill",E,"Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill",E,"Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le",R[18],"Little-Endian utilities",N,N],[5,R[1202],"rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,[[]]],[5,R[1203],E,"Reads unsigned 64 bit integers from `src` into `dst`.…",N,[[]]],[8,"RngCore",R[18],R[1692],N,N],[10,R[27],E,R[1693],4,[[["self"]],["u32"]]],[10,R[28],E,R[1694],4,[[["self"]],["u64"]]],[10,R[29],E,R[1695],4,[[["self"]]]],[10,R[30],E,R[1696],4,[[["self"]],[["error"],[R[3],["error"]]]]],[8,"CryptoRng",E,R[1697],N,N],[8,R[44],E,R[1698],N,N],[16,"Seed",E,R[1699],5,N],[10,R[31],E,R[1700],5,[[],["self"]]],[11,R[32],E,R[1701],5,[[["u64"]],["self"]]],[11,R[33],E,R[1702],5,[[[R[34]]],[["error"],[R[3],["error"]]]]],[11,R[1662],E,R[2611],5,[[],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",R[23],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[27],E,E,1,[[["self"]],["u32"]]],[11,R[28],E,E,1,[[["self"]],["u64"]]],[11,R[29],E,E,1,[[["self"]]]],[11,R[30],E,E,1,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[27],E,E,2,[[["self"]],["u32"]]],[11,R[28],E,E,2,[[["self"]],["u64"]]],[11,R[29],E,E,2,[[["self"]]]],[11,R[30],E,E,2,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[27],R[18],E,6,[[["self"]],["u32"]]],[11,R[28],E,E,6,[[["self"]],["u64"]]],[11,R[29],E,E,6,[[["self"]]]],[11,R[30],E,E,6,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[31],R[23],E,1,[[],["self"]]],[11,R[32],E,E,1,[[["u64"]],["self"]]],[11,R[33],E,E,1,[[[R[34]]],[["error"],[R[3],["error"]]]]],[11,R[31],E,E,2,[[],["self"]]],[11,R[32],E,E,2,[[["u64"]],["self"]]],[11,R[33],E,E,2,[[[R[34]]],[["error"],[R[3],["error"]]]]],[11,"from",R[18],E,0,[[[R[438]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"clone",R[23],E,1,[[["self"]],[R[35]]]],[11,"clone",E,E,2,[[["self"]],[R[36]]]],[11,"clone",R[18],E,6,[[["self"]],["osrng"]]],[11,R[90],E,E,6,[[],["osrng"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[23],E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[18],E,6,[[["self"],[R[37]]],[R[3]]]],[11,"source",E,E,0,[[["self"]],[["option",["error"]],["error"]]]],[11,"read",E,E,4,[[["self"]],[[R[3],["usize","error"]],["usize"],["error"]]]]],"p":[[3,"Error"],[3,R[41]],[3,R[42]],[8,R[43]],[8,"RngCore"],[8,R[44]],[3,"OsRng"]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","i":[[3,"Hc128Rng","rand_hc",R[1412],N,N],[3,"Hc128Core",E,"The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[R[3]]]],[11,"clone",E,E,0,[[["self"]],["hc128rng"]]],[11,"clone",E,E,1,[[["self"]],["hc128core"]]],[11,R[1622],E,E,1,[[["self"]]]],[11,R[27],E,E,0,[[["self"]],["u32"]]],[11,R[28],E,E,0,[[["self"]],["u64"]]],[11,R[29],E,E,0,[[["self"]]]],[11,R[30],E,E,0,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[31],E,E,0,[[],["self"]]],[11,R[33],E,E,0,[[[R[34]]],[[R[3],["error"]],["error"]]]],[11,R[31],E,"Create an HC-128 random number generator with a seed. The…",1,[[],["self"]]]],"p":[[3,"Hc128Rng"],[3,"Hc128Core"]]};
searchIndex["rand_isaac"]={"doc":"The ISAAC and ISAAC-64 random number generators.","i":[[0,"isaac","rand_isaac","The ISAAC random number generator.",N,N],[3,"IsaacRng",R[1376],"A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore",E,"The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,R[1374],E,R[1379],0,[[["u64"]],["self"]]],[0,"isaac64","rand_isaac","The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng",R[1377],"A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,R[1380],E,"The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,R[1374],E,R[1375],1,[[["u64"]],["self"]]],[11,R[1374],E,R[1375],2,[[["u64"]],["self"]]],[11,"from",R[1376],E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,"from",R[1377],E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,"fmt",R[1376],E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[1377],E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[R[3]]]],[11,"clone",R[1376],E,0,[[["self"]],["isaacrng"]]],[11,"clone",E,E,3,[[["self"]],["isaaccore"]]],[11,"clone",R[1377],E,1,[[["self"]],["isaac64rng"]]],[11,"clone",E,E,2,[[["self"]],["isaac64core"]]],[11,R[1622],R[1376],R[1378],3,[[["isaacarray"],["self"]]]],[11,R[1622],R[1377],R[1378],2,[[["isaacarray"],["self"]]]],[11,R[27],R[1376],E,0,[[["self"]],["u32"]]],[11,R[28],E,E,0,[[["self"]],["u64"]]],[11,R[29],E,E,0,[[["self"]]]],[11,R[30],E,E,0,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[27],R[1377],E,1,[[["self"]],["u32"]]],[11,R[28],E,E,1,[[["self"]],["u64"]]],[11,R[29],E,E,1,[[["self"]]]],[11,R[30],E,E,1,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[31],R[1376],E,0,[[],["self"]]],[11,R[32],E,R[1379],0,[[["u64"]],["self"]]],[11,R[33],E,E,0,[[[R[34]]],[[R[3],["error"]],["error"]]]],[11,R[31],E,E,3,[[],["self"]]],[11,R[32],E,R[1379],3,[[["u64"]],["self"]]],[11,R[33],E,E,3,[[[R[34]]],[[R[3],["error"]],["error"]]]],[11,R[31],R[1377],E,1,[[],["self"]]],[11,R[32],E,R[1379],1,[[["u64"]],["self"]]],[11,R[33],E,E,1,[[[R[34]]],[[R[3],["error"]],["error"]]]],[11,R[31],E,E,2,[[],["self"]]],[11,R[32],E,E,2,[[["u64"]],["self"]]],[11,R[33],E,E,2,[[[R[34]]],[[R[3],["error"]],["error"]]]]],"p":[[3,"IsaacRng"],[3,"Isaac64Rng"],[3,R[1380]],[3,"IsaacCore"]]};
searchIndex["rand_jitter"]={"doc":"Non-physical true random number generator based on timing…","i":[[3,R[934],"rand_jitter",R[1703],N,N],[4,R[933],E,R[1704],N,N],[13,"NoTimer",E,R[1705],0,N],[13,R[1706],E,R[1707],0,N],[13,R[1708],E,R[1709],0,N],[13,R[1710],E,R[1711],0,N],[13,R[1712],E,R[1713],0,N],[11,"new",E,R[1714],1,[[],[[R[931]],[R[932]],[R[3],[R[931],R[932]]]]]],[11,R[1715],E,R[1716],1,[[],[R[931]]]],[11,"set_rounds",E,R[1717],1,[[["self"],["u8"]]]],[11,"test_timer",E,R[1718],1,[[["self"]],[[R[932]],[R[3],["u8",R[932]]],["u8"]]]],[11,R[1719],E,R[1720],1,[[["self"],["bool"]],["i64"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[R[3]]]],[11,"eq",E,E,0,[[["self"],[R[932]]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[932]]]],[11,"clone",E,E,1,[[["self"]],[R[931]]]],[11,R[38],E,E,0,[[["self"]],["str"]]],[11,R[27],E,E,1,[[["self"]],["u32"]]],[11,R[28],E,E,1,[[["self"]],["u64"]]],[11,R[29],E,E,1,[[["self"]]]],[11,R[30],E,E,1,[[["self"]],[["error"],[R[3],["error"]]]]]],"p":[[4,R[933]],[3,R[934]]]};
searchIndex["rand_os"]={"doc":R[1577],"i":[[3,"OsRng","rand_os",R[1721],N,N],[11,"new",E,R[1722],0,[[],[[R[3],["osrng","error"]],["error"],["osrng"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"clone",E,E,0,[[["self"]],["osrng"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,R[27],E,E,0,[[["self"]],["u32"]]],[11,R[28],E,E,0,[[["self"]],["u64"]]],[11,R[29],E,E,0,[[["self"]]]],[11,R[30],E,E,0,[[["self"]],[["error"],[R[3],["error"]]]]]],"p":[[3,"OsRng"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","i":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,R[1373],E,"A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new",E,"Construct an instance compatible with PCG seed and stream.",0,[[["u64"]],["self"]]],[11,"new",E,"Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32",E,"`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg",E,"A friendly name for `Mcg128Xsl64`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[R[3]]]],[11,"clone",E,E,0,[[["self"]],["lcg64xsh32"]]],[11,"clone",E,E,1,[[["self"]],["mcg128xsl64"]]],[11,R[27],E,E,0,[[["self"]],["u32"]]],[11,R[28],E,E,0,[[["self"]],["u64"]]],[11,R[29],E,E,0,[[["self"]]]],[11,R[30],E,E,0,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[27],E,E,1,[[["self"]],["u32"]]],[11,R[28],E,E,1,[[["self"]],["u64"]]],[11,R[29],E,E,1,[[["self"]]]],[11,R[30],E,E,1,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[31],E,E,0,[[],["self"]]],[11,R[31],E,E,1,[[],["self"]]]],"p":[[3,"Lcg64Xsh32"],[3,R[1373]]]};
searchIndex["rand_xorshift"]={"doc":"The xorshift random number generator.","i":[[3,R[1346],"rand_xorshift","An Xorshift random number generator.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"clone",E,E,0,[[["self"]],["xorshiftrng"]]],[11,R[27],E,E,0,[[["self"]],["u32"]]],[11,R[28],E,E,0,[[["self"]],["u64"]]],[11,R[29],E,E,0,[[["self"]]]],[11,R[30],E,E,0,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[31],E,E,0,[[],["self"]]],[11,R[33],E,E,0,[[[R[34]]],[[R[3],["error"]],["error"]]]]],"p":[[3,R[1346]]]};
searchIndex["regex"]={"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,R[2655],"regex",R[2656],N,N],[3,R[2653],E,R[2654],N,N],[3,"RegexSet",E,R[2671],N,N],[3,R[2764],E,R[2672],N,N],[3,R[2673],E,R[2674],N,N],[3,R[2675],E,R[2676],N,N],[3,R[2665],E,R[2666],N,N],[3,R[2659],E,R[2660],N,N],[3,R[2663],E,R[2664],N,N],[3,"Captures",E,"Captures represents a group of captured strings for a…",N,N],[3,"Match",E,R[2657],N,N],[3,"Matches",E,R[2658],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal string replacement.",N,N],[12,"0",E,E,0,N],[3,"Regex",E,"A compiled regular expression for matching Unicode strings.",N,N],[3,R[2669],E,R[2670],N,N],[3,"Split",E,R[2661],N,N],[3,"SplitN",E,R[2662],N,N],[3,R[2667],E,R[2668],N,N],[4,"Error",E,"An error that occurred during parsing or compiling a…",N,N],[13,"Syntax",E,"A syntax error.",1,N],[13,"CompiledTooBig",E,"The compiled program exceeded the set size limit. The…",1,N],[5,"escape",E,R[2765],N,[[["str"]],["string"]]],[0,"bytes",E,"Match regular expressions on arbitrary bytes.",N,N],[3,R[2653],R[2689],R[2654],N,N],[3,R[2655],E,R[2656],N,N],[3,"Match",E,R[2657],N,N],[3,"Regex",E,"A compiled regular expression for matching arbitrary bytes.",N,N],[3,"Matches",E,R[2658],N,N],[3,R[2659],E,R[2660],N,N],[3,"Split",E,R[2661],N,N],[3,"SplitN",E,R[2662],N,N],[3,R[2663],E,R[2664],N,N],[3,R[2665],E,R[2666],N,N],[3,"Captures",E,"Captures represents a group of captured byte strings for a…",N,N],[3,R[2667],E,R[2668],N,N],[3,R[2669],E,R[2670],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal byte string replacement.",N,N],[12,"0",E,E,2,N],[3,"RegexSet",E,R[2671],N,N],[3,R[2764],E,R[2672],N,N],[3,R[2673],E,R[2674],N,N],[3,R[2675],E,R[2676],N,N],[8,"Replacer",E,R[2757],N,N],[10,R[2758],E,R[2759],3,[[["vec"],["self"],[R[2723]]]]],[11,R[2696],E,R[2697],3,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"by_ref",E,R[2698],3,[[["self"]],[R[2699]]]],[11,"new",E,R[2678],4,[[["str"]],[R[2677]]]],[11,"build",E,R[2679],4,[[["self"]],[[R[3],["regex","error"]],["error"],["regex"]]]],[11,R[1069],E,R[2680],4,[[["self"],["bool"]],[R[2677]]]],[11,R[2691],E,R[2681],4,[[["self"],["bool"]],[R[2677]]]],[11,R[1070],E,R[2682],4,[[["self"],["bool"]],[R[2677]]]],[11,R[2692],E,R[2683],4,[[["self"],["bool"]],[R[2677]]]],[11,R[1067],E,R[2684],4,[[["self"],["bool"]],[R[2677]]]],[11,"unicode",E,R[2685],4,[[["self"],["bool"]],[R[2677]]]],[11,"octal",E,R[1065],4,[[["self"],["bool"]],[R[2677]]]],[11,R[2693],E,R[2686],4,[[["self"],["usize"]],[R[2677]]]],[11,R[2687],E,R[2688],4,[[["self"],["usize"]],[R[2677]]]],[11,R[2694],E,R[1064],4,[[["self"],["u32"]],[R[2677]]]],[11,"new","regex",R[2678],5,[[["str"]],[R[2677]]]],[11,"build",E,R[2679],5,[[["self"]],[[R[3],["regex","error"]],["regex"],["error"]]]],[11,R[1069],E,R[2680],5,[[["self"],["bool"]],[R[2677]]]],[11,R[2691],E,R[2681],5,[[["self"],["bool"]],[R[2677]]]],[11,R[1070],E,R[2682],5,[[["self"],["bool"]],[R[2677]]]],[11,R[2692],E,R[2683],5,[[["self"],["bool"]],[R[2677]]]],[11,R[1067],E,R[2684],5,[[["self"],["bool"]],[R[2677]]]],[11,"unicode",E,R[2685],5,[[["self"],["bool"]],[R[2677]]]],[11,"octal",E,R[1065],5,[[["self"],["bool"]],[R[2677]]]],[11,R[2693],E,R[2686],5,[[["self"],["usize"]],[R[2677]]]],[11,R[2687],E,R[2688],5,[[["self"],["usize"]],[R[2677]]]],[11,R[2694],E,R[1064],5,[[["self"],["u32"]],[R[2677]]]],[11,"new",R[2689],R[2678],6,[[["i"]],[R[2690]]]],[11,"build",E,R[2695],6,[[["self"]],[["error"],[R[3],[R[2703],"error"]],[R[2703]]]]],[11,R[1069],E,R[2680],6,[[["self"],["bool"]],[R[2690]]]],[11,R[2691],E,R[2681],6,[[["self"],["bool"]],[R[2690]]]],[11,R[1070],E,R[2682],6,[[["self"],["bool"]],[R[2690]]]],[11,R[2692],E,R[2683],6,[[["self"],["bool"]],[R[2690]]]],[11,R[1067],E,R[2684],6,[[["self"],["bool"]],[R[2690]]]],[11,"unicode",E,R[2685],6,[[["self"],["bool"]],[R[2690]]]],[11,"octal",E,R[1065],6,[[["self"],["bool"]],[R[2690]]]],[11,R[2693],E,R[2686],6,[[["self"],["usize"]],[R[2690]]]],[11,R[2687],E,R[2688],6,[[["self"],["usize"]],[R[2690]]]],[11,R[2694],E,R[1064],6,[[["self"],["u32"]],[R[2690]]]],[11,"new","regex",R[2678],7,[[["i"]],[R[2690]]]],[11,"build",E,R[2695],7,[[["self"]],[[R[3],[R[2703],"error"]],["error"],[R[2703]]]]],[11,R[1069],E,R[2680],7,[[["self"],["bool"]],[R[2690]]]],[11,R[2691],E,R[2681],7,[[["self"],["bool"]],[R[2690]]]],[11,R[1070],E,R[2682],7,[[["self"],["bool"]],[R[2690]]]],[11,R[2692],E,R[2683],7,[[["self"],["bool"]],[R[2690]]]],[11,R[1067],E,R[2684],7,[[["self"],["bool"]],[R[2690]]]],[11,"unicode",E,R[2685],7,[[["self"],["bool"]],[R[2690]]]],[11,"octal",E,R[1065],7,[[["self"],["bool"]],[R[2690]]]],[11,R[2693],E,R[2686],7,[[["self"],["usize"]],[R[2690]]]],[11,R[2687],E,R[2688],7,[[["self"],["usize"]],[R[2690]]]],[11,R[2694],E,R[1064],7,[[["self"],["u32"]],[R[2690]]]],[11,R[2696],R[2689],R[2697],3,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"by_ref",E,R[2698],3,[[["self"]],[R[2699]]]],[11,"start",E,R[2714],8,[[["self"]],["usize"]]],[11,"end",E,R[2715],8,[[["self"]],["usize"]]],[11,R[2616],E,R[2716],8,[[["self"]]]],[11,"new",E,R[2717],9,[[["str"]],[[R[3],["regex","error"]],["error"],["regex"]]]],[11,"is_match",E,R[2718],9,[[["self"]],["bool"]]],[11,"find",E,R[2719],9,[[["self"]],[["option",["match"]],["match"]]]],[11,R[2720],E,R[2721],9,[[["self"]],["matches"]]],[11,R[2723],E,R[2722],9,[[["self"]],[[R[2723]],["option",[R[2723]]]]]],[11,R[2724],E,R[2725],9,[[["self"]],[R[2726]]]],[11,"split",E,R[2727],9,[[["self"]],["split"]]],[11,"splitn",E,R[2728],9,[[["self"],["usize"]],["splitn"]]],[11,"replace",E,R[2729],9,[[["self"],["replacer"]],["cow"]]],[11,R[2700],E,R[2730],9,[[["self"],["replacer"]],["cow"]]],[11,"replacen",E,R[2731],9,[[["usize"],["self"],["replacer"]],["cow"]]],[11,R[2732],E,R[2733],9,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[2734],E,R[2735],9,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,R[2736],E,R[2737],9,[[["self"],["usize"]],["bool"]]],[11,"find_at",E,R[2738],9,[[["self"],["usize"]],[["option",["match"]],["match"]]]],[11,R[2739],E,R[2740],9,[[[R[2701]],["self"]],[["option",["match"]],["match"]]]],[11,R[2741],E,"Returns the same as `captures_read`, but starts the search…",9,[[[R[2701]],["usize"],["self"]],[["option",["match"]],["match"]]]],[11,"as_str",E,R[2742],9,[[["self"]],["str"]]],[11,R[2743],E,R[2744],9,[[["self"]],[R[2745]]]],[11,R[2746],E,R[2747],9,[[["self"]],["usize"]]],[11,R[2748],E,R[2749],9,[[["self"]],[R[2701]]]],[11,"get",E,R[2750],10,[[["self"],["usize"]],["option"]]],[11,"len",E,R[2751],10,[[["self"]],["usize"]]],[11,"get",E,R[2752],11,[[["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"name",E,R[2753],11,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"iter",E,R[2668],11,[[["self"]],[R[2754]]]],[11,"expand",E,R[2755],11,[[["vec"],["self"]]]],[11,"len",E,R[2756],11,[[["self"]],["usize"]]],[11,"new","regex",R[2702],12,[[["i"]],[[R[3],[R[2703],"error"]],["error"],[R[2703]]]]],[11,"is_match",E,R[2704],12,[[["str"],["self"]],["bool"]]],[11,"matches",E,R[2705],12,[[["str"],["self"]],[R[2760]]]],[11,"len",E,R[2706],12,[[["self"]],["usize"]]],[11,"patterns",E,R[2707],12,[[["self"]]]],[11,R[2708],E,R[2709],13,[[["self"]],["bool"]]],[11,"matched",E,R[2710],13,[[["self"],["usize"]],["bool"]]],[11,"len",E,R[2711],13,[[["self"]],["usize"]]],[11,"iter",E,R[2712],13,[[["self"]],[R[2713]]]],[11,"new",R[2689],R[2702],14,[[["i"]],[["error"],[R[3],[R[2703],"error"]],[R[2703]]]]],[11,"is_match",E,R[2704],14,[[["self"]],["bool"]]],[11,"matches",E,R[2705],14,[[["self"]],[R[2760]]]],[11,"len",E,R[2706],14,[[["self"]],["usize"]]],[11,"patterns",E,R[2707],14,[[["self"]]]],[11,R[2708],E,R[2709],15,[[["self"]],["bool"]]],[11,"matched",E,R[2710],15,[[["self"],["usize"]],["bool"]]],[11,"len",E,R[2711],15,[[["self"]],["usize"]]],[11,"iter",E,R[2712],15,[[["self"]],[R[2713]]]],[11,"start","regex",R[2714],16,[[["self"]],["usize"]]],[11,"end",E,R[2715],16,[[["self"]],["usize"]]],[11,"as_str",E,R[2716],16,[[["self"]],["str"]]],[11,"new",E,R[2717],17,[[["str"]],[[R[3],["regex","error"]],["regex"],["error"]]]],[11,"is_match",E,R[2718],17,[[["str"],["self"]],["bool"]]],[11,"find",E,R[2719],17,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,R[2720],E,R[2721],17,[[["str"],["self"]],["matches"]]],[11,R[2723],E,R[2722],17,[[["str"],["self"]],[[R[2723]],["option",[R[2723]]]]]],[11,R[2724],E,R[2725],17,[[["str"],["self"]],[R[2726]]]],[11,"split",E,R[2727],17,[[["str"],["self"]],["split"]]],[11,"splitn",E,R[2728],17,[[["str"],["self"],["usize"]],["splitn"]]],[11,"replace",E,R[2729],17,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,R[2700],E,R[2730],17,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"replacen",E,R[2731],17,[[["usize"],["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,R[2732],E,R[2733],17,[[["str"],["self"]],[["option",["usize"]],["usize"]]]],[11,R[2734],E,R[2735],17,[[["str"],["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,R[2736],E,R[2737],17,[[["str"],["self"],["usize"]],["bool"]]],[11,"find_at",E,R[2738],17,[[["str"],["self"],["usize"]],[["option",["match"]],["match"]]]],[11,R[2739],E,R[2740],17,[[[R[2701]],["self"],["str"]],[["option",["match"]],["match"]]]],[11,R[2741],E,"Returns the same as captures, but starts the search at the…",17,[[["usize"],[R[2701]],["self"],["str"]],[["option",["match"]],["match"]]]],[11,"as_str",E,R[2742],17,[[["self"]],["str"]]],[11,R[2743],E,R[2744],17,[[["self"]],[R[2745]]]],[11,R[2746],E,R[2747],17,[[["self"]],["usize"]]],[11,R[2748],E,R[2749],17,[[["self"]],[R[2701]]]],[11,"get",E,R[2750],18,[[["self"],["usize"]],["option"]]],[11,"len",E,R[2751],18,[[["self"]],["usize"]]],[11,"get",E,R[2752],19,[[["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"name",E,R[2753],19,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"iter",E,R[2668],19,[[["self"]],[R[2754]]]],[11,"expand",E,R[2755],19,[[["str"],["self"],["string"]]]],[11,"len",E,R[2756],19,[[["self"]],["usize"]]],[8,"Replacer",E,R[2757],N,N],[10,R[2758],E,R[2759],20,[[["self"],[R[2723]],["string"]]]],[11,R[2696],E,R[2763],20,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"by_ref",E,R[2698],20,[[["self"]],[R[2699]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[211],E,E,13,[[],["i"]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"],[T]]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[211],E,E,21,[[],["i"]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[211],E,E,22,[[],["i"]]],[11,R[24],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"],[T]]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"],[T]]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[211],E,E,23,[[],["i"]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[211],E,E,24,[[],["i"]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[211],E,E,25,[[],["i"]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[78],E,E,17,[[["self"]],["string"]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[211],E,E,27,[[],["i"]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[211],E,E,28,[[],["i"]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[211],E,E,29,[[],["i"]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[["self"]],["string"]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",R[2689],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[78],E,E,9,[[["self"]],["string"]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[211],E,E,30,[[],["i"]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[211],E,E,31,[[],["i"]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[211],E,E,32,[[],["i"]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[211],E,E,33,[[],["i"]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[211],E,E,34,[[],["i"]]],[11,R[20],E,E,34,[[[U]],[R[3]]]],[11,R[21],E,E,34,[[],[R[3]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[["self"]],[T]]],[11,R[26],E,E,34,[[["self"]],[R[46]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[211],E,E,35,[[],["i"]]],[11,R[20],E,E,35,[[[U]],[R[3]]]],[11,R[21],E,E,35,[[],[R[3]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[["self"]],[T]]],[11,R[26],E,E,35,[[["self"]],[R[46]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[20],E,E,36,[[[U]],[R[3]]]],[11,R[21],E,E,36,[[],[R[3]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[22],E,E,36,[[["self"]],[T]]],[11,R[26],E,E,36,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[211],E,E,15,[[],["i"]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[211],E,E,37,[[],["i"]]],[11,R[20],E,E,37,[[[U]],[R[3]]]],[11,R[21],E,E,37,[[],[R[3]]]],[11,R[45],E,E,37,[[["self"]],[T]]],[11,R[22],E,E,37,[[["self"]],[T]]],[11,R[26],E,E,37,[[["self"]],[R[46]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[211],E,E,38,[[],["i"]]],[11,R[24],E,E,38,[[["self"]],[T]]],[11,R[25],E,E,38,[[["self"],[T]]]],[11,R[20],E,E,38,[[[U]],[R[3]]]],[11,R[21],E,E,38,[[],[R[3]]]],[11,R[45],E,E,38,[[["self"]],[T]]],[11,R[22],E,E,38,[[["self"]],[T]]],[11,R[26],E,E,38,[[["self"]],[R[46]]]],[11,R[2758],E,E,36,[[["vec"],["self"],[R[2723]]]]],[11,R[2696],E,E,36,[[["self"]],[["option",["cow"]],["cow"]]]],[11,R[2758],E,E,2,[[["vec"],["self"],[R[2723]]]]],[11,R[2696],E,E,2,[[["self"]],[["option",["cow"]],["cow"]]]],[11,R[2758],"regex",E,26,[[["self"],[R[2723]],["string"]]]],[11,R[2696],E,E,26,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,R[2758],E,E,0,[[["self"],[R[2723]],["string"]]]],[11,R[2696],E,E,0,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"next",R[2689],E,30,[[["self"]],[["option",["match"]],["match"]]]],[11,"next",E,E,31,[[["self"]],[[R[2723]],["option",[R[2723]]]]]],[11,"next",E,E,32,[[["self"]],["option"]]],[11,"next",E,E,33,[[["self"]],["option"]]],[11,"next",E,E,34,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,R[292],E,E,34,[[["self"]]]],[11,"next",E,E,35,[[["self"]],[["option",["match"]],["option",["option"]]]]],[11,"next","regex",E,21,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[292],E,E,21,[[["self"]]]],[11,"next",E,E,22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[292],E,E,22,[[["self"]]]],[11,"next",R[2689],E,37,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[292],E,E,37,[[["self"]]]],[11,"next",E,E,38,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[292],E,E,38,[[["self"]]]],[11,"next","regex",E,24,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,R[292],E,E,24,[[["self"]]]],[11,"next",E,E,27,[[["self"]],[["str"],["option",["str"]]]]],[11,"next",E,E,28,[[["self"]],[["str"],["option",["str"]]]]],[11,"next",E,E,29,[[["self"]],[["option",["match"]],["option",["option"]]]]],[11,"next",E,E,23,[[["self"]],[[R[2723]],["option",[R[2723]]]]]],[11,"next",E,E,25,[[["self"]],[["option",["match"]],["match"]]]],[11,R[211],E,E,13,[[]]],[11,R[211],R[2689],E,15,[[]]],[11,R[295],"regex",E,21,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[295],E,E,22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[295],R[2689],E,37,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[295],E,E,38,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"clone","regex",E,1,[[["self"]],["error"]]],[11,"clone",R[2689],E,8,[[["self"]],["match"]]],[11,"clone",E,E,9,[[["self"]],["regex"]]],[11,"clone",E,E,10,[[["self"]],[R[2701]]]],[11,"clone","regex",E,12,[[["self"]],[R[2703]]]],[11,"clone",E,E,13,[[["self"]],[R[2760]]]],[11,"clone",E,E,22,[[["self"]],[R[2713]]]],[11,"clone",R[2689],E,14,[[["self"]],[R[2703]]]],[11,"clone",E,E,15,[[["self"]],[R[2760]]]],[11,"clone",E,E,38,[[["self"]],[R[2713]]]],[11,"clone","regex",E,16,[[["self"]],["match"]]],[11,"clone",E,E,17,[[["self"]],["regex"]]],[11,"clone",E,E,18,[[["self"]],[R[2701]]]],[11,"eq",E,E,1,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["error"]],["bool"]]],[11,"eq",R[2689],E,8,[[["self"],["match"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["match"]],["bool"]]],[11,"eq","regex",E,16,[[["match"],["self"]],["bool"]]],[11,"ne",E,E,16,[[["match"],["self"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[2689],R[2761],9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt","regex",R[2761],17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[2689],E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,R[2761],9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[37]]],[R[3]]]],[11,"fmt","regex",E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[2689],E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt","regex",E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,R[2761],17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[37]]],[R[3]]]],[11,R[457],R[2689],R[2762],9,[[["str"]],[[R[3],["regex","error"]],["error"],["regex"]]]],[11,R[457],"regex",R[2762],17,[[["str"]],[[R[3],["regex","error"]],["regex"],["error"]]]],[11,"index",R[2689],E,11,[[["self"],["usize"]]]],[11,"index",E,E,11,[[["str"],["self"]]]],[11,"index","regex",E,19,[[["self"],["usize"]],["str"]]],[11,"index",E,E,19,[[["str"],["self"]],["str"]]],[11,R[38],E,E,1,[[["self"]],["str"]]],[11,R[2696],E,R[2763],20,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"by_ref",E,R[2698],20,[[["self"]],[R[2699]]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,R[2653]],[3,R[2653]],[3,R[2655]],[3,R[2655]],[3,"Match"],[3,"Regex"],[3,R[2665]],[3,"Captures"],[3,"RegexSet"],[3,R[2764]],[3,"RegexSet"],[3,R[2764]],[3,"Match"],[3,"Regex"],[3,R[2665]],[3,"Captures"],[8,"Replacer"],[3,R[2673]],[3,R[2675]],[3,R[2659]],[3,R[2663]],[3,"Matches"],[3,R[2669]],[3,"Split"],[3,"SplitN"],[3,R[2667]],[3,"Matches"],[3,R[2659]],[3,"Split"],[3,"SplitN"],[3,R[2663]],[3,R[2667]],[3,R[2669]],[3,R[2673]],[3,R[2675]]]};
searchIndex["regex_syntax"]={"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser",R[1022],"A convenience parser for regular expressions.",N,N],[3,R[1015],E,R[1016],N,N],[3,R[1147],E,"An error that occurs when the Unicode-aware `\\w` class is…",N,N],[4,"Error",E,"This error type encompasses any error that can be returned…",N,N],[13,"Parse",E,"An error that occurred while translating concrete syntax…",0,N],[13,"Translate",E,"An error that occurred while translating abstract syntax…",0,N],[5,"escape",E,R[2765],N,[[["str"]],["string"]]],[5,"escape_into",E,"Escapes all meta characters in `text` and writes the…",N,[[["str"],["string"]]]],[5,"is_meta_character",E,"Returns true if the give character has significance in a…",N,[[["char"]],["bool"]]],[5,"is_word_character",E,R[1001],N,[[["char"]],["bool"]]],[5,"try_is_word_character",E,R[1001],N,[[["char"]],[["bool"],[R[1002]],[R[3],["bool",R[1002]]]]]],[5,"is_word_byte",E,"Returns true if and only if the given character is an…",N,[[["u8"]],["bool"]]],[0,"ast",E,"Defines an abstract syntax for regular expressions.",N,N],[3,"Error",R[1004],"An error that occurred while parsing a regular expression…",N,N],[3,"Span",E,"Span represents the position information of a single AST…",N,N],[12,"start",E,"The start byte offset.",1,N],[12,"end",E,"The end byte offset.",1,N],[3,"Position",E,"A single position in a regular expression.",N,N],[12,"offset",E,"The absolute offset of this position, starting at `0` from…",2,N],[12,"line",E,"The line number, starting at `1`.",2,N],[12,"column",E,"The approximate column number, starting at `1`.",2,N],[3,R[1124],E,"An abstract syntax tree for a singular expression along…",N,N],[12,"ast",E,"The actual ast.",3,N],[12,"comments",E,"All comments found in the original regular expression.",3,N],[3,"Comment",E,"A comment from a regular expression with an associated span.",N,N],[12,"span",E,"The span of this comment, including the beginning `#` and…",4,N],[12,"comment",E,"The comment text, starting with the first character…",4,N],[3,R[1008],E,R[1009],N,N],[12,"span",E,"The span of this alternation.",5,N],[12,"asts",E,"The alternate regular expressions.",5,N],[3,"Concat",E,R[1010],N,N],[12,"span",E,"The span of this concatenation.",6,N],[12,"asts",E,"The concatenation regular expressions.",6,N],[3,"Literal",E,"A single literal expression.",N,N],[12,"span",E,"The span of this literal.",7,N],[12,"kind",E,"The kind of this literal.",7,N],[12,"c",E,"The Unicode scalar value corresponding to this literal.",7,N],[3,"ClassPerl",E,"A Perl character class.",N,N],[12,"span",E,R[1003],8,N],[12,"kind",E,"The kind of Perl class.",8,N],[12,"negated",E,"Whether the class is negated or not. e.g., `\\d` is not…",8,N],[3,"ClassAscii",E,"An ASCII character class.",N,N],[12,"span",E,R[1003],9,N],[12,"kind",E,"The kind of ASCII class.",9,N],[12,"negated",E,"Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,N],[3,R[1023],E,"A Unicode character class.",N,N],[12,"span",E,R[1003],10,N],[12,"negated",E,"Whether this class is negated or not.",10,N],[12,"kind",E,"The kind of Unicode class.",10,N],[3,R[1125],E,"A bracketed character class, e.g., `[a-z0-9]`.",N,N],[12,"span",E,R[1003],11,N],[12,"negated",E,"Whether this class is negated or not. e.g., `[a]` is not…",11,N],[12,"kind",E,"The type of this set. A set is either a normal union of…",11,N],[3,R[1126],E,"A single character class range in a set.",N,N],[12,"span",E,"The span of this range.",12,N],[12,"start",E,"The start of this range.",12,N],[12,"end",E,"The end of this range.",12,N],[3,R[1127],E,"A union of items inside a character class set.",N,N],[12,"span",E,"The span of the items in this operation. e.g., the…",13,N],[12,"items",E,"The sequence of items that make up this union.",13,N],[3,R[1128],E,"A Unicode character class set operation.",N,N],[12,"span",E,"The span of this operation. e.g., the `a-z--[h-p]` in…",14,N],[12,"kind",E,"The type of this set operation.",14,N],[12,"lhs",E,"The left hand side of the operation.",14,N],[12,"rhs",E,"The right hand side of the operation.",14,N],[3,"Assertion",E,R[1006],N,N],[12,"span",E,"The span of this assertion.",15,N],[12,"kind",E,"The assertion kind, e.g., `\\b` or `^`.",15,N],[3,R[1024],E,"A repetition operation applied to a regular expression.",N,N],[12,"span",E,"The span of this operation.",16,N],[12,"op",E,"The actual operation.",16,N],[12,"greedy",E,"Whether this operation was applied greedily or not.",16,N],[12,"ast",E,"The regular expression under repetition.",16,N],[3,R[1129],E,"The repetition operator itself.",N,N],[12,"span",E,"The span of this operator. This includes things like `+`,…",17,N],[12,"kind",E,"The type of operation.",17,N],[3,"Group",E,R[1007],N,N],[12,"span",E,"The span of this group.",18,N],[12,"kind",E,"The kind of this group.",18,N],[12,"ast",E,"The regular expression in this group.",18,N],[3,R[1014],E,"A capture name.",N,N],[12,"span",E,"The span of this capture name.",19,N],[12,"name",E,"The capture name.",19,N],[12,"index",E,"The capture index.",19,N],[3,"SetFlags",E,"A group of flags that is not applied to a particular…",N,N],[12,"span",E,"The span of these flags, including the grouping parentheses.",20,N],[12,"flags",E,"The actual sequence of flags.",20,N],[3,"Flags",E,"A group of flags.",N,N],[12,"span",E,"The span of this group of flags.",21,N],[12,"items",E,"A sequence of flag items. Each item is either a flag or a…",21,N],[3,"FlagsItem",E,"A single item in a group of flags.",N,N],[12,"span",E,"The span of this item.",22,N],[12,"kind",E,"The kind of this item.",22,N],[4,R[40],E,"The type of an error that occurred while building an AST.",N,N],[13,"CaptureLimitExceeded",E,"The capturing group limit was exceeded.",23,N],[13,"ClassEscapeInvalid",E,"An invalid escape sequence was found in a character class…",23,N],[13,"ClassRangeInvalid",E,"An invalid character class range was found. An invalid…",23,N],[13,"ClassRangeLiteral",E,"An invalid range boundary was found in a character class.…",23,N],[13,"ClassUnclosed",E,"An opening `[` was found with no corresponding closing `]`.",23,N],[13,"DecimalEmpty",E,"Note that this error variant is no longer used. Namely, a…",23,N],[13,"DecimalInvalid",E,"An invalid decimal number was given where one was expected.",23,N],[13,"EscapeHexEmpty",E,"A bracketed hex literal was empty.",23,N],[13,"EscapeHexInvalid",E,"A bracketed hex literal did not correspond to a Unicode…",23,N],[13,"EscapeHexInvalidDigit",E,"An invalid hexadecimal digit was found.",23,N],[13,"EscapeUnexpectedEof",E,"EOF was found before an escape sequence was completed.",23,N],[13,"EscapeUnrecognized",E,"An unrecognized escape sequence.",23,N],[13,"FlagDanglingNegation",E,"A dangling negation was used when setting flags, e.g., `i-`.",23,N],[13,"FlagDuplicate",E,"A flag was used twice, e.g., `i-i`.",23,N],[12,"original",R[1005],"The position of the original flag. The error position…",23,N],[13,"FlagRepeatedNegation",R[1004],"The negation operator was used twice, e.g., `-i-s`.",23,N],[12,"original",R[1005],"The position of the original negation operator. The error…",23,N],[13,"FlagUnexpectedEof",R[1004],"Expected a flag but got EOF, e.g., `(?`.",23,N],[13,"FlagUnrecognized",E,"Unrecognized flag, e.g., `a`.",23,N],[13,"GroupNameDuplicate",E,"A duplicate capture name was found.",23,N],[12,"original",R[1005],"The position of the initial occurrence of the capture…",23,N],[13,"GroupNameEmpty",R[1004],"A capture group name is empty, e.g., `(?P<>abc)`.",23,N],[13,"GroupNameInvalid",E,"An invalid character was seen for a capture group name.…",23,N],[13,"GroupNameUnexpectedEof",E,"A closing `>` could not be found for a capture group name.",23,N],[13,"GroupUnclosed",E,"An unclosed group, e.g., `(ab`.",23,N],[13,"GroupUnopened",E,"An unopened group, e.g., `ab)`.",23,N],[13,"NestLimitExceeded",E,"The nest limit was exceeded. The limit stored here is the…",23,N],[13,"RepetitionCountInvalid",E,"The range provided in a counted repetition operator is…",23,N],[13,"RepetitionCountDecimalEmpty",E,"An opening `{` was not followed by a valid decimal value.…",23,N],[13,"RepetitionCountUnclosed",E,"An opening `{` was found with no corresponding closing `}`.",23,N],[13,"RepetitionMissing",E,"A repetition operator was applied to a missing…",23,N],[13,"UnsupportedBackreference",E,"When octal support is disabled, this error is produced…",23,N],[13,"UnsupportedLookAround",E,"When syntax similar to PCRE's look-around is used, this…",23,N],[4,"Ast",E,"An abstract syntax tree for a single regular expression.",N,N],[13,"Empty",E,"An empty regex that matches everything.",24,N],[13,"Flags",E,"A set of flags, e.g., `(?is)`.",24,N],[13,"Literal",E,"A single character literal, which includes escape sequences.",24,N],[13,"Dot",E,"The \"any character\" class.",24,N],[13,"Assertion",E,R[1006],24,N],[13,"Class",E,"A single character class. This includes all forms of…",24,N],[13,R[1024],E,"A repetition operator applied to an arbitrary regular…",24,N],[13,"Group",E,R[1007],24,N],[13,R[1008],E,R[1009],24,N],[13,"Concat",E,R[1010],24,N],[4,R[1130],E,"The kind of a single literal expression.",N,N],[13,R[1963],E,"The literal is written verbatim, e.g., `a` or `☃`.",25,N],[13,"Punctuation",E,"The literal is written as an escape because it is…",25,N],[13,"Octal",E,"The literal is written as an octal escape, e.g., `\\141`.",25,N],[13,"HexFixed",E,"The literal is written as a hex code with a fixed number…",25,N],[13,"HexBrace",E,"The literal is written as a hex code with a bracketed…",25,N],[13,"Special",E,"The literal is written as a specially recognized escape,…",25,N],[4,R[1131],E,"The type of a special literal.",N,N],[13,"Bell",E,"Bell, spelled `\\a` (`\\x07`).",26,N],[13,"FormFeed",E,"Form feed, spelled `\\f` (`\\x0C`).",26,N],[13,"Tab",E,"Tab, spelled `\\t` (`\\x09`).",26,N],[13,"LineFeed",E,"Line feed, spelled `\\n` (`\\x0A`).",26,N],[13,"CarriageReturn",E,"Carriage return, spelled `\\r` (`\\x0D`).",26,N],[13,"VerticalTab",E,"Vertical tab, spelled `\\v` (`\\x0B`).",26,N],[13,"Space",E,"Space, spelled `\\ ` (`\\x20`). Note that this can only…",26,N],[4,R[1132],E,"The type of a Unicode hex literal.",N,N],[13,"X",E,"A `\\x` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeShort",E,"A `\\u` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeLong",E,"A `\\U` prefix. When used without brackets, this form is…",27,N],[4,"Class",E,"A single character class expression.",N,N],[13,"Unicode",E,R[1011],28,N],[13,"Perl",E,R[1012],28,N],[13,"Bracketed",E,R[1013],28,N],[4,R[1133],E,"The available Perl character classes.",N,N],[13,"Digit",E,"Decimal numbers.",29,N],[13,"Space",E,"Whitespace.",29,N],[13,"Word",E,"Word characters.",29,N],[4,R[1134],E,"The available ASCII character classes.",N,N],[13,"Alnum",E,"`[0-9A-Za-z]`",30,N],[13,"Alpha",E,"`[A-Za-z]`",30,N],[13,"Ascii",E,"`[\\x00-\\x7F]`",30,N],[13,"Blank",E,"`[ \\t]`",30,N],[13,"Cntrl",E,"`[\\x00-\\x1F\\x7F]`",30,N],[13,"Digit",E,"`[0-9]`",30,N],[13,"Graph",E,"`[!-~]`",30,N],[13,"Lower",E,"`[a-z]`",30,N],[13,"Print",E,"`[ -~]`",30,N],[13,"Punct",E,"`[!-/:-@\\[-`{-~]`",30,N],[13,"Space",E,"`[\\t\\n\\v\\f\\r ]`",30,N],[13,"Upper",E,"`[A-Z]`",30,N],[13,"Word",E,"`[0-9A-Za-z_]`",30,N],[13,"Xdigit",E,"`[0-9A-Fa-f]`",30,N],[4,R[1135],E,"The available forms of Unicode character classes.",N,N],[13,"OneLetter",E,"A one letter abbreviated class, e.g., `\\pN`.",31,N],[13,"Named",E,"A binary property, general category or script. The string…",31,N],[13,"NamedValue",E,"A property name and an associated value.",31,N],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",31,N],[12,"name",E,"The property name (which may be empty).",31,N],[12,"value",E,"The property value (which may be empty).",31,N],[4,R[1136],R[1004],"The type of op used in a Unicode character class.",N,N],[13,"Equal",E,"A property set to a specific value, e.g.,…",32,N],[13,"Colon",E,"A property set to a specific value using a colon, e.g.,…",32,N],[13,"NotEqual",E,"A property that isn't a particular value, e.g.,…",32,N],[4,"ClassSet",E,"A character class set.",N,N],[13,"Item",E,"An item, which can be a single literal, range, nested…",33,N],[13,"BinaryOp",E,"A single binary operation (i.e., &&, -- or ~~).",33,N],[4,R[1137],E,"A single component of a character class set.",N,N],[13,"Empty",E,"An empty item.",34,N],[13,"Literal",E,"A single literal.",34,N],[13,"Range",E,"A range between two literals.",34,N],[13,"Ascii",E,"An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",34,N],[13,"Unicode",E,R[1011],34,N],[13,"Perl",E,R[1012],34,N],[13,"Bracketed",E,R[1013],34,N],[13,"Union",E,"A union of items.",34,N],[4,R[1138],E,"The type of a Unicode character class set operation.",N,N],[13,R[736],E,"The intersection of two sets, e.g., `\\pN&&[a-z]`.",35,N],[13,R[734],E,"The difference of two sets, e.g., `\\pN--[0-9]`.",35,N],[13,R[735],E,"The symmetric difference of two sets. The symmetric…",35,N],[4,R[1139],E,"An assertion kind.",N,N],[13,"StartLine",E,"`^`",36,N],[13,"EndLine",E,"`$`",36,N],[13,"StartText",E,"`\\A`",36,N],[13,"EndText",E,"`\\z`",36,N],[13,R[1025],E,"`\\b`",36,N],[13,"NotWordBoundary",E,"`\\B`",36,N],[4,R[1030],E,R[1031],N,N],[13,"ZeroOrOne",E,"`?`",37,N],[13,"ZeroOrMore",E,"`*`",37,N],[13,"OneOrMore",E,"`+`",37,N],[13,"Range",E,"`{m,n}`",37,N],[4,R[1032],E,"A range repetition operator.",N,N],[13,"Exactly",E,"`{m}`",38,N],[13,"AtLeast",E,"`{m,}`",38,N],[13,"Bounded",E,"`{m,n}`",38,N],[4,R[1141],E,"The kind of a group.",N,N],[13,R[1027],E,"`(a)`",39,N],[13,R[1014],E,"`(?P<name>a)`",39,N],[13,R[1028],E,"`(?:a)` and `(?i:a)`",39,N],[4,R[1140],E,"The kind of an item in a group of flags.",N,N],[13,"Negation",E,"A negation operator applied to all subsequent flags in the…",40,N],[13,"Flag",E,"A single flag in a group.",40,N],[4,"Flag",E,"A single flag.",N,N],[13,"CaseInsensitive",E,"`i`",41,N],[13,"MultiLine",E,"`m`",41,N],[13,"DotMatchesNewLine",E,"`s`",41,N],[13,"SwapGreed",E,"`U`",41,N],[13,"Unicode",E,"`u`",41,N],[13,"IgnoreWhitespace",E,"`x`",41,N],[5,"visit",E,R[1033],N,[[["visitor"],["ast"]],[R[3]]]],[0,"parse",E,"This module provides a regular expression parser.",N,N],[3,R[1015],R[1073],R[1016],N,N],[3,"Parser",E,"A regular expression parser.",N,N],[11,"new",E,R[1062],42,[[],[R[1017]]]],[11,"build",E,R[1063],42,[[["self"]],["parser"]]],[11,R[2694],E,R[1064],42,[[["self"],["u32"]],[R[1017]]]],[11,"octal",E,R[1065],42,[[["self"],["bool"]],[R[1017]]]],[11,R[1067],E,R[1068],42,[[["self"],["bool"]],[R[1017]]]],[11,"new",E,R[1072],43,[[],["parser"]]],[11,"parse",E,"Parse the regular expression into an abstract syntax tree.",43,[[["str"],["self"]],[["error"],[R[3],["ast","error"]],["ast"]]]],[11,"parse_with_comments",E,"Parse the regular expression and return an abstract syntax…",43,[[["str"],["self"]],[[R[1018]],["error"],[R[3],[R[1018],"error"]]]]],[0,"print",R[1004],"This module provides a regular expression printer for `Ast`.",N,N],[3,"Printer",R[1074],"A printer for a regular expression abstract syntax tree.",N,N],[11,"new",E,R[1035],44,[[],["printer"]]],[11,"print",E,R[1036],44,[[["self"],["ast"],["write"]],[R[3]]]],[8,"Visitor",R[1004],"A trait for visiting an abstract syntax tree (AST) in…",N,N],[16,"Output",E,"The result of visiting an AST.",45,N],[16,"Err",E,"An error that visiting an AST might return.",45,N],[10,"finish",E,R[1038],45,[[],[R[3]]]],[11,"start",E,R[1104],45,[[["self"]]]],[11,R[1120],E,R[1105],45,[[["self"],["ast"]],[R[3]]]],[11,R[1106],E,R[1107],45,[[["self"],["ast"]],[R[3]]]],[11,R[1039],E,R[1108],45,[[["self"]],[R[3]]]],[11,R[1109],E,R[1110],45,[[[R[1019]],["self"]],[R[3]]]],[11,R[1111],E,R[1112],45,[[[R[1019]],["self"]],[R[3]]]],[11,R[1113],E,R[1114],45,[[["self"],[R[1020]]],[R[3]]]],[11,R[1115],E,R[1116],45,[[["self"],[R[1020]]],[R[3]]]],[11,R[1117],E,R[1118],45,[[["self"],[R[1020]]],[R[3]]]],[11,"kind",E,R[1040],46,[[["self"]],[R[10]]]],[11,"pattern",E,R[1041],46,[[["self"]],["str"]]],[11,"span",E,R[1042],46,[[["self"]],["span"]]],[11,"auxiliary_span",E,"Return an auxiliary span. This span exists only for some…",46,[[["self"]],[["span"],["option",["span"]]]]],[11,"new",E,"Create a new span with the given positions.",1,[[[R[467]]],["span"]]],[11,"splat",E,"Create a new span using the given position as the start…",1,[[[R[467]]],["span"]]],[11,"with_start",E,"Create a new span by replacing the starting the position…",1,[[[R[467]]],["span"]]],[11,"with_end",E,"Create a new span by replacing the ending the position…",1,[[[R[467]]],["span"]]],[11,"is_one_line",E,"Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,R[340],E,"Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new",E,"Create a new position with the given information.",2,[[["usize"]],[R[467]]]],[11,"span",E,"Return the span of this abstract syntax tree.",24,[[["self"]],["span"]]],[11,R[340],E,"Return true if and only if this Ast is empty.",24,[[["self"]],["bool"]]],[11,"into_ast",E,"Return this alternation as an AST.",5,[[],["ast"]]],[11,"into_ast",E,"Return this concatenation as an AST.",6,[[],["ast"]]],[11,"byte",E,"If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"digits",E,"The number of digits that must be used with this literal…",27,[[["self"]],["u32"]]],[11,"span",E,"Return the span of this character class.",28,[[["self"]],["span"]]],[11,"from_name",E,"Return the corresponding ClassAsciiKind variant for the…",30,[[["str"]],[["option",[R[1021]]],[R[1021]]]]],[11,"is_negated",E,"Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,R[1398],E,"Whether the op is an equality op or not.",32,[[["self"]],["bool"]]],[11,"union",E,"Build a set from a union.",33,[[[R[1080]]],["classset"]]],[11,"span",E,"Return the span of this character class set.",33,[[["self"]],["span"]]],[11,"span",E,"Return the span of this character class set item.",34,[[["self"]],["span"]]],[11,"is_valid",E,"Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push",E,"Push a new item in this union.",13,[[["self"],[R[1019]]]]],[11,"into_item",E,"Return this union as a character class set item.",13,[[],[R[1019]]]],[11,"is_valid",E,"Returns true if and only if this repetition range is valid.",38,[[["self"]],["bool"]]],[11,"flags",E,"If this group is non-capturing, then this returns the…",18,[[["self"]],[["flags"],["option",["flags"]]]]],[11,"is_capturing",E,"Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index",E,"Returns the capture index of this group, if this is a…",18,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"add_item",E,"Add the given item to this sequence of flags.",21,[[["self"],[R[1101]]],[["option",["usize"]],["usize"]]]],[11,"flag_state",E,"Returns the state of the given flag in this set.",21,[[["self"],["flag"]],[["option",["bool"]],["bool"]]]],[11,"is_negation",E,"Returns true if and only if this item is a negation…",40,[[["self"]],["bool"]]],[0,"hir",R[1022],"Defines a high-level intermediate representation for…",N,N],[3,R[1148],R[1029],"An error that occurs when Unicode-aware simple case…",N,N],[3,"Error",E,"An error that can occur while translating an `Ast` to a…",N,N],[3,"Hir",E,"A high-level intermediate representation (HIR) for a…",N,N],[3,R[1023],E,R[1026],N,N],[3,R[1149],E,"An iterator over all ranges in a Unicode character class.",N,N],[3,R[1143],E,"A single range of characters represented by Unicode scalar…",N,N],[3,"ClassBytes",E,"A set of characters represented by arbitrary bytes (where…",N,N],[3,R[1150],E,"An iterator over all ranges in a byte character class.",N,N],[3,R[1144],E,"A single range of characters represented by arbitrary bytes.",N,N],[3,"Group",E,"The high-level intermediate representation for a group.",N,N],[12,"kind",E,"The kind of this group. If it is a capturing group, then…",47,N],[12,"hir",E,"The expression inside the capturing group, which may be…",47,N],[3,R[1024],E,"The high-level intermediate representation of a repetition…",N,N],[12,"kind",E,"The kind of this repetition operator.",48,N],[12,"greedy",E,"Whether this repetition operator is greedy or not. A…",48,N],[12,"hir",E,"The expression being repeated.",48,N],[4,R[40],E,"The type of an error that occurred while building an `Hir`.",N,N],[13,"UnicodeNotAllowed",E,"This error occurs when a Unicode feature is used when…",49,N],[13,"InvalidUtf8",E,"This error occurs when translating a pattern that could…",49,N],[13,"UnicodePropertyNotFound",E,"This occurs when an unrecognized Unicode property name…",49,N],[13,"UnicodePropertyValueNotFound",E,"This occurs when an unrecognized Unicode property value…",49,N],[13,"UnicodePerlClassNotFound",E,"This occurs when a Unicode-aware Perl character class…",49,N],[13,"UnicodeCaseUnavailable",E,"This occurs when the Unicode simple case mapping tables…",49,N],[13,"EmptyClassNotAllowed",E,"This occurs when the translator attempts to construct a…",49,N],[4,"HirKind",E,"The kind of an arbitrary `Hir` expression.",N,N],[13,"Empty",E,"The empty regular expression, which matches everything,…",50,N],[13,"Literal",E,"A single literal character that matches exactly this…",50,N],[13,"Class",E,"A single character class that matches any of the…",50,N],[13,"Anchor",E,"An anchor assertion. An anchor assertion match always has…",50,N],[13,R[1025],E,"A word boundary assertion, which may or may not be Unicode…",50,N],[13,R[1024],E,"A repetition operation applied to a child expression.",50,N],[13,"Group",E,"A possibly capturing group, which contains a child…",50,N],[13,"Concat",E,"A concatenation of expressions. A concatenation always has…",50,N],[13,R[1008],E,"An alternation of expressions. An alternation always has…",50,N],[4,"Literal",E,"The high-level intermediate representation of a literal.",N,N],[13,"Unicode",E,"A single character represented by a Unicode scalar value.",51,N],[13,"Byte",E,"A single character represented by an arbitrary byte.",51,N],[4,"Class",E,"The high-level intermediate representation of a character…",N,N],[13,"Unicode",E,R[1026],52,N],[13,"Bytes",E,"A set of characters represented by arbitrary bytes (one…",52,N],[4,"Anchor",E,"The high-level intermediate representation for an anchor…",N,N],[13,"StartLine",E,"Match the beginning of a line or the beginning of text.…",53,N],[13,"EndLine",E,"Match the end of a line or the end of text. Specifically,…",53,N],[13,"StartText",E,"Match the beginning of text. Specifically, this matches at…",53,N],[13,"EndText",E,"Match the end of text. Specifically, this matches at the…",53,N],[4,R[1025],E,"The high-level intermediate representation for a…",N,N],[13,"Unicode",E,"Match a Unicode-aware word boundary. That is, this matches…",54,N],[13,"UnicodeNegate",E,"Match a Unicode-aware negation of a word boundary.",54,N],[13,"Ascii",E,"Match an ASCII-only word boundary. That is, this matches a…",54,N],[13,"AsciiNegate",E,"Match an ASCII-only negation of a word boundary.",54,N],[4,R[1141],E,"The kind of group.",N,N],[13,R[1027],E,"A normal unnamed capturing group.",55,N],[13,R[1014],E,"A named capturing group.",55,N],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",55,N],[12,"index",E,"The capture index of the group.",55,N],[13,R[1028],R[1029],"A non-capturing group.",55,N],[4,R[1030],E,R[1031],N,N],[13,"ZeroOrOne",E,"Matches a sub-expression zero or one times.",56,N],[13,"ZeroOrMore",E,"Matches a sub-expression zero or more times.",56,N],[13,"OneOrMore",E,"Matches a sub-expression one or more times.",56,N],[13,"Range",E,"Matches a sub-expression within a bounded range of times.",56,N],[4,R[1032],E,"The kind of a counted repetition operator.",N,N],[13,"Exactly",E,"Matches a sub-expression exactly this many times.",57,N],[13,"AtLeast",E,"Matches a sub-expression at least this many times.",57,N],[13,"Bounded",E,"Matches a sub-expression at least `m` times and at most…",57,N],[5,"visit",E,R[1033],N,[[["visitor"],["hir"]],[R[3]]]],[0,"literal",E,"Provides routines for extracting literal prefixes and…",N,N],[3,"Literals",R[1075],"A set of literal byte strings extracted from a regular…",N,N],[3,"Literal",E,"A single member of a set of literals extracted from a…",N,N],[11,"empty",E,"Returns a new empty set of literals using default limits.",58,[[],[R[1034]]]],[11,"prefixes",E,"Returns a set of literal prefixes extracted from the given…",58,[[["hir"]],[R[1034]]]],[11,"suffixes",E,"Returns a set of literal suffixes extracted from the given…",58,[[["hir"]],[R[1034]]]],[11,"limit_size",E,"Get the approximate size limit (in bytes) of this set.",58,[[["self"]],["usize"]]],[11,"set_limit_size",E,"Set the approximate size limit (in bytes) of this set.",58,[[["self"],["usize"]],[R[1034]]]],[11,"limit_class",E,"Get the character class size limit for this set.",58,[[["self"]],["usize"]]],[11,"set_limit_class",E,"Limits the size of character(or byte) classes considered.",58,[[["self"],["usize"]],[R[1034]]]],[11,R[1034],E,"Returns the set of literals as a slice. Its order is…",58,[[["self"]]]],[11,"min_len",E,"Returns the length of the smallest literal.",58,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"all_complete",E,"Returns true if all members in this set are complete.",58,[[["self"]],["bool"]]],[11,"any_complete",E,"Returns true if any member in this set is complete.",58,[[["self"]],["bool"]]],[11,"contains_empty",E,"Returns true if this set contains an empty literal.",58,[[["self"]],["bool"]]],[11,R[340],E,"Returns true if this set is empty or if all of its members…",58,[[["self"]],["bool"]]],[11,"to_empty",E,"Returns a new empty set of literals using this set's limits.",58,[[["self"]],[R[1034]]]],[11,"longest_common_prefix",E,"Returns the longest common prefix of all members in this…",58,[[["self"]]]],[11,"longest_common_suffix",E,"Returns the longest common suffix of all members in this…",58,[[["self"]]]],[11,"trim_suffix",E,"Returns a new set of literals with the given number of…",58,[[["self"],["usize"]],[[R[1034]],["option",[R[1034]]]]]],[11,"unambiguous_prefixes",E,"Returns a new set of prefixes of this set of literals that…",58,[[["self"]],[R[1034]]]],[11,"unambiguous_suffixes",E,"Returns a new set of suffixes of this set of literals that…",58,[[["self"]],[R[1034]]]],[11,"union_prefixes",E,"Unions the prefixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union_suffixes",E,"Unions the suffixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union",E,"Unions this set with another set.",58,[[["self"],[R[1034]]],["bool"]]],[11,"cross_product",E,"Extends this set with another set.",58,[[[R[1034]],["self"]],["bool"]]],[11,"cross_add",E,"Extends each literal in this set with the bytes given.",58,[[["self"]],["bool"]]],[11,"add",E,"Adds the given literal to this set.",58,[[["self"],["literal"]],["bool"]]],[11,"add_char_class",E,"Extends each literal in this set with the character class…",58,[[["self"],[R[1046]]],["bool"]]],[11,"add_byte_class",E,"Extends each literal in this set with the byte class given.",58,[[["self"],[R[1053]]],["bool"]]],[11,"cut",E,"Cuts every member of this set. When a member is cut, it…",58,[[["self"]]]],[11,R[490],E,"Reverses all members in place.",58,[[["self"]]]],[11,"clear",E,"Clears this set of all members.",58,[[["self"]]]],[11,"new",E,"Returns a new complete literal with the bytes given.",59,[[["vec",["u8"]],["u8"]],["literal"]]],[11,"empty",E,"Returns a new complete empty literal.",59,[[],["literal"]]],[11,"is_cut",E,"Returns true if this literal was \"cut.\"",59,[[["self"]],["bool"]]],[11,"cut",E,"Cuts this literal.",59,[[["self"]]]],[0,"print",R[1029],"This module provides a regular expression printer for `Hir`.",N,N],[3,"Printer",R[1076],"A printer for a regular expression's high-level…",N,N],[11,"new",E,R[1035],60,[[],["printer"]]],[11,"print",E,R[1036],60,[[["self"],["hir"],["write"]],[R[3]]]],[0,R[4622],R[1029],"Defines a translator that converts an `Ast` to an `Hir`.",N,N],[3,R[1142],R[1077],"A builder for constructing an AST->HIR translator.",N,N],[3,"Translator",E,"A translator maps abstract syntax to a high level…",N,N],[11,"new",E,"Create a new translator builder with a default c…",61,[[],[R[1037]]]],[11,"build",E,"Build a translator using the current configuration.",61,[[["self"]],[R[1082]]]],[11,R[1066],E,"When enabled, translation will permit the construction of…",61,[[["self"],["bool"]],[R[1037]]]],[11,R[1069],E,"Enable or disable the case insensitive flag (`i`) by…",61,[[["self"],["bool"]],[R[1037]]]],[11,R[2691],E,"Enable or disable the multi-line matching flag (`m`) by…",61,[[["self"],["bool"]],[R[1037]]]],[11,R[1070],E,"Enable or disable the \"dot matches any character\" flag…",61,[[["self"],["bool"]],[R[1037]]]],[11,R[2692],E,"Enable or disable the \"swap greed\" flag (`U`) by default.",61,[[["self"],["bool"]],[R[1037]]]],[11,"unicode",E,R[1071],61,[[["self"],["bool"]],[R[1037]]]],[11,"new",E,"Create a new translator using the default configuration.",62,[[],[R[1082]]]],[11,R[4622],E,"Translate the given abstract syntax tree (AST) into a high…",62,[[["str"],["self"],["ast"]],[["error"],[R[3],["hir","error"]],["hir"]]]],[8,"Visitor",R[1029],"A trait for visiting the high-level IR (HIR) in depth…",N,N],[16,"Output",E,"The result of visiting an HIR.",63,N],[16,"Err",E,"An error that visiting an HIR might return.",63,N],[10,"finish",E,R[1038],63,[[],[R[3]]]],[11,"start",E,R[1119],63,[[["self"]]]],[11,R[1120],E,R[1121],63,[[["self"],["hir"]],[R[3]]]],[11,R[1106],E,R[1122],63,[[["self"],["hir"]],[R[3]]]],[11,R[1039],E,R[1123],63,[[["self"]],[R[3]]]],[11,"kind",E,R[1040],64,[[["self"]],[R[10]]]],[11,"pattern",E,R[1041],64,[[["self"]],["str"]]],[11,"span",E,R[1042],64,[[["self"]],["span"]]],[11,"kind",E,"Returns a reference to the underlying HIR kind.",65,[[["self"]],["hirkind"]]],[11,"into_kind",E,"Consumes ownership of this HIR expression and returns its…",65,[[],["hirkind"]]],[11,"empty",E,"Returns an empty HIR expression.",65,[[],["hir"]]],[11,"literal",E,"Creates a literal HIR expression.",65,[[["literal"]],["hir"]]],[11,"class",E,"Creates a class HIR expression.",65,[[["class"]],["hir"]]],[11,"anchor",E,"Creates an anchor assertion HIR expression.",65,[[["anchor"]],["hir"]]],[11,"word_boundary",E,"Creates a word boundary assertion HIR expression.",65,[[[R[1083]]],["hir"]]],[11,R[1081],E,"Creates a repetition HIR expression.",65,[[[R[1081]]],["hir"]]],[11,"group",E,"Creates a group HIR expression.",65,[[["group"]],["hir"]]],[11,"concat",E,"Returns the concatenation of the given expressions.",65,[[["vec",["hir"]],["hir"]],["hir"]]],[11,R[1079],E,"Returns the alternation of the given expressions.",65,[[["vec",["hir"]],["hir"]],["hir"]]],[11,"dot",E,"Build an HIR expression for `.`.",65,[[["bool"]],["hir"]]],[11,"any",E,"Build an HIR expression for `(?s).`.",65,[[["bool"]],["hir"]]],[11,R[1045],E,"Return true if and only if this HIR will always match…",65,[[["self"]],["bool"]]],[11,"is_all_assertions",E,"Returns true if and only if this entire HIR expression is…",65,[[["self"]],["bool"]]],[11,"is_anchored_start",E,R[1043],65,[[["self"]],["bool"]]],[11,"is_anchored_end",E,R[1043],65,[[["self"]],["bool"]]],[11,"is_line_anchored_start",E,R[1043],65,[[["self"]],["bool"]]],[11,"is_line_anchored_end",E,R[1043],65,[[["self"]],["bool"]]],[11,"is_any_anchored_start",E,R[1044],65,[[["self"]],["bool"]]],[11,"is_any_anchored_end",E,R[1044],65,[[["self"]],["bool"]]],[11,R[1061],E,"Return true if and only if the empty string is part of the…",65,[[["self"]],["bool"]]],[11,"is_literal",E,"Return true if and only if this HIR is a simple literal.…",65,[[["self"]],["bool"]]],[11,"is_alternation_literal",E,"Return true if and only if this HIR is either a simple…",65,[[["self"]],["bool"]]],[11,R[340],E,"Return true if and only if this HIR is the empty regular…",50,[[["self"]],["bool"]]],[11,"has_subexprs",E,"Returns true if and only if this kind has any (including…",50,[[["self"]],["bool"]]],[11,"is_unicode",E,"Returns true if and only if this literal corresponds to a…",51,[[["self"]],["bool"]]],[11,R[1047],E,"Apply Unicode simple case folding to this character class,…",52,[[["self"]]]],[11,"negate",E,"Negate this character class in place.",52,[[["self"]]]],[11,R[1045],E,"Returns true if and only if this character class will only…",52,[[["self"]],["bool"]]],[11,"new",E,R[1051],66,[[["i"]],[R[1046]]]],[11,"empty",E,R[1052],66,[[],[R[1046]]]],[11,"push",E,R[1054],66,[[["self"],[R[1050]]]]],[11,"iter",E,R[1055],66,[[["self"]],["classunicodeiter"]]],[11,"ranges",E,R[1056],66,[[["self"]]]],[11,R[1047],E,R[1048],66,[[["self"]]]],[11,"try_case_fold_simple",E,R[1048],66,[[["self"]],[[R[3],[R[1049]]],[R[1049]]]]],[11,"negate",E,"Negate this character class.",66,[[["self"]]]],[11,"union",E,"Union this character class with the given character class,…",66,[[["self"],[R[1046]]]]],[11,"intersect",E,"Intersect this character class with the given character…",66,[[["self"],[R[1046]]]]],[11,R[614],E,"Subtract the given character class from this character…",66,[[["self"],[R[1046]]]]],[11,R[1057],E,"Compute the symmetric difference of the given character…",66,[[["self"],[R[1046]]]]],[11,"new",E,"Create a new Unicode scalar value range for a character…",67,[[["char"]],[R[1050]]]],[11,"start",E,R[1059],67,[[["self"]],["char"]]],[11,"end",E,R[1060],67,[[["self"]],["char"]]],[11,"new",E,R[1051],68,[[["i"]],[R[1053]]]],[11,"empty",E,R[1052],68,[[],[R[1053]]]],[11,"push",E,R[1054],68,[[["self"],[R[1058]]]]],[11,"iter",E,R[1055],68,[[["self"]],["classbytesiter"]]],[11,"ranges",E,R[1056],68,[[["self"]]]],[11,R[1047],E,R[1048],68,[[["self"]]]],[11,"negate",E,"Negate this byte class.",68,[[["self"]]]],[11,"union",E,"Union this byte class with the given byte class, in place.",68,[[[R[1053]],["self"]]]],[11,"intersect",E,"Intersect this byte class with the given byte class, in…",68,[[[R[1053]],["self"]]]],[11,R[614],E,"Subtract the given byte class from this byte class, in…",68,[[[R[1053]],["self"]]]],[11,R[1057],E,"Compute the symmetric difference of the given byte…",68,[[[R[1053]],["self"]]]],[11,"is_all_ascii",E,"Returns true if and only if this character class will…",68,[[["self"]],["bool"]]],[11,"new",E,"Create a new byte range for a character class.",69,[[["u8"]],[R[1058]]]],[11,"start",E,R[1059],69,[[["self"]],["u8"]]],[11,"end",E,R[1060],69,[[["self"]],["u8"]]],[11,"is_negated",E,"Returns true if and only if this word boundary assertion…",54,[[["self"]],["bool"]]],[11,R[1061],E,"Returns true if and only if this repetition operator makes…",48,[[["self"]],["bool"]]],[11,"new",R[1022],R[1062],70,[[],[R[1017]]]],[11,"build",E,R[1063],70,[[["self"]],["parser"]]],[11,R[2694],E,R[1064],70,[[["self"],["u32"]],[R[1017]]]],[11,"octal",E,R[1065],70,[[["self"],["bool"]],[R[1017]]]],[11,R[1066],E,"When enabled, the parser will permit the construction of a…",70,[[["self"],["bool"]],[R[1017]]]],[11,R[1067],E,R[1068],70,[[["self"],["bool"]],[R[1017]]]],[11,R[1069],E,"Enable or disable the case insensitive flag by default.",70,[[["self"],["bool"]],[R[1017]]]],[11,R[2691],E,"Enable or disable the multi-line matching flag by default.",70,[[["self"],["bool"]],[R[1017]]]],[11,R[1070],E,"Enable or disable the \"dot matches any character\" flag by…",70,[[["self"],["bool"]],[R[1017]]]],[11,R[2692],E,"Enable or disable the \"swap greed\" flag by default.",70,[[["self"],["bool"]],[R[1017]]]],[11,"unicode",E,R[1071],70,[[["self"],["bool"]],[R[1017]]]],[11,"new",E,R[1072],71,[[],["parser"]]],[11,"parse",E,"Parse the regular expression into a high level…",71,[[["str"],["self"]],[[R[3],["hir"]],["hir"]]]],[0,"utf8",E,"Converts ranges of Unicode scalar values to equivalent…",N,N],[3,"Utf8Range",R[1078],"A single inclusive range of UTF-8 bytes.",N,N],[12,"start",E,"Start of byte range (inclusive).",72,N],[12,"end",E,"End of byte range (inclusive).",72,N],[3,R[1146],E,"An iterator over ranges of matching UTF-8 byte sequences.",N,N],[4,R[1145],E,"Utf8Sequence represents a sequence of byte ranges.",N,N],[13,"One",E,"One byte range.",73,N],[13,"Two",E,"Two successive byte ranges.",73,N],[13,"Three",E,"Three successive byte ranges.",73,N],[13,"Four",E,"Four successive byte ranges.",73,N],[11,R[589],E,"Returns the underlying sequence of byte ranges as a slice.",73,[[["self"]]]],[11,"len",E,"Returns the number of byte ranges in this sequence.",73,[[["self"]],["usize"]]],[11,"matches",E,"Returns true if and only if a prefix of `bytes` matches…",73,[[["self"]],["bool"]]],[11,"matches",E,"Returns true if and only if the given byte is in this range.",72,[[["self"],["u8"]],["bool"]]],[11,"new",E,"Create a new iterator over UTF-8 byte ranges for the…",74,[[["char"]],["self"]]],[6,"Result",R[1022],"A type alias for dealing with errors returned by this crate.",N,N],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[24],E,E,71,[[["self"]],[T]]],[11,R[25],E,E,71,[[["self"],[T]]]],[11,R[20],E,E,71,[[[U]],[R[3]]]],[11,R[21],E,E,71,[[],[R[3]]]],[11,R[45],E,E,71,[[["self"]],[T]]],[11,R[22],E,E,71,[[["self"]],[T]]],[11,R[26],E,E,71,[[["self"]],[R[46]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[24],E,E,70,[[["self"]],[T]]],[11,R[25],E,E,70,[[["self"],[T]]]],[11,R[20],E,E,70,[[[U]],[R[3]]]],[11,R[21],E,E,70,[[],[R[3]]]],[11,R[45],E,E,70,[[["self"]],[T]]],[11,R[22],E,E,70,[[["self"]],[T]]],[11,R[26],E,E,70,[[["self"]],[R[46]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[78],E,E,75,[[["self"]],["string"]]],[11,R[20],E,E,75,[[[U]],[R[3]]]],[11,R[21],E,E,75,[[],[R[3]]]],[11,R[45],E,E,75,[[["self"]],[T]]],[11,R[22],E,E,75,[[["self"]],[T]]],[11,R[26],E,E,75,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",R[1004],E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[24],E,E,46,[[["self"]],[T]]],[11,R[25],E,E,46,[[["self"],[T]]]],[11,R[78],E,E,46,[[["self"]],["string"]]],[11,R[20],E,E,46,[[[U]],[R[3]]]],[11,R[21],E,E,46,[[],[R[3]]]],[11,R[45],E,E,46,[[["self"]],[T]]],[11,R[22],E,E,46,[[["self"]],[T]]],[11,R[26],E,E,46,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"],[T]]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"],[T]]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"],[T]]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[24],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"],[T]]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[24],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"],[T]]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[24],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"],[T]]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,R[78],E,E,23,[[["self"]],["string"]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[24],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"],[T]]]],[11,R[78],E,E,24,[[["self"]],["string"]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[24],E,E,25,[[["self"]],[T]]],[11,R[25],E,E,25,[[["self"],[T]]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[24],E,E,26,[[["self"]],[T]]],[11,R[25],E,E,26,[[["self"],[T]]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[24],E,E,27,[[["self"]],[T]]],[11,R[25],E,E,27,[[["self"],[T]]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[24],E,E,28,[[["self"]],[T]]],[11,R[25],E,E,28,[[["self"],[T]]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[24],E,E,29,[[["self"]],[T]]],[11,R[25],E,E,29,[[["self"],[T]]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[24],E,E,30,[[["self"]],[T]]],[11,R[25],E,E,30,[[["self"],[T]]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[24],E,E,31,[[["self"]],[T]]],[11,R[25],E,E,31,[[["self"],[T]]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[24],E,E,32,[[["self"]],[T]]],[11,R[25],E,E,32,[[["self"],[T]]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[24],E,E,33,[[["self"]],[T]]],[11,R[25],E,E,33,[[["self"],[T]]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[24],E,E,34,[[["self"]],[T]]],[11,R[25],E,E,34,[[["self"],[T]]]],[11,R[20],E,E,34,[[[U]],[R[3]]]],[11,R[21],E,E,34,[[],[R[3]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[["self"]],[T]]],[11,R[26],E,E,34,[[["self"]],[R[46]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[24],E,E,35,[[["self"]],[T]]],[11,R[25],E,E,35,[[["self"],[T]]]],[11,R[20],E,E,35,[[[U]],[R[3]]]],[11,R[21],E,E,35,[[],[R[3]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[["self"]],[T]]],[11,R[26],E,E,35,[[["self"]],[R[46]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[24],E,E,36,[[["self"]],[T]]],[11,R[25],E,E,36,[[["self"],[T]]]],[11,R[20],E,E,36,[[[U]],[R[3]]]],[11,R[21],E,E,36,[[],[R[3]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[22],E,E,36,[[["self"]],[T]]],[11,R[26],E,E,36,[[["self"]],[R[46]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[24],E,E,37,[[["self"]],[T]]],[11,R[25],E,E,37,[[["self"],[T]]]],[11,R[20],E,E,37,[[[U]],[R[3]]]],[11,R[21],E,E,37,[[],[R[3]]]],[11,R[45],E,E,37,[[["self"]],[T]]],[11,R[22],E,E,37,[[["self"]],[T]]],[11,R[26],E,E,37,[[["self"]],[R[46]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[24],E,E,38,[[["self"]],[T]]],[11,R[25],E,E,38,[[["self"],[T]]]],[11,R[20],E,E,38,[[[U]],[R[3]]]],[11,R[21],E,E,38,[[],[R[3]]]],[11,R[45],E,E,38,[[["self"]],[T]]],[11,R[22],E,E,38,[[["self"]],[T]]],[11,R[26],E,E,38,[[["self"]],[R[46]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[24],E,E,39,[[["self"]],[T]]],[11,R[25],E,E,39,[[["self"],[T]]]],[11,R[20],E,E,39,[[[U]],[R[3]]]],[11,R[21],E,E,39,[[],[R[3]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[["self"]],[T]]],[11,R[26],E,E,39,[[["self"]],[R[46]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[24],E,E,40,[[["self"]],[T]]],[11,R[25],E,E,40,[[["self"],[T]]]],[11,R[20],E,E,40,[[[U]],[R[3]]]],[11,R[21],E,E,40,[[],[R[3]]]],[11,R[45],E,E,40,[[["self"]],[T]]],[11,R[22],E,E,40,[[["self"]],[T]]],[11,R[26],E,E,40,[[["self"]],[R[46]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[24],E,E,41,[[["self"]],[T]]],[11,R[25],E,E,41,[[["self"],[T]]]],[11,R[20],E,E,41,[[[U]],[R[3]]]],[11,R[21],E,E,41,[[],[R[3]]]],[11,R[45],E,E,41,[[["self"]],[T]]],[11,R[22],E,E,41,[[["self"]],[T]]],[11,R[26],E,E,41,[[["self"]],[R[46]]]],[11,"into",R[1073],E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[24],E,E,42,[[["self"]],[T]]],[11,R[25],E,E,42,[[["self"],[T]]]],[11,R[20],E,E,42,[[[U]],[R[3]]]],[11,R[21],E,E,42,[[],[R[3]]]],[11,R[45],E,E,42,[[["self"]],[T]]],[11,R[22],E,E,42,[[["self"]],[T]]],[11,R[26],E,E,42,[[["self"]],[R[46]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[24],E,E,43,[[["self"]],[T]]],[11,R[25],E,E,43,[[["self"],[T]]]],[11,R[20],E,E,43,[[[U]],[R[3]]]],[11,R[21],E,E,43,[[],[R[3]]]],[11,R[45],E,E,43,[[["self"]],[T]]],[11,R[22],E,E,43,[[["self"]],[T]]],[11,R[26],E,E,43,[[["self"]],[R[46]]]],[11,"into",R[1074],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[20],E,E,44,[[[U]],[R[3]]]],[11,R[21],E,E,44,[[],[R[3]]]],[11,R[45],E,E,44,[[["self"]],[T]]],[11,R[22],E,E,44,[[["self"]],[T]]],[11,R[26],E,E,44,[[["self"]],[R[46]]]],[11,"into",R[1029],E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[78],E,E,76,[[["self"]],["string"]]],[11,R[20],E,E,76,[[[U]],[R[3]]]],[11,R[21],E,E,76,[[],[R[3]]]],[11,R[45],E,E,76,[[["self"]],[T]]],[11,R[22],E,E,76,[[["self"]],[T]]],[11,R[26],E,E,76,[[["self"]],[R[46]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[24],E,E,64,[[["self"]],[T]]],[11,R[25],E,E,64,[[["self"],[T]]]],[11,R[78],E,E,64,[[["self"]],["string"]]],[11,R[20],E,E,64,[[[U]],[R[3]]]],[11,R[21],E,E,64,[[],[R[3]]]],[11,R[45],E,E,64,[[["self"]],[T]]],[11,R[22],E,E,64,[[["self"]],[T]]],[11,R[26],E,E,64,[[["self"]],[R[46]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[24],E,E,65,[[["self"]],[T]]],[11,R[25],E,E,65,[[["self"],[T]]]],[11,R[78],E,E,65,[[["self"]],["string"]]],[11,R[20],E,E,65,[[[U]],[R[3]]]],[11,R[21],E,E,65,[[],[R[3]]]],[11,R[45],E,E,65,[[["self"]],[T]]],[11,R[22],E,E,65,[[["self"]],[T]]],[11,R[26],E,E,65,[[["self"]],[R[46]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[24],E,E,66,[[["self"]],[T]]],[11,R[25],E,E,66,[[["self"],[T]]]],[11,R[20],E,E,66,[[[U]],[R[3]]]],[11,R[21],E,E,66,[[],[R[3]]]],[11,R[45],E,E,66,[[["self"]],[T]]],[11,R[22],E,E,66,[[["self"]],[T]]],[11,R[26],E,E,66,[[["self"]],[R[46]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[211],E,E,77,[[],["i"]]],[11,R[20],E,E,77,[[[U]],[R[3]]]],[11,R[21],E,E,77,[[],[R[3]]]],[11,R[45],E,E,77,[[["self"]],[T]]],[11,R[22],E,E,77,[[["self"]],[T]]],[11,R[26],E,E,77,[[["self"]],[R[46]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[24],E,E,67,[[["self"]],[T]]],[11,R[25],E,E,67,[[["self"],[T]]]],[11,R[20],E,E,67,[[[U]],[R[3]]]],[11,R[21],E,E,67,[[],[R[3]]]],[11,R[45],E,E,67,[[["self"]],[T]]],[11,R[22],E,E,67,[[["self"]],[T]]],[11,R[26],E,E,67,[[["self"]],[R[46]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[24],E,E,68,[[["self"]],[T]]],[11,R[25],E,E,68,[[["self"],[T]]]],[11,R[20],E,E,68,[[[U]],[R[3]]]],[11,R[21],E,E,68,[[],[R[3]]]],[11,R[45],E,E,68,[[["self"]],[T]]],[11,R[22],E,E,68,[[["self"]],[T]]],[11,R[26],E,E,68,[[["self"]],[R[46]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[211],E,E,78,[[],["i"]]],[11,R[20],E,E,78,[[[U]],[R[3]]]],[11,R[21],E,E,78,[[],[R[3]]]],[11,R[45],E,E,78,[[["self"]],[T]]],[11,R[22],E,E,78,[[["self"]],[T]]],[11,R[26],E,E,78,[[["self"]],[R[46]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[24],E,E,69,[[["self"]],[T]]],[11,R[25],E,E,69,[[["self"],[T]]]],[11,R[20],E,E,69,[[[U]],[R[3]]]],[11,R[21],E,E,69,[[],[R[3]]]],[11,R[45],E,E,69,[[["self"]],[T]]],[11,R[22],E,E,69,[[["self"]],[T]]],[11,R[26],E,E,69,[[["self"]],[R[46]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[24],E,E,47,[[["self"]],[T]]],[11,R[25],E,E,47,[[["self"],[T]]]],[11,R[20],E,E,47,[[[U]],[R[3]]]],[11,R[21],E,E,47,[[],[R[3]]]],[11,R[45],E,E,47,[[["self"]],[T]]],[11,R[22],E,E,47,[[["self"]],[T]]],[11,R[26],E,E,47,[[["self"]],[R[46]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[24],E,E,48,[[["self"]],[T]]],[11,R[25],E,E,48,[[["self"],[T]]]],[11,R[20],E,E,48,[[[U]],[R[3]]]],[11,R[21],E,E,48,[[],[R[3]]]],[11,R[45],E,E,48,[[["self"]],[T]]],[11,R[22],E,E,48,[[["self"]],[T]]],[11,R[26],E,E,48,[[["self"]],[R[46]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[24],E,E,49,[[["self"]],[T]]],[11,R[25],E,E,49,[[["self"],[T]]]],[11,R[78],E,E,49,[[["self"]],["string"]]],[11,R[20],E,E,49,[[[U]],[R[3]]]],[11,R[21],E,E,49,[[],[R[3]]]],[11,R[45],E,E,49,[[["self"]],[T]]],[11,R[22],E,E,49,[[["self"]],[T]]],[11,R[26],E,E,49,[[["self"]],[R[46]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[24],E,E,50,[[["self"]],[T]]],[11,R[25],E,E,50,[[["self"],[T]]]],[11,R[20],E,E,50,[[[U]],[R[3]]]],[11,R[21],E,E,50,[[],[R[3]]]],[11,R[45],E,E,50,[[["self"]],[T]]],[11,R[22],E,E,50,[[["self"]],[T]]],[11,R[26],E,E,50,[[["self"]],[R[46]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[24],E,E,51,[[["self"]],[T]]],[11,R[25],E,E,51,[[["self"],[T]]]],[11,R[20],E,E,51,[[[U]],[R[3]]]],[11,R[21],E,E,51,[[],[R[3]]]],[11,R[45],E,E,51,[[["self"]],[T]]],[11,R[22],E,E,51,[[["self"]],[T]]],[11,R[26],E,E,51,[[["self"]],[R[46]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[24],E,E,52,[[["self"]],[T]]],[11,R[25],E,E,52,[[["self"],[T]]]],[11,R[20],E,E,52,[[[U]],[R[3]]]],[11,R[21],E,E,52,[[],[R[3]]]],[11,R[45],E,E,52,[[["self"]],[T]]],[11,R[22],E,E,52,[[["self"]],[T]]],[11,R[26],E,E,52,[[["self"]],[R[46]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[24],E,E,53,[[["self"]],[T]]],[11,R[25],E,E,53,[[["self"],[T]]]],[11,R[20],E,E,53,[[[U]],[R[3]]]],[11,R[21],E,E,53,[[],[R[3]]]],[11,R[45],E,E,53,[[["self"]],[T]]],[11,R[22],E,E,53,[[["self"]],[T]]],[11,R[26],E,E,53,[[["self"]],[R[46]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[24],E,E,54,[[["self"]],[T]]],[11,R[25],E,E,54,[[["self"],[T]]]],[11,R[20],E,E,54,[[[U]],[R[3]]]],[11,R[21],E,E,54,[[],[R[3]]]],[11,R[45],E,E,54,[[["self"]],[T]]],[11,R[22],E,E,54,[[["self"]],[T]]],[11,R[26],E,E,54,[[["self"]],[R[46]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[24],E,E,55,[[["self"]],[T]]],[11,R[25],E,E,55,[[["self"],[T]]]],[11,R[20],E,E,55,[[[U]],[R[3]]]],[11,R[21],E,E,55,[[],[R[3]]]],[11,R[45],E,E,55,[[["self"]],[T]]],[11,R[22],E,E,55,[[["self"]],[T]]],[11,R[26],E,E,55,[[["self"]],[R[46]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[24],E,E,56,[[["self"]],[T]]],[11,R[25],E,E,56,[[["self"],[T]]]],[11,R[20],E,E,56,[[[U]],[R[3]]]],[11,R[21],E,E,56,[[],[R[3]]]],[11,R[45],E,E,56,[[["self"]],[T]]],[11,R[22],E,E,56,[[["self"]],[T]]],[11,R[26],E,E,56,[[["self"]],[R[46]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[24],E,E,57,[[["self"]],[T]]],[11,R[25],E,E,57,[[["self"],[T]]]],[11,R[20],E,E,57,[[[U]],[R[3]]]],[11,R[21],E,E,57,[[],[R[3]]]],[11,R[45],E,E,57,[[["self"]],[T]]],[11,R[22],E,E,57,[[["self"]],[T]]],[11,R[26],E,E,57,[[["self"]],[R[46]]]],[11,"into",R[1075],E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[24],E,E,58,[[["self"]],[T]]],[11,R[25],E,E,58,[[["self"],[T]]]],[11,R[20],E,E,58,[[[U]],[R[3]]]],[11,R[21],E,E,58,[[],[R[3]]]],[11,R[45],E,E,58,[[["self"]],[T]]],[11,R[22],E,E,58,[[["self"]],[T]]],[11,R[26],E,E,58,[[["self"]],[R[46]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[24],E,E,59,[[["self"]],[T]]],[11,R[25],E,E,59,[[["self"],[T]]]],[11,R[20],E,E,59,[[[U]],[R[3]]]],[11,R[21],E,E,59,[[],[R[3]]]],[11,R[45],E,E,59,[[["self"]],[T]]],[11,R[22],E,E,59,[[["self"]],[T]]],[11,R[26],E,E,59,[[["self"]],[R[46]]]],[11,"into",R[1076],E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[20],E,E,60,[[[U]],[R[3]]]],[11,R[21],E,E,60,[[],[R[3]]]],[11,R[45],E,E,60,[[["self"]],[T]]],[11,R[22],E,E,60,[[["self"]],[T]]],[11,R[26],E,E,60,[[["self"]],[R[46]]]],[11,"into",R[1077],E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[24],E,E,61,[[["self"]],[T]]],[11,R[25],E,E,61,[[["self"],[T]]]],[11,R[20],E,E,61,[[[U]],[R[3]]]],[11,R[21],E,E,61,[[],[R[3]]]],[11,R[45],E,E,61,[[["self"]],[T]]],[11,R[22],E,E,61,[[["self"]],[T]]],[11,R[26],E,E,61,[[["self"]],[R[46]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[24],E,E,62,[[["self"]],[T]]],[11,R[25],E,E,62,[[["self"],[T]]]],[11,R[20],E,E,62,[[[U]],[R[3]]]],[11,R[21],E,E,62,[[],[R[3]]]],[11,R[45],E,E,62,[[["self"]],[T]]],[11,R[22],E,E,62,[[["self"]],[T]]],[11,R[26],E,E,62,[[["self"]],[R[46]]]],[11,"into",R[1078],E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[24],E,E,72,[[["self"]],[T]]],[11,R[25],E,E,72,[[["self"],[T]]]],[11,R[20],E,E,72,[[[U]],[R[3]]]],[11,R[21],E,E,72,[[],[R[3]]]],[11,R[45],E,E,72,[[["self"]],[T]]],[11,R[22],E,E,72,[[["self"]],[T]]],[11,R[26],E,E,72,[[["self"]],[R[46]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[211],E,E,74,[[],["i"]]],[11,R[20],E,E,74,[[[U]],[R[3]]]],[11,R[21],E,E,74,[[],[R[3]]]],[11,R[45],E,E,74,[[["self"]],[T]]],[11,R[22],E,E,74,[[["self"]],[T]]],[11,R[26],E,E,74,[[["self"]],[R[46]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[24],E,E,73,[[["self"]],[T]]],[11,R[25],E,E,73,[[["self"],[T]]]],[11,R[20],E,E,73,[[[U]],[R[3]]]],[11,R[21],E,E,73,[[],[R[3]]]],[11,R[45],E,E,73,[[["self"]],[T]]],[11,R[22],E,E,73,[[["self"]],[T]]],[11,R[26],E,E,73,[[["self"]],[R[46]]]],[11,"drop",R[1004],E,24,[[["self"]]]],[11,"drop",E,E,33,[[["self"]]]],[11,"drop",R[1029],E,65,[[["self"]]]],[11,"as_ref",R[1075],E,59,[[["self"]]]],[11,"from",R[1022],E,0,[[["error"]],["error"]]],[11,"from",E,E,0,[[["error"]],["error"]]],[11,"next",R[1029],E,77,[[["self"]],[["option",[R[1050]]],[R[1050]]]]],[11,"next",E,E,78,[[["self"]],[["option",[R[1058]]],[R[1058]]]]],[11,"next",R[1078],E,74,[[["self"]],["option"]]],[11,"clone",R[1073],E,42,[[["self"]],[R[1017]]]],[11,"clone",E,E,43,[[["self"]],["parser"]]],[11,"clone",R[1004],E,46,[[["self"]],["error"]]],[11,"clone",E,E,23,[[["self"]],[R[10]]]],[11,"clone",E,E,1,[[["self"]],["span"]]],[11,"clone",E,E,2,[[["self"]],[R[467]]]],[11,"clone",E,E,3,[[["self"]],[R[1018]]]],[11,"clone",E,E,4,[[["self"]],["comment"]]],[11,"clone",E,E,24,[[["self"]],["ast"]]],[11,"clone",E,E,5,[[["self"]],[R[1079]]]],[11,"clone",E,E,6,[[["self"]],["concat"]]],[11,"clone",E,E,7,[[["self"]],["literal"]]],[11,"clone",E,E,25,[[["self"]],[R[1087]]]],[11,"clone",E,E,26,[[["self"]],[R[1088]]]],[11,"clone",E,E,27,[[["self"]],[R[1089]]]],[11,"clone",E,E,28,[[["self"]],["class"]]],[11,"clone",E,E,8,[[["self"]],["classperl"]]],[11,"clone",E,E,29,[[["self"]],[R[1090]]]],[11,"clone",E,E,9,[[["self"]],[R[1091]]]],[11,"clone",E,E,30,[[["self"]],[R[1021]]]],[11,"clone",E,E,10,[[["self"]],[R[1046]]]],[11,"clone",E,E,31,[[["self"]],[R[1092]]]],[11,"clone",E,E,32,[[["self"]],[R[1093]]]],[11,"clone",E,E,11,[[["self"]],[R[1094]]]],[11,"clone",E,E,33,[[["self"]],["classset"]]],[11,"clone",E,E,34,[[["self"]],[R[1019]]]],[11,"clone",E,E,12,[[["self"]],[R[1095]]]],[11,"clone",E,E,13,[[["self"]],[R[1080]]]],[11,"clone",E,E,14,[[["self"]],[R[1020]]]],[11,"clone",E,E,35,[[["self"]],[R[1096]]]],[11,"clone",E,E,15,[[["self"]],["assertion"]]],[11,"clone",E,E,36,[[["self"]],[R[1097]]]],[11,"clone",E,E,16,[[["self"]],[R[1081]]]],[11,"clone",E,E,17,[[["self"]],[R[1098]]]],[11,"clone",E,E,37,[[["self"]],[R[1084]]]],[11,"clone",E,E,38,[[["self"]],[R[1085]]]],[11,"clone",E,E,18,[[["self"]],["group"]]],[11,"clone",E,E,39,[[["self"]],[R[1099]]]],[11,"clone",E,E,19,[[["self"]],[R[1100]]]],[11,"clone",E,E,20,[[["self"]],["setflags"]]],[11,"clone",E,E,21,[[["self"]],["flags"]]],[11,"clone",E,E,22,[[["self"]],[R[1101]]]],[11,"clone",E,E,40,[[["self"]],[R[1102]]]],[11,"clone",E,E,41,[[["self"]],["flag"]]],[11,"clone",R[1022],E,0,[[["self"]],["error"]]],[11,"clone",R[1075],E,58,[[["self"]],[R[1034]]]],[11,"clone",E,E,59,[[["self"]],["literal"]]],[11,"clone",R[1077],E,61,[[["self"]],[R[1037]]]],[11,"clone",E,E,62,[[["self"]],[R[1082]]]],[11,"clone",R[1029],E,64,[[["self"]],["error"]]],[11,"clone",E,E,49,[[["self"]],[R[10]]]],[11,"clone",E,E,65,[[["self"]],["hir"]]],[11,"clone",E,E,50,[[["self"]],["hirkind"]]],[11,"clone",E,E,51,[[["self"]],["literal"]]],[11,"clone",E,E,52,[[["self"]],["class"]]],[11,"clone",E,E,66,[[["self"]],[R[1046]]]],[11,"clone",E,E,67,[[["self"]],[R[1050]]]],[11,"clone",E,E,68,[[["self"]],[R[1053]]]],[11,"clone",E,E,69,[[["self"]],[R[1058]]]],[11,"clone",E,E,53,[[["self"]],["anchor"]]],[11,"clone",E,E,54,[[["self"]],[R[1083]]]],[11,"clone",E,E,47,[[["self"]],["group"]]],[11,"clone",E,E,55,[[["self"]],[R[1099]]]],[11,"clone",E,E,48,[[["self"]],[R[1081]]]],[11,"clone",E,E,56,[[["self"]],[R[1084]]]],[11,"clone",E,E,57,[[["self"]],[R[1085]]]],[11,"clone",R[1022],E,70,[[["self"]],[R[1017]]]],[11,"clone",E,E,71,[[["self"]],["parser"]]],[11,"clone",R[1078],E,73,[[["self"]],[R[1086]]]],[11,"clone",E,E,72,[[["self"]],[R[1103]]]],[11,R[90],R[1073],E,42,[[],[R[1017]]]],[11,R[90],R[1077],E,61,[[],[R[1037]]]],[11,R[90],R[1029],E,67,[[],[R[1050]]]],[11,R[90],E,E,69,[[],[R[1058]]]],[11,R[90],R[1022],E,70,[[],[R[1017]]]],[11,"cmp",R[1004],E,1,[[["span"],["self"]],[R[105]]]],[11,"cmp",E,E,2,[[["self"],[R[467]]],[R[105]]]],[11,"cmp",R[1075],E,59,[[["self"],["literal"]],[R[105]]]],[11,"cmp",R[1029],E,67,[[[R[1050]],["self"]],[R[105]]]],[11,"cmp",E,E,69,[[["self"],[R[1058]]],[R[105]]]],[11,"cmp",R[1078],E,73,[[[R[1086]],["self"]],[R[105]]]],[11,"cmp",E,E,72,[[[R[1103]],["self"]],[R[105]]]],[11,"eq",R[1004],E,46,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,46,[[["error"],["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[10]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[10]]],["bool"]]],[11,"eq",E,E,1,[[["span"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["span"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[467]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[467]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[1018]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[1018]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["comment"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["comment"]],["bool"]]],[11,"eq",E,E,24,[[["ast"],["self"]],["bool"]]],[11,"ne",E,E,24,[[["ast"],["self"]],["bool"]]],[11,"eq",E,E,5,[[[R[1079]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[1079]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["concat"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["concat"]],["bool"]]],[11,"eq",E,E,7,[[["literal"],["self"]],["bool"]]],[11,"ne",E,E,7,[[["literal"],["self"]],["bool"]]],[11,"eq",E,E,25,[[[R[1087]],["self"]],["bool"]]],[11,"ne",E,E,25,[[[R[1087]],["self"]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[1088]]],["bool"]]],[11,"eq",E,E,27,[[[R[1089]],["self"]],["bool"]]],[11,"eq",E,E,28,[[["self"],["class"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["class"]],["bool"]]],[11,"eq",E,E,8,[[["classperl"],["self"]],["bool"]]],[11,"ne",E,E,8,[[["classperl"],["self"]],["bool"]]],[11,"eq",E,E,29,[[[R[1090]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[1091]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[1091]]],["bool"]]],[11,"eq",E,E,30,[[[R[1021]],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[1046]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[1046]]],["bool"]]],[11,"eq",E,E,31,[[[R[1092]],["self"]],["bool"]]],[11,"ne",E,E,31,[[[R[1092]],["self"]],["bool"]]],[11,"eq",E,E,32,[[[R[1093]],["self"]],["bool"]]],[11,"eq",E,E,11,[[[R[1094]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[1094]],["self"]],["bool"]]],[11,"eq",E,E,33,[[["self"],["classset"]],["bool"]]],[11,"ne",E,E,33,[[["self"],["classset"]],["bool"]]],[11,"eq",E,E,34,[[[R[1019]],["self"]],["bool"]]],[11,"ne",E,E,34,[[[R[1019]],["self"]],["bool"]]],[11,"eq",E,E,12,[[[R[1095]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[1095]],["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[1080]],["self"]],["bool"]]],[11,"ne",E,E,13,[[[R[1080]],["self"]],["bool"]]],[11,"eq",E,E,14,[[[R[1020]],["self"]],["bool"]]],[11,"ne",E,E,14,[[[R[1020]],["self"]],["bool"]]],[11,"eq",E,E,35,[[[R[1096]],["self"]],["bool"]]],[11,"eq",E,E,15,[[["assertion"],["self"]],["bool"]]],[11,"ne",E,E,15,[[["assertion"],["self"]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[1097]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[1081]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[1081]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[1098]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[1098]]],["bool"]]],[11,"eq",E,E,37,[[[R[1084]],["self"]],["bool"]]],[11,"ne",E,E,37,[[[R[1084]],["self"]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[1085]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[1085]]],["bool"]]],[11,"eq",E,E,18,[[["self"],["group"]],["bool"]]],[11,"ne",E,E,18,[[["self"],["group"]],["bool"]]],[11,"eq",E,E,39,[[["self"],[R[1099]]],["bool"]]],[11,"ne",E,E,39,[[["self"],[R[1099]]],["bool"]]],[11,"eq",E,E,19,[[[R[1100]],["self"]],["bool"]]],[11,"ne",E,E,19,[[[R[1100]],["self"]],["bool"]]],[11,"eq",E,E,20,[[["self"],["setflags"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["setflags"]],["bool"]]],[11,"eq",E,E,21,[[["self"],["flags"]],["bool"]]],[11,"ne",E,E,21,[[["self"],["flags"]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[1101]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[1101]]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[1102]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[1102]]],["bool"]]],[11,"eq",E,E,41,[[["flag"],["self"]],["bool"]]],[11,"eq",R[1022],E,0,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["error"],["self"]],["bool"]]],[11,"eq",R[1075],E,58,[[[R[1034]],["self"]],["bool"]]],[11,"ne",E,E,58,[[[R[1034]],["self"]],["bool"]]],[11,"eq",E,E,59,[[["self"],["literal"]],["bool"]]],[11,"eq",R[1029],E,64,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,64,[[["self"],["error"]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[10]]],["bool"]]],[11,"eq",E,E,65,[[["hir"],["self"]],["bool"]]],[11,"ne",E,E,65,[[["hir"],["self"]],["bool"]]],[11,"eq",E,E,50,[[["self"],["hirkind"]],["bool"]]],[11,"ne",E,E,50,[[["self"],["hirkind"]],["bool"]]],[11,"eq",E,E,51,[[["self"],["literal"]],["bool"]]],[11,"ne",E,E,51,[[["self"],["literal"]],["bool"]]],[11,"eq",E,E,52,[[["class"],["self"]],["bool"]]],[11,"ne",E,E,52,[[["class"],["self"]],["bool"]]],[11,"eq",E,E,66,[[["self"],[R[1046]]],["bool"]]],[11,"ne",E,E,66,[[["self"],[R[1046]]],["bool"]]],[11,"eq",E,E,67,[[[R[1050]],["self"]],["bool"]]],[11,"ne",E,E,67,[[[R[1050]],["self"]],["bool"]]],[11,"eq",E,E,68,[[[R[1053]],["self"]],["bool"]]],[11,"ne",E,E,68,[[[R[1053]],["self"]],["bool"]]],[11,"eq",E,E,69,[[["self"],[R[1058]]],["bool"]]],[11,"ne",E,E,69,[[["self"],[R[1058]]],["bool"]]],[11,"eq",E,E,53,[[["anchor"],["self"]],["bool"]]],[11,"eq",E,E,54,[[[R[1083]],["self"]],["bool"]]],[11,"eq",E,E,47,[[["self"],["group"]],["bool"]]],[11,"ne",E,E,47,[[["self"],["group"]],["bool"]]],[11,"eq",E,E,55,[[[R[1099]],["self"]],["bool"]]],[11,"ne",E,E,55,[[[R[1099]],["self"]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[1081]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[1081]]],["bool"]]],[11,"eq",E,E,56,[[[R[1084]],["self"]],["bool"]]],[11,"ne",E,E,56,[[[R[1084]],["self"]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[1085]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[1085]]],["bool"]]],[11,"eq",R[1078],E,73,[[[R[1086]],["self"]],["bool"]]],[11,"ne",E,E,73,[[[R[1086]],["self"]],["bool"]]],[11,"eq",E,E,72,[[[R[1103]],["self"]],["bool"]]],[11,"ne",E,E,72,[[[R[1103]],["self"]],["bool"]]],[11,R[106],R[1004],E,1,[[["span"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,2,[[["self"],[R[467]]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[1075],E,59,[[["self"],["literal"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[1029],E,67,[[[R[1050]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,67,[[[R[1050]],["self"]],["bool"]]],[11,"le",E,E,67,[[[R[1050]],["self"]],["bool"]]],[11,"gt",E,E,67,[[[R[1050]],["self"]],["bool"]]],[11,"ge",E,E,67,[[[R[1050]],["self"]],["bool"]]],[11,R[106],E,E,69,[[["self"],[R[1058]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,69,[[["self"],[R[1058]]],["bool"]]],[11,"le",E,E,69,[[["self"],[R[1058]]],["bool"]]],[11,"gt",E,E,69,[[["self"],[R[1058]]],["bool"]]],[11,"ge",E,E,69,[[["self"],[R[1058]]],["bool"]]],[11,R[106],R[1078],E,73,[[[R[1086]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,73,[[[R[1086]],["self"]],["bool"]]],[11,"le",E,E,73,[[[R[1086]],["self"]],["bool"]]],[11,"gt",E,E,73,[[[R[1086]],["self"]],["bool"]]],[11,"ge",E,E,73,[[[R[1086]],["self"]],["bool"]]],[11,R[106],E,E,72,[[[R[1103]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,72,[[[R[1103]],["self"]],["bool"]]],[11,"le",E,E,72,[[[R[1103]],["self"]],["bool"]]],[11,"gt",E,E,72,[[[R[1103]],["self"]],["bool"]]],[11,"ge",E,E,72,[[[R[1103]],["self"]],["bool"]]],[11,"fmt",R[1004],E,46,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1022],E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1029],E,64,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,76,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1022],E,75,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1073],E,42,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1074],E,44,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1004],E,46,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1022],E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1075],E,58,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1076],E,60,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1077],E,61,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1029],E,64,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,66,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,78,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,57,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1022],E,70,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1029],E,76,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1022],E,75,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1078],E,73,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[37]]],[R[3]]]],[11,"deref",R[1075],E,59,[[["self"]],["vec"]]],[11,R[99],E,E,59,[[["self"]],["vec"]]],[11,R[38],R[1004],E,46,[[["self"]],["str"]]],[11,R[38],R[1022],E,0,[[["self"]],["str"]]],[11,R[38],R[1029],E,64,[[["self"]],["str"]]],[11,"start",R[1004],R[1104],45,[[["self"]]]],[11,R[1120],E,R[1105],45,[[["self"],["ast"]],[R[3]]]],[11,R[1106],E,R[1107],45,[[["self"],["ast"]],[R[3]]]],[11,R[1039],E,R[1108],45,[[["self"]],[R[3]]]],[11,R[1109],E,R[1110],45,[[[R[1019]],["self"]],[R[3]]]],[11,R[1111],E,R[1112],45,[[[R[1019]],["self"]],[R[3]]]],[11,R[1113],E,R[1114],45,[[["self"],[R[1020]]],[R[3]]]],[11,R[1115],E,R[1116],45,[[["self"],[R[1020]]],[R[3]]]],[11,R[1117],E,R[1118],45,[[["self"],[R[1020]]],[R[3]]]],[11,"start",R[1029],R[1119],63,[[["self"]]]],[11,R[1120],E,R[1121],63,[[["self"],["hir"]],[R[3]]]],[11,R[1106],E,R[1122],63,[[["self"],["hir"]],[R[3]]]],[11,R[1039],E,R[1123],63,[[["self"]],[R[3]]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,R[1124]],[3,"Comment"],[3,R[1008]],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,R[1023]],[3,R[1125]],[3,R[1126]],[3,R[1127]],[3,R[1128]],[3,"Assertion"],[3,R[1024]],[3,R[1129]],[3,"Group"],[3,R[1014]],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,R[40]],[4,"Ast"],[4,R[1130]],[4,R[1131]],[4,R[1132]],[4,"Class"],[4,R[1133]],[4,R[1134]],[4,R[1135]],[4,R[1136]],[4,"ClassSet"],[4,R[1137]],[4,R[1138]],[4,R[1139]],[4,R[1030]],[4,R[1032]],[4,R[1141]],[4,R[1140]],[4,"Flag"],[3,R[1015]],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,R[1024]],[4,R[40]],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,R[1025]],[4,R[1141]],[4,R[1030]],[4,R[1032]],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,R[1142]],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,R[1023]],[3,R[1143]],[3,"ClassBytes"],[3,R[1144]],[3,R[1015]],[3,"Parser"],[3,"Utf8Range"],[4,R[1145]],[3,R[1146]],[3,R[1147]],[3,R[1148]],[3,R[1149]],[3,R[1150]]]};
searchIndex["rustc_demangle"]={"doc":"Demangle Rust compiler symbol names.","i":[[3,R[49],"rustc_demangle","Representation of a demangled symbol name.",N,N],[3,R[50],E,"Error returned from the `try_demangle` function below when…",N,N],[5,R[47],E,"De-mangles a Rust symbol into a more readable version",N,[[["str"]],[R[47]]]],[5,"try_demangle",E,"The same as `demangle`, except return an `Err` if the…",N,[[["str"]],[[R[47]],[R[48]],[R[3],[R[47],R[48]]]]]],[11,"as_str",E,"Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[R[3]]]],[11,"clone",E,E,1,[[["self"]],[R[48]]]]],"p":[[3,R[49]],[3,R[50]]]};
searchIndex["rustc_hex"]={"doc":"Hex binary-to-text encoding","i":[[4,R[81],"rustc_hex","Errors that can occur when decoding a hex encoded string",N,N],[13,R[312],E,"The input contained a character not part of the hex format",0,N],[13,"InvalidHexLength",E,"The input had an invalid length",0,N],[8,"ToHex",E,"A trait for converting a value to hexadecimal encoding",N,N],[10,"to_hex",E,"Converts the value of `self` to a hex value, constructed…",1,[[["self"]],[[R[80],["char"]],["char"]]]],[8,"FromHex",E,"A trait for converting hexadecimal encoded values",N,N],[10,"from_hex",E,"Converts the value of `self`, interpreted as hexadecimal…",2,[[["self"]],[[R[79]],[R[3],[R[79]]],[R[80],["u8"]],["u8"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"clone",E,E,0,[[["self"]],[R[79]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,R[38],E,E,0,[[["self"]],["str"]]]],"p":[[4,R[81]],[8,"ToHex"],[8,"FromHex"]]};
searchIndex["safe_mix"]={"doc":"Means of mixing a series of hashes to create a single…","i":[[5,R[1580],"safe_mix","Mix a slice.",N,[[],[R[3]]]],[17,"MAX_DEPTH",E,E,N,N],[8,"TripletMix",E,"The mixed trait for mixing a sequence.",N,N],[16,"Item",E,"The items in the sequence and simultaneously the return of…",0,N],[10,R[1580],E,"The output of the mixing algorithm on the sequence. Items…",0,[[]]]],"p":[[8,"TripletMix"]]};
searchIndex["schnorrkel"]={"doc":"Schnorr signature variants using Ristretto point…","i":[[0,"points",R[3304],"Ristretto point tooling",N,N],[3,R[3371],R[3359],"A `RistrettoBoth` contains both an uncompressed…",N,N],[17,"RISTRETTO_POINT_LENGTH",E,"Compressed Ristretto point length",N,N],[11,R[3296],E,R[3297],0,[[["self"]],[R[2618]]]],[11,R[3298],E,R[3299],0,[[],[R[2618]]]],[11,"as_point",E,R[3300],0,[[["self"]],[R[2617]]]],[11,"into_point",E,R[3301],0,[[],[R[2617]]]],[11,R[3302],E,"Decompress into the `RistrettoBoth` format that also…",0,[[[R[2618]]],[[R[3283],[R[3281]]],[R[3281]]]]],[11,"from_point",E,"Compress into the `RistrettoBoth` format that also retains…",0,[[[R[2617]]],[R[3281]]]],[11,R[3268],E,R[3282],0,[[["self"]]]],[11,R[3269],E,"Construct a `RistrettoBoth` from a slice of bytes.",0,[[],[[R[3283],[R[3281]]],[R[3281]]]]],[11,"from_bytes_ser",E,"Variant of `RistrettoBoth::from_bytes` that propogates…",0,[[["str"]],[[R[3283],[R[3281]]],[R[3281]]]]],[0,"keys",R[3304],"Schnorr signatures on the 2-torsion free subgroup of…",N,N],[3,R[3373],R[3316],"An EdDSA-like \"secret\" key seed.",N,N],[3,R[3374],E,"A seceret key for use with Ristretto Schnorr signatures.",N,N],[3,R[3375],E,"A Ristretto Schnorr public key.",N,N],[3,"Keypair",E,"A Ristretto Schnorr keypair.",N,N],[12,"secret",E,R[3284],1,N],[12,"public",E,R[3285],1,N],[4,R[3372],E,"Methods for expanding a `MiniSecretKey` into a `SecretKey`.",N,N],[13,"Uniform",E,"Expand the `MiniSecretKey` into a uniformly distributed…",2,N],[13,"Ed25519",E,"Expand this `MiniSecretKey` into a `SecretKey` using…",2,N],[17,"MINI_SECRET_KEY_LENGTH",E,"The length of a Ristretto Schnorr `MiniSecretKey`, in bytes.",N,N],[17,R[3286],E,"The length of a Ristretto Schnorr `PublicKey`, in bytes.",N,N],[17,R[3287],E,"The length of a Ristretto Schnorr key, `SecretKey`, in…",N,N],[17,R[3288],E,"The length of an Ristretto Schnorr `Keypair`, in bytes.",N,N],[18,"UNIFORM_MODE",E,R[3289],3,N],[18,"ED25519_MODE",E,R[3289],3,N],[11,"expand",E,"Derive the `SecretKey` corresponding to this…",3,[[["self"],[R[3290]]],[R[3273]]]],[11,"expand_to_keypair",E,"Derive the `Keypair` corresponding to this `MiniSecretKey`.",3,[[["self"],[R[3290]]],["keypair"]]],[11,"expand_to_public",E,"Derive the `PublicKey` corresponding to this…",3,[[["self"],[R[3290]]],[R[3272]]]],[11,R[3268],E,R[3291],3,[[["self"]]]],[11,R[2616],E,R[3292],3,[[["self"]]]],[11,R[3269],E,"Construct a `MiniSecretKey` from a slice of bytes.",3,[[],[[R[3293]],[R[3283],[R[3293]]]]]],[11,R[3294],E,"Generate a `MiniSecretKey` from a `csprng`.",3,[[["r"]],[R[3293]]]],[11,R[1622],E,"Generate a `MiniSecretKey` from rand's `thread_rng`.",3,[[],[R[3293]]]],[11,R[3268],E,"Convert this `SecretKey` into an array of 64 bytes with.",4,[[["self"]]]],[11,R[3269],E,"Construct an `SecretKey` from a slice of bytes.",4,[[],[[R[3283],[R[3273]]],[R[3273]]]]],[11,"to_ed25519_bytes",E,"Convert this `SecretKey` into an array of 64 bytes,…",4,[[["self"]]]],[11,"from_ed25519_bytes",E,"Construct an `SecretKey` from a slice of bytes,…",4,[[],[[R[3283],[R[3273]]],[R[3273]]]]],[11,R[3294],E,"Generate an \"unbiased\" `SecretKey` directly from a user…",4,[[["r"]],[R[3273]]]],[11,R[1622],E,"Generate an \"unbiased\" `SecretKey` directly, bypassing the…",4,[[],[R[3273]]]],[11,"to_public",E,R[3295],4,[[["self"]],[R[3272]]]],[11,"to_keypair",E,R[3295],4,[[],["keypair"]]],[11,R[3296],E,R[3297],5,[[["self"]],[R[2618]]]],[11,R[3298],E,R[3299],5,[[],[R[2618]]]],[11,"as_point",E,R[3300],5,[[["self"]],[R[2617]]]],[11,"into_point",E,R[3301],5,[[],[R[2617]]]],[11,R[3302],E,"Decompress into the `PublicKey` format that also retains…",5,[[[R[2618]]],[[R[3283],[R[3272]]],[R[3272]]]]],[11,"from_point",E,"Compress into the `PublicKey` format that also retains the…",5,[[[R[2617]]],[R[3272]]]],[11,R[3268],E,"Convert this public key to a byte array. # Example",5,[[["self"]]]],[11,R[3269],E,R[3303],5,[[],[[R[3283],[R[3272]]],[R[3272]]]]],[11,R[3268],E,"Serialize `Keypair` to bytes.",1,[[["self"]]]],[11,R[3269],E,"Deserialize a `Keypair` from bytes.",1,[[],[["keypair"],[R[3283],["keypair"]]]]],[11,"to_half_ed25519_bytes",E,"Serialize `Keypair` to bytes with Ed25519 secret key format.",1,[[["self"]]]],[11,"from_half_ed25519_bytes",E,"Deserialize a `Keypair` from bytes with Ed25519 style…",1,[[],[["keypair"],[R[3283],["keypair"]]]]],[11,R[3294],E,"Generate a Ristretto Schnorr `Keypair` directly, bypassing…",1,[[["r"]],["keypair"]]],[11,R[1622],E,"Generate a Ristretto Schnorr `Keypair` directly, from a…",1,[[],["keypair"]]],[0,"context",R[3304],"Schnorr signature contexts and configuration, adaptable to…",N,N],[3,R[3377],R[3360],"Schnorr signing context",N,N],[3,R[3378],E,"Very simple transcript construction from a modern hash…",N,N],[3,R[3387],E,"Schnorr signing transcript with the default `ThreadRng`…",N,N],[5,"signing_context",E,R[3308],N,[[],[R[3309]]]],[5,"attach_rng",E,"Attach a `CryptoRng` to a `SigningTranscript` to repalce…",N,[[[T],["r"]],["signingtranscriptwithrng"]]],[8,R[3376],E,"Schnorr signing transcript",N,N],[10,R[3305],E,"Extend transcript with some bytes, shadowed by…",6,[[["self"]]]],[11,"proto_name",E,"Extend transcript with a protocol name",6,[[["self"]]]],[11,"commit_point",E,"Extend the transcript with a compressed Ristretto point",6,[[["self"],[R[2618]]]]],[10,R[3306],E,"Produce some challenge bytes, shadowed by…",6,[[["self"]]]],[11,"challenge_scalar",E,"Produce the public challenge scalar `e`.",6,[[["self"]],["scalar"]]],[11,"witness_scalar",E,"Produce a secret witness scalar `k`, aka nonce, from the…",6,[[["self"]],["scalar"]]],[11,R[3365],E,R[3307],6,[[["self"]]]],[10,R[3364],E,R[3307],6,[[["self"],["r"]]]],[11,"new",E,R[3308],7,[[],[R[3309]]]],[11,"bytes",E,R[3311],7,[[["self"]],[R[3310]]]],[11,"xof",E,R[3311],7,[[["self"],["extendableoutput"]],[R[3310]]]],[11,"hash256",E,R[3311],7,[[[R[3312]],["self"]],[R[3310]]]],[11,"hash512",E,R[3311],7,[[["self"],[R[3312]]],[R[3310]]]],[11,"new",E,"Create a `XoFTranscript` from a conventional hash…",8,[[["h"]],[R[3367]]]],[0,"sign",R[3304],"Schnorr signature creation and verification, including…",N,N],[3,R[2884],R[3362],"A Ristretto Schnorr signature \"detached\" from the signed…",N,N],[5,"verify_batch",E,"Verify a batch of `signatures` on `messages` with their…",N,[[["i"]],[R[3283]]]],[17,R[3313],E,"The length of a curve25519 EdDSA `Signature`, in bytes.",N,N],[11,R[3268],E,R[3314],9,[[["self"]]]],[11,R[3269],E,R[3315],9,[[],[[R[188]],[R[3283],[R[188]]]]]],[11,"from_bytes_not_distinguished_from_ed25519",E,"Depricated construction of a `Signature` from a slice of…",9,[[],[[R[188]],[R[3283],[R[188]]]]]],[11,"sign",R[3316],"Sign a transcript with this `SecretKey`.",4,[[[R[3317]],["self"],[R[3272]]],[R[188]]]],[11,R[3318],E,"Sign a message with this `SecretKey`.",4,[[["self"],[R[3272]]],[R[188]]]],[11,"verify",E,"Verify a signature by this public key on a transcript.",5,[[[R[188]],[R[3317]],["self"]],[R[3283]]]],[11,R[3320],E,"Verify a signature by this public key on a message.",5,[[[R[188]],["self"]],[R[3283]]]],[11,"verify_simple_preaudit_deprecated",E,"A temporary verification routine for use in transitioning…",5,[[["self"]],[R[3283]]]],[11,"sign",E,"Sign a transcript with this keypair's secret key.",1,[[[R[3317]],["self"]],[R[188]]]],[11,R[3318],E,R[3319],1,[[["self"]],[R[188]]]],[11,"verify",E,"Verify a signature by keypair's public key on a transcript.",1,[[[R[188]],[R[3317]],["self"]],[R[3283]]]],[11,R[3320],E,"Verify a signature by keypair's public key on a message.",1,[[[R[188]],["self"]],[R[3283]]]],[0,"vrf",R[3304],"Implementation of a Verifiable Random Function (VRF) using…",N,N],[3,"Malleable",R[3321],"VRF SigningTranscript for malleable VRF ouputs.",N,N],[12,"0",E,E,10,N],[3,"VRFOutput",E,"VRF output, possibly unverified.",N,N],[12,"0",E,E,11,N],[3,"VRFInOut",E,"VRF input and output paired together, possibly unverified.",N,N],[12,"input",E,"VRF input point",12,N],[12,"output",E,"VRF output point",12,N],[3,"VRFProof",E,"Short proof of correctness for associated VRF output, for…",N,N],[3,R[3380],E,"Longer proof of correctness for associated VRF output,…",N,N],[5,"vrf_malleable_hash",E,"Create a malleable VRF input point by hashing a transcript…",N,[[[R[3317]]],[R[3281]]]],[5,"dleq_verify_batch",E,"Batch verify DLEQ proofs where the public keys were held…",N,[[],[R[3283]]]],[5,"vrf_verify_batch",E,"Batch verify VRFs by different signers",N,[[["i"]],[["box"],[R[3283],["box"]]]]],[17,"VRF_OUTPUT_LENGTH",E,"Length of VRF output.",N,N],[17,"VRF_PROOF_LENGTH",E,"Length of the short VRF proof which lacks support for…",N,N],[17,"VRF_PROOF_BATCHABLE_LENGTH",E,"Length of the longer VRF proof which supports batch…",N,N],[8,R[3379],E,"`SigningTranscript` helper trait that manages VRF output…",N,N],[16,"T",E,"Real underlying `SigningTranscript`",13,N],[10,R[3361],E,"Return the underlying `SigningTranscript` after addressing…",13,[[[R[3272]]]]],[11,"vrf_hash",R[3316],"Create a non-malleable VRF input point by hashing a…",5,[[["self"],[T]],[R[3281]]]],[11,"vrf_attach_hash",E,R[3322],5,[[[R[3323]],["self"],[T]],[[R[3324]],[R[3283],[R[3324]]]]]],[11,R[3268],R[3321],"Convert this VRF output to a byte array.",11,[[["self"]]]],[11,R[2616],E,R[3292],11,[[["self"]]]],[11,R[3269],E,"Construct a `VRFOutput` from a slice of bytes.",11,[[],[[R[3283],[R[3323]]],[R[3323]]]]],[11,"attach_input_hash",E,R[3322],11,[[[T],["self"],[R[3272]]],[[R[3324]],[R[3283],[R[3324]]]]]],[11,"vrf_create_from_point",R[3316],"Evaluate the VRF-like multiplication on an uncompressed…",4,[[["self"],[R[3281]]],[R[3324]]]],[11,"vrf_create_from_compressed_point",E,"Evaluate the VRF-like multiplication on a compressed…",4,[[[R[3323]],["self"]],[[R[3324]],[R[3283],[R[3324]]]]]],[11,"vrf_create_hash",E,"Evaluate the VRF on the given transcript.",1,[[["self"],[R[3331]]],[R[3324]]]],[11,"as_output_bytes",R[3321],R[3325],12,[[["self"]]]],[11,"to_output",E,R[3325],12,[[["self"]],[R[3323]]]],[11,"commit",E,"Commit VRF input and output to a transcript.",12,[[["self"],[T]]]],[11,"make_bytes",E,"Raw bytes output from the VRF.",12,[[["self"]],[[R[90]],["asmut"]]]],[11,"make_rng",E,"VRF output converted into any `SeedableRng`.",12,[[["self"]],["seedablerng"]]],[11,"make_merlin_rng",E,"VRF output converted into Merlin's Keccek based `Rng`.",12,[[["self"]],[R[3326]]]],[11,"vrfs_merge",R[3316],R[3327],5,[[["self"]],[R[3324]]]],[11,"vrfs_merge_vartime",E,R[3327],5,[[["self"]],[R[3324]]]],[11,R[3268],R[3321],"Convert this `VRFProof` to a byte array.",14,[[["self"]]]],[11,R[3269],E,"Construct a `VRFProof` from a slice of bytes.",14,[[],[[R[3283],[R[3330]]],[R[3330]]]]],[11,R[3268],E,"Convert this `VRFProofBatchable` to a byte array.",15,[[["self"]]]],[11,R[3269],E,"Construct a `VRFProofBatchable` from a slice of bytes.",15,[[],[[R[3328]],[R[3283],[R[3328]]]]]],[11,"shorten_dleq",E,"Return the shortened `VRFProof` for retransmitting in not…",15,[[[R[3324]],[R[3272]],["self"],[T]],[R[3330]]]],[11,"shorten_vrf",E,"Return the shortened `VRFProof` for retransmitting in…",15,[[[R[3272]],[R[3323]],[T],["self"]],[[R[3283],[R[3330]]],[R[3330]]]]],[11,"dleq_proove",R[3316],"Produce DLEQ proof.",1,[[[R[3324]],["self"],[T]]]],[11,"vrf_sign",E,R[3329],1,[[["self"],[T]]]],[11,"vrf_sign_after_check",E,R[3329],1,[[["f"],["self"],[T]],["option"]]],[11,"vrfs_sign",E,"Run VRF on several input transcripts, producing their…",1,[[["i"],["self"]]]],[11,"dleq_verify",E,"Verify DLEQ proof that `p.output = s * p.input` where…",5,[[[R[3330]],[R[3324]],["self"],[T]],[[R[3328]],[R[3283],[R[3328]]]]]],[11,"vrf_verify",E,"Verify VRF proof for one single input transcript and…",5,[[[R[3330]],[R[3331]],[R[3323]],["self"]],[R[3283]]]],[11,"vrfs_verify",E,"Verify a common VRF short proof for several input…",5,[[[R[3330]],["i"],["self"]],[R[3283]]]],[0,"derive",R[3304],"Implementation of \"hierarchical deterministic key…",N,N],[3,"ChainCode",R[3337],R[3332],N,N],[12,"0",E,E,16,N],[3,R[3381],E,"A convenience wraper that combines derivable key and a…",N,N],[12,"key",E,"Appropriate key type",17,N],[12,R[3333],E,R[3332],17,N],[17,"CHAIN_CODE_LENGTH",E,"Length in bytes of our chain codes.",N,N],[8,"Derivation",E,"Key types that support \"hierarchical deterministic\" key…",N,N],[10,R[3336],E,R[3338],18,[[[R[3333]],["self"],[T]]]],[11,R[3339],E,R[3340],18,[[[R[3333]],["asref"],["self"]]]],[11,R[3334],R[3316],R[3335],4,[[[R[3333]],["asref"],["self"],["option",[R[3333]]]]]],[11,R[3334],E,R[3335],3,[[[R[3333]],["asref"],[R[3290]],["self"],["option",[R[3333]]]]]],[11,R[3334],E,R[3335],1,[[[R[3333]],["asref"],["self"],["option",[R[3333]]]]]],[11,"derive_secret_key",E,"Derive a secret key and new chain code from a key pair and…",1,[[[R[3333]],["self"],[T]]]],[11,R[3336],R[3337],R[3338],17,[[["self"],[T]],[R[3341]]]],[11,R[3339],E,R[3340],17,[[["asref"],["self"]],[R[3341]]]],[11,R[3334],E,R[3335],17,[[[R[3290]],["asref"],["self"]],[[R[3341],[R[3273]]],[R[3273]]]]],[0,"cert",R[3304],"Elliptic curve Qu-Vanstone implicit certificate scheme…",N,N],[3,R[3382],R[3363],"ECQV Implicit Certificate Secret",N,N],[12,"0",E,E,19,N],[3,R[3383],E,"ECQV Implicit Certificate Public Key Reconstruction Data",N,N],[12,"0",E,E,20,N],[11,"issue_ecqv_cert",R[3316],"Issue an ECQV implicit certificate",1,[[[R[3272]],["self"],[T]],[R[3342]]]],[11,"accept_ecqv_cert",E,"Accept an ECQV implicit certificate",5,[[[T],[R[3342]],["self"],[R[3273]]],[R[3283]]]],[11,"issue_self_ecqv_cert",E,"Issue an ECQV Implicit Certificate for yourself",1,[[["self"],[T]]]],[11,"open_ecqv_cert",E,E,5,[[[R[3368]],["self"],[T]],[[R[3283],[R[3272]]],[R[3272]]]]],[0,"errors",R[3304],"Errors which may occur when parsing keys and/or signatures…",N,N],[4,R[3384],R[3344],"Three-round trip multi-signature stage identifies used in…",N,N],[13,R[3385],E,"Initial commitment phase of a multi-signature",21,N],[13,"Reveal",E,"Reveal phase of a multi-signature",21,N],[13,R[3348],E,"Actual cosigning phase of a multi-signature",21,N],[4,R[3275],E,R[3343],N,N],[13,"EquationFalse",E,"A signature verification equation failed.",22,N],[13,"PointDecompressionError",E,"Invalid point provided, usually to `verify` methods.",22,N],[13,"ScalarFormatError",E,"Invalid scalar provided, usually to `Signature::from_bytes`.",22,N],[13,"BytesLengthError",E,"An error in the length of bytes handed to a constructor.",22,N],[12,"name",R[3345],"Identifies the type returning the error",22,N],[12,R[38],E,"Describes the type returning the error",22,N],[12,"length",E,"Length expected by the constructor in bytes",22,N],[13,"NotMarkedSchnorrkel",R[3344],"Signature not marked as schnorrkel, maybe try ed25519…",22,N],[13,"MuSigAbsent",E,"There is no record of the preceeding multi-signautre…",22,N],[12,R[3346],R[3345],R[3347],22,N],[13,"MuSigInconsistent",R[3344],"For this public key, there are either conflicting records…",22,N],[12,R[3346],R[3345],R[3347],22,N],[12,"duplicate",E,"Set true if the stage was reached correctly once but this…",22,N],[6,"SignatureResult",R[3344],"`Result` specilized to this crate for convenience.",N,N],[0,"musig",R[3304],"Implementation for Ristretto Schnorr signatures of \"Simple…",N,N],[3,R[3388],R[3353],"Aggregation helper for public keys kept in slices",N,N],[3,R[3385],E,"Commitments to `R_i` values shared between cosigners…",N,N],[12,"0",E,E,23,N],[3,"MuSig",E,"Schnorr multi-signature (MuSig) container generic over its…",N,N],[3,R[3389],E,"Commitment stage for cosigner's `R` values",N,N],[3,R[3390],E,"Reveal stage for cosigner's `R` values",N,N],[3,"Reveal",E,"Revealed `R_i` values shared between cosigners during…",N,N],[12,"0",E,E,24,N],[3,R[3391],E,"Final cosigning stage  colelction",N,N],[3,R[3348],E,"Cosignatures shared between cosigners during signing",N,N],[12,"0",E,E,25,N],[3,R[3392],E,"Initial stage for cosignature collectors who do not…",N,N],[5,"aggregate_public_key_from_slice",E,R[3350],N,[[],[[R[3349],[R[3272]]],["option",[R[3349]]]]]],[5,"aggregate_public_key_from_refs_slice",E,R[3350],N,[[],[["option",[R[3349]]],[R[3349],[R[3272]]]]]],[5,"aggregate_public_key_from_sorted_slice",E,"Aggregate public keys stored in a sorted slice",N,[[],[[R[3349]],["option",[R[3349]]]]]],[5,"collect_cosignatures",E,"Initialize a collector of cosignatures who does not…",N,[[[R[3317]]],[[R[3317]],["musig",[R[3351]]],[R[3351]]]]],[8,R[3386],E,"Any data structure used for aggregating public keys.",N,N],[10,"weighting",E,"Return delinearization weighting for one of many public…",26,[[["self"],[R[3272]]],[["scalar"],["option",["scalar"]]]]],[10,R[3366],E,"Returns aggregated public key.",26,[[["self"]],[R[3272]]]],[8,"TranscriptStages",E,"Initial cosigning stages during which transcript…",N,N],[11,"public_keys",E,"Iterates over public keys.",27,[[["self"],["bool"]]]],[11,R[3366],E,"Aggregate public key given currently revealed `R` values",27,[[["self"]],[R[3272]]]],[11,"expected_public_key",E,"Aggregate public key expected if all currently committed…",27,[[["self"]],[R[3272]]]],[11,R[3310],E,"We permit extending the transcript whenever you like, so…",27,[[["self"]],[T]]],[11,"musig",R[3316],R[3354],1,[[[T],["self"]],[["musig",[R[3352]]],[R[3352],["keypair"]]]]],[11,"new",R[3353],R[3354],27,[[["k"],[T]],[["musig",[R[3352]]],[R[3352]]]]],[11,"our_commitment",E,"Our commitment to our `R` to send to all other cosigners",27,[[["self"]],[R[3369]]]],[11,"add_their_commitment",E,R[3356],27,[[["self"],[R[3369]],[R[3272]]],[R[3283]]]],[11,"reveal_stage",E,"Commit to reveal phase transition.",27,[[],[[R[3355]],["musig",[R[3355]]]]]],[11,"our_reveal",E,"Reveal our `R` contribution to send to all other cosigners",27,[[["self"]],["reveal"]]],[11,"add_their_reveal",E,"Include a revealed `R` value from a previously committed…",27,[[["reveal"],["self"],[R[3272]]],[R[3283]]]],[11,"add_trusted",E,R[3356],27,[[["reveal"],["self"],[R[3272]]],[R[3283]]]],[11,"cosign_stage",E,"Reveal to cosign phase transition.",27,[[],[["musig",[R[3357]]],[R[3357]]]]],[11,"our_cosignature",E,"Reveals our signature contribution",27,[[["self"]],[R[3358]]]],[11,"add_their_cosignature",E,"Include a cosignature from another cosigner",27,[[["self"],[R[3358]],[R[3272]]],[R[3283]]]],[11,"cosigned",E,"Interate over the cosigners who successfully revaled and…",27,[[["self"]]]],[11,"uncosigned",E,"Interate over the possible cosigners who successfully…",27,[[["self"]]]],[11,"sign",E,"Actually computes the cosignature",27,[[["self"]],[[R[188]],["option",[R[188]]]]]],[11,"add",E,"Adds revealed `R` and cosignature into a cosignature…",27,[[["reveal"],[R[3272]],["self"],[R[3358]]],[R[3283]]]],[11,R[188],E,"Actually computes the collected cosignature.",27,[[["self"]],[R[188]]]],[11,"from",R[3359],E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[2628],E,E,0,[[]]],[11,"zeroize",E,E,0,[[["self"]]]],[11,"from",R[3316],E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[2628],E,E,3,[[]]],[11,"zeroize",E,E,3,[[["self"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[2628],E,E,4,[[]]],[11,"zeroize",E,E,4,[[["self"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,"clear",E,E,5,[[["self"]]]],[11,R[2628],E,E,5,[[]]],[11,"zeroize",E,E,5,[[["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[2628],E,E,1,[[]]],[11,"zeroize",E,E,1,[[["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"from",R[3360],E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[3361],E,E,8,[[[R[3272]]],[T]]],[11,"from",E,E,8,[[],[T]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,R[3361],E,E,28,[[[R[3272]]],[T]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,"from",R[3362],E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[3361],R[3321],E,10,[[[R[3272]]],[T]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,"into",E,E,11,[[],[U]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,"clear",E,E,11,[[["self"]]]],[11,R[2628],E,E,11,[[]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,"into",E,E,12,[[],[U]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,"into",E,E,14,[[],[U]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,"into",E,E,15,[[],[U]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,"from",R[3337],E,16,[[[T]],[T]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,"into",E,E,16,[[],[U]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,"from",R[3363],E,19,[[[T]],[T]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,"into",E,E,19,[[],[U]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"],[T]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,"into",E,E,20,[[],[U]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,R[24],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"],[T]]]],[11,"from",R[3344],E,21,[[[T]],[T]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,"into",E,E,21,[[],[U]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,R[24],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"],[T]]]],[11,R[78],E,E,21,[[["self"]],["string"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,"into",E,E,22,[[],[U]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,R[24],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"],[T]]]],[11,R[78],E,E,22,[[["self"]],["string"]]],[11,"as_fail",E,E,22,[[["self"]],["fail"]]],[11,"from",R[3353],E,29,[[[T]],[T]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,"into",E,E,23,[[],[U]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,"into",E,E,30,[[],[U]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,"into",E,E,31,[[],[U]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,"into",E,E,24,[[],[U]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,R[24],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"],[T]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,"into",E,E,32,[[],[U]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,"into",E,E,25,[[],[U]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,R[24],E,E,25,[[["self"]],[T]]],[11,R[25],E,E,25,[[["self"],[T]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,"into",E,E,33,[[],[U]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,R[3305],R[3360],E,8,[[["self"]]]],[11,R[3306],E,E,8,[[["self"]]]],[11,R[3364],E,E,8,[[["self"],["r"]]]],[11,R[3305],E,E,28,[[["self"]]]],[11,R[3306],E,E,28,[[["self"]]]],[11,R[3365],E,E,28,[[["self"]]]],[11,R[3364],E,E,28,[[["rr"],["self"]]]],[11,R[3361],R[3321],E,10,[[[R[3272]]],[T]]],[11,R[3336],R[3316],E,1,[[[R[3333]],["self"],[T]]]],[11,R[3336],E,E,4,[[[R[3333]],["self"],[T]]]],[11,R[3336],E,E,5,[[[R[3333]],["self"],[T]]]],[11,"weighting",R[3353],E,29,[[["self"],[R[3272]]],[["scalar"],["option",["scalar"]]]]],[11,R[3366],E,E,29,[[["self"]],[R[3272]]]],[11,"from",R[3316],E,5,[[[R[3273]]],[R[3272]]]],[11,"from",E,E,1,[[[R[3273]]],["keypair"]]],[11,"from",R[3360],E,8,[[["h"]],[R[3367]]]],[11,"from",R[3363],E,20,[[[R[3342]]],[R[3368]]]],[11,"fmt",R[3344],E,21,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,22,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[3359],E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[3316],E,3,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,4,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,5,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3362],E,9,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[3321],E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3337],E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3363],E,20,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3344],E,21,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3353],E,23,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[37]]],[R[3]]]],[11,"eq",R[3359],E,0,[[["self"]],["bool"]]],[11,"eq",R[3316],E,3,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[3272]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[3272]]],["bool"]]],[11,"eq",R[3362],E,9,[[[R[188]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[188]],["self"]],["bool"]]],[11,"eq",R[3321],E,11,[[[R[3323]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[3323]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[3324]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[3324]]],["bool"]]],[11,"eq",E,E,14,[[[R[3330]],["self"]],["bool"]]],[11,"ne",E,E,14,[[[R[3330]],["self"]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[3328]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[3328]]],["bool"]]],[11,"eq",R[3337],E,16,[[[R[3333]],["self"]],["bool"]]],[11,"ne",E,E,16,[[[R[3333]],["self"]],["bool"]]],[11,"eq",E,E,17,[[[R[3341]],["self"]],["bool"]]],[11,"ne",E,E,17,[[[R[3341]],["self"]],["bool"]]],[11,"eq",R[3363],E,20,[[["self"],[R[3368]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[3368]]],["bool"]]],[11,"eq",R[3344],E,21,[[["self"],[R[3370]]],["bool"]]],[11,"eq",E,E,22,[[[R[3262]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[3262]],["self"]],["bool"]]],[11,"eq",R[3353],E,23,[[["self"],[R[3369]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[3369]]],["bool"]]],[11,"eq",E,E,24,[[["self"],["reveal"]],["bool"]]],[11,"ne",E,E,24,[[["self"],["reveal"]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[3358]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[3358]]],["bool"]]],[11,"cmp",R[3359],E,0,[[["self"]],[R[105]]]],[11,"cmp",R[3316],E,5,[[["self"],[R[3272]]],[R[105]]]],[11,"cmp",R[3321],E,11,[[[R[3323]],["self"]],[R[105]]]],[11,"cmp",E,E,12,[[["self"],[R[3324]]],[R[105]]]],[11,R[106],R[3359],E,0,[[[R[3281]],["self"]],[[R[105]],["option",[R[105]]]]]],[11,R[106],R[3316],E,5,[[["self"],[R[3272]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,5,[[["self"],[R[3272]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[3272]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[3272]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[3272]]],["bool"]]],[11,R[106],R[3321],E,11,[[[R[3323]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,11,[[[R[3323]],["self"]],["bool"]]],[11,"le",E,E,11,[[[R[3323]],["self"]],["bool"]]],[11,"gt",E,E,11,[[[R[3323]],["self"]],["bool"]]],[11,"ge",E,E,11,[[[R[3323]],["self"]],["bool"]]],[11,R[106],E,E,12,[[["self"],[R[3324]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,12,[[["self"],[R[3324]]],["bool"]]],[11,"le",E,E,12,[[["self"],[R[3324]]],["bool"]]],[11,"gt",E,E,12,[[["self"],[R[3324]]],["bool"]]],[11,"ge",E,E,12,[[["self"],[R[3324]]],["bool"]]],[11,"drop",R[3316],E,3,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"hash",R[3359],E,0,[[["self"],["h"]]]],[11,"hash",R[3316],E,5,[[["self"],["__h"]]]],[11,"hash",R[3321],E,11,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",R[3337],E,16,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",R[3363],E,20,[[["self"],["__h"]]]],[11,"hash",R[3344],E,21,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"as_ref",R[3316],E,5,[[["self"]]]],[11,"clone",R[3359],E,0,[[["self"]],[R[3281]]]],[11,"clone",R[3316],E,3,[[["self"]],[R[3293]]]],[11,"clone",E,E,4,[[["self"]],[R[3273]]]],[11,"clone",E,E,5,[[["self"]],[R[3272]]]],[11,"clone",R[3360],E,7,[[["self"]],[R[3309]]]],[11,"clone",R[3362],E,9,[[["self"]],[R[188]]]],[11,"clone",R[3321],E,10,[[["self"]],["malleable"]]],[11,"clone",E,E,11,[[["self"]],[R[3323]]]],[11,"clone",E,E,12,[[["self"]],[R[3324]]]],[11,"clone",E,E,14,[[["self"]],[R[3330]]]],[11,"clone",E,E,15,[[["self"]],[R[3328]]]],[11,"clone",R[3337],E,16,[[["self"]],[R[3333]]]],[11,"clone",E,E,17,[[["self"]],[R[3341]]]],[11,"clone",R[3363],E,19,[[["self"]],[R[3342]]]],[11,"clone",E,E,20,[[["self"]],[R[3368]]]],[11,"clone",R[3344],E,21,[[["self"]],[R[3370]]]],[11,"clone",E,E,22,[[["self"]],[R[3262]]]],[11,"clone",R[3353],E,23,[[["self"]],[R[3369]]]],[11,"clone",E,E,24,[[["self"]],["reveal"]]],[11,"clone",E,E,25,[[["self"]],[R[3358]]]],[11,R[90],R[3359],E,0,[[],[R[3281]]]],[11,R[90],R[3316],E,3,[[],[R[3293]]]],[11,R[90],E,E,4,[[],[R[3273]]]],[11,R[90],E,E,5,[[],[R[3272]]]],[11,R[90],E,E,1,[[],["keypair"]]],[11,R[90],R[3321],E,11,[[],[R[3323]]]],[11,"ct_eq",R[3316],E,3,[[["self"]],[R[2]]]],[11,"ct_eq",E,E,4,[[["self"]],[R[2]]]],[11,"zeroize",R[3359],E,0,[[["self"]]]],[11,"zeroize",R[3316],E,3,[[["self"]]]],[11,"zeroize",E,E,4,[[["self"]]]],[11,"zeroize",E,E,5,[[["self"]]]],[11,"zeroize",E,E,1,[[["self"]]]]],"p":[[3,R[3371]],[3,"Keypair"],[4,R[3372]],[3,R[3373]],[3,R[3374]],[3,R[3375]],[8,R[3376]],[3,R[3377]],[3,R[3378]],[3,R[2884]],[3,"Malleable"],[3,"VRFOutput"],[3,"VRFInOut"],[8,R[3379]],[3,"VRFProof"],[3,R[3380]],[3,"ChainCode"],[3,R[3381]],[8,"Derivation"],[3,R[3382]],[3,R[3383]],[4,R[3384]],[4,R[3275]],[3,R[3385]],[3,"Reveal"],[3,R[3348]],[8,R[3386]],[3,"MuSig"],[3,R[3387]],[3,R[3388]],[3,R[3389]],[3,R[3390]],[3,R[3391]],[3,R[3392]]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,R[54],R[51],"`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always",E,"Always run on scope exit.",N,N],[5,"guard",E,"Create a new `ScopeGuard` owning `v` and with deferred…",N,[[[T],["f"]],[[R[51],["always"]],["always"]]]],[8,R[53],E,"Controls in which cases the associated code should be run",N,N],[10,R[52],E,"Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy",E,"Create a `ScopeGuard` that owns `v` (accessible through…",1,[[[T],["f"]],[R[51]]]],[11,R[109],E,"“Defuse” the guard and extract the value without calling…",1,[[],[T]]],[14,"defer",E,"Macro to create a `ScopeGuard` (always run).",N,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[52],E,E,2,[[],["bool"]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[R[3]]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,R[99],E,E,1,[[["self"]],[T]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[8,R[53]],[3,R[54]],[4,"Always"]]};
searchIndex["secp256k1"]={"doc":"Pure Rust implementation of the secp256k1 curve and fast…","i":[[3,R[3375],R[3501],"Public key on a secp256k1 curve.",N,N],[3,R[3374],E,"Secret key (256-bit) on a secp256k1 curve.",N,N],[3,R[2884],E,"An ECDSA signature.",N,N],[12,"r",E,E,0,N],[12,"s",E,E,0,N],[3,"RecoveryId",E,"Tag used for public key recovery from signatures.",N,N],[3,"Message",E,"Hashed message input to an ECDSA signature.",N,N],[12,"0",E,E,1,N],[3,R[3517],E,"Shared secret using ECDH.",N,N],[4,"Error",E,E,N,N],[13,"InvalidSignature",E,E,2,N],[13,"InvalidPublicKey",E,E,2,N],[13,"InvalidSecretKey",E,E,2,N],[13,"InvalidRecoveryId",E,E,2,N],[13,"InvalidMessage",E,E,2,N],[13,"InvalidInputLength",E,E,2,N],[13,"TweakOutOfRange",E,E,2,N],[4,R[3515],E,"Format for public key parsing.",N,N],[13,"Compressed",E,"Compressed public key, 33 bytes.",3,N],[13,"Full",E,"Full length public key, 65 bytes.",3,N],[13,"Raw",E,"Raw public key, 64 bytes.",3,N],[5,"verify",E,"Check signature is a valid message signed by public key.",N,[[[R[188]],["message"],[R[3272]]],["bool"]]],[5,"recover",E,"Recover public key from a signed message.",N,[[[R[188]],["message"],[R[3497]]],[[R[3],[R[3272],"error"]],[R[3272]],["error"]]]],[5,"sign",E,"Sign a message using the secret key.",N,[[["message"],[R[3273]]]]],[0,"curve",E,"Curve related structs.",N,N],[3,"Field",R[3499],"Field element for secp256k1.",N,N],[3,"Affine",E,"A group element of the secp256k1 curve, in affine…",N,N],[12,"x",E,E,4,N],[12,"y",E,E,4,N],[12,"infinity",E,E,4,N],[3,"Jacobian",E,"A group element of the secp256k1 curve, in jacobian…",N,N],[12,"x",E,E,5,N],[12,"y",E,E,5,N],[12,"z",E,E,5,N],[12,"infinity",E,E,5,N],[3,R[3516],E,"Affine coordinate group element compact storage.",N,N],[12,"x",E,E,6,N],[12,"y",E,E,6,N],[3,"Scalar",E,"A 256-bit scalar value.",N,N],[12,"0",E,E,7,N],[3,R[3518],E,"Context for accelerating the computation of aP + bG.",N,N],[3,R[3519],E,"Context for accelerating the computation of a*G.",N,N],[7,"AFFINE_G",E,E,N,N],[7,"ECMULT_CONTEXT",E,"A static ECMult context.",N,N],[7,"ECMULT_GEN_CONTEXT",E,"A static ECMultGen context.",N,N],[17,"CURVE_B",E,E,N,N],[0,"util",R[3501],"Utilities to manipulate the secp256k1 curve parameters.",N,N],[3,R[3520],R[3500],E,N,N],[5,"set_table_gej_var",E,E,N,[[]]],[5,"globalz_set_table_gej",E,E,N,[[["field"]]]],[5,"odd_multiples_table",E,E,N,[[[R[3506]]]]],[7,"AFFINE_INFINITY",E,E,N,N],[7,"JACOBIAN_INFINITY",E,E,N,N],[17,"TAG_PUBKEY_EVEN",E,E,N,N],[17,"TAG_PUBKEY_ODD",E,E,N,N],[17,"TAG_PUBKEY_FULL",E,E,N,N],[17,"TAG_PUBKEY_HYBRID_EVEN",E,E,N,N],[17,"TAG_PUBKEY_HYBRID_ODD",E,E,N,N],[17,"MESSAGE_SIZE",E,E,N,N],[17,"SECRET_KEY_SIZE",E,E,N,N],[17,"RAW_PUBLIC_KEY_SIZE",E,E,N,N],[17,"FULL_PUBLIC_KEY_SIZE",E,E,N,N],[17,"COMPRESSED_PUBLIC_KEY_SIZE",E,E,N,N],[17,"SIGNATURE_SIZE",E,E,N,N],[17,"DER_MAX_SIGNATURE_SIZE",E,E,N,N],[17,"WINDOW_A",E,E,N,N],[17,"WINDOW_G",E,E,N,N],[17,"ECMULT_TABLE_SIZE_A",E,E,N,N],[17,"ECMULT_TABLE_SIZE_G",E,E,N,N],[11,"from_secret_key",R[3501],E,8,[[[R[3273]]],[R[3272]]]],[11,R[3494],E,E,8,[[["option",[R[3493]]],[R[3493]]],[[R[3],[R[3272],"error"]],[R[3272]],["error"]]]],[11,"parse",E,E,8,[[],[[R[3],[R[3272],"error"]],[R[3272]],["error"]]]],[11,"parse_compressed",E,E,8,[[],[[R[3],[R[3272],"error"]],[R[3272]],["error"]]]],[11,R[132],E,E,8,[[["self"]]]],[11,"serialize_compressed",E,E,8,[[["self"]]]],[11,R[3495],E,E,8,[[["self"],[R[3273]]],[[R[3],["error"]],["error"]]]],[11,R[3496],E,E,8,[[["self"],[R[3273]]],[[R[3],["error"]],["error"]]]],[11,"combine",E,E,8,[[],[["error"],[R[3],["error"]]]]],[11,"parse",E,E,9,[[],[["error"],[R[3],[R[3273],"error"]],[R[3273]]]]],[11,R[3494],E,E,9,[[],[["error"],[R[3],[R[3273],"error"]],[R[3273]]]]],[11,"random",E,E,9,[[["r"]],[R[3273]]]],[11,R[132],E,E,9,[[["self"]]]],[11,R[3495],E,E,9,[[["self"],[R[3273]]],[[R[3],["error"]],["error"]]]],[11,R[3496],E,E,9,[[["self"],[R[3273]]],[[R[3],["error"]],["error"]]]],[11,"inv",E,E,9,[[["self"]],["self"]]],[11,"parse",E,E,0,[[],[R[188]]]],[11,R[3494],E,E,0,[[],[["error"],[R[3],[R[188],"error"]],[R[188]]]]],[11,"parse_der",E,E,0,[[],[["error"],[R[3],[R[188],"error"]],[R[188]]]]],[11,"parse_der_lax",E,"Converts a \"lax DER\"-encoded byte slice to a signature.…",0,[[],[["error"],[R[3],[R[188],"error"]],[R[188]]]]],[11,"normalize_s",E,"Normalizes a signature to a \"low S\" form. In ECDSA,…",0,[[["self"]]]],[11,R[132],E,E,0,[[["self"]]]],[11,"serialize_der",E,E,0,[[["self"]],["signaturearray"]]],[11,"parse",E,E,1,[[],["message"]]],[11,R[3494],E,E,1,[[],[["error"],["message"],[R[3],["message","error"]]]]],[11,R[132],E,E,1,[[["self"]]]],[11,"parse",E,"Parse recovery ID starting with 0.",10,[[["u8"]],[[R[3],[R[3497],"error"]],[R[3497]],["error"]]]],[11,"parse_rpc",E,"Parse recovery ID as Ethereum RPC format, starting with 27.",10,[[["u8"]],[[R[3],[R[3497],"error"]],[R[3497]],["error"]]]],[11,R[132],E,E,10,[[["self"]],["u8"]]],[11,"new",E,E,11,[[[R[3272]],[R[3273]]],[["error"],[R[3498]],[R[3],[R[3498],"error"]]]]],[14,"affine_const",E,"Define an affine group element constant.",N,N],[14,"jacobian_const",E,"Define a jacobian group element constant.",N,N],[14,"affine_storage_const",E,"Define an affine group storage constant.",N,N],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[78],E,E,2,[[["self"]],["string"]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",R[3499],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",R[3500],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"drop",R[3499],E,7,[[["self"]]]],[11,"drop",R[3501],E,9,[[["self"]]]],[11,"drop",E,E,11,[[["self"]]]],[11,"as_ref",R[3500],E,15,[[["self"]]]],[11,"as_ref",R[3501],E,11,[[["self"]]]],[11,"as_mut",R[3500],E,15,[[["self"]]]],[11,"into",R[3499],E,4,[[],[R[3502]]]],[11,"into",R[3501],E,8,[[],["affine"]]],[11,"into",E,E,9,[[],["scalar"]]],[11,"into",E,E,10,[[],["u8"]]],[11,"into",E,E,10,[[],["i32"]]],[11,"from",R[3499],E,4,[[[R[3502]]],["affine"]]],[11,"clone",E,E,12,[[["self"]],["field"]]],[11,"clone",E,E,4,[[["self"]],["affine"]]],[11,"clone",E,E,5,[[["self"]],[R[3506]]]],[11,"clone",E,E,6,[[["self"]],[R[3502]]]],[11,"clone",E,E,7,[[["self"]],["scalar"]]],[11,"clone",R[3501],E,2,[[["self"]],["error"]]],[11,"clone",E,E,8,[[["self"]],[R[3272]]]],[11,"clone",E,E,9,[[["self"]],[R[3273]]]],[11,"clone",E,E,0,[[["self"]],[R[188]]]],[11,"clone",E,E,10,[[["self"]],[R[3497]]]],[11,"clone",E,E,1,[[["self"]],["message"]]],[11,"clone",E,E,11,[[["self"]],[R[3498]]]],[11,R[90],R[3499],E,12,[[],["field"]]],[11,R[90],E,E,4,[[],["affine"]]],[11,R[90],E,E,5,[[],[R[3506]]]],[11,R[90],E,E,6,[[],[R[3502]]]],[11,R[90],E,E,7,[[],["scalar"]]],[11,R[90],R[3501],E,9,[[],[R[3273]]]],[11,"cmp",R[3499],E,12,[[["field"],["self"]],[R[105]]]],[11,"eq",E,E,12,[[["field"],["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["affine"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["affine"]],["bool"]]],[11,"eq",E,E,5,[[[R[3506]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[3506]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[3502]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[3502]]],["bool"]]],[11,"eq",E,E,7,[[["scalar"],["self"]],["bool"]]],[11,"ne",E,E,7,[[["scalar"],["self"]],["bool"]]],[11,"eq",R[3501],E,2,[[["error"],["self"]],["bool"]]],[11,"eq",E,E,8,[[[R[3272]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[3272]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[3273]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[3273]]],["bool"]]],[11,"eq",E,E,0,[[[R[188]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[188]],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[3497]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[3497]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["message"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["message"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[3498]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[3498]]],["bool"]]],[11,R[106],R[3499],E,12,[[["field"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",R[3501],E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3499],E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3501],E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[37]]],[R[3]]]],[11,"add",R[3499],E,12,[[["field"]],["field"]]],[11,"add",E,E,7,[[["scalar"]],["scalar"]]],[11,"mul",E,E,12,[[["field"]],["field"]]],[11,"mul",E,E,7,[[["scalar"]],["scalar"]]],[11,"neg",E,E,7,[[],["scalar"]]],[11,R[423],E,E,12,[[["self"],["field"]]]],[11,R[423],E,E,12,[[["self"],["field"]]]],[11,R[423],E,E,7,[[["self"],["scalar"]]]],[11,R[423],E,E,7,[[["self"],["scalar"]]]],[11,R[476],E,E,12,[[["self"],["field"]]]],[11,R[476],E,E,12,[[["self"],["field"]]]],[11,R[476],E,E,7,[[["self"],["scalar"]]]],[11,R[476],E,E,7,[[["self"],["scalar"]]]],[11,"new",E,E,12,[[["u32"]],["self"]]],[11,"from_int",E,E,12,[[["u32"]],["field"]]],[11,"normalize",E,"Normalize a field element.",12,[[["self"]]]],[11,"normalize_weak",E,"Weakly normalize a field element: reduce it magnitude to…",12,[[["self"]]]],[11,"normalize_var",E,"Normalize a field element, without constant-time guarantee.",12,[[["self"]]]],[11,"normalizes_to_zero",E,R[3503],12,[[["self"]],["bool"]]],[11,"normalizes_to_zero_var",E,R[3503],12,[[["self"]],["bool"]]],[11,"set_int",E,"Set a field element equal to a small integer. Resulting…",12,[[["self"],["u32"]]]],[11,"is_zero",E,"Verify whether a field element is zero. Requires the input…",12,[[["self"]],["bool"]]],[11,"is_odd",E,"Check the \"oddness\" of a field element. Requires the input…",12,[[["self"]],["bool"]]],[11,"clear",E,"Sets a field element equal to zero, initializing all fields.",12,[[["self"]]]],[11,"set_b32",E,"Set a field element equal to 32-byte big endian value. If…",12,[[["self"]],["bool"]]],[11,"fill_b32",E,E,12,[[["self"]]]],[11,"b32",E,"Convert a field element to a 32-byte big endian value.…",12,[[["self"]]]],[11,R[3505],E,"Set a field element equal to the additive inverse of…",12,[[["field"],["self"],["u32"]]]],[11,"neg",E,E,12,[[["u32"],["self"]],["field"]]],[11,"mul_int",E,"Multiplies the passed field element with a small integer…",12,[[["self"],["u32"]]]],[11,"cmp_var",E,"Compare two field elements. Requires both inputs to be…",12,[[["field"],["self"]],[R[105]]]],[11,"eq_var",E,E,12,[[["field"],["self"]],["bool"]]],[11,R[3513],E,"Sets a field element to be the product of two others.…",12,[[["field"],["self"]]]],[11,R[3514],E,"Sets a field element to be the square of another. Requires…",12,[[["field"],["self"]]]],[11,"sqr",E,E,12,[[["self"]],["field"]]],[11,"sqrt",E,"If a has a square root, it is computed in r and 1 is…",12,[[["self"]]]],[11,"inv",E,"Sets a field element to be the (modular) inverse of…",12,[[["self"]],["field"]]],[11,"inv_var",E,"Potentially faster version of secp256k1_fe_inv, without…",12,[[["self"]],["field"]]],[11,"is_quad_var",E,"Checks whether a field element is a quadratic residue.",12,[[["self"]],["bool"]]],[11,"cmov",E,R[3511],12,[[["field"],["self"],["bool"]]]],[11,"set_xy",E,"Set a group element equal to the point with given X and Y…",4,[[["field"],["self"]]]],[11,"set_xquad",E,R[3504],4,[[["field"],["self"]],["bool"]]],[11,"set_xo_var",E,R[3504],4,[[["field"],["self"],["bool"]],["bool"]]],[11,R[3507],E,R[3508],4,[[["self"]],["bool"]]],[11,"is_valid_var",E,"Check whether a group element is valid (i.e., on the curve).",4,[[["self"]],["bool"]]],[11,R[3505],E,E,4,[[["self"],["affine"]]]],[11,"neg",E,E,4,[[["self"]],["affine"]]],[11,"set_gej",E,"Set a group element equal to another which is given in…",4,[[[R[3506]],["self"]]]],[11,"from_gej",E,E,4,[[[R[3506]]],["self"]]],[11,"set_gej_var",E,E,4,[[[R[3506]],["self"]]]],[11,"set_gej_zinv",E,E,4,[[[R[3506]],["self"],["field"]]]],[11,"clear",E,"Clear a secp256k1_ge to prevent leaking sensitive…",4,[[["self"]]]],[11,"set_infinity",E,"Set a group element (jacobian) equal to the point at…",5,[[["self"]]]],[11,"set_ge",E,"Set a group element (jacobian) equal to another which is…",5,[[["self"],["affine"]]]],[11,"from_ge",E,E,5,[[["affine"]],["self"]]],[11,"eq_x_var",E,"Compare the X coordinate of a group element (jacobian).",5,[[["field"],["self"]],["bool"]]],[11,R[3505],E,"Set r equal to the inverse of a (i.e., mirrored around the…",5,[[[R[3506]],["self"]]]],[11,"neg",E,E,5,[[["self"]],[R[3506]]]],[11,R[3507],E,R[3508],5,[[["self"]],["bool"]]],[11,"has_quad_y_var",E,"Check whether a group element's y coordinate is a…",5,[[["self"]],["bool"]]],[11,"double_nonzero_in_place",E,R[3509],5,[[[R[3506]],["field"],["self"],["option",["field"]]]]],[11,"double_var_in_place",E,R[3509],5,[[[R[3506]],["field"],["self"],["option",["field"]]]]],[11,"double_var",E,E,5,[[["option",["field"]],["self"],["field"]],[R[3506]]]],[11,"add_var_in_place",E,"Set r equal to the sum of a and b. If rzr is non-NULL,…",5,[[[R[3506]],["field"],["self"],["option",["field"]]]]],[11,"add_var",E,E,5,[[[R[3506]],["field"],["self"],["option",["field"]]],[R[3506]]]],[11,"add_ge_in_place",E,R[3510],5,[[[R[3506]],["self"],["affine"]]]],[11,"add_ge",E,E,5,[[["self"],["affine"]],[R[3506]]]],[11,"add_ge_var_in_place",E,R[3510],5,[[[R[3506]],["field"],["affine"],["self"],["option",["field"]]]]],[11,"add_ge_var",E,E,5,[[["field"],["affine"],["self"],["option",["field"]]],[R[3506]]]],[11,"add_zinv_var_in_place",E,"Set r equal to the sum of a and b (with the inverse of b's…",5,[[[R[3506]],["affine"],["field"],["self"]]]],[11,"add_zinv_var",E,E,5,[[["field"],["self"],["affine"]],[R[3506]]]],[11,"clear",E,"Clear a secp256k1_gej to prevent leaking sensitive…",5,[[["self"]]]],[11,"rescale",E,"Rescale a jacobian point by b which must be non-zero.…",5,[[["field"],["self"]]]],[11,"cmov",E,R[3511],6,[[["self"],[R[3502]],["bool"]]]],[11,"clear",E,"Clear a scalar to prevent the leak of sensitive data.",7,[[["self"]]]],[11,"set_int",E,"Set a scalar to an unsigned integer.",7,[[["self"],["u32"]]]],[11,"from_int",E,"Create a scalar from an unsigned integer.",7,[[["u32"]],["self"]]],[11,"bits",E,"Access bits from a scalar. All requested bits must belong…",7,[[["self"],["usize"]],["u32"]]],[11,"bits_var",E,"Access bits from a scalar. Not constant time.",7,[[["self"],["usize"]],["u32"]]],[11,"cadd_bit",E,"Conditionally add a power of two to a scalar. The result…",7,[[["self"],["usize"],["bool"]]]],[11,"set_b32",E,"Set a scalar from a big endian byte array, return whether…",7,[[["self"]],[R[2]]]],[11,"b32",E,R[3512],7,[[["self"]]]],[11,"fill_b32",E,R[3512],7,[[["self"]]]],[11,"is_zero",E,"Check whether a scalar equals zero.",7,[[["self"]],["bool"]]],[11,"is_one",E,"Check whether a scalar equals one.",7,[[["self"]],["bool"]]],[11,"is_high",E,"Check whether a scalar is higher than the group order…",7,[[["self"]],["bool"]]],[11,"cond_neg_assign",E,"Conditionally negate a number, in constant time.",7,[[[R[2]],["self"]]]],[11,R[3513],E,E,7,[[["scalar"],["self"]]]],[11,"shr_int",E,"Shift a scalar right by some amount strictly between 0 and…",7,[[["self"],["usize"]],["u32"]]],[11,R[3514],E,E,7,[[["scalar"],["self"]]]],[11,"sqr",E,E,7,[[["self"]],["scalar"]]],[11,"inv_in_place",E,E,7,[[["scalar"],["self"]]]],[11,"inv",E,E,7,[[["self"]],["scalar"]]],[11,"inv_var",E,E,7,[[["self"]],["scalar"]]],[11,"is_even",E,E,7,[[["self"]],["bool"]]],[11,"ecmult",E,E,13,[[[R[3506]],["scalar"],[R[3506]],["self"]]]],[11,"ecmult_const",E,E,13,[[["scalar"],["affine"],[R[3506]],["self"]]]],[11,"ecmult_gen",E,E,14,[[["scalar"],["self"],[R[3506]]]]],[11,"verify_raw",E,E,13,[[["scalar"],["affine"],["self"]],["bool"]]],[11,"recover_raw",E,E,13,[[["scalar"],["self"],["u8"]],[["error"],[R[3],["affine","error"]],["affine"]]]],[11,"sign_raw",E,E,14,[[["scalar"],["self"]],[[R[3],["error"]],["error"]]]],[11,"ecdh_raw",E,E,13,[[["scalar"],["self"],["affine"]],[["option",[R[1614]]],[R[1614],["u8"]]]]],[11,"new",R[3500],E,15,[[["usize"]],["self"]]],[11,"len",E,E,15,[[["self"]],["usize"]]]],"p":[[3,R[2884]],[3,"Message"],[4,"Error"],[4,R[3515]],[3,"Affine"],[3,"Jacobian"],[3,R[3516]],[3,"Scalar"],[3,R[3375]],[3,R[3374]],[3,"RecoveryId"],[3,R[3517]],[3,"Field"],[3,R[3518]],[3,R[3519]],[3,R[3520]]]};
searchIndex["serde"]={"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny",R[3077],"An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected",E,"`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool",E,"The input contained a boolean value that was not expected.",0,N],[13,"Unsigned",E,"The input contained an unsigned integer `u8`, `u16`, `u32`…",0,N],[13,"Signed",E,"The input contained a signed integer `i8`, `i16`, `i32` or…",0,N],[13,"Float",E,"The input contained a floating point `f32` or `f64` that…",0,N],[13,"Char",E,"The input contained a `char` that was not expected.",0,N],[13,"Str",E,"The input contained a `&str` or `String` that was not…",0,N],[13,"Bytes",E,"The input contained a `&[u8]` or `Vec<u8>` that was not…",0,N],[13,"Unit",E,"The input contained a unit `()` that was not expected.",0,N],[13,"Option",E,"The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct",E,"The input contained a newtype struct that was not expected.",0,N],[13,"Seq",E,"The input contained a sequence that was not expected.",0,N],[13,"Map",E,"The input contained a map that was not expected.",0,N],[13,"Enum",E,"The input contained an enum that was not expected.",0,N],[13,"UnitVariant",E,"The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant",E,"The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant",E,"The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant",E,"The input contained a struct variant that was not expected.",0,N],[13,"Other",E,"A message stating what uncategorized thing the input…",0,N],[0,"value",E,"Building blocks for deserializing basic values using the…",N,N],[3,"Error",R[3076],"A minimal representation of all possible errors that can…",N,N],[3,R[3100],E,"A deserializer holding a `()`.",N,N],[3,R[3101],E,"A deserializer holding a `bool`.",N,N],[3,R[3102],E,"A deserializer holding an `i8`.",N,N],[3,R[3103],E,"A deserializer holding an `i16`.",N,N],[3,R[3104],E,"A deserializer holding an `i32`.",N,N],[3,R[3105],E,"A deserializer holding an `i64`.",N,N],[3,R[3106],E,"A deserializer holding an `isize`.",N,N],[3,R[3107],E,"A deserializer holding a `u8`.",N,N],[3,R[3108],E,"A deserializer holding a `u16`.",N,N],[3,R[3109],E,"A deserializer holding a `u64`.",N,N],[3,R[3110],E,"A deserializer holding a `usize`.",N,N],[3,R[3111],E,"A deserializer holding an `f32`.",N,N],[3,R[3112],E,"A deserializer holding an `f64`.",N,N],[3,R[3113],E,"A deserializer holding a `char`.",N,N],[3,R[3114],E,"A deserializer holding an `i128`.",N,N],[3,R[3115],E,"A deserializer holding a `u128`.",N,N],[3,R[3116],E,"A deserializer holding a `u32`.",N,N],[3,R[3117],E,"A deserializer holding a `&str`.",N,N],[3,R[3090],E,"A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,R[3118],E,"A deserializer holding a `String`.",N,N],[3,R[3119],E,"A deserializer holding a `Cow<str>`.",N,N],[3,R[3091],E,"A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,R[3092],E,"A deserializer that iterates over a sequence.",N,N],[3,R[3093],E,"A deserializer holding a `SeqAccess`.",N,N],[3,R[3094],E,"A deserializer that iterates over a map.",N,N],[3,R[3095],E,"A deserializer holding a `MapAccess`.",N,N],[11,"new",E,"Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new",E,"Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new",E,"Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end",E,R[2913],3,[[],[R[3]]]],[11,"new",E,"Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new",E,"Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end",E,R[2913],5,[[],[R[3]]]],[11,"new",E,"Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error",R[3077],"The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom",E,"Raised when there is general error when deserializing a…",7,[[[T]],["self"]]],[11,"invalid_type",E,"Raised when a `Deserialize` receives a type different from…",7,[[["expected"],[R[3089]]],["self"]]],[11,"invalid_value",E,"Raised when a `Deserialize` receives a value of the right…",7,[[["expected"],[R[3089]]],["self"]]],[11,"invalid_length",E,"Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant",E,"Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field",E,"Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field",E,"Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field",E,"Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected",E,"`Expected` represents an explanation of what data a…",N,N],[10,"fmt",E,"Format an explanation of what data was being expected.…",8,[[["self"],[R[37]]],[R[3]]]],[8,R[264],E,R[2937],N,N],[10,R[173],E,R[2938],9,[[["d"]],[R[3]]]],[8,R[4236],E,R[4237],N,N],[8,R[3096],E,"`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value",E,"The type produced by using this seed.",10,N],[10,R[173],E,"Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],[R[3]]]],[8,R[2924],E,R[2939],N,N],[16,"Error",E,R[2917],11,N],[10,R[2940],E,R[2941],11,[[["v"]],[R[3]]]],[10,R[2942],E,R[2943],11,[[["v"]],[R[3]]]],[10,R[2944],E,R[2945],11,[[["v"]],[R[3]]]],[10,R[2946],E,R[2947],11,[[["v"]],[R[3]]]],[10,R[2948],E,R[2949],11,[[["v"]],[R[3]]]],[10,R[2950],E,R[2951],11,[[["v"]],[R[3]]]],[11,R[2952],E,R[2953],11,[[["v"]],[R[3]]]],[10,R[2954],E,R[2955],11,[[["v"]],[R[3]]]],[10,R[2956],E,R[2957],11,[[["v"]],[R[3]]]],[10,R[2958],E,R[2959],11,[[["v"]],[R[3]]]],[10,R[2960],E,R[2961],11,[[["v"]],[R[3]]]],[11,R[2962],E,R[2963],11,[[["v"]],[R[3]]]],[10,R[2964],E,R[2965],11,[[["v"]],[R[3]]]],[10,R[2966],E,R[2967],11,[[["v"]],[R[3]]]],[10,R[2968],E,R[2969],11,[[["v"]],[R[3]]]],[10,R[2970],E,R[2914],11,[[["v"]],[R[3]]]],[10,R[2971],E,R[2914],11,[[["v"]],[R[3]]]],[10,R[2972],E,R[2915],11,[[["v"]],[R[3]]]],[10,R[2973],E,R[2915],11,[[["v"]],[R[3]]]],[10,R[2974],E,R[2975],11,[[["v"]],[R[3]]]],[10,R[2976],E,R[2977],11,[[["v"]],[R[3]]]],[10,R[2978],E,R[2979],11,[[["str"],["v"]],[R[3]]]],[10,R[2980],E,R[2981],11,[[["str"],["v"]],[R[3]]]],[10,R[2982],E,R[2916],11,[[["v"]],[R[3]]]],[10,R[2983],E,R[2916],11,[[["usize"],["v"]],[R[3]]]],[10,R[2984],E,R[2985],11,[[["str"],["usize"],["v"]],[R[3]]]],[10,R[2986],E,R[2987],11,[[["v"]],[R[3]]]],[10,R[2988],E,R[2989],11,[[["str"],["v"]],[R[3]]]],[10,R[2990],E,R[2991],11,[[["str"],["v"]],[R[3]]]],[10,R[2992],E,R[2993],11,[[["v"]],[R[3]]]],[10,R[2994],E,R[2995],11,[[["v"]],[R[3]]]],[11,R[2925],E,R[2996],11,[[["self"]],["bool"]]],[8,"Visitor",E,"This trait represents a visitor that walks through a…",N,N],[16,"Value",E,"The value produced by this visitor.",12,N],[10,"expecting",E,"Format a message stating what data this Visitor expects to…",12,[[["self"],[R[37]]],[R[3]]]],[11,"visit_bool",E,"The input contains a boolean.",12,[[["bool"]],[R[3]]]],[11,"visit_i8",E,"The input contains an `i8`.",12,[[["i8"]],[R[3]]]],[11,"visit_i16",E,"The input contains an `i16`.",12,[[["i16"]],[R[3]]]],[11,"visit_i32",E,"The input contains an `i32`.",12,[[["i32"]],[R[3]]]],[11,"visit_i64",E,"The input contains an `i64`.",12,[[["i64"]],[R[3]]]],[11,"visit_i128",E,"The input contains a `i128`.",12,[[["i128"]],[R[3]]]],[11,"visit_u8",E,"The input contains a `u8`.",12,[[["u8"]],[R[3]]]],[11,"visit_u16",E,"The input contains a `u16`.",12,[[["u16"]],[R[3]]]],[11,"visit_u32",E,"The input contains a `u32`.",12,[[["u32"]],[R[3]]]],[11,"visit_u64",E,"The input contains a `u64`.",12,[[["u64"]],[R[3]]]],[11,"visit_u128",E,"The input contains a `u128`.",12,[[["u128"]],[R[3]]]],[11,"visit_f32",E,"The input contains an `f32`.",12,[[["f32"]],[R[3]]]],[11,"visit_f64",E,"The input contains an `f64`.",12,[[["f64"]],[R[3]]]],[11,"visit_char",E,"The input contains a `char`.",12,[[["char"]],[R[3]]]],[11,"visit_str",E,"The input contains a string. The lifetime of the string is…",12,[[["str"]],[R[3]]]],[11,"visit_borrowed_str",E,"The input contains a string that lives at least as long as…",12,[[["str"]],[R[3]]]],[11,"visit_string",E,"The input contains a string and ownership of the string is…",12,[[["string"]],[R[3]]]],[11,R[3079],E,"The input contains a byte array. The lifetime of the byte…",12,[[],[R[3]]]],[11,"visit_borrowed_bytes",E,"The input contains a byte array that lives at least as…",12,[[],[R[3]]]],[11,"visit_byte_buf",E,"The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],[R[3]]]],[11,"visit_none",E,"The input contains an optional that is absent.",12,[[],[R[3]]]],[11,"visit_some",E,"The input contains an optional that is present.",12,[[["d"]],[R[3]]]],[11,"visit_unit",E,"The input contains a unit `()`.",12,[[],[R[3]]]],[11,R[3078],E,"The input contains a newtype struct.",12,[[["d"]],[R[3]]]],[11,"visit_seq",E,"The input contains a sequence of elements.",12,[[["a"]],[R[3]]]],[11,"visit_map",E,"The input contains a key-value map.",12,[[["a"]],[R[3]]]],[11,"visit_enum",E,"The input contains an enum.",12,[[["a"]],[R[3]]]],[8,"SeqAccess",E,"Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error",E,R[2917],13,N],[10,R[3080],E,R[2918],13,[[["self"],[T]],[["option"],[R[3],["option"]]]]],[11,"next_element",E,R[2918],13,[[["self"]],[[R[3],["option"]],["option"]]]],[11,R[292],E,"Returns the number of elements remaining in the sequence,…",13,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"MapAccess",E,"Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error",E,R[2917],14,N],[10,R[3081],E,R[2919],14,[[["self"],["k"]],[[R[3],["option"]],["option"]]]],[10,R[3082],E,R[2920],14,[[["self"],["v"]],[R[3]]]],[11,R[3083],E,R[2921],14,[[["self"],["k"],["v"]],[[R[3],["option"]],["option"]]]],[11,"next_key",E,R[2919],14,[[["self"]],[[R[3],["option"]],["option"]]]],[11,"next_value",E,R[2920],14,[[["self"]],[R[3]]]],[11,"next_entry",E,R[2921],14,[[["self"]],[["option"],[R[3],["option"]]]]],[11,R[292],E,"Returns the number of entries remaining in the map, if…",14,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"EnumAccess",E,"Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error",E,R[2917],15,N],[16,"Variant",E,"The `Visitor` that will be used to deserialize the content…",15,N],[10,R[3084],E,R[2922],15,[[["v"]],[R[3]]]],[11,"variant",E,R[2922],15,[[],[R[3]]]],[8,R[3097],E,"`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error",E,R[2917],16,N],[10,"unit_variant",E,"Called when deserializing a variant with no values.",16,[[],[R[3]]]],[10,"newtype_variant_seed",E,R[2923],16,[[[T]],[R[3]]]],[11,"newtype_variant",E,R[2923],16,[[],[R[3]]]],[10,"tuple_variant",E,"Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],[R[3]]]],[10,"struct_variant",E,"Called when deserializing a struct-like variant.",16,[[["v"]],[R[3]]]],[8,R[3098],E,"Converts an existing value into a `Deserializer` from…",N,N],[16,R[2924],E,"The type of the deserializer being converted into.",17,N],[10,R[3259],E,"Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible",R[3085],"Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error",E,"Trait used by `Serialize` implementations to generically…",N,N],[10,"custom",E,"Used when a [`Serialize`] implementation encounters any…",18,[[[T]],["self"]]],[8,R[265],E,R[2997],N,N],[10,R[132],E,R[2998],19,[[["s"],["self"]],[R[3]]]],[8,R[3099],E,R[2999],N,N],[16,"Ok",E,R[3000],20,N],[16,"Error",E,R[3001],20,N],[16,R[2926],E,R[3002],20,N],[16,R[2927],E,R[3003],20,N],[16,R[2931],E,R[3004],20,N],[16,R[2932],E,R[3005],20,N],[16,R[2934],E,R[3006],20,N],[16,R[2935],E,R[3007],20,N],[16,R[2936],E,R[3008],20,N],[10,R[3009],E,R[3010],20,[[["bool"]],[R[3]]]],[10,R[3011],E,R[3012],20,[[["i8"]],[R[3]]]],[10,R[3013],E,R[3014],20,[[["i16"]],[R[3]]]],[10,R[3015],E,R[3016],20,[[["i32"]],[R[3]]]],[10,R[3017],E,R[3018],20,[[["i64"]],[R[3]]]],[11,R[3019],E,R[3020],20,[[["i128"]],[R[3]]]],[10,R[3021],E,R[3022],20,[[["u8"]],[R[3]]]],[10,R[3023],E,R[3024],20,[[["u16"]],[R[3]]]],[10,R[3025],E,R[3026],20,[[["u32"]],[R[3]]]],[10,R[3027],E,R[3028],20,[[["u64"]],[R[3]]]],[11,R[3029],E,R[3030],20,[[["u128"]],[R[3]]]],[10,R[3031],E,R[3032],20,[[["f32"]],[R[3]]]],[10,R[3033],E,R[3034],20,[[["f64"]],[R[3]]]],[10,R[3035],E,R[3036],20,[[["char"]],[R[3]]]],[10,R[3037],E,R[3038],20,[[["str"]],[R[3]]]],[10,R[3039],E,R[3040],20,[[],[R[3]]]],[10,R[3041],E,R[3042],20,[[],[R[3]]]],[10,R[3043],E,R[3044],20,[[[T]],[R[3]]]],[10,R[3045],E,R[3046],20,[[],[R[3]]]],[10,R[3047],E,R[3048],20,[[["str"]],[R[3]]]],[10,R[3049],E,R[3050],20,[[["str"],["u32"]],[R[3]]]],[10,R[3051],E,R[3052],20,[[["str"],[T]],[R[3]]]],[10,R[3053],E,R[3054],20,[[["str"],["u32"],[T]],[R[3]]]],[10,R[3055],E,R[3056],20,[[["option",["usize"]],["usize"]],[R[3]]]],[10,R[3057],E,R[3058],20,[[["usize"]],[R[3]]]],[10,R[3059],E,R[3060],20,[[["str"],["usize"]],[R[3]]]],[10,R[3061],E,R[3062],20,[[["str"],["u32"],["usize"]],[R[3]]]],[10,R[3063],E,R[3064],20,[[["option",["usize"]],["usize"]],[R[3]]]],[10,R[3065],E,R[3066],20,[[["str"],["usize"]],[R[3]]]],[10,R[3067],E,R[3068],20,[[["str"],["u32"],["usize"]],[R[3]]]],[11,R[3069],E,R[3070],20,[[["i"]],[R[3]]]],[11,R[3071],E,R[3072],20,[[["i"]],[R[3]]]],[11,R[3073],E,R[3074],20,[[[T]],[R[3]]]],[11,R[2925],E,R[3075],20,[[["self"]],["bool"]]],[8,R[2926],E,"Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok",E,R[2928],21,N],[16,"Error",E,R[2929],21,N],[10,R[2930],E,"Serialize a sequence element.",21,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a sequence.",21,[[],[R[3]]]],[8,R[2927],E,"Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok",E,R[2928],22,N],[16,"Error",E,R[2929],22,N],[10,R[2930],E,"Serialize a tuple element.",22,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a tuple.",22,[[],[R[3]]]],[8,R[2931],E,"Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok",E,R[2928],23,N],[16,"Error",E,R[2929],23,N],[10,R[2933],E,"Serialize a tuple struct field.",23,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a tuple struct.",23,[[],[R[3]]]],[8,R[2932],E,"Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok",E,R[2928],24,N],[16,"Error",E,R[2929],24,N],[10,R[2933],E,"Serialize a tuple variant field.",24,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a tuple variant.",24,[[],[R[3]]]],[8,R[2934],E,"Returned from `Serializer::serialize_map`.",N,N],[16,"Ok",E,R[2928],25,N],[16,"Error",E,R[2929],25,N],[10,R[3086],E,"Serialize a map key.",25,[[["self"],[T]],[R[3]]]],[10,R[3087],E,"Serialize a map value.",25,[[["self"],[T]],[R[3]]]],[11,"serialize_entry",E,"Serialize a map entry consisting of a key and a value.",25,[[["k"],["self"],["v"]],[R[3]]]],[10,"end",E,"Finish serializing a map.",25,[[],[R[3]]]],[8,R[2935],E,"Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok",E,R[2928],26,N],[16,"Error",E,R[2929],26,N],[10,R[2933],E,"Serialize a struct field.",26,[[["self"],["str"],[T]],[R[3]]]],[11,"skip_field",E,"Indicate that a struct field has been skipped.",26,[[["self"],["str"]],[R[3]]]],[10,"end",E,"Finish serializing a struct.",26,[[],[R[3]]]],[8,R[2936],E,"Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok",E,R[2928],27,N],[16,"Error",E,R[2929],27,N],[10,R[2933],E,"Serialize a struct variant field.",27,[[["self"],["str"],[T]],[R[3]]]],[11,"skip_field",E,"Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],[R[3]]]],[10,"end",E,"Finish serializing a struct variant.",27,[[],[R[3]]]],[8,R[264],"serde",R[2937],N,N],[10,R[173],E,R[2938],9,[[["d"]],[R[3]]]],[8,R[2924],E,R[2939],N,N],[16,"Error",E,R[2917],11,N],[10,R[2940],E,R[2941],11,[[["v"]],[R[3]]]],[10,R[2942],E,R[2943],11,[[["v"]],[R[3]]]],[10,R[2944],E,R[2945],11,[[["v"]],[R[3]]]],[10,R[2946],E,R[2947],11,[[["v"]],[R[3]]]],[10,R[2948],E,R[2949],11,[[["v"]],[R[3]]]],[10,R[2950],E,R[2951],11,[[["v"]],[R[3]]]],[11,R[2952],E,R[2953],11,[[["v"]],[R[3]]]],[10,R[2954],E,R[2955],11,[[["v"]],[R[3]]]],[10,R[2956],E,R[2957],11,[[["v"]],[R[3]]]],[10,R[2958],E,R[2959],11,[[["v"]],[R[3]]]],[10,R[2960],E,R[2961],11,[[["v"]],[R[3]]]],[11,R[2962],E,R[2963],11,[[["v"]],[R[3]]]],[10,R[2964],E,R[2965],11,[[["v"]],[R[3]]]],[10,R[2966],E,R[2967],11,[[["v"]],[R[3]]]],[10,R[2968],E,R[2969],11,[[["v"]],[R[3]]]],[10,R[2970],E,R[2914],11,[[["v"]],[R[3]]]],[10,R[2971],E,R[2914],11,[[["v"]],[R[3]]]],[10,R[2972],E,R[2915],11,[[["v"]],[R[3]]]],[10,R[2973],E,R[2915],11,[[["v"]],[R[3]]]],[10,R[2974],E,R[2975],11,[[["v"]],[R[3]]]],[10,R[2976],E,R[2977],11,[[["v"]],[R[3]]]],[10,R[2978],E,R[2979],11,[[["str"],["v"]],[R[3]]]],[10,R[2980],E,R[2981],11,[[["str"],["v"]],[R[3]]]],[10,R[2982],E,R[2916],11,[[["v"]],[R[3]]]],[10,R[2983],E,R[2916],11,[[["usize"],["v"]],[R[3]]]],[10,R[2984],E,R[2985],11,[[["str"],["usize"],["v"]],[R[3]]]],[10,R[2986],E,R[2987],11,[[["v"]],[R[3]]]],[10,R[2988],E,R[2989],11,[[["str"],["v"]],[R[3]]]],[10,R[2990],E,R[2991],11,[[["str"],["v"]],[R[3]]]],[10,R[2992],E,R[2993],11,[[["v"]],[R[3]]]],[10,R[2994],E,R[2995],11,[[["v"]],[R[3]]]],[11,R[2925],E,R[2996],11,[[["self"]],["bool"]]],[8,R[265],E,R[2997],N,N],[10,R[132],E,R[2998],19,[[["s"],["self"]],[R[3]]]],[8,R[3099],E,R[2999],N,N],[16,"Ok",E,R[3000],20,N],[16,"Error",E,R[3001],20,N],[16,R[2926],E,R[3002],20,N],[16,R[2927],E,R[3003],20,N],[16,R[2931],E,R[3004],20,N],[16,R[2932],E,R[3005],20,N],[16,R[2934],E,R[3006],20,N],[16,R[2935],E,R[3007],20,N],[16,R[2936],E,R[3008],20,N],[10,R[3009],E,R[3010],20,[[["bool"]],[R[3]]]],[10,R[3011],E,R[3012],20,[[["i8"]],[R[3]]]],[10,R[3013],E,R[3014],20,[[["i16"]],[R[3]]]],[10,R[3015],E,R[3016],20,[[["i32"]],[R[3]]]],[10,R[3017],E,R[3018],20,[[["i64"]],[R[3]]]],[11,R[3019],E,R[3020],20,[[["i128"]],[R[3]]]],[10,R[3021],E,R[3022],20,[[["u8"]],[R[3]]]],[10,R[3023],E,R[3024],20,[[["u16"]],[R[3]]]],[10,R[3025],E,R[3026],20,[[["u32"]],[R[3]]]],[10,R[3027],E,R[3028],20,[[["u64"]],[R[3]]]],[11,R[3029],E,R[3030],20,[[["u128"]],[R[3]]]],[10,R[3031],E,R[3032],20,[[["f32"]],[R[3]]]],[10,R[3033],E,R[3034],20,[[["f64"]],[R[3]]]],[10,R[3035],E,R[3036],20,[[["char"]],[R[3]]]],[10,R[3037],E,R[3038],20,[[["str"]],[R[3]]]],[10,R[3039],E,R[3040],20,[[],[R[3]]]],[10,R[3041],E,R[3042],20,[[],[R[3]]]],[10,R[3043],E,R[3044],20,[[[T]],[R[3]]]],[10,R[3045],E,R[3046],20,[[],[R[3]]]],[10,R[3047],E,R[3048],20,[[["str"]],[R[3]]]],[10,R[3049],E,R[3050],20,[[["str"],["u32"]],[R[3]]]],[10,R[3051],E,R[3052],20,[[["str"],[T]],[R[3]]]],[10,R[3053],E,R[3054],20,[[["str"],["u32"],[T]],[R[3]]]],[10,R[3055],E,R[3056],20,[[["option",["usize"]],["usize"]],[R[3]]]],[10,R[3057],E,R[3058],20,[[["usize"]],[R[3]]]],[10,R[3059],E,R[3060],20,[[["str"],["usize"]],[R[3]]]],[10,R[3061],E,R[3062],20,[[["str"],["u32"],["usize"]],[R[3]]]],[10,R[3063],E,R[3064],20,[[["option",["usize"]],["usize"]],[R[3]]]],[10,R[3065],E,R[3066],20,[[["str"],["usize"]],[R[3]]]],[10,R[3067],E,R[3068],20,[[["str"],["u32"],["usize"]],[R[3]]]],[11,R[3069],E,R[3070],20,[[["i"]],[R[3]]]],[11,R[3071],E,R[3072],20,[[["i"]],[R[3]]]],[11,R[3073],E,R[3074],20,[[[T]],[R[3]]]],[11,R[2925],E,R[3075],20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any",E,"Helper macro when implementing the `Deserializer` part of…",N,N],[14,"serde_if_integer128",E,"Conditional compilation depending on whether Serde is…",N,N],[11,"fmt",R[3077],E,28,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[24],E,E,28,[[["self"]],[T]]],[11,R[25],E,E,28,[[["self"],[T]]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",R[3076],E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[24],E,E,29,[[["self"]],[T]]],[11,R[25],E,E,29,[[["self"],[T]]]],[11,R[78],E,E,29,[[["self"]],["string"]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[24],E,E,30,[[["self"]],[T]]],[11,R[25],E,E,30,[[["self"],[T]]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[24],E,E,31,[[["self"]],[T]]],[11,R[25],E,E,31,[[["self"],[T]]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[24],E,E,32,[[["self"]],[T]]],[11,R[25],E,E,32,[[["self"],[T]]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[24],E,E,33,[[["self"]],[T]]],[11,R[25],E,E,33,[[["self"],[T]]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[24],E,E,34,[[["self"]],[T]]],[11,R[25],E,E,34,[[["self"],[T]]]],[11,R[20],E,E,34,[[[U]],[R[3]]]],[11,R[21],E,E,34,[[],[R[3]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[["self"]],[T]]],[11,R[26],E,E,34,[[["self"]],[R[46]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[24],E,E,35,[[["self"]],[T]]],[11,R[25],E,E,35,[[["self"],[T]]]],[11,R[20],E,E,35,[[[U]],[R[3]]]],[11,R[21],E,E,35,[[],[R[3]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[["self"]],[T]]],[11,R[26],E,E,35,[[["self"]],[R[46]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[24],E,E,36,[[["self"]],[T]]],[11,R[25],E,E,36,[[["self"],[T]]]],[11,R[20],E,E,36,[[[U]],[R[3]]]],[11,R[21],E,E,36,[[],[R[3]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[22],E,E,36,[[["self"]],[T]]],[11,R[26],E,E,36,[[["self"]],[R[46]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[24],E,E,37,[[["self"]],[T]]],[11,R[25],E,E,37,[[["self"],[T]]]],[11,R[20],E,E,37,[[[U]],[R[3]]]],[11,R[21],E,E,37,[[],[R[3]]]],[11,R[45],E,E,37,[[["self"]],[T]]],[11,R[22],E,E,37,[[["self"]],[T]]],[11,R[26],E,E,37,[[["self"]],[R[46]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[24],E,E,38,[[["self"]],[T]]],[11,R[25],E,E,38,[[["self"],[T]]]],[11,R[20],E,E,38,[[[U]],[R[3]]]],[11,R[21],E,E,38,[[],[R[3]]]],[11,R[45],E,E,38,[[["self"]],[T]]],[11,R[22],E,E,38,[[["self"]],[T]]],[11,R[26],E,E,38,[[["self"]],[R[46]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[24],E,E,39,[[["self"]],[T]]],[11,R[25],E,E,39,[[["self"],[T]]]],[11,R[20],E,E,39,[[[U]],[R[3]]]],[11,R[21],E,E,39,[[],[R[3]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[["self"]],[T]]],[11,R[26],E,E,39,[[["self"]],[R[46]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[24],E,E,40,[[["self"]],[T]]],[11,R[25],E,E,40,[[["self"],[T]]]],[11,R[20],E,E,40,[[[U]],[R[3]]]],[11,R[21],E,E,40,[[],[R[3]]]],[11,R[45],E,E,40,[[["self"]],[T]]],[11,R[22],E,E,40,[[["self"]],[T]]],[11,R[26],E,E,40,[[["self"]],[R[46]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[24],E,E,41,[[["self"]],[T]]],[11,R[25],E,E,41,[[["self"],[T]]]],[11,R[20],E,E,41,[[[U]],[R[3]]]],[11,R[21],E,E,41,[[],[R[3]]]],[11,R[45],E,E,41,[[["self"]],[T]]],[11,R[22],E,E,41,[[["self"]],[T]]],[11,R[26],E,E,41,[[["self"]],[R[46]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[24],E,E,42,[[["self"]],[T]]],[11,R[25],E,E,42,[[["self"],[T]]]],[11,R[20],E,E,42,[[[U]],[R[3]]]],[11,R[21],E,E,42,[[],[R[3]]]],[11,R[45],E,E,42,[[["self"]],[T]]],[11,R[22],E,E,42,[[["self"]],[T]]],[11,R[26],E,E,42,[[["self"]],[R[46]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[24],E,E,43,[[["self"]],[T]]],[11,R[25],E,E,43,[[["self"],[T]]]],[11,R[20],E,E,43,[[[U]],[R[3]]]],[11,R[21],E,E,43,[[],[R[3]]]],[11,R[45],E,E,43,[[["self"]],[T]]],[11,R[22],E,E,43,[[["self"]],[T]]],[11,R[26],E,E,43,[[["self"]],[R[46]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[24],E,E,44,[[["self"]],[T]]],[11,R[25],E,E,44,[[["self"],[T]]]],[11,R[20],E,E,44,[[[U]],[R[3]]]],[11,R[21],E,E,44,[[],[R[3]]]],[11,R[45],E,E,44,[[["self"]],[T]]],[11,R[22],E,E,44,[[["self"]],[T]]],[11,R[26],E,E,44,[[["self"]],[R[46]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[24],E,E,45,[[["self"]],[T]]],[11,R[25],E,E,45,[[["self"],[T]]]],[11,R[20],E,E,45,[[[U]],[R[3]]]],[11,R[21],E,E,45,[[],[R[3]]]],[11,R[45],E,E,45,[[["self"]],[T]]],[11,R[22],E,E,45,[[["self"]],[T]]],[11,R[26],E,E,45,[[["self"]],[R[46]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[24],E,E,46,[[["self"]],[T]]],[11,R[25],E,E,46,[[["self"],[T]]]],[11,R[20],E,E,46,[[[U]],[R[3]]]],[11,R[21],E,E,46,[[],[R[3]]]],[11,R[45],E,E,46,[[["self"]],[T]]],[11,R[22],E,E,46,[[["self"]],[T]]],[11,R[26],E,E,46,[[["self"]],[R[46]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[24],E,E,47,[[["self"]],[T]]],[11,R[25],E,E,47,[[["self"],[T]]]],[11,R[20],E,E,47,[[[U]],[R[3]]]],[11,R[21],E,E,47,[[],[R[3]]]],[11,R[45],E,E,47,[[["self"]],[T]]],[11,R[22],E,E,47,[[["self"]],[T]]],[11,R[26],E,E,47,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[24],E,E,48,[[["self"]],[T]]],[11,R[25],E,E,48,[[["self"],[T]]]],[11,R[20],E,E,48,[[[U]],[R[3]]]],[11,R[21],E,E,48,[[],[R[3]]]],[11,R[45],E,E,48,[[["self"]],[T]]],[11,R[22],E,E,48,[[["self"]],[T]]],[11,R[26],E,E,48,[[["self"]],[R[46]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[24],E,E,49,[[["self"]],[T]]],[11,R[25],E,E,49,[[["self"],[T]]]],[11,R[20],E,E,49,[[[U]],[R[3]]]],[11,R[21],E,E,49,[[],[R[3]]]],[11,R[45],E,E,49,[[["self"]],[T]]],[11,R[22],E,E,49,[[["self"]],[T]]],[11,R[26],E,E,49,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",R[3085],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[20],E,E,50,[[[U]],[R[3]]]],[11,R[21],E,E,50,[[],[R[3]]]],[11,R[45],E,E,50,[[["self"]],[T]]],[11,R[22],E,E,50,[[["self"]],[T]]],[11,R[26],E,E,50,[[["self"]],[R[46]]]],[11,R[173],R[3077],E,28,[[["d"]],[[R[3088]],[R[3],[R[3088]]]]]],[11,R[2942],R[3076],E,30,[[["v"]],[R[3]]]],[11,R[2944],E,E,30,[[["v"]],[R[3]]]],[11,R[2946],E,E,30,[[["v"]],[R[3]]]],[11,R[2948],E,E,30,[[["v"]],[R[3]]]],[11,R[2950],E,E,30,[[["v"]],[R[3]]]],[11,R[2952],E,E,30,[[["v"]],[R[3]]]],[11,R[2954],E,E,30,[[["v"]],[R[3]]]],[11,R[2956],E,E,30,[[["v"]],[R[3]]]],[11,R[2958],E,E,30,[[["v"]],[R[3]]]],[11,R[2960],E,E,30,[[["v"]],[R[3]]]],[11,R[2962],E,E,30,[[["v"]],[R[3]]]],[11,R[2964],E,E,30,[[["v"]],[R[3]]]],[11,R[2966],E,E,30,[[["v"]],[R[3]]]],[11,R[2968],E,E,30,[[["v"]],[R[3]]]],[11,R[2970],E,E,30,[[["v"]],[R[3]]]],[11,R[2971],E,E,30,[[["v"]],[R[3]]]],[11,R[2972],E,E,30,[[["v"]],[R[3]]]],[11,R[2973],E,E,30,[[["v"]],[R[3]]]],[11,R[2976],E,E,30,[[["v"]],[R[3]]]],[11,R[2978],E,E,30,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,30,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,30,[[["v"]],[R[3]]]],[11,R[2983],E,E,30,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,30,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,30,[[["v"]],[R[3]]]],[11,R[2988],E,E,30,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,30,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,30,[[["v"]],[R[3]]]],[11,R[2994],E,E,30,[[["v"]],[R[3]]]],[11,R[2940],E,E,30,[[["v"]],[R[3]]]],[11,R[2974],E,E,30,[[["v"]],[R[3]]]],[11,R[2942],E,E,31,[[["v"]],[R[3]]]],[11,R[2944],E,E,31,[[["v"]],[R[3]]]],[11,R[2946],E,E,31,[[["v"]],[R[3]]]],[11,R[2948],E,E,31,[[["v"]],[R[3]]]],[11,R[2950],E,E,31,[[["v"]],[R[3]]]],[11,R[2952],E,E,31,[[["v"]],[R[3]]]],[11,R[2954],E,E,31,[[["v"]],[R[3]]]],[11,R[2956],E,E,31,[[["v"]],[R[3]]]],[11,R[2958],E,E,31,[[["v"]],[R[3]]]],[11,R[2960],E,E,31,[[["v"]],[R[3]]]],[11,R[2962],E,E,31,[[["v"]],[R[3]]]],[11,R[2964],E,E,31,[[["v"]],[R[3]]]],[11,R[2966],E,E,31,[[["v"]],[R[3]]]],[11,R[2968],E,E,31,[[["v"]],[R[3]]]],[11,R[2970],E,E,31,[[["v"]],[R[3]]]],[11,R[2971],E,E,31,[[["v"]],[R[3]]]],[11,R[2972],E,E,31,[[["v"]],[R[3]]]],[11,R[2973],E,E,31,[[["v"]],[R[3]]]],[11,R[2974],E,E,31,[[["v"]],[R[3]]]],[11,R[2976],E,E,31,[[["v"]],[R[3]]]],[11,R[2978],E,E,31,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,31,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,31,[[["v"]],[R[3]]]],[11,R[2983],E,E,31,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,31,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,31,[[["v"]],[R[3]]]],[11,R[2988],E,E,31,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,31,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,31,[[["v"]],[R[3]]]],[11,R[2994],E,E,31,[[["v"]],[R[3]]]],[11,R[2940],E,E,31,[[["v"]],[R[3]]]],[11,R[2942],E,E,32,[[["v"]],[R[3]]]],[11,R[2944],E,E,32,[[["v"]],[R[3]]]],[11,R[2946],E,E,32,[[["v"]],[R[3]]]],[11,R[2948],E,E,32,[[["v"]],[R[3]]]],[11,R[2950],E,E,32,[[["v"]],[R[3]]]],[11,R[2952],E,E,32,[[["v"]],[R[3]]]],[11,R[2954],E,E,32,[[["v"]],[R[3]]]],[11,R[2956],E,E,32,[[["v"]],[R[3]]]],[11,R[2958],E,E,32,[[["v"]],[R[3]]]],[11,R[2960],E,E,32,[[["v"]],[R[3]]]],[11,R[2962],E,E,32,[[["v"]],[R[3]]]],[11,R[2964],E,E,32,[[["v"]],[R[3]]]],[11,R[2966],E,E,32,[[["v"]],[R[3]]]],[11,R[2968],E,E,32,[[["v"]],[R[3]]]],[11,R[2970],E,E,32,[[["v"]],[R[3]]]],[11,R[2971],E,E,32,[[["v"]],[R[3]]]],[11,R[2972],E,E,32,[[["v"]],[R[3]]]],[11,R[2973],E,E,32,[[["v"]],[R[3]]]],[11,R[2974],E,E,32,[[["v"]],[R[3]]]],[11,R[2976],E,E,32,[[["v"]],[R[3]]]],[11,R[2978],E,E,32,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,32,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,32,[[["v"]],[R[3]]]],[11,R[2983],E,E,32,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,32,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,32,[[["v"]],[R[3]]]],[11,R[2988],E,E,32,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,32,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,32,[[["v"]],[R[3]]]],[11,R[2994],E,E,32,[[["v"]],[R[3]]]],[11,R[2940],E,E,32,[[["v"]],[R[3]]]],[11,R[2942],E,E,33,[[["v"]],[R[3]]]],[11,R[2944],E,E,33,[[["v"]],[R[3]]]],[11,R[2946],E,E,33,[[["v"]],[R[3]]]],[11,R[2948],E,E,33,[[["v"]],[R[3]]]],[11,R[2950],E,E,33,[[["v"]],[R[3]]]],[11,R[2952],E,E,33,[[["v"]],[R[3]]]],[11,R[2954],E,E,33,[[["v"]],[R[3]]]],[11,R[2956],E,E,33,[[["v"]],[R[3]]]],[11,R[2958],E,E,33,[[["v"]],[R[3]]]],[11,R[2960],E,E,33,[[["v"]],[R[3]]]],[11,R[2962],E,E,33,[[["v"]],[R[3]]]],[11,R[2964],E,E,33,[[["v"]],[R[3]]]],[11,R[2966],E,E,33,[[["v"]],[R[3]]]],[11,R[2968],E,E,33,[[["v"]],[R[3]]]],[11,R[2970],E,E,33,[[["v"]],[R[3]]]],[11,R[2971],E,E,33,[[["v"]],[R[3]]]],[11,R[2972],E,E,33,[[["v"]],[R[3]]]],[11,R[2973],E,E,33,[[["v"]],[R[3]]]],[11,R[2974],E,E,33,[[["v"]],[R[3]]]],[11,R[2976],E,E,33,[[["v"]],[R[3]]]],[11,R[2978],E,E,33,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,33,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,33,[[["v"]],[R[3]]]],[11,R[2983],E,E,33,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,33,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,33,[[["v"]],[R[3]]]],[11,R[2988],E,E,33,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,33,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,33,[[["v"]],[R[3]]]],[11,R[2994],E,E,33,[[["v"]],[R[3]]]],[11,R[2940],E,E,33,[[["v"]],[R[3]]]],[11,R[2942],E,E,34,[[["v"]],[R[3]]]],[11,R[2944],E,E,34,[[["v"]],[R[3]]]],[11,R[2946],E,E,34,[[["v"]],[R[3]]]],[11,R[2948],E,E,34,[[["v"]],[R[3]]]],[11,R[2950],E,E,34,[[["v"]],[R[3]]]],[11,R[2952],E,E,34,[[["v"]],[R[3]]]],[11,R[2954],E,E,34,[[["v"]],[R[3]]]],[11,R[2956],E,E,34,[[["v"]],[R[3]]]],[11,R[2958],E,E,34,[[["v"]],[R[3]]]],[11,R[2960],E,E,34,[[["v"]],[R[3]]]],[11,R[2962],E,E,34,[[["v"]],[R[3]]]],[11,R[2964],E,E,34,[[["v"]],[R[3]]]],[11,R[2966],E,E,34,[[["v"]],[R[3]]]],[11,R[2968],E,E,34,[[["v"]],[R[3]]]],[11,R[2970],E,E,34,[[["v"]],[R[3]]]],[11,R[2971],E,E,34,[[["v"]],[R[3]]]],[11,R[2972],E,E,34,[[["v"]],[R[3]]]],[11,R[2973],E,E,34,[[["v"]],[R[3]]]],[11,R[2974],E,E,34,[[["v"]],[R[3]]]],[11,R[2976],E,E,34,[[["v"]],[R[3]]]],[11,R[2978],E,E,34,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,34,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,34,[[["v"]],[R[3]]]],[11,R[2983],E,E,34,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,34,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,34,[[["v"]],[R[3]]]],[11,R[2988],E,E,34,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,34,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,34,[[["v"]],[R[3]]]],[11,R[2994],E,E,34,[[["v"]],[R[3]]]],[11,R[2940],E,E,34,[[["v"]],[R[3]]]],[11,R[2942],E,E,35,[[["v"]],[R[3]]]],[11,R[2944],E,E,35,[[["v"]],[R[3]]]],[11,R[2946],E,E,35,[[["v"]],[R[3]]]],[11,R[2948],E,E,35,[[["v"]],[R[3]]]],[11,R[2950],E,E,35,[[["v"]],[R[3]]]],[11,R[2952],E,E,35,[[["v"]],[R[3]]]],[11,R[2954],E,E,35,[[["v"]],[R[3]]]],[11,R[2956],E,E,35,[[["v"]],[R[3]]]],[11,R[2958],E,E,35,[[["v"]],[R[3]]]],[11,R[2960],E,E,35,[[["v"]],[R[3]]]],[11,R[2962],E,E,35,[[["v"]],[R[3]]]],[11,R[2964],E,E,35,[[["v"]],[R[3]]]],[11,R[2966],E,E,35,[[["v"]],[R[3]]]],[11,R[2968],E,E,35,[[["v"]],[R[3]]]],[11,R[2970],E,E,35,[[["v"]],[R[3]]]],[11,R[2971],E,E,35,[[["v"]],[R[3]]]],[11,R[2972],E,E,35,[[["v"]],[R[3]]]],[11,R[2973],E,E,35,[[["v"]],[R[3]]]],[11,R[2974],E,E,35,[[["v"]],[R[3]]]],[11,R[2976],E,E,35,[[["v"]],[R[3]]]],[11,R[2978],E,E,35,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,35,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,35,[[["v"]],[R[3]]]],[11,R[2983],E,E,35,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,35,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,35,[[["v"]],[R[3]]]],[11,R[2988],E,E,35,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,35,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,35,[[["v"]],[R[3]]]],[11,R[2994],E,E,35,[[["v"]],[R[3]]]],[11,R[2940],E,E,35,[[["v"]],[R[3]]]],[11,R[2942],E,E,36,[[["v"]],[R[3]]]],[11,R[2944],E,E,36,[[["v"]],[R[3]]]],[11,R[2946],E,E,36,[[["v"]],[R[3]]]],[11,R[2948],E,E,36,[[["v"]],[R[3]]]],[11,R[2950],E,E,36,[[["v"]],[R[3]]]],[11,R[2952],E,E,36,[[["v"]],[R[3]]]],[11,R[2954],E,E,36,[[["v"]],[R[3]]]],[11,R[2956],E,E,36,[[["v"]],[R[3]]]],[11,R[2958],E,E,36,[[["v"]],[R[3]]]],[11,R[2960],E,E,36,[[["v"]],[R[3]]]],[11,R[2962],E,E,36,[[["v"]],[R[3]]]],[11,R[2964],E,E,36,[[["v"]],[R[3]]]],[11,R[2966],E,E,36,[[["v"]],[R[3]]]],[11,R[2968],E,E,36,[[["v"]],[R[3]]]],[11,R[2970],E,E,36,[[["v"]],[R[3]]]],[11,R[2971],E,E,36,[[["v"]],[R[3]]]],[11,R[2972],E,E,36,[[["v"]],[R[3]]]],[11,R[2973],E,E,36,[[["v"]],[R[3]]]],[11,R[2974],E,E,36,[[["v"]],[R[3]]]],[11,R[2976],E,E,36,[[["v"]],[R[3]]]],[11,R[2978],E,E,36,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,36,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,36,[[["v"]],[R[3]]]],[11,R[2983],E,E,36,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,36,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,36,[[["v"]],[R[3]]]],[11,R[2988],E,E,36,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,36,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,36,[[["v"]],[R[3]]]],[11,R[2994],E,E,36,[[["v"]],[R[3]]]],[11,R[2940],E,E,36,[[["v"]],[R[3]]]],[11,R[2942],E,E,37,[[["v"]],[R[3]]]],[11,R[2944],E,E,37,[[["v"]],[R[3]]]],[11,R[2946],E,E,37,[[["v"]],[R[3]]]],[11,R[2948],E,E,37,[[["v"]],[R[3]]]],[11,R[2950],E,E,37,[[["v"]],[R[3]]]],[11,R[2952],E,E,37,[[["v"]],[R[3]]]],[11,R[2954],E,E,37,[[["v"]],[R[3]]]],[11,R[2956],E,E,37,[[["v"]],[R[3]]]],[11,R[2958],E,E,37,[[["v"]],[R[3]]]],[11,R[2960],E,E,37,[[["v"]],[R[3]]]],[11,R[2962],E,E,37,[[["v"]],[R[3]]]],[11,R[2964],E,E,37,[[["v"]],[R[3]]]],[11,R[2966],E,E,37,[[["v"]],[R[3]]]],[11,R[2968],E,E,37,[[["v"]],[R[3]]]],[11,R[2970],E,E,37,[[["v"]],[R[3]]]],[11,R[2971],E,E,37,[[["v"]],[R[3]]]],[11,R[2972],E,E,37,[[["v"]],[R[3]]]],[11,R[2973],E,E,37,[[["v"]],[R[3]]]],[11,R[2974],E,E,37,[[["v"]],[R[3]]]],[11,R[2976],E,E,37,[[["v"]],[R[3]]]],[11,R[2978],E,E,37,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,37,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,37,[[["v"]],[R[3]]]],[11,R[2983],E,E,37,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,37,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,37,[[["v"]],[R[3]]]],[11,R[2988],E,E,37,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,37,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,37,[[["v"]],[R[3]]]],[11,R[2994],E,E,37,[[["v"]],[R[3]]]],[11,R[2940],E,E,37,[[["v"]],[R[3]]]],[11,R[2942],E,E,38,[[["v"]],[R[3]]]],[11,R[2944],E,E,38,[[["v"]],[R[3]]]],[11,R[2946],E,E,38,[[["v"]],[R[3]]]],[11,R[2948],E,E,38,[[["v"]],[R[3]]]],[11,R[2950],E,E,38,[[["v"]],[R[3]]]],[11,R[2952],E,E,38,[[["v"]],[R[3]]]],[11,R[2954],E,E,38,[[["v"]],[R[3]]]],[11,R[2956],E,E,38,[[["v"]],[R[3]]]],[11,R[2958],E,E,38,[[["v"]],[R[3]]]],[11,R[2960],E,E,38,[[["v"]],[R[3]]]],[11,R[2962],E,E,38,[[["v"]],[R[3]]]],[11,R[2964],E,E,38,[[["v"]],[R[3]]]],[11,R[2966],E,E,38,[[["v"]],[R[3]]]],[11,R[2968],E,E,38,[[["v"]],[R[3]]]],[11,R[2970],E,E,38,[[["v"]],[R[3]]]],[11,R[2971],E,E,38,[[["v"]],[R[3]]]],[11,R[2972],E,E,38,[[["v"]],[R[3]]]],[11,R[2973],E,E,38,[[["v"]],[R[3]]]],[11,R[2974],E,E,38,[[["v"]],[R[3]]]],[11,R[2976],E,E,38,[[["v"]],[R[3]]]],[11,R[2978],E,E,38,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,38,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,38,[[["v"]],[R[3]]]],[11,R[2983],E,E,38,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,38,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,38,[[["v"]],[R[3]]]],[11,R[2988],E,E,38,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,38,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,38,[[["v"]],[R[3]]]],[11,R[2994],E,E,38,[[["v"]],[R[3]]]],[11,R[2940],E,E,38,[[["v"]],[R[3]]]],[11,R[2942],E,E,39,[[["v"]],[R[3]]]],[11,R[2944],E,E,39,[[["v"]],[R[3]]]],[11,R[2946],E,E,39,[[["v"]],[R[3]]]],[11,R[2948],E,E,39,[[["v"]],[R[3]]]],[11,R[2950],E,E,39,[[["v"]],[R[3]]]],[11,R[2952],E,E,39,[[["v"]],[R[3]]]],[11,R[2954],E,E,39,[[["v"]],[R[3]]]],[11,R[2956],E,E,39,[[["v"]],[R[3]]]],[11,R[2958],E,E,39,[[["v"]],[R[3]]]],[11,R[2960],E,E,39,[[["v"]],[R[3]]]],[11,R[2962],E,E,39,[[["v"]],[R[3]]]],[11,R[2964],E,E,39,[[["v"]],[R[3]]]],[11,R[2966],E,E,39,[[["v"]],[R[3]]]],[11,R[2968],E,E,39,[[["v"]],[R[3]]]],[11,R[2970],E,E,39,[[["v"]],[R[3]]]],[11,R[2971],E,E,39,[[["v"]],[R[3]]]],[11,R[2972],E,E,39,[[["v"]],[R[3]]]],[11,R[2973],E,E,39,[[["v"]],[R[3]]]],[11,R[2974],E,E,39,[[["v"]],[R[3]]]],[11,R[2976],E,E,39,[[["v"]],[R[3]]]],[11,R[2978],E,E,39,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,39,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,39,[[["v"]],[R[3]]]],[11,R[2983],E,E,39,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,39,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,39,[[["v"]],[R[3]]]],[11,R[2988],E,E,39,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,39,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,39,[[["v"]],[R[3]]]],[11,R[2994],E,E,39,[[["v"]],[R[3]]]],[11,R[2940],E,E,39,[[["v"]],[R[3]]]],[11,R[2942],E,E,40,[[["v"]],[R[3]]]],[11,R[2944],E,E,40,[[["v"]],[R[3]]]],[11,R[2946],E,E,40,[[["v"]],[R[3]]]],[11,R[2948],E,E,40,[[["v"]],[R[3]]]],[11,R[2950],E,E,40,[[["v"]],[R[3]]]],[11,R[2952],E,E,40,[[["v"]],[R[3]]]],[11,R[2954],E,E,40,[[["v"]],[R[3]]]],[11,R[2956],E,E,40,[[["v"]],[R[3]]]],[11,R[2958],E,E,40,[[["v"]],[R[3]]]],[11,R[2960],E,E,40,[[["v"]],[R[3]]]],[11,R[2962],E,E,40,[[["v"]],[R[3]]]],[11,R[2964],E,E,40,[[["v"]],[R[3]]]],[11,R[2966],E,E,40,[[["v"]],[R[3]]]],[11,R[2968],E,E,40,[[["v"]],[R[3]]]],[11,R[2970],E,E,40,[[["v"]],[R[3]]]],[11,R[2971],E,E,40,[[["v"]],[R[3]]]],[11,R[2972],E,E,40,[[["v"]],[R[3]]]],[11,R[2973],E,E,40,[[["v"]],[R[3]]]],[11,R[2974],E,E,40,[[["v"]],[R[3]]]],[11,R[2976],E,E,40,[[["v"]],[R[3]]]],[11,R[2978],E,E,40,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,40,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,40,[[["v"]],[R[3]]]],[11,R[2983],E,E,40,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,40,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,40,[[["v"]],[R[3]]]],[11,R[2988],E,E,40,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,40,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,40,[[["v"]],[R[3]]]],[11,R[2994],E,E,40,[[["v"]],[R[3]]]],[11,R[2940],E,E,40,[[["v"]],[R[3]]]],[11,R[2942],E,E,41,[[["v"]],[R[3]]]],[11,R[2944],E,E,41,[[["v"]],[R[3]]]],[11,R[2946],E,E,41,[[["v"]],[R[3]]]],[11,R[2948],E,E,41,[[["v"]],[R[3]]]],[11,R[2950],E,E,41,[[["v"]],[R[3]]]],[11,R[2952],E,E,41,[[["v"]],[R[3]]]],[11,R[2954],E,E,41,[[["v"]],[R[3]]]],[11,R[2956],E,E,41,[[["v"]],[R[3]]]],[11,R[2958],E,E,41,[[["v"]],[R[3]]]],[11,R[2960],E,E,41,[[["v"]],[R[3]]]],[11,R[2962],E,E,41,[[["v"]],[R[3]]]],[11,R[2964],E,E,41,[[["v"]],[R[3]]]],[11,R[2966],E,E,41,[[["v"]],[R[3]]]],[11,R[2968],E,E,41,[[["v"]],[R[3]]]],[11,R[2970],E,E,41,[[["v"]],[R[3]]]],[11,R[2971],E,E,41,[[["v"]],[R[3]]]],[11,R[2972],E,E,41,[[["v"]],[R[3]]]],[11,R[2973],E,E,41,[[["v"]],[R[3]]]],[11,R[2974],E,E,41,[[["v"]],[R[3]]]],[11,R[2976],E,E,41,[[["v"]],[R[3]]]],[11,R[2978],E,E,41,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,41,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,41,[[["v"]],[R[3]]]],[11,R[2983],E,E,41,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,41,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,41,[[["v"]],[R[3]]]],[11,R[2988],E,E,41,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,41,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,41,[[["v"]],[R[3]]]],[11,R[2994],E,E,41,[[["v"]],[R[3]]]],[11,R[2940],E,E,41,[[["v"]],[R[3]]]],[11,R[2942],E,E,42,[[["v"]],[R[3]]]],[11,R[2944],E,E,42,[[["v"]],[R[3]]]],[11,R[2946],E,E,42,[[["v"]],[R[3]]]],[11,R[2948],E,E,42,[[["v"]],[R[3]]]],[11,R[2950],E,E,42,[[["v"]],[R[3]]]],[11,R[2952],E,E,42,[[["v"]],[R[3]]]],[11,R[2954],E,E,42,[[["v"]],[R[3]]]],[11,R[2956],E,E,42,[[["v"]],[R[3]]]],[11,R[2958],E,E,42,[[["v"]],[R[3]]]],[11,R[2960],E,E,42,[[["v"]],[R[3]]]],[11,R[2962],E,E,42,[[["v"]],[R[3]]]],[11,R[2964],E,E,42,[[["v"]],[R[3]]]],[11,R[2966],E,E,42,[[["v"]],[R[3]]]],[11,R[2968],E,E,42,[[["v"]],[R[3]]]],[11,R[2970],E,E,42,[[["v"]],[R[3]]]],[11,R[2971],E,E,42,[[["v"]],[R[3]]]],[11,R[2972],E,E,42,[[["v"]],[R[3]]]],[11,R[2973],E,E,42,[[["v"]],[R[3]]]],[11,R[2974],E,E,42,[[["v"]],[R[3]]]],[11,R[2976],E,E,42,[[["v"]],[R[3]]]],[11,R[2978],E,E,42,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,42,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,42,[[["v"]],[R[3]]]],[11,R[2983],E,E,42,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,42,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,42,[[["v"]],[R[3]]]],[11,R[2988],E,E,42,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,42,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,42,[[["v"]],[R[3]]]],[11,R[2994],E,E,42,[[["v"]],[R[3]]]],[11,R[2940],E,E,42,[[["v"]],[R[3]]]],[11,R[2942],E,E,43,[[["v"]],[R[3]]]],[11,R[2944],E,E,43,[[["v"]],[R[3]]]],[11,R[2946],E,E,43,[[["v"]],[R[3]]]],[11,R[2948],E,E,43,[[["v"]],[R[3]]]],[11,R[2950],E,E,43,[[["v"]],[R[3]]]],[11,R[2952],E,E,43,[[["v"]],[R[3]]]],[11,R[2954],E,E,43,[[["v"]],[R[3]]]],[11,R[2956],E,E,43,[[["v"]],[R[3]]]],[11,R[2958],E,E,43,[[["v"]],[R[3]]]],[11,R[2960],E,E,43,[[["v"]],[R[3]]]],[11,R[2962],E,E,43,[[["v"]],[R[3]]]],[11,R[2964],E,E,43,[[["v"]],[R[3]]]],[11,R[2966],E,E,43,[[["v"]],[R[3]]]],[11,R[2968],E,E,43,[[["v"]],[R[3]]]],[11,R[2970],E,E,43,[[["v"]],[R[3]]]],[11,R[2971],E,E,43,[[["v"]],[R[3]]]],[11,R[2972],E,E,43,[[["v"]],[R[3]]]],[11,R[2973],E,E,43,[[["v"]],[R[3]]]],[11,R[2974],E,E,43,[[["v"]],[R[3]]]],[11,R[2976],E,E,43,[[["v"]],[R[3]]]],[11,R[2978],E,E,43,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,43,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,43,[[["v"]],[R[3]]]],[11,R[2983],E,E,43,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,43,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,43,[[["v"]],[R[3]]]],[11,R[2988],E,E,43,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,43,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,43,[[["v"]],[R[3]]]],[11,R[2994],E,E,43,[[["v"]],[R[3]]]],[11,R[2940],E,E,43,[[["v"]],[R[3]]]],[11,R[2942],E,E,44,[[["v"]],[R[3]]]],[11,R[2944],E,E,44,[[["v"]],[R[3]]]],[11,R[2946],E,E,44,[[["v"]],[R[3]]]],[11,R[2948],E,E,44,[[["v"]],[R[3]]]],[11,R[2950],E,E,44,[[["v"]],[R[3]]]],[11,R[2952],E,E,44,[[["v"]],[R[3]]]],[11,R[2954],E,E,44,[[["v"]],[R[3]]]],[11,R[2956],E,E,44,[[["v"]],[R[3]]]],[11,R[2958],E,E,44,[[["v"]],[R[3]]]],[11,R[2960],E,E,44,[[["v"]],[R[3]]]],[11,R[2962],E,E,44,[[["v"]],[R[3]]]],[11,R[2964],E,E,44,[[["v"]],[R[3]]]],[11,R[2966],E,E,44,[[["v"]],[R[3]]]],[11,R[2968],E,E,44,[[["v"]],[R[3]]]],[11,R[2970],E,E,44,[[["v"]],[R[3]]]],[11,R[2971],E,E,44,[[["v"]],[R[3]]]],[11,R[2972],E,E,44,[[["v"]],[R[3]]]],[11,R[2973],E,E,44,[[["v"]],[R[3]]]],[11,R[2974],E,E,44,[[["v"]],[R[3]]]],[11,R[2976],E,E,44,[[["v"]],[R[3]]]],[11,R[2978],E,E,44,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,44,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,44,[[["v"]],[R[3]]]],[11,R[2983],E,E,44,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,44,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,44,[[["v"]],[R[3]]]],[11,R[2988],E,E,44,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,44,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,44,[[["v"]],[R[3]]]],[11,R[2994],E,E,44,[[["v"]],[R[3]]]],[11,R[2940],E,E,44,[[["v"]],[R[3]]]],[11,R[2942],E,E,45,[[["v"]],[R[3]]]],[11,R[2944],E,E,45,[[["v"]],[R[3]]]],[11,R[2946],E,E,45,[[["v"]],[R[3]]]],[11,R[2948],E,E,45,[[["v"]],[R[3]]]],[11,R[2950],E,E,45,[[["v"]],[R[3]]]],[11,R[2952],E,E,45,[[["v"]],[R[3]]]],[11,R[2954],E,E,45,[[["v"]],[R[3]]]],[11,R[2956],E,E,45,[[["v"]],[R[3]]]],[11,R[2958],E,E,45,[[["v"]],[R[3]]]],[11,R[2960],E,E,45,[[["v"]],[R[3]]]],[11,R[2962],E,E,45,[[["v"]],[R[3]]]],[11,R[2964],E,E,45,[[["v"]],[R[3]]]],[11,R[2966],E,E,45,[[["v"]],[R[3]]]],[11,R[2968],E,E,45,[[["v"]],[R[3]]]],[11,R[2970],E,E,45,[[["v"]],[R[3]]]],[11,R[2971],E,E,45,[[["v"]],[R[3]]]],[11,R[2972],E,E,45,[[["v"]],[R[3]]]],[11,R[2973],E,E,45,[[["v"]],[R[3]]]],[11,R[2974],E,E,45,[[["v"]],[R[3]]]],[11,R[2976],E,E,45,[[["v"]],[R[3]]]],[11,R[2978],E,E,45,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,45,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,45,[[["v"]],[R[3]]]],[11,R[2983],E,E,45,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,45,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,45,[[["v"]],[R[3]]]],[11,R[2988],E,E,45,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,45,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,45,[[["v"]],[R[3]]]],[11,R[2994],E,E,45,[[["v"]],[R[3]]]],[11,R[2940],E,E,45,[[["v"]],[R[3]]]],[11,R[2942],E,E,46,[[["v"]],[R[3]]]],[11,R[2944],E,E,46,[[["v"]],[R[3]]]],[11,R[2946],E,E,46,[[["v"]],[R[3]]]],[11,R[2948],E,E,46,[[["v"]],[R[3]]]],[11,R[2950],E,E,46,[[["v"]],[R[3]]]],[11,R[2952],E,E,46,[[["v"]],[R[3]]]],[11,R[2954],E,E,46,[[["v"]],[R[3]]]],[11,R[2956],E,E,46,[[["v"]],[R[3]]]],[11,R[2958],E,E,46,[[["v"]],[R[3]]]],[11,R[2960],E,E,46,[[["v"]],[R[3]]]],[11,R[2962],E,E,46,[[["v"]],[R[3]]]],[11,R[2964],E,E,46,[[["v"]],[R[3]]]],[11,R[2966],E,E,46,[[["v"]],[R[3]]]],[11,R[2968],E,E,46,[[["v"]],[R[3]]]],[11,R[2970],E,E,46,[[["v"]],[R[3]]]],[11,R[2971],E,E,46,[[["v"]],[R[3]]]],[11,R[2972],E,E,46,[[["v"]],[R[3]]]],[11,R[2973],E,E,46,[[["v"]],[R[3]]]],[11,R[2974],E,E,46,[[["v"]],[R[3]]]],[11,R[2976],E,E,46,[[["v"]],[R[3]]]],[11,R[2978],E,E,46,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,46,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,46,[[["v"]],[R[3]]]],[11,R[2983],E,E,46,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,46,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,46,[[["v"]],[R[3]]]],[11,R[2988],E,E,46,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,46,[[["v"]],[R[3]]]],[11,R[2994],E,E,46,[[["v"]],[R[3]]]],[11,R[2940],E,E,46,[[["v"]],[R[3]]]],[11,R[2990],E,E,46,[[["str"],["v"]],[R[3]]]],[11,R[2940],E,E,47,[[["v"]],[R[3]]]],[11,R[2990],E,E,47,[[["str"],["v"]],[R[3]]]],[11,R[2942],E,E,47,[[["v"]],[R[3]]]],[11,R[2944],E,E,47,[[["v"]],[R[3]]]],[11,R[2946],E,E,47,[[["v"]],[R[3]]]],[11,R[2948],E,E,47,[[["v"]],[R[3]]]],[11,R[2950],E,E,47,[[["v"]],[R[3]]]],[11,R[2952],E,E,47,[[["v"]],[R[3]]]],[11,R[2954],E,E,47,[[["v"]],[R[3]]]],[11,R[2956],E,E,47,[[["v"]],[R[3]]]],[11,R[2958],E,E,47,[[["v"]],[R[3]]]],[11,R[2960],E,E,47,[[["v"]],[R[3]]]],[11,R[2962],E,E,47,[[["v"]],[R[3]]]],[11,R[2964],E,E,47,[[["v"]],[R[3]]]],[11,R[2966],E,E,47,[[["v"]],[R[3]]]],[11,R[2968],E,E,47,[[["v"]],[R[3]]]],[11,R[2970],E,E,47,[[["v"]],[R[3]]]],[11,R[2971],E,E,47,[[["v"]],[R[3]]]],[11,R[2972],E,E,47,[[["v"]],[R[3]]]],[11,R[2973],E,E,47,[[["v"]],[R[3]]]],[11,R[2974],E,E,47,[[["v"]],[R[3]]]],[11,R[2976],E,E,47,[[["v"]],[R[3]]]],[11,R[2978],E,E,47,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,47,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,47,[[["v"]],[R[3]]]],[11,R[2983],E,E,47,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,47,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,47,[[["v"]],[R[3]]]],[11,R[2988],E,E,47,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,47,[[["v"]],[R[3]]]],[11,R[2994],E,E,47,[[["v"]],[R[3]]]],[11,R[2940],E,E,1,[[["v"]],[R[3]]]],[11,R[2990],E,E,1,[[["str"],["v"]],[R[3]]]],[11,R[2942],E,E,1,[[["v"]],[R[3]]]],[11,R[2944],E,E,1,[[["v"]],[R[3]]]],[11,R[2946],E,E,1,[[["v"]],[R[3]]]],[11,R[2948],E,E,1,[[["v"]],[R[3]]]],[11,R[2950],E,E,1,[[["v"]],[R[3]]]],[11,R[2952],E,E,1,[[["v"]],[R[3]]]],[11,R[2954],E,E,1,[[["v"]],[R[3]]]],[11,R[2956],E,E,1,[[["v"]],[R[3]]]],[11,R[2958],E,E,1,[[["v"]],[R[3]]]],[11,R[2960],E,E,1,[[["v"]],[R[3]]]],[11,R[2962],E,E,1,[[["v"]],[R[3]]]],[11,R[2964],E,E,1,[[["v"]],[R[3]]]],[11,R[2966],E,E,1,[[["v"]],[R[3]]]],[11,R[2968],E,E,1,[[["v"]],[R[3]]]],[11,R[2970],E,E,1,[[["v"]],[R[3]]]],[11,R[2971],E,E,1,[[["v"]],[R[3]]]],[11,R[2972],E,E,1,[[["v"]],[R[3]]]],[11,R[2973],E,E,1,[[["v"]],[R[3]]]],[11,R[2974],E,E,1,[[["v"]],[R[3]]]],[11,R[2976],E,E,1,[[["v"]],[R[3]]]],[11,R[2978],E,E,1,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,1,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,1,[[["v"]],[R[3]]]],[11,R[2983],E,E,1,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,1,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,1,[[["v"]],[R[3]]]],[11,R[2988],E,E,1,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,1,[[["v"]],[R[3]]]],[11,R[2994],E,E,1,[[["v"]],[R[3]]]],[11,R[2940],E,E,48,[[["v"]],[R[3]]]],[11,R[2990],E,E,48,[[["str"],["v"]],[R[3]]]],[11,R[2942],E,E,48,[[["v"]],[R[3]]]],[11,R[2944],E,E,48,[[["v"]],[R[3]]]],[11,R[2946],E,E,48,[[["v"]],[R[3]]]],[11,R[2948],E,E,48,[[["v"]],[R[3]]]],[11,R[2950],E,E,48,[[["v"]],[R[3]]]],[11,R[2952],E,E,48,[[["v"]],[R[3]]]],[11,R[2954],E,E,48,[[["v"]],[R[3]]]],[11,R[2956],E,E,48,[[["v"]],[R[3]]]],[11,R[2958],E,E,48,[[["v"]],[R[3]]]],[11,R[2960],E,E,48,[[["v"]],[R[3]]]],[11,R[2962],E,E,48,[[["v"]],[R[3]]]],[11,R[2964],E,E,48,[[["v"]],[R[3]]]],[11,R[2966],E,E,48,[[["v"]],[R[3]]]],[11,R[2968],E,E,48,[[["v"]],[R[3]]]],[11,R[2970],E,E,48,[[["v"]],[R[3]]]],[11,R[2971],E,E,48,[[["v"]],[R[3]]]],[11,R[2972],E,E,48,[[["v"]],[R[3]]]],[11,R[2973],E,E,48,[[["v"]],[R[3]]]],[11,R[2974],E,E,48,[[["v"]],[R[3]]]],[11,R[2976],E,E,48,[[["v"]],[R[3]]]],[11,R[2978],E,E,48,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,48,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,48,[[["v"]],[R[3]]]],[11,R[2983],E,E,48,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,48,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,48,[[["v"]],[R[3]]]],[11,R[2988],E,E,48,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,48,[[["v"]],[R[3]]]],[11,R[2994],E,E,48,[[["v"]],[R[3]]]],[11,R[2940],E,E,49,[[["v"]],[R[3]]]],[11,R[2990],E,E,49,[[["str"],["v"]],[R[3]]]],[11,R[2942],E,E,49,[[["v"]],[R[3]]]],[11,R[2944],E,E,49,[[["v"]],[R[3]]]],[11,R[2946],E,E,49,[[["v"]],[R[3]]]],[11,R[2948],E,E,49,[[["v"]],[R[3]]]],[11,R[2950],E,E,49,[[["v"]],[R[3]]]],[11,R[2952],E,E,49,[[["v"]],[R[3]]]],[11,R[2954],E,E,49,[[["v"]],[R[3]]]],[11,R[2956],E,E,49,[[["v"]],[R[3]]]],[11,R[2958],E,E,49,[[["v"]],[R[3]]]],[11,R[2960],E,E,49,[[["v"]],[R[3]]]],[11,R[2962],E,E,49,[[["v"]],[R[3]]]],[11,R[2964],E,E,49,[[["v"]],[R[3]]]],[11,R[2966],E,E,49,[[["v"]],[R[3]]]],[11,R[2968],E,E,49,[[["v"]],[R[3]]]],[11,R[2970],E,E,49,[[["v"]],[R[3]]]],[11,R[2971],E,E,49,[[["v"]],[R[3]]]],[11,R[2972],E,E,49,[[["v"]],[R[3]]]],[11,R[2973],E,E,49,[[["v"]],[R[3]]]],[11,R[2974],E,E,49,[[["v"]],[R[3]]]],[11,R[2976],E,E,49,[[["v"]],[R[3]]]],[11,R[2978],E,E,49,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,49,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,49,[[["v"]],[R[3]]]],[11,R[2983],E,E,49,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,49,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,49,[[["v"]],[R[3]]]],[11,R[2988],E,E,49,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,49,[[["v"]],[R[3]]]],[11,R[2994],E,E,49,[[["v"]],[R[3]]]],[11,R[2940],E,E,2,[[["v"]],[R[3]]]],[11,R[2942],E,E,2,[[["v"]],[R[3]]]],[11,R[2944],E,E,2,[[["v"]],[R[3]]]],[11,R[2946],E,E,2,[[["v"]],[R[3]]]],[11,R[2948],E,E,2,[[["v"]],[R[3]]]],[11,R[2950],E,E,2,[[["v"]],[R[3]]]],[11,R[2952],E,E,2,[[["v"]],[R[3]]]],[11,R[2954],E,E,2,[[["v"]],[R[3]]]],[11,R[2956],E,E,2,[[["v"]],[R[3]]]],[11,R[2958],E,E,2,[[["v"]],[R[3]]]],[11,R[2960],E,E,2,[[["v"]],[R[3]]]],[11,R[2962],E,E,2,[[["v"]],[R[3]]]],[11,R[2964],E,E,2,[[["v"]],[R[3]]]],[11,R[2966],E,E,2,[[["v"]],[R[3]]]],[11,R[2968],E,E,2,[[["v"]],[R[3]]]],[11,R[2970],E,E,2,[[["v"]],[R[3]]]],[11,R[2971],E,E,2,[[["v"]],[R[3]]]],[11,R[2972],E,E,2,[[["v"]],[R[3]]]],[11,R[2973],E,E,2,[[["v"]],[R[3]]]],[11,R[2974],E,E,2,[[["v"]],[R[3]]]],[11,R[2976],E,E,2,[[["v"]],[R[3]]]],[11,R[2978],E,E,2,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,2,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,2,[[["v"]],[R[3]]]],[11,R[2983],E,E,2,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,2,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,2,[[["v"]],[R[3]]]],[11,R[2988],E,E,2,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,2,[[["v"]],[R[3]]]],[11,R[2994],E,E,2,[[["v"]],[R[3]]]],[11,R[2990],E,E,2,[[["str"],["v"]],[R[3]]]],[11,R[2940],E,E,3,[[["v"]],[R[3]]]],[11,R[2942],E,E,3,[[["v"]],[R[3]]]],[11,R[2944],E,E,3,[[["v"]],[R[3]]]],[11,R[2946],E,E,3,[[["v"]],[R[3]]]],[11,R[2948],E,E,3,[[["v"]],[R[3]]]],[11,R[2950],E,E,3,[[["v"]],[R[3]]]],[11,R[2952],E,E,3,[[["v"]],[R[3]]]],[11,R[2954],E,E,3,[[["v"]],[R[3]]]],[11,R[2956],E,E,3,[[["v"]],[R[3]]]],[11,R[2958],E,E,3,[[["v"]],[R[3]]]],[11,R[2960],E,E,3,[[["v"]],[R[3]]]],[11,R[2962],E,E,3,[[["v"]],[R[3]]]],[11,R[2964],E,E,3,[[["v"]],[R[3]]]],[11,R[2966],E,E,3,[[["v"]],[R[3]]]],[11,R[2968],E,E,3,[[["v"]],[R[3]]]],[11,R[2970],E,E,3,[[["v"]],[R[3]]]],[11,R[2971],E,E,3,[[["v"]],[R[3]]]],[11,R[2972],E,E,3,[[["v"]],[R[3]]]],[11,R[2973],E,E,3,[[["v"]],[R[3]]]],[11,R[2974],E,E,3,[[["v"]],[R[3]]]],[11,R[2976],E,E,3,[[["v"]],[R[3]]]],[11,R[2978],E,E,3,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,3,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,3,[[["v"]],[R[3]]]],[11,R[2983],E,E,3,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,3,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,3,[[["v"]],[R[3]]]],[11,R[2988],E,E,3,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,3,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,3,[[["v"]],[R[3]]]],[11,R[2994],E,E,3,[[["v"]],[R[3]]]],[11,R[2940],E,E,4,[[["v"]],[R[3]]]],[11,R[2942],E,E,4,[[["v"]],[R[3]]]],[11,R[2944],E,E,4,[[["v"]],[R[3]]]],[11,R[2946],E,E,4,[[["v"]],[R[3]]]],[11,R[2948],E,E,4,[[["v"]],[R[3]]]],[11,R[2950],E,E,4,[[["v"]],[R[3]]]],[11,R[2952],E,E,4,[[["v"]],[R[3]]]],[11,R[2954],E,E,4,[[["v"]],[R[3]]]],[11,R[2956],E,E,4,[[["v"]],[R[3]]]],[11,R[2958],E,E,4,[[["v"]],[R[3]]]],[11,R[2960],E,E,4,[[["v"]],[R[3]]]],[11,R[2962],E,E,4,[[["v"]],[R[3]]]],[11,R[2964],E,E,4,[[["v"]],[R[3]]]],[11,R[2966],E,E,4,[[["v"]],[R[3]]]],[11,R[2968],E,E,4,[[["v"]],[R[3]]]],[11,R[2970],E,E,4,[[["v"]],[R[3]]]],[11,R[2971],E,E,4,[[["v"]],[R[3]]]],[11,R[2972],E,E,4,[[["v"]],[R[3]]]],[11,R[2973],E,E,4,[[["v"]],[R[3]]]],[11,R[2974],E,E,4,[[["v"]],[R[3]]]],[11,R[2976],E,E,4,[[["v"]],[R[3]]]],[11,R[2978],E,E,4,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,4,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,4,[[["v"]],[R[3]]]],[11,R[2983],E,E,4,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,4,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,4,[[["v"]],[R[3]]]],[11,R[2988],E,E,4,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,4,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,4,[[["v"]],[R[3]]]],[11,R[2994],E,E,4,[[["v"]],[R[3]]]],[11,R[2940],E,E,5,[[["v"]],[R[3]]]],[11,R[2982],E,E,5,[[["v"]],[R[3]]]],[11,R[2983],E,E,5,[[["usize"],["v"]],[R[3]]]],[11,R[2942],E,E,5,[[["v"]],[R[3]]]],[11,R[2944],E,E,5,[[["v"]],[R[3]]]],[11,R[2946],E,E,5,[[["v"]],[R[3]]]],[11,R[2948],E,E,5,[[["v"]],[R[3]]]],[11,R[2950],E,E,5,[[["v"]],[R[3]]]],[11,R[2952],E,E,5,[[["v"]],[R[3]]]],[11,R[2954],E,E,5,[[["v"]],[R[3]]]],[11,R[2956],E,E,5,[[["v"]],[R[3]]]],[11,R[2958],E,E,5,[[["v"]],[R[3]]]],[11,R[2960],E,E,5,[[["v"]],[R[3]]]],[11,R[2962],E,E,5,[[["v"]],[R[3]]]],[11,R[2964],E,E,5,[[["v"]],[R[3]]]],[11,R[2966],E,E,5,[[["v"]],[R[3]]]],[11,R[2968],E,E,5,[[["v"]],[R[3]]]],[11,R[2970],E,E,5,[[["v"]],[R[3]]]],[11,R[2971],E,E,5,[[["v"]],[R[3]]]],[11,R[2972],E,E,5,[[["v"]],[R[3]]]],[11,R[2973],E,E,5,[[["v"]],[R[3]]]],[11,R[2974],E,E,5,[[["v"]],[R[3]]]],[11,R[2976],E,E,5,[[["v"]],[R[3]]]],[11,R[2978],E,E,5,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,5,[[["str"],["v"]],[R[3]]]],[11,R[2984],E,E,5,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,5,[[["v"]],[R[3]]]],[11,R[2988],E,E,5,[[["str"],["v"]],[R[3]]]],[11,R[2990],E,E,5,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,5,[[["v"]],[R[3]]]],[11,R[2994],E,E,5,[[["v"]],[R[3]]]],[11,R[2940],E,E,6,[[["v"]],[R[3]]]],[11,R[2990],E,E,6,[[["str"],["v"]],[R[3]]]],[11,R[2942],E,E,6,[[["v"]],[R[3]]]],[11,R[2944],E,E,6,[[["v"]],[R[3]]]],[11,R[2946],E,E,6,[[["v"]],[R[3]]]],[11,R[2948],E,E,6,[[["v"]],[R[3]]]],[11,R[2950],E,E,6,[[["v"]],[R[3]]]],[11,R[2952],E,E,6,[[["v"]],[R[3]]]],[11,R[2954],E,E,6,[[["v"]],[R[3]]]],[11,R[2956],E,E,6,[[["v"]],[R[3]]]],[11,R[2958],E,E,6,[[["v"]],[R[3]]]],[11,R[2960],E,E,6,[[["v"]],[R[3]]]],[11,R[2962],E,E,6,[[["v"]],[R[3]]]],[11,R[2964],E,E,6,[[["v"]],[R[3]]]],[11,R[2966],E,E,6,[[["v"]],[R[3]]]],[11,R[2968],E,E,6,[[["v"]],[R[3]]]],[11,R[2970],E,E,6,[[["v"]],[R[3]]]],[11,R[2971],E,E,6,[[["v"]],[R[3]]]],[11,R[2972],E,E,6,[[["v"]],[R[3]]]],[11,R[2973],E,E,6,[[["v"]],[R[3]]]],[11,R[2974],E,E,6,[[["v"]],[R[3]]]],[11,R[2976],E,E,6,[[["v"]],[R[3]]]],[11,R[2978],E,E,6,[[["str"],["v"]],[R[3]]]],[11,R[2980],E,E,6,[[["str"],["v"]],[R[3]]]],[11,R[2982],E,E,6,[[["v"]],[R[3]]]],[11,R[2983],E,E,6,[[["usize"],["v"]],[R[3]]]],[11,R[2984],E,E,6,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2986],E,E,6,[[["v"]],[R[3]]]],[11,R[2988],E,E,6,[[["str"],["v"]],[R[3]]]],[11,R[2992],E,E,6,[[["v"]],[R[3]]]],[11,R[2994],E,E,6,[[["v"]],[R[3]]]],[11,"expecting",R[3077],E,28,[[["self"],[R[37]]],[R[3]]]],[11,"visit_bool",E,E,28,[[["bool"]],[R[3]]]],[11,"visit_i64",E,E,28,[[["i64"]],[R[3]]]],[11,"visit_u64",E,E,28,[[["u64"]],[R[3]]]],[11,"visit_f64",E,E,28,[[["f64"]],[R[3]]]],[11,"visit_str",E,E,28,[[["str"]],[R[3]]]],[11,"visit_none",E,E,28,[[],[R[3]]]],[11,"visit_some",E,E,28,[[["d"]],[R[3]]]],[11,R[3078],E,E,28,[[["d"]],[R[3]]]],[11,"visit_unit",E,E,28,[[],[R[3]]]],[11,"visit_seq",E,E,28,[[["a"]],[R[3]]]],[11,"visit_map",E,E,28,[[["a"]],[R[3]]]],[11,R[3079],E,E,28,[[],[R[3]]]],[11,"visit_enum",E,E,28,[[["a"]],[R[3]]]],[11,R[3080],R[3076],E,3,[[["self"],["v"]],[["option"],[R[3],["option"]]]]],[11,R[292],E,E,3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[3080],E,E,5,[[["self"],[T]],[["option"],[R[3],["option"]]]]],[11,R[292],E,E,5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[3081],E,E,5,[[["self"],[T]],[["option"],[R[3],["option"]]]]],[11,R[3082],E,E,5,[[["self"],[T]],[R[3]]]],[11,R[3083],E,E,5,[[["tv"],["self"],["tk"]],[[R[3],["option"]],["option"]]]],[11,R[292],E,E,5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,R[3084],E,E,46,[[[T]],[R[3]]]],[11,R[3084],E,E,47,[[[T]],[R[3]]]],[11,R[3084],E,E,1,[[[T]],[R[3]]]],[11,R[3084],E,E,48,[[[T]],[R[3]]]],[11,R[3084],E,E,49,[[[T]],[R[3]]]],[11,R[3084],E,E,6,[[[T]],[R[3]]]],[11,R[2930],R[3085],E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[2930],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[2933],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[2933],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[3086],E,E,50,[[["self"],[T]],[R[3]]]],[11,R[3087],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[2933],E,E,50,[[["self"],["str"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[2933],E,E,50,[[["self"],["str"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,"custom",R[3076],E,29,[[[T]],["self"]]],[11,"custom",E,E,29,[[[T]],["self"]]],[11,"clone",E,E,29,[[["self"]],["error"]]],[11,"clone",E,E,30,[[["self"]],["self"]]],[11,"clone",E,E,31,[[["self"]],["self"]]],[11,"clone",E,E,32,[[["self"]],["self"]]],[11,"clone",E,E,33,[[["self"]],["self"]]],[11,"clone",E,E,34,[[["self"]],["self"]]],[11,"clone",E,E,35,[[["self"]],["self"]]],[11,"clone",E,E,36,[[["self"]],["self"]]],[11,"clone",E,E,37,[[["self"]],["self"]]],[11,"clone",E,E,38,[[["self"]],["self"]]],[11,"clone",E,E,39,[[["self"]],["self"]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",E,E,41,[[["self"]],["self"]]],[11,"clone",E,E,42,[[["self"]],["self"]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",E,E,44,[[["self"]],["self"]]],[11,"clone",E,E,45,[[["self"]],["self"]]],[11,"clone",E,E,46,[[["self"]],["self"]]],[11,"clone",E,E,47,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",E,E,48,[[["self"]],["self"]]],[11,"clone",E,E,49,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["seqdeserializer"]]],[11,"clone",E,E,4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone",R[3077],E,28,[[["self"]],[R[3088]]]],[11,"clone",E,E,0,[[["self"]],[R[3089]]]],[11,R[90],E,E,28,[[],[R[3088]]]],[11,"eq",R[3076],E,29,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,29,[[["error"],["self"]],["bool"]]],[11,"eq",R[3077],E,0,[[["self"],[R[3089]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[3089]]],["bool"]]],[11,"fmt",R[3076],E,29,[[["self"],[R[37]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[3077],E,0,[[["self"],[R[37]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3076],E,29,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3077],E,28,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,R[38],R[3076],E,29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,R[3090]],[3,R[3091]],[3,R[3092]],[3,R[3093]],[3,R[3094]],[3,R[3095]],[8,"Error"],[8,"Expected"],[8,R[264]],[8,R[3096]],[8,R[2924]],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,R[3097]],[8,R[3098]],[8,"Error"],[8,R[265]],[8,R[3099]],[8,R[2926]],[8,R[2927]],[8,R[2931]],[8,R[2932]],[8,R[2934]],[8,R[2935]],[8,R[2936]],[3,"IgnoredAny"],[3,"Error"],[3,R[3100]],[3,R[3101]],[3,R[3102]],[3,R[3103]],[3,R[3104]],[3,R[3105]],[3,R[3106]],[3,R[3107]],[3,R[3108]],[3,R[3109]],[3,R[3110]],[3,R[3111]],[3,R[3112]],[3,R[3113]],[3,R[3114]],[3,R[3115]],[3,R[3116]],[3,R[3117]],[3,R[3118]],[3,R[3119]],[3,"Impossible"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","i":[[24,R[265],"serde_derive",E,N,N],[24,R[264],E,E,N,N]],"p":[]};
searchIndex["sha2"]={"doc":"An implementation of the [SHA-2][1] cryptographic hash…","i":[[8,"Digest","sha2",R[2583],N,N],[16,R[1739],E,E,0,N],[10,"new",E,R[2584],0,[[],["self"]]],[10,"input",E,R[1723],0,[[["self"],["b"]]]],[10,"chain",E,R[1728],0,[[["b"]],["self"]]],[10,R[3],E,R[1729],0,[[],[[R[1614],["u8"]],["u8"]]]],[10,R[1724],E,R[2585],0,[[["self"]],[[R[1614],["u8"]],["u8"]]]],[10,"reset",E,R[1725],0,[[["self"]]]],[10,R[1726],E,R[1727],0,[[],["usize"]]],[10,"digest",E,R[2586],0,[[],[[R[1614],["u8"]],["u8"]]]],[3,"Sha256",E,"The SHA-256 hash algorithm with the SHA-256 initial hash…",N,N],[3,"Sha224",E,"The SHA-256 hash algorithm with the SHA-224 initial hash…",N,N],[3,"Sha512",E,R[3261],N,N],[3,"Sha384",E,"The SHA-512 hash algorithm with the SHA-384 initial hash…",N,N],[3,R[2590],E,"The SHA-512 hash algorithm with the SHA-512/224 initial…",N,N],[3,R[2591],E,"The SHA-512 hash algorithm with the SHA-512/256 initial…",N,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"new",E,E,1,[[],["d"]]],[11,"input",E,E,1,[[["self"],["b"]]]],[11,"chain",E,E,1,[[["b"]],["d"]]],[11,R[3],E,E,1,[[],[[R[1614],["u8"]],["u8"]]]],[11,R[1724],E,E,1,[[["self"]],[[R[1614],["u8"]],["u8"]]]],[11,"reset",E,E,1,[[["self"]]]],[11,R[1726],E,E,1,[[],["usize"]]],[11,"digest",E,E,1,[[],[[R[1614],["u8"]],["u8"]]]],[11,"input",E,E,1,[[["self"]]]],[11,R[1724],E,E,1,[[["self"]],["box"]]],[11,R[3],E,E,1,[[["box"]],["box"]]],[11,"reset",E,E,1,[[["self"]]]],[11,R[1726],E,E,1,[[["self"]],["usize"]]],[11,R[2588],E,E,1,[[["self"]],[[R[2587]],["box",[R[2587]]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,"new",E,E,2,[[],["d"]]],[11,"input",E,E,2,[[["self"],["b"]]]],[11,"chain",E,E,2,[[["b"]],["d"]]],[11,R[3],E,E,2,[[],[[R[1614],["u8"]],["u8"]]]],[11,R[1724],E,E,2,[[["self"]],[[R[1614],["u8"]],["u8"]]]],[11,"reset",E,E,2,[[["self"]]]],[11,R[1726],E,E,2,[[],["usize"]]],[11,"digest",E,E,2,[[],[[R[1614],["u8"]],["u8"]]]],[11,"input",E,E,2,[[["self"]]]],[11,R[1724],E,E,2,[[["self"]],["box"]]],[11,R[3],E,E,2,[[["box"]],["box"]]],[11,"reset",E,E,2,[[["self"]]]],[11,R[1726],E,E,2,[[["self"]],["usize"]]],[11,R[2588],E,E,2,[[["self"]],[[R[2587]],["box",[R[2587]]]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,"new",E,E,3,[[],["d"]]],[11,"input",E,E,3,[[["self"],["b"]]]],[11,"chain",E,E,3,[[["b"]],["d"]]],[11,R[3],E,E,3,[[],[[R[1614],["u8"]],["u8"]]]],[11,R[1724],E,E,3,[[["self"]],[[R[1614],["u8"]],["u8"]]]],[11,"reset",E,E,3,[[["self"]]]],[11,R[1726],E,E,3,[[],["usize"]]],[11,"digest",E,E,3,[[],[[R[1614],["u8"]],["u8"]]]],[11,"input",E,E,3,[[["self"]]]],[11,R[1724],E,E,3,[[["self"]],["box"]]],[11,R[3],E,E,3,[[["box"]],["box"]]],[11,"reset",E,E,3,[[["self"]]]],[11,R[1726],E,E,3,[[["self"]],["usize"]]],[11,R[2588],E,E,3,[[["self"]],[[R[2587]],["box",[R[2587]]]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,"new",E,E,4,[[],["d"]]],[11,"input",E,E,4,[[["self"],["b"]]]],[11,"chain",E,E,4,[[["b"]],["d"]]],[11,R[3],E,E,4,[[],[[R[1614],["u8"]],["u8"]]]],[11,R[1724],E,E,4,[[["self"]],[[R[1614],["u8"]],["u8"]]]],[11,"reset",E,E,4,[[["self"]]]],[11,R[1726],E,E,4,[[],["usize"]]],[11,"digest",E,E,4,[[],[[R[1614],["u8"]],["u8"]]]],[11,"input",E,E,4,[[["self"]]]],[11,R[1724],E,E,4,[[["self"]],["box"]]],[11,R[3],E,E,4,[[["box"]],["box"]]],[11,"reset",E,E,4,[[["self"]]]],[11,R[1726],E,E,4,[[["self"]],["usize"]]],[11,R[2588],E,E,4,[[["self"]],[[R[2587]],["box",[R[2587]]]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,"new",E,E,5,[[],["d"]]],[11,"input",E,E,5,[[["self"],["b"]]]],[11,"chain",E,E,5,[[["b"]],["d"]]],[11,R[3],E,E,5,[[],[[R[1614],["u8"]],["u8"]]]],[11,R[1724],E,E,5,[[["self"]],[[R[1614],["u8"]],["u8"]]]],[11,"reset",E,E,5,[[["self"]]]],[11,R[1726],E,E,5,[[],["usize"]]],[11,"digest",E,E,5,[[],[[R[1614],["u8"]],["u8"]]]],[11,"input",E,E,5,[[["self"]]]],[11,R[1724],E,E,5,[[["self"]],["box"]]],[11,R[3],E,E,5,[[["box"]],["box"]]],[11,"reset",E,E,5,[[["self"]]]],[11,R[1726],E,E,5,[[["self"]],["usize"]]],[11,R[2588],E,E,5,[[["self"]],[[R[2587]],["box",[R[2587]]]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,"new",E,E,6,[[],["d"]]],[11,"input",E,E,6,[[["self"],["b"]]]],[11,"chain",E,E,6,[[["b"]],["d"]]],[11,R[3],E,E,6,[[],[[R[1614],["u8"]],["u8"]]]],[11,R[1724],E,E,6,[[["self"]],[[R[1614],["u8"]],["u8"]]]],[11,"reset",E,E,6,[[["self"]]]],[11,R[1726],E,E,6,[[],["usize"]]],[11,"digest",E,E,6,[[],[[R[1614],["u8"]],["u8"]]]],[11,"input",E,E,6,[[["self"]]]],[11,R[1724],E,E,6,[[["self"]],["box"]]],[11,R[3],E,E,6,[[["box"]],["box"]]],[11,"reset",E,E,6,[[["self"]]]],[11,R[1726],E,E,6,[[["self"]],["usize"]]],[11,R[2588],E,E,6,[[["self"]],[[R[2587]],["box",[R[2587]]]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,4,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,3,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,5,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,6,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"clone",E,E,1,[[["self"]],["sha256"]]],[11,"clone",E,E,2,[[["self"]],["sha224"]]],[11,"clone",E,E,3,[[["self"]],["sha512"]]],[11,"clone",E,E,4,[[["self"]],["sha384"]]],[11,"clone",E,E,6,[[["self"]],["sha512trunc256"]]],[11,"clone",E,E,5,[[["self"]],["sha512trunc224"]]],[11,R[90],E,E,1,[[],["self"]]],[11,R[90],E,E,2,[[],["self"]]],[11,R[90],E,E,3,[[],["self"]]],[11,R[90],E,E,4,[[],["self"]]],[11,R[90],E,E,6,[[],["self"]]],[11,R[90],E,E,5,[[],["self"]]],[11,"write",E,E,2,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,2,[[["self"]],[R[3]]]],[11,"write",E,E,1,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,1,[[["self"]],[R[3]]]],[11,"write",E,E,4,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,4,[[["self"]],[R[3]]]],[11,"write",E,E,3,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,3,[[["self"]],[R[3]]]],[11,"write",E,E,5,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,5,[[["self"]],[R[3]]]],[11,"write",E,E,6,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,6,[[["self"]],[R[3]]]],[11,"input",E,E,1,[[["asref"],["self"]]]],[11,"input",E,E,2,[[["asref"],["self"]]]],[11,"input",E,E,3,[[["asref"],["self"]]]],[11,"input",E,E,4,[[["asref"],["self"]]]],[11,"input",E,E,6,[[["asref"],["self"]]]],[11,"input",E,E,5,[[["asref"],["self"]]]],[11,R[2589],E,E,1,[[],[[R[1614],["u8"]],["u8"]]]],[11,R[2589],E,E,2,[[],[[R[1614],["u8"]],["u8"]]]],[11,R[2589],E,E,3,[[],[[R[1614],["u8"]],["u8"]]]],[11,R[2589],E,E,4,[[],[[R[1614],["u8"]],["u8"]]]],[11,R[2589],E,E,6,[[],[[R[1614],["u8"]],["u8"]]]],[11,R[2589],E,E,5,[[],[[R[1614],["u8"]],["u8"]]]],[11,"reset",E,E,1,[[["self"]]]],[11,"reset",E,E,2,[[["self"]]]],[11,"reset",E,E,3,[[["self"]]]],[11,"reset",E,E,4,[[["self"]]]],[11,"reset",E,E,6,[[["self"]]]],[11,"reset",E,E,5,[[["self"]]]]],"p":[[8,"Digest"],[3,"Sha256"],[3,"Sha224"],[3,"Sha512"],[3,"Sha384"],[3,R[2590]],[3,R[2591]]]};
searchIndex["smallvec"]={"doc":"Small vectors in various sizes. These store a certain…","i":[[3,"Drain",R[288],"An iterator that removes the items from a `SmallVec` and…",N,N],[3,"SmallVec",E,"A `Vec`-like container that can store a small number of…",N,N],[3,R[339],E,"An iterator that consumes a `SmallVec` and yields its…",N,N],[5,"unreachable",E,"Hint to the optimizer that any code path which calls this…",N,[[]]],[8,"VecLike",E,"Common operations implemented by both `Vec` and `SmallVec`.",N,N],[10,"push",E,"Append an element to the vector.",0,[[["self"],[T]]]],[8,R[296],E,"Trait to be implemented by a collection that can be…",N,N],[10,R[290],E,"Extends a collection from a slice of its element type",1,[[["self"]]]],[8,"Array",E,"Types that can be used as the backing store for a SmallVec",N,N],[16,"Item",E,"The type of the array's elements.",2,N],[10,"size",E,"Returns the number of items the array can hold.",2,[[],["usize"]]],[10,"ptr",E,"Returns a pointer to the first element of the array.",2,[[["self"]]]],[10,"ptr_mut",E,"Returns a mutable pointer to the first element of the array.",2,[[["self"]]]],[11,"new",E,"Construct an empty vector",3,[[],[R[288]]]],[11,R[287],E,"Construct an empty vector with enough capacity…",3,[[["usize"]],["self"]]],[11,"from_vec",E,"Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],[R[288]]]],[11,"from_buf",E,R[289],3,[[["a"]],[R[288]]]],[11,"from_buf_and_len",E,R[289],3,[[["a"],["usize"]],[R[288]]]],[11,"from_buf_and_len_unchecked",E,R[289],3,[[["a"],["usize"]],[R[288]]]],[11,"set_len",E,"Sets the length of a vector.",3,[[["self"],["usize"]]]],[11,"inline_size",E,"The maximum number of elements this vector can hold inline",3,[[["self"]],["usize"]]],[11,"len",E,"The number of elements stored in the vector",3,[[["self"]],["usize"]]],[11,R[340],E,"Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,R[619],E,"The number of items the vector can hold without reallocating",3,[[["self"]],["usize"]]],[11,"spilled",E,"Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain",E,"Empty the vector and return an iterator over its former…",3,[[["self"]],["drain"]]],[11,"push",E,"Append an item to the vector.",3,[[["self"]]]],[11,"pop",E,"Remove an item from the end of the vector and return it,…",3,[[["self"]],["option"]]],[11,"grow",E,"Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],["usize"]]]],[11,"reserve",E,"Reserve capacity for `additional` more elements to be…",3,[[["self"],["usize"]]]],[11,R[594],E,"Reserve the minimum capacity for `additional` more…",3,[[["self"],["usize"]]]],[11,R[596],E,"Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,R[627],E,"Shorten the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,R[589],E,R[598],3,[[["self"]]]],[11,R[291],E,R[599],3,[[["self"]]]],[11,R[601],E,"Remove the element at position `index`, replacing it with…",3,[[["self"],["usize"]]]],[11,"clear",E,"Remove all elements from the vector.",3,[[["self"]]]],[11,"remove",E,"Remove and return the element at position `index`,…",3,[[["self"],["usize"]]]],[11,"insert",E,"Insert an element at position `index`, shifting all…",3,[[["self"],["usize"]]]],[11,"insert_many",E,"Insert multiple elements at position `index`, shifting all…",3,[[[R[294]],["self"],["usize"]]]],[11,"into_vec",E,"Convert a SmallVec to a Vec, without reallocating if the…",3,[[],["vec"]]],[11,R[109],E,"Convert the SmallVec into an `A` if possible. Otherwise…",3,[[],[R[3]]]],[11,"retain",E,R[602],3,[[["self"],["fnmut"]]]],[11,"dedup",E,"Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by",E,"Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,R[603],E,"Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,R[359],E,"Creates a `SmallVec` directly from the raw components of…",3,[[["usize"]],[R[288]]]],[11,R[768],E,"Copy the elements from a slice into a new `SmallVec`.",3,[[],["self"]]],[11,"insert_from_slice",E,"Copy elements from a slice into the vector at position…",3,[[["self"],["usize"]]]],[11,R[290],E,"Copy elements from a slice and append them to the vector.",3,[[["self"]]]],[11,"resize",E,"Resizes the vector so that its length is equal to `len`.",3,[[["self"],["usize"]]]],[11,"from_elem",E,"Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,[[["usize"]],["self"]]],[14,R[288],E,"Creates a [`SmallVec`] containing the arguments.",N,N],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[211],E,E,4,[[],["i"]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[],[T]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[211],E,E,3,[[],["i"]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[211],E,E,5,[[],["i"]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"push",E,E,3,[[["self"]]]],[11,R[290],E,E,3,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"as_ref",E,E,3,[[["self"]]]],[11,"as_mut",E,E,3,[[["self"]]]],[11,"from",E,E,3,[[],[R[288]]]],[11,"from",E,E,3,[[["vec"]],[R[288]]]],[11,"from",E,E,3,[[["a"]],[R[288]]]],[11,"next",E,E,4,[[["self"]],["option"]]],[11,R[292],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],["option"]]],[11,R[292],E,E,5,[[["self"]]]],[11,"extend",E,E,3,[[[R[294]],["self"]]]],[11,R[211],E,E,3,[[]]],[11,R[295],E,E,4,[[["self"]],["option"]]],[11,R[295],E,E,5,[[["self"]],["option"]]],[11,"clone",E,E,3,[[["self"]],[R[288]]]],[11,R[90],E,E,3,[[],[R[288]]]],[11,"cmp",E,E,3,[[["self"],[R[288]]],[R[105]]]],[11,"eq",E,E,3,[[[R[288]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[288]],["self"]],["bool"]]],[11,R[106],E,E,3,[[["self"],[R[288]]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"deref",E,E,3,[[["self"]]]],[11,R[99],E,E,3,[[["self"]]]],[11,"index",E,E,3,[[["self"],["usize"]]]],[11,"index",E,E,3,[[["range",["usize"]],["self"],["usize"]]]],[11,"index",E,E,3,[[[R[443],["usize"]],["self"],["usize"]]]],[11,"index",E,E,3,[[[R[800],["usize"]],["self"],["usize"]]]],[11,"index",E,E,3,[[[R[488]],["self"]]]],[11,R[350],E,E,3,[[["self"],["usize"]]]],[11,R[350],E,E,3,[[["self"],["range",["usize"]],["usize"]]]],[11,R[350],E,E,3,[[[R[443],["usize"]],["self"],["usize"]]]],[11,R[350],E,E,3,[[["self"],["usize"],[R[800],["usize"]]]]],[11,R[350],E,E,3,[[["self"],[R[488]]]]],[11,"hash",E,E,3,[[["self"],["h"]]]],[11,R[293],E,E,3,[[[R[294]]],[R[288]]]],[11,R[45],E,E,3,[[["self"]]]],[11,R[22],E,E,3,[[["self"]]]],[11,"write",E,E,3,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,R[416],E,E,3,[[["self"]],[R[3]]]],[11,"flush",E,E,3,[[["self"]],[R[3]]]]],"p":[[8,"VecLike"],[8,R[296]],[8,"Array"],[3,"SmallVec"],[3,"Drain"],[3,R[339]]]};
searchIndex["sp_application_crypto"]={"doc":"Traits and macros for constructing application specific…","i":[[3,R[4213],R[4171],R[4190],N,N],[12,"0",E,E,0,N],[0,"key_types",E,R[4191],N,N],[17,"BABE","sp_application_crypto::key_types",R[4192],N,N],[17,"GRANDPA",E,R[4193],N,N],[17,"ACCOUNT",E,R[4194],N,N],[17,"AURA",E,R[4195],N,N],[17,"IM_ONLINE",E,R[4196],N,N],[17,R[4197],E,R[4198],N,N],[17,"DUMMY",E,R[4199],N,N],[0,"ed25519",R[4171],"Ed25519 crypto types.",N,N],[3,"Public",R[4182],R[4200],N,N],[12,"0",E,E,1,N],[3,"Pair",E,R[3752],N,N],[3,R[2884],E,R[4201],N,N],[12,"0",E,E,2,N],[3,R[3743],E,R[4202],N,N],[12,"signer",E,R[3744],3,N],[12,R[188],E,R[3745],3,N],[4,R[3734],E,R[3735],N,N],[13,R[4210],E,R[3736],4,N],[13,R[4211],E,R[3737],4,N],[13,R[3738],E,R[3739],4,N],[13,R[3720],E,R[3740],4,N],[4,R[3741],E,R[3753],N,N],[13,R[3754],E,R[3755],5,N],[3,R[4186],E,R[4172],N,N],[3,R[4173],E,R[4172],N,N],[3,"AppPair",E,R[4174],N,N],[0,"sr25519",R[4171],"Sr25519 crypto types.",N,N],[3,"Public",R[4185],R[4203],N,N],[12,"0",E,E,6,N],[3,"Pair",E,R[4204],N,N],[3,R[2884],E,R[4205],N,N],[12,"0",E,E,7,N],[3,R[3743],E,R[4206],N,N],[12,"signer",E,R[3744],8,N],[12,R[188],E,R[3745],8,N],[3,R[4186],E,R[4172],N,N],[3,R[4173],E,R[4172],N,N],[3,"AppPair",E,R[4174],N,N],[8,"AppKey",R[4171],"An application-specific key.",N,N],[16,"UntypedGeneric",E,"The corresponding type as a generic crypto type.",9,N],[16,"Public",E,"The corresponding public key type in this application…",9,N],[16,"Pair",E,"The corresponding key pair type in this application scheme.",9,N],[16,R[2884],E,"The corresponding signature type in this application scheme.",9,N],[18,"ID",E,R[4175],9,N],[8,"MaybeHash",E,"Type which implements Hash in std, not when no-std (std…",N,N],[8,R[4186],E,"A application's public key.",N,N],[16,"Generic",E,"The wrapped type which is just a plain instance of `Public`.",10,N],[8,"AppPair",E,"A application's key pair.",N,N],[16,"Generic",E,"The wrapped type which is just a plain instance of `Pair`.",11,N],[8,R[4173],E,"A application's signature.",N,N],[16,"Generic",E,"The wrapped type which is just a plain instance of…",12,N],[8,R[4187],E,"A runtime interface for a public key.",N,N],[16,R[2884],E,R[4176],13,N],[10,"all",E,"Returns all public keys for the given key type in the…",13,[[[R[3771]]],["vec"]]],[10,R[4177],E,"Generate a public/private pair for the given key type with…",13,[[["option",["vec"]],["vec",["u8"]],[R[3771]]],["self"]]],[10,"sign",E,R[4178],13,[[["m"],["self"],[R[3771]]],["option"]]],[10,"verify",E,R[4179],13,[[["self"],["m"]],["bool"]]],[8,R[4188],E,R[4218],N,N],[18,"ID",E,R[4175],14,N],[16,R[2884],E,R[4176],14,N],[10,"all",E,R[4219],14,[[],["vec"]]],[10,R[4177],E,R[4220],14,[[["option",["vec"]],["vec",["u8"]]],["self"]]],[10,"sign",E,R[4178],14,[[["self"],["m"]],["option"]]],[10,"verify",E,R[4179],14,[[["self"],["m"]],["bool"]]],[8,R[4189],E,R[4221],N,N],[16,"Public",E,R[4222],15,N],[14,"app_crypto",E,"Declares Public, Pair, Signature types which are…",N,N],[14,"app_crypto_pair",E,"Declares Pair type which is functionally equivalent to…",N,N],[14,"app_crypto_public_full_crypto",E,R[4180],N,N],[14,"app_crypto_public_not_full_crypto",E,R[4180],N,N],[14,"app_crypto_public_common",E,R[4180],N,N],[14,"app_crypto_signature_full_crypto",E,R[4181],N,N],[14,"app_crypto_signature_not_full_crypto",E,R[4181],N,N],[14,"app_crypto_signature_common",E,R[4181],N,N],[14,"wrap",E,"Implement bidirectional `From` and on-way `AsRef`/`AsMut`…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[3774],E,E,0,[[],[T]]],[11,R[292],E,E,0,[[["self"]],["usize"]]],[11,R[3525],E,E,0,[[["self"],["f"]],["r"]]],[11,"encode",E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,0,[[["w"],["self"]]]],[11,"decode",E,E,0,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3779],E,R[3776],0,[[["outer"]],[T]]],[11,R[3780],E,R[3777],0,[[["outer"]],[T]]],[11,R[3604],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,0,[[],[["error"],[R[3],["error"]]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[3708],E,E,0,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,0,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[2628],E,E,0,[[]]],[11,"into",R[4182],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[["self"]],["string"]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[3782],E,E,1,[[[T]],["outer"]]],[11,R[3774],E,E,1,[[],[T]]],[11,R[3733],E,E,1,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[3783],E,E,1,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[292],E,E,1,[[["self"]],["usize"]]],[11,R[3525],E,E,1,[[["self"],["f"]],["r"]]],[11,"encode",E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,1,[[["w"],["self"]]]],[11,"decode",E,E,1,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3779],E,R[3776],1,[[["outer"]],[T]]],[11,R[3780],E,R[3777],1,[[["outer"]],[T]]],[11,R[3604],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,1,[[],[["error"],[R[3],["error"]]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[3708],E,E,1,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,1,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[2628],E,E,1,[[]]],[11,R[4184],E,E,1,[[["self"]],[U]]],[11,R[4183],E,E,1,[[["self"]],[U]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,R[3774],E,E,16,[[],[T]]],[11,R[3779],E,R[3776],16,[[["outer"]],[T]]],[11,R[3780],E,R[3777],16,[[["outer"]],[T]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[3774],E,E,2,[[],[T]]],[11,R[292],E,E,2,[[["self"]],["usize"]]],[11,R[3525],E,E,2,[[["self"],["f"]],["r"]]],[11,"encode",E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,2,[[["w"],["self"]]]],[11,"decode",E,E,2,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3779],E,R[3776],2,[[["outer"]],[T]]],[11,R[3780],E,R[3777],2,[[["outer"]],[T]]],[11,R[3604],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,2,[[],[["error"],[R[3],["error"]]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[3708],E,E,2,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,2,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[2628],E,E,2,[[]]],[11,R[4184],E,E,2,[[["self"]],[U]]],[11,R[4183],E,E,2,[[["self"]],[U]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[3774],E,E,3,[[],[T]]],[11,R[292],E,E,3,[[["self"]],["usize"]]],[11,R[3525],E,E,3,[[["self"],["f"]],["r"]]],[11,"encode",E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,3,[[["w"],["self"]]]],[11,"decode",E,E,3,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3779],E,R[3776],3,[[["outer"]],[T]]],[11,R[3780],E,R[3777],3,[[["outer"]],[T]]],[11,R[3604],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,3,[[],[["error"],[R[3],["error"]]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[3774],E,E,4,[[],[T]]],[11,R[3779],E,R[3776],4,[[["outer"]],[T]]],[11,R[3780],E,R[3777],4,[[["outer"]],[T]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[3774],E,E,5,[[],[T]]],[11,R[3779],E,R[3776],5,[[["outer"]],[T]]],[11,R[3780],E,R[3777],5,[[["outer"]],[T]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[78],E,E,17,[[["self"]],["string"]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,R[3782],E,E,17,[[[T]],["outer"]]],[11,R[3774],E,E,17,[[],[T]]],[11,R[3733],E,E,17,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[3783],E,E,17,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[292],E,E,17,[[["self"]],["usize"]]],[11,R[3525],E,E,17,[[["self"],["f"]],["r"]]],[11,"encode",E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,17,[[["w"],["self"]]]],[11,"decode",E,E,17,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3779],E,R[3776],17,[[["outer"]],[T]]],[11,R[3780],E,R[3777],17,[[["outer"]],[T]]],[11,R[3604],E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,17,[[],[["error"],[R[3],["error"]]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"clear",E,E,17,[[["self"]]]],[11,R[2628],E,E,17,[[]]],[11,R[4184],E,E,17,[[["self"]],[U]]],[11,R[4183],E,E,17,[[["self"]],[U]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"],[T]]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,R[3774],E,E,18,[[],[T]]],[11,R[292],E,E,18,[[["self"]],["usize"]]],[11,R[3525],E,E,18,[[["self"],["f"]],["r"]]],[11,"encode",E,E,18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,18,[[["w"],["self"]]]],[11,"decode",E,E,18,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3779],E,R[3776],18,[[["outer"]],[T]]],[11,R[3780],E,R[3777],18,[[["outer"]],[T]]],[11,R[3604],E,E,18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,18,[[],[["error"],[R[3],["error"]]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"clear",E,E,18,[[["self"]]]],[11,R[2628],E,E,18,[[]]],[11,R[4184],E,E,18,[[["self"]],[U]]],[11,R[4183],E,E,18,[[["self"]],[U]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"],[T]]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,R[3774],E,E,19,[[],[T]]],[11,R[3779],E,R[3776],19,[[["outer"]],[T]]],[11,R[3780],E,R[3777],19,[[["outer"]],[T]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",R[4185],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[78],E,E,6,[[["self"]],["string"]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,R[3782],E,E,6,[[[T]],["outer"]]],[11,R[3774],E,E,6,[[],[T]]],[11,R[3733],E,E,6,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[3783],E,E,6,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[292],E,E,6,[[["self"]],["usize"]]],[11,R[3525],E,E,6,[[["self"],["f"]],["r"]]],[11,"encode",E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,6,[[["w"],["self"]]]],[11,"decode",E,E,6,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3779],E,R[3776],6,[[["outer"]],[T]]],[11,R[3780],E,R[3777],6,[[["outer"]],[T]]],[11,R[3604],E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,6,[[],[["error"],[R[3],["error"]]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[3708],E,E,6,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,6,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,6,[[["self"]]]],[11,R[2628],E,E,6,[[]]],[11,R[4184],E,E,6,[[["self"]],[U]]],[11,R[4183],E,E,6,[[["self"]],[U]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[24],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"],[T]]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,R[3774],E,E,20,[[],[T]]],[11,R[3779],E,R[3776],20,[[["outer"]],[T]]],[11,R[3780],E,R[3777],20,[[["outer"]],[T]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,R[3774],E,E,7,[[],[T]]],[11,R[292],E,E,7,[[["self"]],["usize"]]],[11,R[3525],E,E,7,[[["self"],["f"]],["r"]]],[11,"encode",E,E,7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,7,[[["w"],["self"]]]],[11,"decode",E,E,7,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3779],E,R[3776],7,[[["outer"]],[T]]],[11,R[3780],E,R[3777],7,[[["outer"]],[T]]],[11,R[3604],E,E,7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,7,[[],[["error"],[R[3],["error"]]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[3708],E,E,7,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,7,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,7,[[["self"]]]],[11,R[2628],E,E,7,[[]]],[11,R[4184],E,E,7,[[["self"]],[U]]],[11,R[4183],E,E,7,[[["self"]],[U]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,R[3774],E,E,8,[[],[T]]],[11,R[3779],E,R[3776],8,[[["outer"]],[T]]],[11,R[3780],E,R[3777],8,[[["outer"]],[T]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[24],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"],[T]]]],[11,R[78],E,E,21,[[["self"]],["string"]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,R[3782],E,E,21,[[[T]],["outer"]]],[11,R[3774],E,E,21,[[],[T]]],[11,R[3733],E,E,21,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[3783],E,E,21,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[292],E,E,21,[[["self"]],["usize"]]],[11,R[3525],E,E,21,[[["self"],["f"]],["r"]]],[11,"encode",E,E,21,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,21,[[["w"],["self"]]]],[11,"decode",E,E,21,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3779],E,R[3776],21,[[["outer"]],[T]]],[11,R[3780],E,R[3777],21,[[["outer"]],[T]]],[11,R[3604],E,E,21,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,21,[[],[["error"],[R[3],["error"]]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"clear",E,E,21,[[["self"]]]],[11,R[2628],E,E,21,[[]]],[11,R[4184],E,E,21,[[["self"]],[U]]],[11,R[4183],E,E,21,[[["self"]],[U]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[24],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"],[T]]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,R[3774],E,E,22,[[],[T]]],[11,R[292],E,E,22,[[["self"]],["usize"]]],[11,R[3525],E,E,22,[[["self"],["f"]],["r"]]],[11,"encode",E,E,22,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,22,[[["w"],["self"]]]],[11,"decode",E,E,22,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3779],E,R[3776],22,[[["outer"]],[T]]],[11,R[3780],E,R[3777],22,[[["outer"]],[T]]],[11,R[3604],E,E,22,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,22,[[],[["error"],[R[3],["error"]]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"clear",E,E,22,[[["self"]]]],[11,R[2628],E,E,22,[[]]],[11,R[4184],E,E,22,[[["self"]],[U]]],[11,R[4183],E,E,22,[[["self"]],[U]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,R[3774],E,E,23,[[],[T]]],[11,R[3779],E,R[3776],23,[[["outer"]],[T]]],[11,R[3780],E,R[3777],23,[[["outer"]],[T]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[20],R[4182],E,1,[[],[[R[3],["public"]],["public"]]]],[11,R[20],R[4171],E,0,[[["str"]],[[R[3771]],[R[3],[R[3771]]]]]],[11,R[20],R[4185],E,7,[[],[[R[3],[R[188]]],[R[188]]]]],[11,R[20],E,E,6,[[],[[R[3],["public"]],["public"]]]],[11,R[20],R[4182],E,2,[[],[[R[3],[R[188]]],[R[188]]]]],[11,R[3796],E,R[3799],16,[[["option",["str"]],["str"]]]],[11,R[3729],E,R[3805],16,[[["str"],["option",["str"]]],[[R[3730]],[R[3],[R[3730]]]]]],[11,R[31],E,R[3806],16,[[],["pair"]]],[11,R[3797],E,R[3800],16,[[],[[R[3730]],[R[3],["pair",R[3730]]],["pair"]]]],[11,"derive",E,R[3731],16,[[["option"],["iter"],["self"]],[[R[3],[R[3801]]],[R[3801]]]]],[11,"public",E,R[3802],16,[[["self"]],["public"]]],[11,"sign",E,R[3803],16,[[["self"]],[R[188]]]],[11,"verify",E,R[3732],16,[[["m"]],["bool"]]],[11,R[3798],E,R[3732],16,[[["m"],["p"]],["bool"]]],[11,R[3794],E,R[3804],16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[31],R[4185],R[4212],20,[[],["pair"]]],[11,"public",E,R[3802],20,[[["self"]],["public"]]],[11,R[3797],E,R[3800],20,[[],[[R[3730]],[R[3],["pair",R[3730]]],["pair"]]]],[11,R[3796],E,E,20,[[["option",["str"]],["str"]]]],[11,R[3729],E,E,20,[[["str"],["option",["str"]]],[[R[3730]],[R[3],[R[3730]]]]]],[11,"derive",E,E,20,[[["option"],["iter"],["self"]],[R[3]]]],[11,"sign",E,E,20,[[["self"]],[R[188]]]],[11,"verify",E,R[3732],20,[[["m"]],["bool"]]],[11,R[3798],E,R[3732],20,[[["m"],["p"]],["bool"]]],[11,R[3794],E,R[3804],20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[768],R[4182],R[3795],1,[[],["public"]]],[11,R[768],R[4185],R[3795],6,[[],["public"]]],[11,"decode",R[4182],E,3,[[["decin"]],[["error"],[R[3],[R[3834],"error"]],[R[3834]]]]],[11,"decode",E,E,1,[[["decin"]],[["error"],[R[3],["public","error"]],["public"]]]],[11,"decode",R[4185],E,6,[[["decin"]],[["error"],["public"],[R[3],["public","error"]]]]],[11,"decode",R[4171],E,0,[[["decin"]],[["error"],[R[3771]],[R[3],[R[3771],"error"]]]]],[11,"decode",R[4185],E,7,[[["decin"]],[[R[188]],["error"],[R[3],[R[188],"error"]]]]],[11,"decode",R[4182],E,2,[[["decin"]],[["error"],[R[3],[R[188],"error"]],[R[188]]]]],[11,"fmt",E,E,3,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4185],E,6,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4171],E,0,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4185],E,8,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4182],E,2,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4185],E,7,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4182],E,4,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"as_ref",E,E,2,[[["self"]]]],[11,"as_ref",E,E,1,[[["self"]]]],[11,"as_ref",R[4185],E,6,[[["self"]]]],[11,"as_ref",R[4182],E,2,[[["self"]]]],[11,"as_ref",E,E,1,[[["self"]]]],[11,"as_ref",R[4185],E,6,[[["self"]]]],[11,"as_ref",E,E,7,[[["self"]]]],[11,"as_ref",E,E,7,[[["self"]]]],[11,"as_ref",E,E,20,[[["self"]],["keypair"]]],[11,"hash",R[4182],E,2,[[["self"],["h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",R[4171],E,0,[[["self"],["__h"]]]],[11,"hash",R[4185],E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["h"]]]],[11,"eq",R[4182],E,4,[[["self"],[R[3724]]],["bool"]]],[11,"eq",R[4185],E,7,[[["self"],[R[188]]],["bool"]]],[11,"eq",R[4171],E,0,[[["self"],[R[3771]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[3771]]],["bool"]]],[11,"eq",R[4185],E,8,[[[R[3834]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[3834]],["self"]],["bool"]]],[11,"eq",R[4182],E,2,[[["self"],[R[188]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[3834]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[3834]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["public"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["public"]],["bool"]]],[11,"eq",R[4185],E,6,[[["public"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["public"],["self"]],["bool"]]],[11,"clone",R[4182],E,16,[[["self"]],["pair"]]],[11,"clone",E,E,4,[[["self"]],[R[3724]]]],[11,"clone",R[4185],E,7,[[["self"]],[R[188]]]],[11,"clone",E,E,8,[[["self"]],[R[3834]]]],[11,"clone",R[4182],E,1,[[["self"]],["public"]]],[11,"clone",E,E,3,[[["self"]],[R[3834]]]],[11,"clone",E,E,2,[[["self"]],[R[188]]]],[11,"clone",R[4171],E,0,[[["self"]],[R[3771]]]],[11,"clone",R[4185],E,20,[[["self"]],["pair"]]],[11,"clone",E,E,6,[[["self"]],["public"]]],[11,R[457],E,E,6,[[["str"]],[["public"],[R[3],["public"]]]]],[11,R[457],R[4182],E,1,[[["str"]],[["public"],[R[3],["public"]]]]],[11,R[173],E,E,2,[[["d"]],[[R[188]],[R[3],[R[188]]]]]],[11,R[173],R[4185],E,7,[[["d"]],[[R[3],[R[188]]],[R[188]]]]],[11,R[173],R[4182],E,1,[[["d"]],[[R[3],["public"]],["public"]]]],[11,R[173],R[4185],E,6,[[["d"]],[[R[3],["public"]],["public"]]]],[11,"derive",E,R[3731],6,[[["self"],["iter"]],[["option",["public"]],["public"]]]],[11,R[3782],E,E,6,[[["h256"]],["public"]]],[11,R[3782],R[4182],E,1,[[["h256"]],["public"]]],[11,R[3782],E,E,1,[[],["public"]]],[11,R[3782],R[4185],E,6,[[],["public"]]],[11,R[109],R[4182],E,1,[[]]],[11,"inner",E,E,1,[[["self"]]]],[11,R[3793],E,E,1,[[],["public"]]],[11,R[109],R[4185],E,6,[[]]],[11,"inner",E,E,6,[[["self"]]]],[11,R[3793],E,E,6,[[],["public"]]],[11,R[109],E,E,7,[[]]],[11,"inner",E,E,7,[[["self"]]]],[11,R[3793],E,E,7,[[],[R[188]]]],[11,R[109],R[4171],E,0,[[]]],[11,"inner",E,E,0,[[["self"]]]],[11,R[3793],E,E,0,[[],[R[3771]]]],[11,R[109],R[4182],E,2,[[]]],[11,"inner",E,E,2,[[["self"]]]],[11,R[3793],E,E,2,[[],[R[188]]]],[11,"as_mut",E,E,2,[[["self"]]]],[11,"as_mut",E,E,1,[[["self"]]]],[11,"as_mut",R[4185],E,6,[[["self"]]]],[11,"as_mut",E,E,7,[[["self"]]]],[11,"deref",R[4182],E,1,[[["self"]]]],[11,"deref",R[4185],E,6,[[["self"]]]],[11,R[106],E,E,6,[[["public"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,6,[[["public"],["self"]],["bool"]]],[11,"le",E,E,6,[[["public"],["self"]],["bool"]]],[11,"gt",E,E,6,[[["public"],["self"]],["bool"]]],[11,"ge",E,E,6,[[["public"],["self"]],["bool"]]],[11,R[106],R[4171],E,0,[[["self"],[R[3771]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,0,[[["self"],[R[3771]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[3771]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[3771]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[3771]]],["bool"]]],[11,R[106],R[4182],E,1,[[["self"],["public"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,1,[[["self"],["public"]],["bool"]]],[11,"le",E,E,1,[[["self"],["public"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["public"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["public"]],["bool"]]],[11,R[3603],E,E,1,[[["self"],["encout"]]]],[11,"encode",E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,1,[[["self"],["f"]],["r"]]],[11,R[3603],E,E,3,[[["self"],["encout"]]]],[11,R[3603],R[4185],E,6,[[["self"],["encout"]]]],[11,"encode",E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,6,[[["self"],["f"]],["r"]]],[11,R[3603],E,E,7,[[["self"],["encout"]]]],[11,"encode",E,E,7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,7,[[["self"],["f"]],["r"]]],[11,R[3603],R[4182],E,2,[[["self"],["encout"]]]],[11,"encode",E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,2,[[["self"],["f"]],["r"]]],[11,R[3603],R[4171],E,0,[[["self"],["encout"]]]],[11,"encode",E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,0,[[["self"],["f"]],["r"]]],[11,"from",R[4182],E,1,[[["pair"]],["public"]]],[11,"from",R[4185],E,20,[[[R[3273]]],["pair"]]],[11,"from",R[4171],E,0,[[["u32"]],[R[3771]]]],[11,"from",R[4185],E,20,[[["keypair"]],["pair"]]],[11,"from",E,E,20,[[[R[3293]]],["pair"]]],[11,"from",E,E,7,[[[R[188]]],[R[188]]]],[11,R[132],R[4182],E,2,[[["s"],["self"]],[R[3]]]],[11,R[132],R[4185],E,6,[[["s"],["self"]],[R[3]]]],[11,R[132],R[4182],E,1,[[["s"],["self"]],[R[3]]]],[11,R[132],R[4185],E,7,[[["s"],["self"]],[R[3]]]],[11,"fmt",E,E,6,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4182],E,1,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[90],E,E,1,[[],["public"]]],[11,R[90],R[4185],E,6,[[],["public"]]],[11,R[90],R[4171],E,0,[[],[R[3771]]]],[11,R[90],R[4185],E,7,[[],[R[188]]]],[11,R[90],R[4182],E,2,[[],[R[188]]]],[11,"cmp",R[4171],E,0,[[["self"],[R[3771]]],[R[105]]]],[11,"cmp",R[4182],E,1,[[["self"],["public"]],[R[105]]]],[11,"cmp",R[4185],E,6,[[["public"],["self"]],[R[105]]]],[11,"all",R[4182],E,1,[[[R[3771]]],["vec"]]],[11,R[4177],E,E,1,[[["option",["vec"]],["vec",["u8"]],[R[3771]]],["self"]]],[11,"sign",E,E,1,[[["m"],["self"],[R[3771]]],["option"]]],[11,"verify",E,E,1,[[["self"],["m"]],["bool"]]],[11,"all",R[4185],E,6,[[[R[3771]]],["vec"]]],[11,R[4177],E,E,6,[[["option",["vec"]],["vec",["u8"]],[R[3771]]],["self"]]],[11,"sign",E,E,6,[[["m"],["self"],[R[3771]]],["option"]]],[11,"verify",E,E,6,[[["self"],["m"]],["bool"]]],[11,"all",R[4182],E,17,[[],["vec"]]],[11,R[4177],E,E,17,[[["option",["vec"]],["vec",["u8"]]],["self"]]],[11,"sign",E,E,17,[[["self"],["m"]],["option"]]],[11,"verify",E,E,17,[[["self"],["m"]],["bool"]]],[11,"all",R[4185],E,21,[[],["vec"]]],[11,R[4177],E,E,21,[[["option",["vec"]],["vec",["u8"]]],["self"]]],[11,"sign",E,E,21,[[["self"],["m"]],["option"]]],[11,"verify",E,E,21,[[["self"],["m"]],["bool"]]],[11,"as_ref",R[4182],E,17,[[["self"]],["public"]]],[11,"as_ref",E,E,17,[[["self"]]]],[11,"as_ref",E,E,18,[[["self"]],[R[188]]]],[11,"as_ref",E,E,18,[[["self"]]]],[11,"as_ref",E,E,19,[[["self"]],["pair"]]],[11,"as_ref",R[4185],E,21,[[["self"]],["public"]]],[11,"as_ref",E,E,21,[[["self"]]]],[11,"as_ref",E,E,22,[[["self"]],[R[188]]]],[11,"as_ref",E,E,22,[[["self"]]]],[11,"as_ref",E,E,23,[[["self"]],["pair"]]],[11,"as_mut",R[4182],E,17,[[["self"]],["public"]]],[11,"as_mut",E,E,17,[[["self"]]]],[11,"as_mut",E,E,18,[[["self"]],[R[188]]]],[11,"as_mut",E,E,19,[[["self"]],["pair"]]],[11,"as_mut",R[4185],E,21,[[["self"]],["public"]]],[11,"as_mut",E,E,21,[[["self"]]]],[11,"as_mut",E,E,22,[[["self"]],[R[188]]]],[11,"as_mut",E,E,23,[[["self"]],["pair"]]],[11,"from",R[4182],E,17,[[["public"]],["self"]]],[11,"from",E,E,1,[[["public"]],["self"]]],[11,"from",E,E,18,[[[R[188]]],["self"]]],[11,"from",E,E,2,[[[R[188]]],["self"]]],[11,"from",E,E,19,[[["pair"]],["self"]]],[11,"from",E,E,16,[[["pair"]],["self"]]],[11,"from",R[4185],E,21,[[["public"]],["self"]]],[11,"from",E,E,6,[[["public"]],["self"]]],[11,"from",E,E,22,[[[R[188]]],["self"]]],[11,"from",E,E,7,[[[R[188]]],["self"]]],[11,"from",E,E,23,[[["pair"]],["self"]]],[11,"from",E,E,20,[[["pair"]],["self"]]],[11,"clone",R[4182],E,17,[[["self"]],["public"]]],[11,"clone",E,E,18,[[["self"]],[R[188]]]],[11,"clone",E,E,19,[[["self"]],["pair"]]],[11,"clone",R[4185],E,21,[[["self"]],["public"]]],[11,"clone",E,E,22,[[["self"]],[R[188]]]],[11,"clone",E,E,23,[[["self"]],["pair"]]],[11,R[90],R[4182],E,17,[[],["public"]]],[11,R[90],E,E,18,[[],[R[188]]]],[11,R[90],R[4185],E,21,[[],["public"]]],[11,R[90],E,E,22,[[],[R[188]]]],[11,"cmp",R[4182],E,17,[[["public"],["self"]],[R[105]]]],[11,"cmp",R[4185],E,21,[[["public"],["self"]],[R[105]]]],[11,"eq",R[4182],E,17,[[["public"],["self"]],["bool"]]],[11,"ne",E,E,17,[[["public"],["self"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[188]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[188]]],["bool"]]],[11,"eq",R[4185],E,21,[[["public"],["self"]],["bool"]]],[11,"ne",E,E,21,[[["public"],["self"]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[188]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[188]]],["bool"]]],[11,R[106],R[4182],E,17,[[["public"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,17,[[["public"],["self"]],["bool"]]],[11,"le",E,E,17,[[["public"],["self"]],["bool"]]],[11,"gt",E,E,17,[[["public"],["self"]],["bool"]]],[11,"ge",E,E,17,[[["public"],["self"]],["bool"]]],[11,R[106],R[4185],E,21,[[["public"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,21,[[["public"],["self"]],["bool"]]],[11,"le",E,E,21,[[["public"],["self"]],["bool"]]],[11,"gt",E,E,21,[[["public"],["self"]],["bool"]]],[11,"ge",E,E,21,[[["public"],["self"]],["bool"]]],[11,"fmt",R[4182],E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4185],E,21,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4182],E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4185],E,21,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[37]]],[R[3]]]],[11,"deref",R[4182],E,18,[[["self"]]]],[11,"deref",R[4185],E,22,[[["self"]]]],[11,"hash",R[4182],E,17,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",R[4185],E,21,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"derive",R[4182],E,17,[[[R[3807]],["self"]],["option"]]],[11,"derive",R[4185],E,21,[[[R[3807]],["self"]],["option"]]],[11,R[768],R[4182],E,17,[[],["self"]]],[11,R[768],R[4185],E,21,[[],["self"]]],[11,R[3603],R[4182],E,17,[[["self"],["encout"]]]],[11,"encode",E,E,17,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,17,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,18,[[["self"],["encout"]]]],[11,"encode",E,E,18,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,18,[[["fnonce"],["self"]],["r"]]],[11,R[3603],R[4185],E,21,[[["self"],["encout"]]]],[11,"encode",E,E,21,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,21,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,22,[[["self"],["encout"]]]],[11,"encode",E,E,22,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,22,[[["fnonce"],["self"]],["r"]]],[11,"decode",R[4182],E,17,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,18,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[4185],E,21,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,22,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,R[3796],R[4182],E,19,[[["option",["str"]],["str"]]]],[11,R[3729],E,E,19,[[["str"],["option",["str"]]],[[R[3730]],[R[3],[R[3730]]]]]],[11,"derive",E,E,19,[[[R[3807]],["self"],["option"]],[R[3]]]],[11,R[31],E,E,19,[[],["self"]]],[11,R[3797],E,E,19,[[],[[R[3730]],[R[3],[R[3730]]]]]],[11,"sign",E,E,19,[[["self"]]]],[11,"verify",E,E,19,[[["asref"]],["bool"]]],[11,R[3798],E,E,19,[[["asref"]],["bool"]]],[11,"public",E,E,19,[[["self"]]]],[11,R[3794],E,E,19,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3796],R[4185],E,23,[[["option",["str"]],["str"]]]],[11,R[3729],E,E,23,[[["str"],["option",["str"]]],[[R[3730]],[R[3],[R[3730]]]]]],[11,"derive",E,E,23,[[[R[3807]],["self"],["option"]],[R[3]]]],[11,R[31],E,E,23,[[],["self"]]],[11,R[3797],E,E,23,[[],[[R[3730]],[R[3],[R[3730]]]]]],[11,"sign",E,E,23,[[["self"]]]],[11,"verify",E,E,23,[[["asref"]],["bool"]]],[11,R[3798],E,E,23,[[["asref"]],["bool"]]],[11,"public",E,E,23,[[["self"]]]],[11,R[3794],E,E,23,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[132],R[4182],E,17,[[["s"],["self"]],[R[3]]]],[11,R[132],R[4185],E,21,[[["s"],["self"]],[R[3]]]],[11,R[173],R[4182],E,17,[[["d"]],[R[3]]]],[11,R[173],R[4185],E,21,[[["d"]],[R[3]]]],[11,R[582],R[4182],R[3749],1,[[],["public"]]],[11,R[4208],E,R[3750],1,[[["h256"]],["public"]]],[11,R[3751],E,R[3742],1,[[["self"]]]],[11,"seed",E,R[3757],16,[[["self"]]]],[11,R[3758],E,R[3759],16,[[["str"],["option",["str"]]],["pair"]]],[11,R[582],E,R[3746],2,[[],[R[188]]]],[11,R[768],E,R[3747],2,[[],[R[188]]]],[11,R[4207],E,R[3748],2,[[["h512"]],[R[188]]]],[11,R[582],R[4185],R[3749],6,[[],["public"]]],[11,R[4208],E,R[3750],6,[[["h256"]],["public"]]],[11,R[3751],E,R[3742],6,[[["self"]]]],[11,R[1662],E,R[4209],20,[[["option",["str"]],["str"]]]],[11,R[582],E,R[3746],7,[[],[R[188]]]],[11,R[768],E,R[3747],7,[[],[R[188]]]],[11,R[4207],E,R[3748],7,[[["h512"]],[R[188]]]],[18,"ID",R[4171],R[4175],9,N],[18,"ID",E,R[4175],14,N]],"p":[[3,R[4213]],[3,"Public"],[3,R[2884]],[3,R[3743]],[4,R[3734]],[4,R[3741]],[3,"Public"],[3,R[2884]],[3,R[3743]],[8,"AppKey"],[8,R[4186]],[8,"AppPair"],[8,R[4173]],[8,R[4187]],[8,R[4188]],[8,R[4189]],[3,"Pair"],[3,R[4186]],[3,R[4173]],[3,"AppPair"],[3,"Pair"],[3,R[4186]],[3,R[4173]],[3,"AppPair"]]};
searchIndex["sp_arithmetic"]={"doc":"Minimal fixed point arithmetic primitives and types for…","i":[[3,"Fixed64",R[3546],"An unsigned fixed point number. Can hold any value in the…",N,N],[3,"Percent",E,R[3543],N,N],[3,"Permill",E,R[3543],N,N],[3,"Perbill",E,R[3543],N,N],[3,R[3614],E,R[3543],N,N],[3,R[3615],E,"A wrapper for any rational number with a 128 bit numerator…",N,N],[0,"biguint",E,"Infinite precision unsigned integer for substrate runtime.",N,N],[3,"BigUint",R[3606],R[4235],N,N],[5,"split",E,R[4234],N,[[["double"]]]],[5,"mul_single",E,R[3544],N,[[["single"]],["double"]]],[5,"add_single",E,R[3544],N,[[["single"]]]],[6,"Single",E,R[4232],N,N],[6,"Double",E,R[4233],N,N],[11,R[287],E,R[4374],0,[[["usize"]],["self"]]],[11,"from_limbs",E,R[4375],0,[[],["self"]]],[11,"len",E,R[4376],0,[[["self"]],["usize"]]],[11,"get",E,R[3545],0,[[["self"],["usize"]],["single"]]],[11,R[4377],E,R[3545],0,[[["self"],["usize"]],[["option",["single"]],["single"]]]],[11,"set",E,R[4378],0,[[["self"],["usize"],["single"]]]],[11,"lsb",E,R[4379],0,[[["self"]],["single"]]],[11,"msb",E,R[4380],0,[[["self"]],["single"]]],[11,"lstrip",E,R[4381],0,[[["self"]]]],[11,"lpad",E,R[4382],0,[[["self"],["usize"]]]],[11,"add",E,R[4383],0,[[["self"]],["self"]]],[11,"sub",E,R[4384],0,[[["self"]],[R[3]]]],[11,"mul",E,R[4385],0,[[["self"]],["self"]]],[11,"div_unit",E,R[4386],0,[[["single"]],["self"]]],[11,"div",E,R[4387],0,[[["self"],["bool"]],["option"]]],[0,R[4224],R[3546],"Some helper functions to work with 128bit numbers. Note…",N,N],[5,"gcd","sp_arithmetic::helpers_128bit",R[4225],N,[[["u128"]],["u128"]]],[5,"split",E,R[4226],N,[[["u128"]]]],[5,R[4227],E,R[4228],N,[[["u128"]],["biguint"]]],[5,R[4229],E,R[4230],N,[[["u128"]],[[R[3],["u128","str"]],["str"],["u128"]]]],[0,"traits",R[3546],R[4266],N,N],[8,R[120],"sp_arithmetic::traits",R[3547],N,N],[11,R[119],E,R[3548],1,[[["self"]],["self"]]],[10,R[3549],E,R[3550],1,[[["self"]],["option"]]],[8,"Zero",E,R[3551],N,N],[10,"zero",E,R[3552],2,[[],["self"]]],[11,"set_zero",E,R[3553],2,[[["self"]]]],[10,"is_zero",E,R[3554],2,[[["self"]],["bool"]]],[8,"One",E,R[3555],N,N],[10,"one",E,R[3556],3,[[],["self"]]],[11,"set_one",E,R[3557],3,[[["self"]]]],[11,"is_one",E,R[3558],3,[[["self"]],["bool"]]],[8,"Bounded",E,R[3559],N,N],[10,R[534],E,R[3560],4,[[],["self"]]],[10,R[536],E,R[3561],4,[[],["self"]]],[8,R[3562],E,R[3563],N,N],[10,R[1778],E,R[3564],5,[[["self"]],["option"]]],[8,R[3565],E,R[3566],N,N],[10,R[1779],E,R[3567],6,[[["self"]],["option"]]],[8,R[3568],E,R[3569],N,N],[10,R[1780],E,R[3570],7,[[["self"]],["option"]]],[8,R[3571],E,R[3572],N,N],[10,R[1781],E,R[3573],8,[[["self"]],["option"]]],[8,R[3574],E,R[3575],N,N],[10,R[3576],E,R[3577],9,[[["u32"],["self"]],["option"]]],[8,R[3578],E,R[3579],N,N],[10,R[3580],E,R[3581],10,[[["u32"],["self"]],["option"]]],[8,R[4267],E,R[4268],N,N],[8,R[3611],E,R[4270],N,N],[10,R[4271],E,R[3585],11,[[[T]],["self"]]],[8,R[3612],E,R[4269],N,N],[10,R[3601],E,R[3586],12,[[],[T]]],[8,R[3582],E,R[4272],N,N],[10,R[3583],E,R[4273],13,[[],["self"]]],[10,R[3584],E,R[4274],13,[[],["self"]]],[10,R[3602],E,R[4275],13,[[],["self"]]],[8,R[3613],E,R[4276],N,N],[11,R[4277],E,R[3585],14,[[[T]],["self"]]],[11,R[4278],E,R[3586],14,[[],[T]]],[11,"zero",R[3546],R[4349],15,[[],["self"]]],[11,"is_zero",E,R[3587],15,[[["self"]],["bool"]]],[11,"one",E,R[3588],15,[[],["self"]]],[11,R[3589],E,R[3590],15,[[],["u8"]]],[11,R[4350],E,R[3591],15,[[],["u8"]]],[11,R[3600],E,R[3592],15,[[["u8"]],["self"]]],[11,R[3593],E,R[3594],15,[[["u8"]],["self"]]],[11,"square",E,R[3595],15,[[],["self"]]],[11,R[3596],E,R[3597],15,[[["f64"]],["self"]]],[11,R[3598],E,R[3599],15,[[["n"]],["self"]]],[11,"zero",E,R[4349],16,[[],["self"]]],[11,"is_zero",E,R[3587],16,[[["self"]],["bool"]]],[11,"one",E,R[3588],16,[[],["self"]]],[11,R[3589],E,R[3590],16,[[],["u32"]]],[11,R[4350],E,R[3591],16,[[],["u32"]]],[11,R[3600],E,R[3592],16,[[["u32"]],["self"]]],[11,R[3593],E,R[3594],16,[[["u32"]],["self"]]],[11,"square",E,R[3595],16,[[],["self"]]],[11,R[3596],E,R[3597],16,[[["f64"]],["self"]]],[11,R[3598],E,R[3599],16,[[["n"]],["self"]]],[11,"zero",E,R[4349],17,[[],["self"]]],[11,"is_zero",E,R[3587],17,[[["self"]],["bool"]]],[11,"one",E,R[3588],17,[[],["self"]]],[11,R[3589],E,R[3590],17,[[],["u32"]]],[11,R[4350],E,R[3591],17,[[],["u32"]]],[11,R[3600],E,R[3592],17,[[["u32"]],["self"]]],[11,R[3593],E,R[3594],17,[[["u32"]],["self"]]],[11,"square",E,R[3595],17,[[],["self"]]],[11,R[3596],E,R[3597],17,[[["f64"]],["self"]]],[11,R[3598],E,R[3599],17,[[["n"]],["self"]]],[11,"zero",E,R[4349],18,[[],["self"]]],[11,"is_zero",E,R[3587],18,[[["self"]],["bool"]]],[11,"one",E,R[3588],18,[[],["self"]]],[11,R[3589],E,R[3590],18,[[],["u64"]]],[11,R[4350],E,R[3591],18,[[],["u64"]]],[11,R[3600],E,R[3592],18,[[["u64"]],["self"]]],[11,R[3593],E,R[3594],18,[[["u64"]],["self"]]],[11,"square",E,R[3595],18,[[],["self"]]],[11,R[3596],E,R[3597],18,[[["f64"]],["self"]]],[11,R[3598],E,R[3599],18,[[["n"]],["self"]]],[11,R[4365],E,R[4366],19,[[["i64"]],["self"]]],[11,R[4350],E,R[4367],19,[[],["i64"]]],[11,R[109],E,R[4368],19,[[],["i64"]]],[11,R[3600],E,R[4369],19,[[["i64"]],["self"]]],[11,R[4370],E,R[4371],19,[[["i64"],["u64"]],["self"]]],[11,R[4372],E,R[4373],19,[[["n"]],["n"]]],[11,"zero",E,R[4349],20,[[],["self"]]],[11,"is_zero",E,R[4351],20,[[["self"]],["bool"]]],[11,"from",E,R[4352],20,[[["u128"]],["self"]]],[11,R[4353],E,R[4354],20,[[["u128"]],["self"]]],[11,"n",E,R[4355],20,[[["self"]],["u128"]]],[11,"d",E,R[4356],20,[[["self"]],["u128"]]],[11,"to_den",E,R[4357],20,[[["u128"]],[["str"],[R[3],["str"]]]]],[11,"lcm",E,R[4358],20,[[["self"]],[[R[3],["u128","str"]],["str"],["u128"]]]],[11,R[4359],E,R[4360],20,[[],["self"]]],[11,R[4361],E,R[4362],20,[[],["self"]]],[11,R[1778],E,R[4363],20,[[],[["str"],[R[3],["str"]]]]],[11,R[1779],E,R[4364],20,[[],[["str"],[R[3],["str"]]]]],[11,R[3601],E,E,19,[[],[T]]],[11,R[3583],E,E,19,[[[T]],[T]]],[11,R[3584],E,E,19,[[[T]],[T]]],[11,R[3602],E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"],[T]]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,R[292],E,E,19,[[["self"]],["usize"]]],[11,R[3525],E,E,19,[[["self"],["f"]],["r"]]],[11,"encode",E,E,19,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,19,[[["w"],["self"]]]],[11,"decode",E,E,19,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,19,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,19,[[],[[R[3],["error"]],["error"]]]],[11,R[3601],E,E,15,[[],[T]]],[11,R[3583],E,E,15,[[[T]],[T]]],[11,R[3584],E,E,15,[[[T]],[T]]],[11,R[3602],E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,R[292],E,E,15,[[["self"]],["usize"]]],[11,R[3525],E,E,15,[[["self"],["f"]],["r"]]],[11,"encode",E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,15,[[["w"],["self"]]]],[11,"decode",E,E,15,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,15,[[],[[R[3],["error"]],["error"]]]],[11,R[3601],E,E,16,[[],[T]]],[11,R[3583],E,E,16,[[[T]],[T]]],[11,R[3584],E,E,16,[[[T]],[T]]],[11,R[3602],E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,R[292],E,E,16,[[["self"]],["usize"]]],[11,R[3525],E,E,16,[[["self"],["f"]],["r"]]],[11,"encode",E,E,16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,16,[[["w"],["self"]]]],[11,"decode",E,E,16,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,16,[[],[[R[3],["error"]],["error"]]]],[11,R[3601],E,E,17,[[],[T]]],[11,R[3583],E,E,17,[[[T]],[T]]],[11,R[3584],E,E,17,[[[T]],[T]]],[11,R[3602],E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,R[292],E,E,17,[[["self"]],["usize"]]],[11,R[3525],E,E,17,[[["self"],["f"]],["r"]]],[11,"encode",E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,17,[[["w"],["self"]]]],[11,"decode",E,E,17,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,17,[[],[[R[3],["error"]],["error"]]]],[11,R[3601],E,E,18,[[],[T]]],[11,R[3583],E,E,18,[[[T]],[T]]],[11,R[3584],E,E,18,[[[T]],[T]]],[11,R[3602],E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"],[T]]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,R[292],E,E,18,[[["self"]],["usize"]]],[11,R[3525],E,E,18,[[["self"],["f"]],["r"]]],[11,"encode",E,E,18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,18,[[["w"],["self"]]]],[11,"decode",E,E,18,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,18,[[],[[R[3],["error"]],["error"]]]],[11,R[3601],E,E,20,[[],[T]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[24],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"],[T]]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,R[3601],R[3606],E,0,[[],[T]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[3583],R[3546],E,15,[[],["self"]]],[11,R[3584],E,E,15,[[],["self"]]],[11,R[3602],E,E,15,[[],["self"]]],[11,R[3583],E,E,16,[[],["self"]]],[11,R[3584],E,E,16,[[],["self"]]],[11,R[3602],E,E,16,[[],["self"]]],[11,R[3583],E,E,17,[[],["self"]]],[11,R[3584],E,E,17,[[],["self"]]],[11,R[3602],E,E,17,[[],["self"]]],[11,R[3583],E,E,18,[[],["self"]]],[11,R[3584],E,E,18,[[],["self"]]],[11,R[3602],E,E,18,[[],["self"]]],[11,R[3583],E,E,19,[[],["self"]]],[11,R[3602],E,E,19,[[],["self"]]],[11,R[3584],E,E,19,[[],["self"]]],[11,"from",R[3606],E,0,[[["u8"]],["self"]]],[11,"from",E,E,0,[[["u16"]],["self"]]],[11,"from",E,E,0,[[["single"]],["self"]]],[11,"from",E,E,0,[[["double"]],["self"]]],[11,"from",R[3546],E,15,[[["percent"],["compact",["percent"]]],["percent"]]],[11,"from",E,E,16,[[["compact",["permill"]],["permill"]],["permill"]]],[11,"from",E,E,17,[[["compact",["perbill"]],["perbill"]],["perbill"]]],[11,"from",E,E,18,[[["compact",[R[3607]]],[R[3607]]],[R[3607]]]],[11,"clone",R[3606],E,0,[[["self"]],["biguint"]]],[11,"clone",R[3546],E,15,[[["self"]],["percent"]]],[11,"clone",E,E,16,[[["self"]],["permill"]]],[11,"clone",E,E,17,[[["self"]],["perbill"]]],[11,"clone",E,E,18,[[["self"]],[R[3607]]]],[11,"clone",E,E,19,[[["self"]],["fixed64"]]],[11,"clone",E,E,20,[[["self"]],[R[3608]]]],[11,R[90],R[3606],E,0,[[],["biguint"]]],[11,R[90],R[3546],E,15,[[],["percent"]]],[11,R[90],E,E,16,[[],["permill"]]],[11,R[90],E,E,17,[[],["perbill"]]],[11,R[90],E,E,18,[[],[R[3607]]]],[11,R[90],E,E,19,[[],["fixed64"]]],[11,R[90],E,E,20,[[],[R[3608]]]],[11,"cmp",R[3606],E,0,[[["self"]],[R[105]]]],[11,"cmp",R[3546],E,15,[[["self"],["percent"]],[R[105]]]],[11,"cmp",E,E,16,[[["permill"],["self"]],[R[105]]]],[11,"cmp",E,E,17,[[["perbill"],["self"]],[R[105]]]],[11,"cmp",E,E,18,[[["self"],[R[3607]]],[R[105]]]],[11,"cmp",E,E,19,[[["fixed64"],["self"]],[R[105]]]],[11,"cmp",E,E,20,[[["self"]],[R[105]]]],[11,"eq",R[3606],E,0,[[["self"]],["bool"]]],[11,"eq",R[3546],E,15,[[["self"],["percent"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["percent"]],["bool"]]],[11,"eq",E,E,16,[[["permill"],["self"]],["bool"]]],[11,"ne",E,E,16,[[["permill"],["self"]],["bool"]]],[11,"eq",E,E,17,[[["perbill"],["self"]],["bool"]]],[11,"ne",E,E,17,[[["perbill"],["self"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[3607]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[3607]]],["bool"]]],[11,"eq",E,E,19,[[["fixed64"],["self"]],["bool"]]],[11,"ne",E,E,19,[[["fixed64"],["self"]],["bool"]]],[11,"eq",E,E,20,[[["self"]],["bool"]]],[11,R[106],R[3606],E,0,[[["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[3546],E,15,[[["self"],["percent"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,15,[[["self"],["percent"]],["bool"]]],[11,"le",E,E,15,[[["self"],["percent"]],["bool"]]],[11,"gt",E,E,15,[[["self"],["percent"]],["bool"]]],[11,"ge",E,E,15,[[["self"],["percent"]],["bool"]]],[11,R[106],E,E,16,[[["permill"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,16,[[["permill"],["self"]],["bool"]]],[11,"le",E,E,16,[[["permill"],["self"]],["bool"]]],[11,"gt",E,E,16,[[["permill"],["self"]],["bool"]]],[11,"ge",E,E,16,[[["permill"],["self"]],["bool"]]],[11,R[106],E,E,17,[[["perbill"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,17,[[["perbill"],["self"]],["bool"]]],[11,"le",E,E,17,[[["perbill"],["self"]],["bool"]]],[11,"gt",E,E,17,[[["perbill"],["self"]],["bool"]]],[11,"ge",E,E,17,[[["perbill"],["self"]],["bool"]]],[11,R[106],E,E,18,[[["self"],[R[3607]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,18,[[["self"],[R[3607]]],["bool"]]],[11,"le",E,E,18,[[["self"],[R[3607]]],["bool"]]],[11,"gt",E,E,18,[[["self"],[R[3607]]],["bool"]]],[11,"ge",E,E,18,[[["self"],[R[3607]]],["bool"]]],[11,R[106],E,E,19,[[["fixed64"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,19,[[["fixed64"],["self"]],["bool"]]],[11,"le",E,E,19,[[["fixed64"],["self"]],["bool"]]],[11,"gt",E,E,19,[[["fixed64"],["self"]],["bool"]]],[11,"ge",E,E,19,[[["fixed64"],["self"]],["bool"]]],[11,R[106],E,E,20,[[["self"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",R[3606],E,0,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",R[3546],E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,19,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[37]]],[R[3]]]],[11,"div",E,E,15,[[]]],[11,"div",E,E,16,[[]]],[11,"div",E,E,17,[[]]],[11,"div",E,E,18,[[]]],[11,"div",E,E,19,[[]]],[11,"sub",R[3606],E,0,[[]]],[11,"sub",R[3546],E,19,[[]]],[11,"add",R[3606],E,0,[[]]],[11,"add",R[3546],E,19,[[]]],[11,"mul",R[3606],E,0,[[]]],[11,"mul",R[3546],E,15,[[["n"]]]],[11,"mul",E,E,16,[[["n"]]]],[11,"mul",E,E,17,[[["n"]]]],[11,"mul",E,E,18,[[["n"]]]],[11,"zero",R[3606],E,0,[[],["self"]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,R[1778],R[3546],E,19,[[["self"]],["option"]]],[11,R[1779],E,E,19,[[["self"]],["option"]]],[11,R[1781],E,E,19,[[["self"]],["option"]]],[11,R[3603],E,E,15,[[["self"],["encout"]]]],[11,"encode",E,E,15,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,15,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,16,[[["self"],["encout"]]]],[11,"encode",E,E,16,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,16,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,17,[[["self"],["encout"]]]],[11,"encode",E,E,17,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,17,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,18,[[["self"],["encout"]]]],[11,"encode",E,E,18,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,18,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,19,[[["self"],["encout"]]]],[11,"encode",E,E,19,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,19,[[["fnonce"],["self"]],["r"]]],[11,"decode",E,E,15,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,16,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,17,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,18,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,19,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,R[3610],E,E,15,[[["self"]],["u8"]]],[11,R[3609],E,E,15,[[["u8"]],["percent"]]],[11,R[3610],E,E,16,[[["self"]],["u32"]]],[11,R[3609],E,E,16,[[["u32"]],["permill"]]],[11,R[3610],E,E,17,[[["self"]],["u32"]]],[11,R[3609],E,E,17,[[["u32"]],["perbill"]]],[11,R[3610],E,E,18,[[["self"]],["u64"]]],[11,R[3609],E,E,18,[[["u64"]],[R[3607]]]],[11,R[132],E,E,15,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,16,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,17,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,18,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,15,[[["__d"]],[R[3]]]],[11,R[173],E,E,16,[[["__d"]],[R[3]]]],[11,R[173],E,E,17,[[["__d"]],[R[3]]]],[11,R[173],E,E,18,[[["__d"]],[R[3]]]]],"p":[[3,"BigUint"],[8,R[120]],[8,"Zero"],[8,"One"],[8,"Bounded"],[8,R[3562]],[8,R[3565]],[8,R[3568]],[8,R[3571]],[8,R[3574]],[8,R[3578]],[8,R[3611]],[8,R[3612]],[8,R[3582]],[8,R[3613]],[3,"Percent"],[3,"Permill"],[3,"Perbill"],[3,R[3614]],[3,"Fixed64"],[3,R[3615]]]};
searchIndex["sp_core"]={"doc":"Shareable Substrate types.","i":[[24,R[3885],"sp_core",E,N,N],[3,"H160",E,R[3717],N,N],[12,"0",E,E,0,N],[3,"H256",E,R[3718],N,N],[12,"0",E,E,1,N],[3,"H512",E,R[3719],N,N],[12,"0",E,E,2,N],[3,"U256",E,R[3616],N,N],[12,"0",E,E,3,N],[8,"Hasher",E,R[1338],N,N],[16,"Out",E,R[1339],4,N],[16,R[3936],E,R[1340],4,N],[18,"LENGTH",E,R[1341],4,N],[10,"hash",E,R[1342],4,[[]]],[3,R[3850],E,"Substrate changes trie configuration.",N,N],[12,"digest_interval",E,"Interval (in blocks) at which level1-digests are created.…",5,N],[12,"digest_levels",E,"Maximal number of digest levels in hierarchy. 0 means that…",5,N],[3,R[3881],E,"Concrete implementation of Hasher using Blake2b 256-bit…",N,N],[3,"Bytes",E,"Hex-serialized shim for `Vec<u8>`.",N,N],[12,"0",E,E,6,N],[3,R[3880],E,"Stores the encoded `RuntimeMetadata` for the native side…",N,N],[4,R[3851],E,"Context for executing a call into the runtime.",N,N],[13,"Importing",E,"Context for general importing (including own blocks).",7,N],[13,"Syncing",E,"Context used when syncing the blockchain.",7,N],[13,"BlockConstruction",E,"Context used for block construction.",7,N],[13,"OffchainCall",E,"Context used for offchain calls.",7,N],[4,R[3852],E,"Something that is either a native or an encoded value.",N,N],[13,"Native",E,"The native representation.",8,N],[13,"Encoded",E,"The encoded representation.",8,N],[4,R[3882],E,"A value that is never in a native representation. This is…",N,N],[4,"LogLevel",E,"A log level matching the one from `log` crate.",N,N],[13,"Error",E,"`Error` log level.",9,N],[13,"Warn",E,"`Warn` log level.",9,N],[13,"Info",E,"`Info` log level.",9,N],[13,"Debug",E,"`Debug` log level.",9,N],[13,"Trace",E,"`Trace` log level.",9,N],[0,"hashing",E,"Hashing functions.",N,N],[5,"blake2_512_into","sp_core::hashing","Do a Blake2 512-bit hash and place result in `dest`.",N,[[]]],[5,"blake2_512",E,"Do a Blake2 512-bit hash and return result.",N,[[]]],[5,"blake2_256_into",E,"Do a Blake2 256-bit hash and place result in `dest`.",N,[[]]],[5,R[4626],E,"Do a Blake2 256-bit hash and return result.",N,[[]]],[5,"blake2_128_into",E,"Do a Blake2 128-bit hash and place result in `dest`.",N,[[]]],[5,R[4625],E,"Do a Blake2 128-bit hash and return result.",N,[[]]],[5,"twox_64_into",E,"Do a XX 64-bit hash and place result in `dest`.",N,[[]]],[5,"twox_64",E,"Do a XX 64-bit hash and return result.",N,[[]]],[5,"twox_128_into",E,"Do a XX 128-bit hash and place result in `dest`.",N,[[]]],[5,R[4816],E,"Do a XX 128-bit hash and return result.",N,[[]]],[5,"twox_256_into",E,"Do a XX 256-bit hash and place result in `dest`.",N,[[]]],[5,R[4817],E,"Do a XX 256-bit hash and return result.",N,[[]]],[5,"keccak_256",E,"Do a keccak 256-bit hash and return result.",N,[[]]],[5,"sha2_256",E,"Do a sha2 256-bit hash and return result.",N,[[]]],[0,"hexdisplay","sp_core","Wrapper type for byte collections that outputs hex.",N,N],[3,"HexDisplay",R[3781],"Simple wrapper to display hex representation of bytes.",N,N],[5,"ascii_format",E,"Format into ASCII + # + hex, suitable for storage key…",N,[[],["string"]]],[8,"AsBytesRef",E,"Simple trait to transform various types to `&[u8]`",N,N],[10,R[4623],E,"Transform `self` into `&[u8]`.",10,[[["self"]]]],[11,"from",E,"Create new instance that will display `d` as a hex string…",11,[[["r"]],["self"]]],[0,"crypto","sp_core","Cryptographic utilities.",N,N],[3,"Protected",R[3723],"A store for sensitive data.",N,N],[3,R[3883],E,"An opaque 32-byte cryptographic identifier.",N,N],[3,"Dummy",E,"Dummy cryptography. Doesn't do anything.",N,N],[3,R[4213],E,R[4190],N,N],[12,"0",E,E,12,N],[4,R[667],E,"The infallible type.",N,N],[4,R[3853],E,"An error with the interpretation of a secret.",N,N],[13,R[3721],E,"The overall format was invalid (e.g. the seed phrase…",13,N],[13,"InvalidPhrase",E,"The seed phrase provided is not a valid BIP39 phrase.",13,N],[13,"InvalidPassword",E,"The supplied password was invalid.",13,N],[13,"InvalidSeed",E,"The seed is invalid (bad content).",13,N],[13,"InvalidSeedLength",E,"The seed has an invalid length.",13,N],[13,R[3722],E,"The derivation path was invalid (e.g. contains soft…",13,N],[4,R[3854],E,"A since derivation junction description. It is the single…",N,N],[13,"Soft",E,"Soft (vanilla) derivation. Public keys have a…",14,N],[13,"Hard",E,"Hard (\"hardened\") derivation. Public keys do not have a…",14,N],[4,R[3734],E,R[3735],N,N],[13,R[4210],E,R[3736],15,N],[13,R[4211],E,R[3737],15,N],[13,R[3738],E,R[3739],15,N],[13,R[3720],E,R[3740],15,N],[13,R[3721],E,"Invalid format.",15,N],[13,R[3722],E,"Invalid derivation path.",15,N],[4,R[3855],E,"A known address (sub)format/network ID for SS58.",N,N],[13,"SubstrateAccountDirect",E,"Any Substrate network, direct checksum, standard account…",16,N],[13,"PolkadotAccountDirect",E,"Polkadot Relay-chain, direct checksum, standard account…",16,N],[13,"KusamaAccountDirect",E,"Kusama Relay-chain, direct checksum, standard account…",16,N],[13,"DothereumAccountDirect",E,"Dothereum Para-chain, direct checksum, standard account…",16,N],[13,"KulupuAccountDirect",E,"Kulupu mainnet, direct checksum, standard account (*25519).",16,N],[13,"EdgewareAccountDirect",E,"Edgeware mainnet, direct checksum, standard account…",16,N],[13,"Custom",E,"Use a manually provided numeric value.",16,N],[5,"set_default_ss58_version",E,"Set the default \"version\" (actually, this is a bit of a…",N,[[[R[3726]]]]],[0,"key_types",E,R[4191],N,N],[17,"BABE","sp_core::crypto::key_types",R[4192],N,N],[17,"GRANDPA",E,R[4193],N,N],[17,"ACCOUNT",E,R[4194],N,N],[17,"AURA",E,R[4195],N,N],[17,"IM_ONLINE",E,R[4196],N,N],[17,R[4197],E,R[4198],N,N],[17,"DUMMY",E,R[4199],N,N],[17,"DEV_PHRASE",R[3723],"The root phrase for our publicly known keys.",N,N],[17,"DEV_ADDRESS",E,"The address of the associated root phrase for our publicly…",N,N],[17,"JUNCTION_ID_LEN",E,"The length of the junction identifier. Note that this is…",N,N],[8,R[3856],E,"Similar to `From`, except that the onus is on the part of…",N,N],[10,R[3782],E,"Convert from an instance of `T` to Self. This is not…",17,[[[T]],["self"]]],[8,R[3857],E,"The counterpart to `UncheckedFrom`.",N,N],[10,R[3774],E,"The counterpart to `unchecked_from`.",18,[[],[T]]],[8,"Ss58Codec",E,"Key that can be encoded to/from SS58.",N,N],[11,"from_ss58check",E,R[3725],19,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,"from_ss58check_with_version",E,R[3725],19,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[3733],E,R[3728],19,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,"to_ss58check_with_version",E,R[3727],19,[[[R[3726]],["self"]],["string"]]],[11,"to_ss58check",E,R[3727],19,[[["self"]],["string"]]],[11,R[3783],E,R[3728],19,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[8,"Derive",E,"Derivable key trait.",N,N],[11,"derive",E,R[3731],20,[[["self"],[R[3807]]],["option"]]],[8,"Public",E,"Trait suitable for typical cryptographic PKI key public…",N,N],[10,R[768],E,"A new instance from the given slice.",21,[[],["self"]]],[11,R[3794],E,"Return a `Vec<u8>` filled with raw data.",21,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[589],E,R[3742],21,[[["self"]]]],[8,"Pair",E,"Trait suitable for typical cryptographic PKI key pair type.",N,N],[16,"Public",E,"The type which is used to encode a public key.",22,N],[16,"Seed",E,"The type used to (minimally) encode the data required to…",22,N],[16,R[2884],E,"The type used to represent a signature. Can be created…",22,N],[16,R[3741],E,"Error returned from the `derive` function.",22,N],[11,R[1622],E,"Generate new secure (random) key pair.",22,[[]]],[10,R[3796],E,R[3799],22,[[["option",["str"]],["str"]]]],[10,R[3729],E,"Returns the KeyPair from the English BIP39 seed `phrase`,…",22,[[["str"],["option",["str"]]],[[R[3],[R[3730]]],[R[3730]]]]],[10,"derive",E,R[3731],22,[[["option"],[R[3807]],["self"]],[R[3]]]],[10,R[31],E,"Generate new key pair from the provided `seed`.",22,[[],["self"]]],[10,R[3797],E,R[3800],22,[[],[[R[3],[R[3730]]],[R[3730]]]]],[10,"sign",E,R[3803],22,[[["self"]]]],[10,"verify",E,R[3732],22,[[["asref"]],["bool"]]],[10,R[3798],E,R[3732],22,[[["asref"]],["bool"]]],[10,"public",E,R[3802],22,[[["self"]]]],[11,"from_string_with_seed",E,"Interprets the string `s` in order to generate a key Pair.…",22,[[["str"],["option",["str"]]],[[R[3730]],[R[3],[R[3730]]]]]],[11,R[3733],E,"Interprets the string `s` in order to generate a key pair.",22,[[["str"],["option",["str"]]],[[R[3],[R[3730]]],[R[3730]]]]],[10,R[3794],E,R[3804],22,[[["self"]],[["vec",["u8"]],["u8"]]]],[8,R[3858],E,"One type is wrapped by another.",N,N],[10,R[3779],E,R[3776],23,[[["outer"]],["self"]]],[10,R[3780],E,R[3777],23,[[["outer"]],["self"]]],[8,"Wraps",E,"Opposite of `IsWrappedBy` - denotes a type which is a…",N,N],[16,"Inner",E,"The inner type it is wrapping.",24,N],[8,R[4216],E,"Type which has a particular kind of crypto associated with…",N,N],[16,"Pair",E,R[4217],25,N],[11,"soften",E,"Consume self to return a soft derive junction with the…",14,[[],["self"]]],[11,"harden",E,"Consume self to return a hard derive junction with the…",14,[[],["self"]]],[11,"soft",E,"Create a new soft (vanilla) DeriveJunction from a given,…",14,[[["encode"]],["self"]]],[11,"hard",E,"Create a new hard (hardened) DeriveJunction from a given,…",14,[[["encode"]],["self"]]],[11,"unwrap_inner",E,"Consume self to return the chain code.",14,[[]]],[11,"inner",E,"Get a reference to the inner junction id.",14,[[["self"]]]],[11,"is_soft",E,"Return `true` if the junction is soft.",14,[[["self"]],["bool"]]],[11,"is_hard",E,"Return `true` if the junction is hard.",14,[[["self"]],["bool"]]],[11,"all",E,"All known address formats.",16,[[]]],[11,"is_custom",E,"Whether the address is custom.",16,[[["self"]],["bool"]]],[0,"u32_trait","sp_core","An u32 trait with \"values\" as impl'd types.",N,N],[3,"_0",R[3784],"Type representing the value 0 for the `Value` trait.",N,N],[3,"_1",E,"Type representing the value 1 for the `Value` trait.",N,N],[3,"_2",E,"Type representing the value 2 for the `Value` trait.",N,N],[3,"_3",E,"Type representing the value 3 for the `Value` trait.",N,N],[3,"_4",E,"Type representing the value 4 for the `Value` trait.",N,N],[3,"_5",E,"Type representing the value 5 for the `Value` trait.",N,N],[3,"_6",E,"Type representing the value 6 for the `Value` trait.",N,N],[3,"_7",E,"Type representing the value 7 for the `Value` trait.",N,N],[3,"_8",E,"Type representing the value 8 for the `Value` trait.",N,N],[3,"_9",E,"Type representing the value 9 for the `Value` trait.",N,N],[3,"_10",E,"Type representing the value 10 for the `Value` trait.",N,N],[3,"_11",E,"Type representing the value 11 for the `Value` trait.",N,N],[3,"_12",E,"Type representing the value 12 for the `Value` trait.",N,N],[3,"_13",E,"Type representing the value 13 for the `Value` trait.",N,N],[3,"_14",E,"Type representing the value 14 for the `Value` trait.",N,N],[3,"_15",E,"Type representing the value 15 for the `Value` trait.",N,N],[3,"_16",E,"Type representing the value 16 for the `Value` trait.",N,N],[3,"_17",E,"Type representing the value 17 for the `Value` trait.",N,N],[3,"_18",E,"Type representing the value 18 for the `Value` trait.",N,N],[3,"_19",E,"Type representing the value 19 for the `Value` trait.",N,N],[3,"_20",E,"Type representing the value 20 for the `Value` trait.",N,N],[3,"_21",E,"Type representing the value 21 for the `Value` trait.",N,N],[3,"_22",E,"Type representing the value 22 for the `Value` trait.",N,N],[3,"_23",E,"Type representing the value 23 for the `Value` trait.",N,N],[3,"_24",E,"Type representing the value 24 for the `Value` trait.",N,N],[3,"_25",E,"Type representing the value 25 for the `Value` trait.",N,N],[3,"_26",E,"Type representing the value 26 for the `Value` trait.",N,N],[3,"_27",E,"Type representing the value 27 for the `Value` trait.",N,N],[3,"_28",E,"Type representing the value 28 for the `Value` trait.",N,N],[3,"_29",E,"Type representing the value 29 for the `Value` trait.",N,N],[3,"_30",E,"Type representing the value 30 for the `Value` trait.",N,N],[3,"_31",E,"Type representing the value 31 for the `Value` trait.",N,N],[3,"_32",E,"Type representing the value 32 for the `Value` trait.",N,N],[3,"_33",E,"Type representing the value 33 for the `Value` trait.",N,N],[3,"_34",E,"Type representing the value 34 for the `Value` trait.",N,N],[3,"_35",E,"Type representing the value 35 for the `Value` trait.",N,N],[3,"_36",E,"Type representing the value 36 for the `Value` trait.",N,N],[3,"_37",E,"Type representing the value 37 for the `Value` trait.",N,N],[3,"_38",E,"Type representing the value 38 for the `Value` trait.",N,N],[3,"_39",E,"Type representing the value 39 for the `Value` trait.",N,N],[3,"_40",E,"Type representing the value 40 for the `Value` trait.",N,N],[3,"_41",E,"Type representing the value 41 for the `Value` trait.",N,N],[3,"_42",E,"Type representing the value 42 for the `Value` trait.",N,N],[3,"_43",E,"Type representing the value 43 for the `Value` trait.",N,N],[3,"_44",E,"Type representing the value 44 for the `Value` trait.",N,N],[3,"_45",E,"Type representing the value 45 for the `Value` trait.",N,N],[3,"_46",E,"Type representing the value 46 for the `Value` trait.",N,N],[3,"_47",E,"Type representing the value 47 for the `Value` trait.",N,N],[3,"_48",E,"Type representing the value 48 for the `Value` trait.",N,N],[3,"_49",E,"Type representing the value 49 for the `Value` trait.",N,N],[3,"_50",E,"Type representing the value 50 for the `Value` trait.",N,N],[3,"_51",E,"Type representing the value 51 for the `Value` trait.",N,N],[3,"_52",E,"Type representing the value 52 for the `Value` trait.",N,N],[3,"_53",E,"Type representing the value 53 for the `Value` trait.",N,N],[3,"_54",E,"Type representing the value 54 for the `Value` trait.",N,N],[3,"_55",E,"Type representing the value 55 for the `Value` trait.",N,N],[3,"_56",E,"Type representing the value 56 for the `Value` trait.",N,N],[3,"_57",E,"Type representing the value 57 for the `Value` trait.",N,N],[3,"_58",E,"Type representing the value 58 for the `Value` trait.",N,N],[3,"_59",E,"Type representing the value 59 for the `Value` trait.",N,N],[3,"_60",E,"Type representing the value 60 for the `Value` trait.",N,N],[3,"_61",E,"Type representing the value 61 for the `Value` trait.",N,N],[3,"_62",E,"Type representing the value 62 for the `Value` trait.",N,N],[3,"_63",E,"Type representing the value 63 for the `Value` trait.",N,N],[3,"_64",E,"Type representing the value 64 for the `Value` trait.",N,N],[3,"_65",E,"Type representing the value 65 for the `Value` trait.",N,N],[3,"_66",E,"Type representing the value 66 for the `Value` trait.",N,N],[3,"_67",E,"Type representing the value 67 for the `Value` trait.",N,N],[3,"_68",E,"Type representing the value 68 for the `Value` trait.",N,N],[3,"_69",E,"Type representing the value 69 for the `Value` trait.",N,N],[3,"_70",E,"Type representing the value 70 for the `Value` trait.",N,N],[3,"_71",E,"Type representing the value 71 for the `Value` trait.",N,N],[3,"_72",E,"Type representing the value 72 for the `Value` trait.",N,N],[3,"_73",E,"Type representing the value 73 for the `Value` trait.",N,N],[3,"_74",E,"Type representing the value 74 for the `Value` trait.",N,N],[3,"_75",E,"Type representing the value 75 for the `Value` trait.",N,N],[3,"_76",E,"Type representing the value 76 for the `Value` trait.",N,N],[3,"_77",E,"Type representing the value 77 for the `Value` trait.",N,N],[3,"_78",E,"Type representing the value 78 for the `Value` trait.",N,N],[3,"_79",E,"Type representing the value 79 for the `Value` trait.",N,N],[3,"_80",E,"Type representing the value 80 for the `Value` trait.",N,N],[3,"_81",E,"Type representing the value 81 for the `Value` trait.",N,N],[3,"_82",E,"Type representing the value 82 for the `Value` trait.",N,N],[3,"_83",E,"Type representing the value 83 for the `Value` trait.",N,N],[3,"_84",E,"Type representing the value 84 for the `Value` trait.",N,N],[3,"_85",E,"Type representing the value 85 for the `Value` trait.",N,N],[3,"_86",E,"Type representing the value 86 for the `Value` trait.",N,N],[3,"_87",E,"Type representing the value 87 for the `Value` trait.",N,N],[3,"_88",E,"Type representing the value 88 for the `Value` trait.",N,N],[3,"_89",E,"Type representing the value 89 for the `Value` trait.",N,N],[3,"_90",E,"Type representing the value 90 for the `Value` trait.",N,N],[3,"_91",E,"Type representing the value 91 for the `Value` trait.",N,N],[3,"_92",E,"Type representing the value 92 for the `Value` trait.",N,N],[3,"_93",E,"Type representing the value 93 for the `Value` trait.",N,N],[3,"_94",E,"Type representing the value 94 for the `Value` trait.",N,N],[3,"_95",E,"Type representing the value 95 for the `Value` trait.",N,N],[3,"_96",E,"Type representing the value 96 for the `Value` trait.",N,N],[3,"_97",E,"Type representing the value 97 for the `Value` trait.",N,N],[3,"_98",E,"Type representing the value 98 for the `Value` trait.",N,N],[3,"_99",E,"Type representing the value 99 for the `Value` trait.",N,N],[3,"_100",E,"Type representing the value 100 for the `Value` trait.",N,N],[3,"_112",E,"Type representing the value 112 for the `Value` trait.",N,N],[3,"_128",E,"Type representing the value 128 for the `Value` trait.",N,N],[3,"_160",E,"Type representing the value 160 for the `Value` trait.",N,N],[3,"_192",E,"Type representing the value 192 for the `Value` trait.",N,N],[3,"_224",E,"Type representing the value 224 for the `Value` trait.",N,N],[3,"_256",E,"Type representing the value 256 for the `Value` trait.",N,N],[3,"_384",E,"Type representing the value 384 for the `Value` trait.",N,N],[3,"_512",E,"Type representing the value 512 for the `Value` trait.",N,N],[8,"Value",E,"A u32 value, wrapped in a trait because we don't yet have…",N,N],[18,"VALUE",E,"The actual value represented by the impl'ing type.",26,N],[0,"ed25519","sp_core","Simple Ed25519 API.",N,N],[3,"Public",R[3785],R[4200],N,N],[12,"0",E,E,27,N],[3,"Pair",E,R[3752],N,N],[3,R[2884],E,R[4201],N,N],[12,"0",E,E,28,N],[3,R[3743],E,R[4202],N,N],[12,"signer",E,R[3744],29,N],[12,R[188],E,R[3745],29,N],[4,R[3734],E,R[3735],N,N],[13,R[4210],E,R[3736],30,N],[13,R[4211],E,R[3737],30,N],[13,R[3738],E,R[3739],30,N],[13,R[3720],E,R[3740],30,N],[4,R[3741],E,R[3753],N,N],[13,R[3754],E,R[3755],31,N],[11,R[582],E,R[3746],28,[[],[R[188]]]],[11,R[768],E,R[3747],28,[[],["self"]]],[11,R[4207],E,R[3748],28,[[["h512"]],[R[188]]]],[11,R[582],E,R[3749],27,[[],["self"]]],[11,R[4208],E,R[3750],27,[[["h256"]],["self"]]],[11,R[3751],E,R[3742],27,[[["self"]]]],[11,"seed",E,R[3757],32,[[["self"]]]],[11,R[3758],E,R[3759],32,[[["str"],["option",["str"]]],["pair"]]],[0,"sr25519","sp_core",R[4261],N,N],[3,"Public",R[3786],R[4203],N,N],[12,"0",E,E,33,N],[3,"Pair",E,R[4204],N,N],[3,R[2884],E,R[4205],N,N],[12,"0",E,E,34,N],[3,R[3743],E,R[4206],N,N],[12,"signer",E,R[3744],35,N],[12,R[188],E,R[3745],35,N],[11,R[582],E,R[3746],34,[[],[R[188]]]],[11,R[768],E,R[3747],34,[[],["self"]]],[11,R[4207],E,R[3748],34,[[["h512"]],[R[188]]]],[11,R[582],E,R[3749],33,[[],["self"]]],[11,R[4208],E,R[3750],33,[[["h256"]],["self"]]],[11,R[3751],E,R[3742],33,[[["self"]]]],[11,R[1662],E,R[4209],36,[[["option",["str"]],["str"]]]],[0,"ecdsa","sp_core","Simple ECDSA API.",N,N],[3,R[2884],R[3787],"A signature (a 512-bit value, plus 8 bits for recovery ID).",N,N],[3,"Pair",E,R[3752],N,N],[4,"Public",E,"The ECDSA public key.",N,N],[13,"Full",E,"A full raw ECDSA public key.",37,N],[13,"Compressed",E,"A compressed ECDSA public key.",37,N],[4,R[3734],E,R[3735],N,N],[13,R[4210],E,R[3736],38,N],[13,R[4211],E,R[3737],38,N],[13,R[3738],E,R[3739],38,N],[13,R[3720],E,R[3740],38,N],[4,R[3741],E,R[3753],N,N],[13,R[3754],E,R[3755],39,N],[11,R[582],E,R[3746],37,[[],["self"]]],[11,"from_full",E,R[3756],37,[[],["self"]]],[11,R[3296],E,"Return in compressed format.",37,[[["self"]],[R[3]]]],[11,R[3298],E,"Convert `Self` into a compressed public key.",37,[[],[R[3]]]],[11,R[582],E,R[3756],40,[[],[R[188]]]],[11,R[768],E,"A new instance from the given slice that should be 65…",40,[[],["self"]]],[11,"recover",E,"Recover the public key from this signature and a message.",40,[[["asref"],["self"]],[["option",["public"]],["public"]]]],[11,"seed",E,R[3757],41,[[["self"]]]],[11,R[3758],E,R[3759],41,[[["str"],["option",["str"]]],["pair"]]],[0,"hash","sp_core","A fixed hash type.",N,N],[3,"H160",R[3775],R[3717],N,N],[12,"0",E,E,0,N],[3,"H256",E,R[3718],N,N],[12,"0",E,E,1,N],[3,"H512",E,R[3719],N,N],[12,"0",E,E,2,N],[5,"convert_hash",E,"Hash conversion. Used to convert between unbound…",N,[[["h2"]],[[R[90]],["asmut"]]]],[0,"offchain","sp_core","Offchain workers types",N,N],[3,R[3859],R[3761],"Opaque type for offchain http requests.",N,N],[12,"0",E,E,42,N],[3,R[3860],E,"A blob to hold information about the local node's network…",N,N],[12,"peer_id",E,"PeerId of the local node.",43,N],[12,"external_addresses",E,"List of addresses the node knows it can be reached as.",43,N],[3,R[3861],E,"Simple blob to hold a `PeerId` without committing to its…",N,N],[12,"0",E,E,44,N],[3,R[3862],E,"Simple blob to hold a `Multiaddr` without committing to…",N,N],[12,"0",E,E,45,N],[3,"Timestamp",E,"Opaque timestamp type",N,N],[3,"Duration",E,"Duration type",N,N],[3,R[3872],E,"A set of capabilities",N,N],[3,R[3873],E,"An `OffchainExternalities` implementation with limited…",N,N],[3,R[3863],E,"The offchain extension that will be registered at the…",N,N],[12,"0",E,E,46,N],[3,R[3864],E,"An externalities extension to submit transactions to the…",N,N],[12,"0",E,E,47,N],[4,R[3865],E,"A type of supported crypto.",N,N],[13,"PERSISTENT",E,"Persistent storage is non-revertible and not fork-aware.…",48,N],[13,"LOCAL",E,"Local storage is revertible and fork-aware. It means that…",48,N],[4,"HttpError",E,"An error enum returned by some http methods.",N,N],[13,R[3760],E,"The requested action couldn't been completed within a…",49,N],[13,"IoError",E,"There was an IO Error while processing the request.",49,N],[13,"Invalid",E,"The ID of the request is invalid in this context.",49,N],[4,R[3866],E,"Status of the HTTP request",N,N],[13,R[3760],E,"Deadline was reached while we waited for this request to…",50,N],[13,"IoError",E,"An error has occured during the request, for example a…",50,N],[13,"Invalid",E,"The passed ID is invalid in this context.",50,N],[13,"Finished",E,"The request has finished with given status code.",50,N],[4,"Capability",E,"Execution context extra capabilities.",N,N],[13,R[3769],E,"Access to transaction pool.",51,N],[13,"Http",E,"External http calls.",51,N],[13,"Keystore",E,"Keystore access.",51,N],[13,R[4624],E,"Randomness source.",51,N],[13,"NetworkState",E,"Access to opaque network state.",51,N],[13,"OffchainWorkerDbRead",E,"Access to offchain worker DB (read only).",51,N],[13,"OffchainWorkerDbWrite",E,"Access to offchain worker DB (writes).",51,N],[0,"storage",E,"In-memory implementation of offchain workers database.",N,N],[3,R[3884],R[3788],"In-memory storage for offchain workers.",N,N],[0,"testing",R[3761],"Utilities for offchain calls testing.",N,N],[3,R[3867],R[3789],"Pending request.",N,N],[12,"method",E,"HTTP method",52,N],[12,"uri",E,"URI",52,N],[12,"meta",E,"Encoded Metadata",52,N],[12,"headers",E,"Request headers",52,N],[12,"body",E,"Request body",52,N],[12,"sent",E,"Has the request been sent already.",52,N],[12,"response",E,"Response body",52,N],[12,"read",E,"Number of bytes already read from the response body.",52,N],[12,"response_headers",E,"Response headers",52,N],[3,R[3868],E,"Internal state of the externalities.",N,N],[12,"requests",E,"A list of pending requests.",53,N],[12,"persistent_storage",E,"Persistent local storage",53,N],[12,"local_storage",E,"Local storage",53,N],[3,R[3869],E,"Implementation of offchain externalities used for tests.",N,N],[12,"0",E,E,54,N],[3,"PoolState",E,"The internal state of the fake transaction pool.",N,N],[12,"transactions",E,"A vector of transactions submitted from the runtime.",55,N],[3,R[3870],E,"Implementation of transaction pool used for test.",N,N],[11,"fulfill_pending_request",E,"Asserts that pending request has been submitted and fills…",53,[[[R[3762]],["u16"],["self"]]]],[11,"expect_request",E,"Add expected HTTP request.",53,[[["u16"],["self"],[R[3762]]]]],[11,"new",E,"Create new `TestOffchainExt` and a reference to the…",54,[[]]],[11,"new",E,"Create new `TestTransactionPoolExt` and a reference to the…",56,[[]]],[8,R[3871],R[3761],"Offchain workers local storage.",N,N],[10,"set",E,"Persist a value in storage under given key and prefix.",57,[[["self"]]]],[10,"get",E,"Retrieve a value from storage under given key and prefix.",57,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,R[3808],E,"Replace the value in storage if given old_value matches…",57,[[["option"],["self"]],["bool"]]],[8,R[3490],E,"An extended externalities for offchain workers.",N,N],[10,R[3809],E,R[4146],58,[[["self"]],["bool"]]],[10,R[3810],E,R[4147],58,[[["self"]],[[R[3763]],[R[3],[R[3763]]]]]],[10,R[3766],E,R[4148],58,[[["self"]],[R[3766]]]],[10,R[3811],E,R[4149],58,[[["self"],[R[3766]]]]],[10,R[3812],E,R[4150],58,[[["self"]]]],[10,R[3813],E,R[4151],58,[[[R[3764]],["self"]]]],[10,R[3814],E,R[4152],58,[[[R[3764]],["option"],["self"]],["bool"]]],[10,R[3815],E,R[4153],58,[[["self"],[R[3764]]],[["option",["vec"]],["vec",["u8"]]]]],[10,R[3816],E,R[4154],58,[[["str"],["self"]],[[R[3765]],[R[3],[R[3765]]]]]],[10,R[3817],E,R[4155],58,[[["str"],["self"],[R[3765]]],[R[3]]]],[10,R[3818],E,R[4156],58,[[["option",[R[3766]]],["self"],[R[3765]],[R[3766]]],[[R[3],[R[3768]]],[R[3768]]]]],[10,R[3820],E,R[4157],58,[[["option",[R[3766]]],["self"],[R[3766]]],[[R[3767]],["vec",[R[3767]]]]]],[10,R[3822],E,R[4158],58,[[["self"],[R[3765]]],["vec"]]],[10,R[3823],E,R[4159],58,[[["option",[R[3766]]],["self"],[R[3765]],[R[3766]]],[[R[3],["usize",R[3768]]],["usize"],[R[3768]]]]],[8,R[3769],E,"Abstraction over transaction pool.",N,N],[10,R[3824],E,"Submit transaction.",59,[[["self"],["vec",["u8"]],["u8"]],[R[3]]]],[11,"new",E,"Create new `OpaquePeerId`",44,[[["vec",["u8"]],["u8"]],["self"]]],[11,"new",E,"Create new `OpaqueMultiaddr`",45,[[["vec",["u8"]],["u8"]],["self"]]],[11,"from_millis",E,"Create new duration representing given number of…",60,[[["u64"]],["self"]]],[11,"millis",E,"Returns number of milliseconds this Duration represents.",60,[[["self"]],["u64"]]],[11,"from_unix_millis",E,"Creates new `Timestamp` given unix timestamp in miliseconds.",61,[[["u64"]],["self"]]],[11,"add",E,"Increase the timestamp by given `Duration`.",61,[[[R[3770]],["self"]],[R[3766]]]],[11,"sub",E,"Decrease the timestamp by given `Duration`",61,[[[R[3770]],["self"]],[R[3766]]]],[11,"diff",E,"Returns a saturated difference (Duration) between two…",61,[[["self"]],[R[3770]]]],[11,"unix_millis",E,"Return number of milliseconds since UNIX epoch.",61,[[["self"]],["u64"]]],[11,"none",E,"Return an object representing an empty set of capabilities.",62,[[],["self"]]],[11,"all",E,"Return an object representing all capabilities enabled.",62,[[],["self"]]],[11,"rich_offchain_call",E,"Return capabilities for rich offchain calls.",62,[[],["self"]]],[11,"has",E,"Check if particular capability is enabled.",62,[[[R[3842]],["self"]],["bool"]]],[11,"has_all",E,"Check if this capability object represents all capabilities.",62,[[["self"]],["bool"]]],[11,"new",E,"Create new externalities limited to given `capabilities`.",63,[[[T],[R[3772]]],["self"]]],[11,"new",E,R[3484],46,[[[R[3886]]],["self"]]],[11,"new",E,"Create a new instance of `TransactionPoolExt`.",47,[[["transactionpool"],["send"]],["self"]]],[0,"sandbox","sp_core","Definition of a sandbox environment.",N,N],[3,R[3939],R[3790],"Error error that can be returned from host function.",N,N],[3,"Entry",E,"An entry in a environment definition table.",N,N],[12,"module_name",E,"Module name of which corresponding entity being defined.",64,N],[12,"field_name",E,"Field name in which corresponding entity being defined.",64,N],[12,"entity",E,"External entity being defined.",64,N],[3,R[3874],E,"Definition of runtime that could be used by sandboxed code.",N,N],[12,R[153],E,"Vector of all entries in the environment definition.",65,N],[4,"TypedValue",E,"Representation of a typed wasm value.",N,N],[13,"I32",E,R[3937],66,N],[13,"I64",E,R[3938],66,N],[13,"F32",E,"Value of 32-bit IEEE 754-2008 floating point number…",66,N],[13,"F64",E,"Value of 64-bit IEEE 754-2008 floating point number…",66,N],[4,R[3875],E,"Typed value that can be returned from a function.",N,N],[13,"Unit",E,"For returning nothing.",67,N],[13,"Value",E,"For returning some concrete value.",67,N],[4,R[3876],E,"Describes an entity to define or import into the…",N,N],[13,R[122],E,"Function that is specified by an index in a default table…",68,N],[13,"Memory",E,"Linear memory that is specified by some identifier…",68,N],[17,"MEM_UNLIMITED",E,"Constant for specifying no limit when creating a sandboxed…",N,N],[17,"ERR_OK",E,"No error happened.",N,N],[17,"ERR_MODULE",E,"Validation or instantiation error occurred when creating…",N,N],[17,"ERR_OUT_OF_BOUNDS",E,"Out-of-bounds access attempted with memory or table.",N,N],[17,"ERR_EXECUTION",E,"Execution error occurred (typically trap).",N,N],[11,"as_i32",E,"Returns `Some` if this value of type `I32`.",66,[[["self"]],[["option",["i32"]],["i32"]]]],[18,"ENCODED_MAX_SIZE",E,"Maximum number of bytes `ReturnValue` might occupy when…",67,N],[0,"uint","sp_core","An unsigned fixed-size integer.",N,N],[3,"U256",R[3778],R[3616],N,N],[12,"0",E,E,3,N],[11,"new","sp_core","Create new configuration given digest interval and levels.",5,[[["u32"]],["self"]]],[11,"is_digest_build_enabled",E,"Is digest build enabled?",5,[[["self"]],["bool"]]],[11,"is_digest_build_required_at_block",E,"Do we need to build digest at given block?",5,[[["number"],["self"]],["bool"]]],[11,"max_digest_interval",E,"Returns max digest interval. One if digests are not…",5,[[["self"]],["u32"]]],[11,"prev_max_level_digest_block",E,"Returns max level digest block number that has been…",5,[[["number"],["self"]],["option"]]],[11,"next_max_level_digest_range",E,"Returns max level digest blocks range (inclusive) which…",5,[[["number"],["self"]],["option"]]],[11,"digest_level_at_block",E,"Returns Some if digest must be built at given block…",5,[[["number"],["self"]],["option"]]],[0,"traits",E,"Shareable Substrate traits.",N,N],[8,R[3490],R[3791],R[3887],N,N],[10,"storage",E,R[3888],69,[[["self"]],[["vec",["u8"]],["option",["vec"]]]]],[10,R[3889],E,R[3890],69,[[["self"]],[["vec",["u8"]],["option",["vec"]]]]],[10,R[3891],E,R[3892],69,[[[R[3487]],["self"],[R[3486]]],[["vec",["u8"]],["option",["vec"]]]]],[10,R[3893],E,R[3894],69,[[["self"]],[["vec",["u8"]],["option",["vec"]]]]],[10,R[3895],E,R[3896],69,[[[R[3487]],["self"],[R[3486]]],[["vec",["u8"]],["option",["vec"]]]]],[10,R[3897],E,R[3898],69,[[["self"]],[["vec",["u8"]],["option",["vec"]]]]],[10,R[3899],E,R[3900],69,[[[R[3487]],["self"],[R[3486]]],[["vec",["u8"]],["option",["vec"]]]]],[10,R[3901],E,R[3902],69,[[[R[3487]],["self"],[R[3486]]],[["vec",["u8"]],["option",["vec"]]]]],[11,R[3903],E,R[3904],69,[[["self"],["vec",["u8"]],["u8"]]]],[11,R[3905],E,R[3906],69,[[["u8"],[R[3487]],["self"],[R[3486]],["vec",["u8"]]]]],[11,R[3907],E,R[3908],69,[[["self"]]]],[11,R[3909],E,R[3910],69,[[[R[3487]],["self"],[R[3486]]]]],[11,R[3911],E,R[3912],69,[[["self"]],["bool"]]],[11,R[3913],E,R[3914],69,[[[R[3487]],["self"],[R[3486]]],["bool"]]],[10,R[3915],E,R[3488],69,[[["self"]],[["vec",["u8"]],["option",["vec"]]]]],[10,R[3916],E,R[3488],69,[[[R[3487]],["self"],[R[3486]]],[["vec",["u8"]],["option",["vec"]]]]],[10,R[3917],E,R[3918],69,[[["self"],[R[3486]],[R[3487]]]]],[10,R[3919],E,R[3920],69,[[["self"]]]],[10,R[3921],E,R[3922],69,[[[R[3487]],["self"],[R[3486]]]]],[10,R[3923],E,R[3924],69,[[["option",["vec"]],["self"],["vec",["u8"]],["u8"]]]],[10,R[3925],E,R[3926],69,[[["u8"],[R[3487]],["option",["vec"]],["self"],[R[3486]],["vec",["u8"]]]]],[10,"chain_id",E,R[3927],69,[[["self"]],["u64"]]],[10,R[3928],E,R[3929],69,[[["self"]],[["vec",["u8"]],["u8"]]]],[10,R[3930],E,R[3931],69,[[["self"],[R[3486]]],[["vec",["u8"]],["u8"]]]],[10,R[3932],E,R[3933],69,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[8,R[3491],E,R[3934],N,N],[10,R[4094],E,R[3935],70,[[["self"]],[[T],["option"]]]],[3,R[3877],E,"The keystore extension to register/retrieve from the…",N,N],[12,"0",E,E,71,N],[6,"BareCryptoStorePtr",E,"A pointer to the key store.",N,N],[8,R[3878],E,"Something that generates, stores and provides access to…",N,N],[10,R[3825],E,"Returns all sr25519 public keys for the given key type.",72,[[[R[3771]],["self"]],[["public"],["vec",["public"]]]]],[10,R[3826],E,"Generate a new sr25519 key pair for the given key type and…",72,[[["option",["str"]],[R[3771]],["str"],["self"]],[["public"],[R[3],["public","string"]],["string"]]]],[10,R[3827],E,"Returns the sr25519 key pair for the given key type and…",72,[[[R[3771]],["self"],["public"]],[["option",["pair"]],["pair"]]]],[10,R[3828],E,"Returns all ed25519 public keys for the given key type.",72,[[[R[3771]],["self"]],[["vec",["public"]],["public"]]]],[10,R[3829],E,"Generate a new ed25519 key pair for the given key type and…",72,[[["option",["str"]],[R[3771]],["str"],["self"]],[[R[3],["public","string"]],["public"],["string"]]]],[10,R[3830],E,"Returns the ed25519 key pair for the given key type and…",72,[[["public"],[R[3771]],["self"]],[["option",["pair"]],["pair"]]]],[10,R[3831],E,"Insert a new key. This doesn't require any known of the…",72,[[["str"],[R[3771]],["self"]],[R[3]]]],[10,"password",E,"Get the password for this store.",72,[[["self"]],[["option",["str"]],["str"]]]],[8,R[3879],E,"Code execution engine.",N,N],[16,"Error",E,"Externalities error type.",73,N],[10,"call",E,"Call a given method in the runtime. Returns a tuple of the…",73,[[["option"],["unwindsafe"],["e"],["bool"],["str"],["fnonce"],["self"]]]],[0,"testing","sp_core","Types that should only be used for testing!",N,N],[3,"KeyStore",R[3792],"A keystore implementation usable in tests.",N,N],[17,"ED25519",E,"Key type for generic Ed25519 key.",N,N],[17,"SR25519",E,"Key type for generic Sr 25519 key.",N,N],[11,"new",E,"Creates a new instance of `Self`.",74,[[],["barecryptostoreptr"]]],[8,"TypeId","sp_core","Provide a simple 4 byte identifier for a type.",N,N],[18,"TYPE_ID",E,R[4214],75,N],[11,R[3772],E,"Returns the capabilities of particular context.",7,[[["self"]],[R[3772]]]],[11,"new",E,"Creates a new instance with the given metadata blob.",76,[[["vec",["u8"]],["u8"]],["self"]]],[11,"as_encoded",E,R[3773],8,[[["self"]],["cow"]]],[11,"into_encoded",E,R[3773],8,[[],[["vec",["u8"]],["u8"]]]],[14,"map",E,"Initialize a key-value collection from array.",N,N],[14,"wasm_export_functions",E,"Macro for exporting functions from wasm in with the…",N,N],[11,R[3774],R[3775],E,0,[[],[T]]],[11,R[3779],E,R[3776],0,[[["outer"]],[T]]],[11,R[3780],E,R[3777],0,[[["outer"]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[292],E,E,0,[[["self"]],["usize"]]],[11,R[3525],E,E,0,[[["self"],["f"]],["r"]]],[11,"encode",E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,0,[[["w"],["self"]]]],[11,"decode",E,E,0,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,0,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[3708],E,E,0,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,0,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[2628],E,E,0,[[]]],[11,R[3774],E,E,1,[[],[T]]],[11,R[3779],E,R[3776],1,[[["outer"]],[T]]],[11,R[3780],E,R[3777],1,[[["outer"]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[["self"]],["string"]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[292],E,E,1,[[["self"]],["usize"]]],[11,R[3525],E,E,1,[[["self"],["f"]],["r"]]],[11,"encode",E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,1,[[["w"],["self"]]]],[11,"decode",E,E,1,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,1,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[3708],E,E,1,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,1,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[2628],E,E,1,[[]]],[11,R[3774],E,E,2,[[],[T]]],[11,R[3779],E,R[3776],2,[[["outer"]],[T]]],[11,R[3780],E,R[3777],2,[[["outer"]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[78],E,E,2,[[["self"]],["string"]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[292],E,E,2,[[["self"]],["usize"]]],[11,R[3525],E,E,2,[[["self"],["f"]],["r"]]],[11,"encode",E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,2,[[["w"],["self"]]]],[11,"decode",E,E,2,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,2,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[3708],E,E,2,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,2,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[2628],E,E,2,[[]]],[11,R[3774],R[3778],E,3,[[],[T]]],[11,R[3779],E,R[3776],3,[[["outer"]],[T]]],[11,R[3780],E,R[3777],3,[[["outer"]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[78],E,E,3,[[["self"]],["string"]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[292],E,E,3,[[["self"]],["usize"]]],[11,R[3525],E,E,3,[[["self"],["f"]],["r"]]],[11,"encode",E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,3,[[["w"],["self"]]]],[11,"decode",E,E,3,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,3,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[2628],E,E,3,[[]]],[11,R[3774],"sp_core",E,5,[[],[T]]],[11,R[3779],E,R[3776],5,[[["outer"]],[T]]],[11,R[3780],E,R[3777],5,[[["outer"]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[292],E,E,5,[[["self"]],["usize"]]],[11,R[3525],E,E,5,[[["self"],["f"]],["r"]]],[11,"encode",E,E,5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,5,[[["w"],["self"]]]],[11,"decode",E,E,5,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,5,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"clear",E,E,5,[[["self"]]]],[11,R[2628],E,E,5,[[]]],[11,R[3774],E,E,77,[[],[T]]],[11,R[3779],E,R[3776],77,[[["outer"]],[T]]],[11,R[3780],E,R[3777],77,[[["outer"]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[20],E,E,77,[[[U]],[R[3]]]],[11,R[21],E,E,77,[[],[R[3]]]],[11,R[45],E,E,77,[[["self"]],[T]]],[11,R[22],E,E,77,[[["self"]],[T]]],[11,R[26],E,E,77,[[["self"]],[R[46]]]],[11,"vzip",E,E,77,[[],["v"]]],[11,R[3774],E,E,6,[[],[T]]],[11,R[3779],E,R[3776],6,[[["outer"]],[T]]],[11,R[3780],E,R[3777],6,[[["outer"]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[3774],E,E,76,[[],[T]]],[11,R[3779],E,R[3776],76,[[["outer"]],[T]]],[11,R[3780],E,R[3777],76,[[["outer"]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[20],E,E,76,[[[U]],[R[3]]]],[11,R[21],E,E,76,[[],[R[3]]]],[11,R[45],E,E,76,[[["self"]],[T]]],[11,R[22],E,E,76,[[["self"]],[T]]],[11,R[26],E,E,76,[[["self"]],[R[46]]]],[11,R[292],E,E,76,[[["self"]],["usize"]]],[11,R[3525],E,E,76,[[["self"],["f"]],["r"]]],[11,"encode",E,E,76,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,76,[[["w"],["self"]]]],[11,"decode",E,E,76,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,76,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,76,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,76,[[],["v"]]],[11,R[3774],E,E,7,[[],[T]]],[11,R[3779],E,R[3776],7,[[["outer"]],[T]]],[11,R[3780],E,R[3777],7,[[["outer"]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[3774],E,E,8,[[],[T]]],[11,R[3779],E,R[3776],8,[[["outer"]],[T]]],[11,R[3780],E,R[3777],8,[[["outer"]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[3774],E,E,78,[[],[T]]],[11,R[3779],E,R[3776],78,[[["outer"]],[T]]],[11,R[3780],E,R[3777],78,[[["outer"]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[20],E,E,78,[[[U]],[R[3]]]],[11,R[21],E,E,78,[[],[R[3]]]],[11,R[45],E,E,78,[[["self"]],[T]]],[11,R[22],E,E,78,[[["self"]],[T]]],[11,R[26],E,E,78,[[["self"]],[R[46]]]],[11,R[292],E,E,78,[[["self"]],["usize"]]],[11,R[3525],E,E,78,[[["self"],["f"]],["r"]]],[11,"encode",E,E,78,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,78,[[["w"],["self"]]]],[11,"decode",E,E,78,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,78,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,78,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,78,[[],["v"]]],[11,R[3774],E,E,9,[[],[T]]],[11,R[3779],E,R[3776],9,[[["outer"]],[T]]],[11,R[3780],E,R[3777],9,[[["outer"]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,R[292],E,E,9,[[["self"]],["usize"]]],[11,R[3525],E,E,9,[[["self"],["f"]],["r"]]],[11,"encode",E,E,9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,9,[[["w"],["self"]]]],[11,"decode",E,E,9,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,9,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[3708],E,E,9,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,9,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3774],R[3781],E,11,[[],[T]]],[11,R[3779],E,R[3776],11,[[["outer"]],[T]]],[11,R[3780],E,R[3777],11,[[["outer"]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[78],E,E,11,[[["self"]],["string"]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[3774],R[3723],E,79,[[],[T]]],[11,R[3779],E,R[3776],79,[[["outer"]],[T]]],[11,R[3780],E,R[3777],79,[[["outer"]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[],[T]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[24],E,E,79,[[["self"]],[T]]],[11,R[25],E,E,79,[[["self"],[T]]]],[11,R[20],E,E,79,[[[U]],[R[3]]]],[11,R[21],E,E,79,[[],[R[3]]]],[11,R[45],E,E,79,[[["self"]],[T]]],[11,R[22],E,E,79,[[["self"]],[T]]],[11,R[26],E,E,79,[[["self"]],[R[46]]]],[11,"vzip",E,E,79,[[],["v"]]],[11,"zeroize",E,E,79,[[["self"]]]],[11,R[3782],E,E,80,[[[T]],["outer"]]],[11,R[3774],E,E,80,[[],[T]]],[11,R[3733],E,E,80,[[["str"]],[[R[3724]],[R[3],[R[3724]]]]]],[11,R[3783],E,E,80,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[3779],E,R[3776],80,[[["outer"]],[T]]],[11,R[3780],E,R[3777],80,[[["outer"]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[24],E,E,80,[[["self"]],[T]]],[11,R[25],E,E,80,[[["self"],[T]]]],[11,R[78],E,E,80,[[["self"]],["string"]]],[11,R[20],E,E,80,[[[U]],[R[3]]]],[11,R[21],E,E,80,[[],[R[3]]]],[11,R[45],E,E,80,[[["self"]],[T]]],[11,R[22],E,E,80,[[["self"]],[T]]],[11,R[26],E,E,80,[[["self"]],[R[46]]]],[11,R[292],E,E,80,[[["self"]],["usize"]]],[11,R[3525],E,E,80,[[["self"],["f"]],["r"]]],[11,"encode",E,E,80,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,80,[[["w"],["self"]]]],[11,"decode",E,E,80,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,80,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,80,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,80,[[],["v"]]],[11,"clear",E,E,80,[[["self"]]]],[11,R[2628],E,E,80,[[]]],[11,R[3774],E,E,81,[[],[T]]],[11,R[3733],E,E,81,[[["str"]],[[R[3724]],[R[3],[R[3724]]]]]],[11,R[3783],E,E,81,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[3779],E,R[3776],81,[[["outer"]],[T]]],[11,R[3780],E,R[3777],81,[[["outer"]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[24],E,E,81,[[["self"]],[T]]],[11,R[25],E,E,81,[[["self"],[T]]]],[11,R[20],E,E,81,[[[U]],[R[3]]]],[11,R[21],E,E,81,[[],[R[3]]]],[11,R[45],E,E,81,[[["self"]],[T]]],[11,R[22],E,E,81,[[["self"]],[T]]],[11,R[26],E,E,81,[[["self"]],[R[46]]]],[11,"vzip",E,E,81,[[],["v"]]],[11,"clear",E,E,81,[[["self"]]]],[11,R[2628],E,E,81,[[]]],[11,R[3774],E,E,12,[[],[T]]],[11,R[3779],E,R[3776],12,[[["outer"]],[T]]],[11,R[3780],E,R[3777],12,[[["outer"]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,R[292],E,E,12,[[["self"]],["usize"]]],[11,R[3525],E,E,12,[[["self"],["f"]],["r"]]],[11,"encode",E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,12,[[["w"],["self"]]]],[11,"decode",E,E,12,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,12,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[3708],E,E,12,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,12,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,12,[[["self"]]]],[11,R[2628],E,E,12,[[]]],[11,R[3774],E,E,82,[[],[T]]],[11,R[3779],E,R[3776],82,[[["outer"]],[T]]],[11,R[3780],E,R[3777],82,[[["outer"]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[20],E,E,82,[[[U]],[R[3]]]],[11,R[21],E,E,82,[[],[R[3]]]],[11,R[45],E,E,82,[[["self"]],[T]]],[11,R[22],E,E,82,[[["self"]],[T]]],[11,R[26],E,E,82,[[["self"]],[R[46]]]],[11,"vzip",E,E,82,[[],["v"]]],[11,R[3774],E,E,13,[[],[T]]],[11,R[3779],E,R[3776],13,[[["outer"]],[T]]],[11,R[3780],E,R[3777],13,[[["outer"]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"],[T]]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[3774],E,E,14,[[],[T]]],[11,R[3779],E,R[3776],14,[[["outer"]],[T]]],[11,R[3780],E,R[3777],14,[[["outer"]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,R[292],E,E,14,[[["self"]],["usize"]]],[11,R[3525],E,E,14,[[["self"],["f"]],["r"]]],[11,"encode",E,E,14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,14,[[["w"],["self"]]]],[11,"decode",E,E,14,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,14,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[3774],E,E,15,[[],[T]]],[11,R[3779],E,R[3776],15,[[["outer"]],[T]]],[11,R[3780],E,R[3777],15,[[["outer"]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[3774],E,E,16,[[],[T]]],[11,R[3779],E,R[3776],16,[[["outer"]],[T]]],[11,R[3780],E,R[3777],16,[[["outer"]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"clear",E,E,16,[[["self"]]]],[11,R[2628],E,E,16,[[]]],[11,R[3774],R[3784],E,83,[[],[T]]],[11,R[3779],E,R[3776],83,[[["outer"]],[T]]],[11,R[3780],E,R[3777],83,[[["outer"]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[20],E,E,83,[[[U]],[R[3]]]],[11,R[21],E,E,83,[[],[R[3]]]],[11,R[45],E,E,83,[[["self"]],[T]]],[11,R[22],E,E,83,[[["self"]],[T]]],[11,R[26],E,E,83,[[["self"]],[R[46]]]],[11,"vzip",E,E,83,[[],["v"]]],[11,R[3774],E,E,84,[[],[T]]],[11,R[3779],E,R[3776],84,[[["outer"]],[T]]],[11,R[3780],E,R[3777],84,[[["outer"]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[20],E,E,84,[[[U]],[R[3]]]],[11,R[21],E,E,84,[[],[R[3]]]],[11,R[45],E,E,84,[[["self"]],[T]]],[11,R[22],E,E,84,[[["self"]],[T]]],[11,R[26],E,E,84,[[["self"]],[R[46]]]],[11,"vzip",E,E,84,[[],["v"]]],[11,R[3774],E,E,85,[[],[T]]],[11,R[3779],E,R[3776],85,[[["outer"]],[T]]],[11,R[3780],E,R[3777],85,[[["outer"]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[20],E,E,85,[[[U]],[R[3]]]],[11,R[21],E,E,85,[[],[R[3]]]],[11,R[45],E,E,85,[[["self"]],[T]]],[11,R[22],E,E,85,[[["self"]],[T]]],[11,R[26],E,E,85,[[["self"]],[R[46]]]],[11,"vzip",E,E,85,[[],["v"]]],[11,R[3774],E,E,86,[[],[T]]],[11,R[3779],E,R[3776],86,[[["outer"]],[T]]],[11,R[3780],E,R[3777],86,[[["outer"]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[20],E,E,86,[[[U]],[R[3]]]],[11,R[21],E,E,86,[[],[R[3]]]],[11,R[45],E,E,86,[[["self"]],[T]]],[11,R[22],E,E,86,[[["self"]],[T]]],[11,R[26],E,E,86,[[["self"]],[R[46]]]],[11,"vzip",E,E,86,[[],["v"]]],[11,R[3774],E,E,87,[[],[T]]],[11,R[3779],E,R[3776],87,[[["outer"]],[T]]],[11,R[3780],E,R[3777],87,[[["outer"]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[20],E,E,87,[[[U]],[R[3]]]],[11,R[21],E,E,87,[[],[R[3]]]],[11,R[45],E,E,87,[[["self"]],[T]]],[11,R[22],E,E,87,[[["self"]],[T]]],[11,R[26],E,E,87,[[["self"]],[R[46]]]],[11,"vzip",E,E,87,[[],["v"]]],[11,R[3774],E,E,88,[[],[T]]],[11,R[3779],E,R[3776],88,[[["outer"]],[T]]],[11,R[3780],E,R[3777],88,[[["outer"]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[20],E,E,88,[[[U]],[R[3]]]],[11,R[21],E,E,88,[[],[R[3]]]],[11,R[45],E,E,88,[[["self"]],[T]]],[11,R[22],E,E,88,[[["self"]],[T]]],[11,R[26],E,E,88,[[["self"]],[R[46]]]],[11,"vzip",E,E,88,[[],["v"]]],[11,R[3774],E,E,89,[[],[T]]],[11,R[3779],E,R[3776],89,[[["outer"]],[T]]],[11,R[3780],E,R[3777],89,[[["outer"]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[20],E,E,89,[[[U]],[R[3]]]],[11,R[21],E,E,89,[[],[R[3]]]],[11,R[45],E,E,89,[[["self"]],[T]]],[11,R[22],E,E,89,[[["self"]],[T]]],[11,R[26],E,E,89,[[["self"]],[R[46]]]],[11,"vzip",E,E,89,[[],["v"]]],[11,R[3774],E,E,90,[[],[T]]],[11,R[3779],E,R[3776],90,[[["outer"]],[T]]],[11,R[3780],E,R[3777],90,[[["outer"]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[20],E,E,90,[[[U]],[R[3]]]],[11,R[21],E,E,90,[[],[R[3]]]],[11,R[45],E,E,90,[[["self"]],[T]]],[11,R[22],E,E,90,[[["self"]],[T]]],[11,R[26],E,E,90,[[["self"]],[R[46]]]],[11,"vzip",E,E,90,[[],["v"]]],[11,R[3774],E,E,91,[[],[T]]],[11,R[3779],E,R[3776],91,[[["outer"]],[T]]],[11,R[3780],E,R[3777],91,[[["outer"]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[20],E,E,91,[[[U]],[R[3]]]],[11,R[21],E,E,91,[[],[R[3]]]],[11,R[45],E,E,91,[[["self"]],[T]]],[11,R[22],E,E,91,[[["self"]],[T]]],[11,R[26],E,E,91,[[["self"]],[R[46]]]],[11,"vzip",E,E,91,[[],["v"]]],[11,R[3774],E,E,92,[[],[T]]],[11,R[3779],E,R[3776],92,[[["outer"]],[T]]],[11,R[3780],E,R[3777],92,[[["outer"]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[20],E,E,92,[[[U]],[R[3]]]],[11,R[21],E,E,92,[[],[R[3]]]],[11,R[45],E,E,92,[[["self"]],[T]]],[11,R[22],E,E,92,[[["self"]],[T]]],[11,R[26],E,E,92,[[["self"]],[R[46]]]],[11,"vzip",E,E,92,[[],["v"]]],[11,R[3774],E,E,93,[[],[T]]],[11,R[3779],E,R[3776],93,[[["outer"]],[T]]],[11,R[3780],E,R[3777],93,[[["outer"]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[20],E,E,93,[[[U]],[R[3]]]],[11,R[21],E,E,93,[[],[R[3]]]],[11,R[45],E,E,93,[[["self"]],[T]]],[11,R[22],E,E,93,[[["self"]],[T]]],[11,R[26],E,E,93,[[["self"]],[R[46]]]],[11,"vzip",E,E,93,[[],["v"]]],[11,R[3774],E,E,94,[[],[T]]],[11,R[3779],E,R[3776],94,[[["outer"]],[T]]],[11,R[3780],E,R[3777],94,[[["outer"]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[20],E,E,94,[[[U]],[R[3]]]],[11,R[21],E,E,94,[[],[R[3]]]],[11,R[45],E,E,94,[[["self"]],[T]]],[11,R[22],E,E,94,[[["self"]],[T]]],[11,R[26],E,E,94,[[["self"]],[R[46]]]],[11,"vzip",E,E,94,[[],["v"]]],[11,R[3774],E,E,95,[[],[T]]],[11,R[3779],E,R[3776],95,[[["outer"]],[T]]],[11,R[3780],E,R[3777],95,[[["outer"]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[20],E,E,95,[[[U]],[R[3]]]],[11,R[21],E,E,95,[[],[R[3]]]],[11,R[45],E,E,95,[[["self"]],[T]]],[11,R[22],E,E,95,[[["self"]],[T]]],[11,R[26],E,E,95,[[["self"]],[R[46]]]],[11,"vzip",E,E,95,[[],["v"]]],[11,R[3774],E,E,96,[[],[T]]],[11,R[3779],E,R[3776],96,[[["outer"]],[T]]],[11,R[3780],E,R[3777],96,[[["outer"]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[20],E,E,96,[[[U]],[R[3]]]],[11,R[21],E,E,96,[[],[R[3]]]],[11,R[45],E,E,96,[[["self"]],[T]]],[11,R[22],E,E,96,[[["self"]],[T]]],[11,R[26],E,E,96,[[["self"]],[R[46]]]],[11,"vzip",E,E,96,[[],["v"]]],[11,R[3774],E,E,97,[[],[T]]],[11,R[3779],E,R[3776],97,[[["outer"]],[T]]],[11,R[3780],E,R[3777],97,[[["outer"]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[20],E,E,97,[[[U]],[R[3]]]],[11,R[21],E,E,97,[[],[R[3]]]],[11,R[45],E,E,97,[[["self"]],[T]]],[11,R[22],E,E,97,[[["self"]],[T]]],[11,R[26],E,E,97,[[["self"]],[R[46]]]],[11,"vzip",E,E,97,[[],["v"]]],[11,R[3774],E,E,98,[[],[T]]],[11,R[3779],E,R[3776],98,[[["outer"]],[T]]],[11,R[3780],E,R[3777],98,[[["outer"]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[20],E,E,98,[[[U]],[R[3]]]],[11,R[21],E,E,98,[[],[R[3]]]],[11,R[45],E,E,98,[[["self"]],[T]]],[11,R[22],E,E,98,[[["self"]],[T]]],[11,R[26],E,E,98,[[["self"]],[R[46]]]],[11,"vzip",E,E,98,[[],["v"]]],[11,R[3774],E,E,99,[[],[T]]],[11,R[3779],E,R[3776],99,[[["outer"]],[T]]],[11,R[3780],E,R[3777],99,[[["outer"]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[20],E,E,99,[[[U]],[R[3]]]],[11,R[21],E,E,99,[[],[R[3]]]],[11,R[45],E,E,99,[[["self"]],[T]]],[11,R[22],E,E,99,[[["self"]],[T]]],[11,R[26],E,E,99,[[["self"]],[R[46]]]],[11,"vzip",E,E,99,[[],["v"]]],[11,R[3774],E,E,100,[[],[T]]],[11,R[3779],E,R[3776],100,[[["outer"]],[T]]],[11,R[3780],E,R[3777],100,[[["outer"]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[20],E,E,100,[[[U]],[R[3]]]],[11,R[21],E,E,100,[[],[R[3]]]],[11,R[45],E,E,100,[[["self"]],[T]]],[11,R[22],E,E,100,[[["self"]],[T]]],[11,R[26],E,E,100,[[["self"]],[R[46]]]],[11,"vzip",E,E,100,[[],["v"]]],[11,R[3774],E,E,101,[[],[T]]],[11,R[3779],E,R[3776],101,[[["outer"]],[T]]],[11,R[3780],E,R[3777],101,[[["outer"]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[20],E,E,101,[[[U]],[R[3]]]],[11,R[21],E,E,101,[[],[R[3]]]],[11,R[45],E,E,101,[[["self"]],[T]]],[11,R[22],E,E,101,[[["self"]],[T]]],[11,R[26],E,E,101,[[["self"]],[R[46]]]],[11,"vzip",E,E,101,[[],["v"]]],[11,R[3774],E,E,102,[[],[T]]],[11,R[3779],E,R[3776],102,[[["outer"]],[T]]],[11,R[3780],E,R[3777],102,[[["outer"]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[20],E,E,102,[[[U]],[R[3]]]],[11,R[21],E,E,102,[[],[R[3]]]],[11,R[45],E,E,102,[[["self"]],[T]]],[11,R[22],E,E,102,[[["self"]],[T]]],[11,R[26],E,E,102,[[["self"]],[R[46]]]],[11,"vzip",E,E,102,[[],["v"]]],[11,R[3774],E,E,103,[[],[T]]],[11,R[3779],E,R[3776],103,[[["outer"]],[T]]],[11,R[3780],E,R[3777],103,[[["outer"]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[20],E,E,103,[[[U]],[R[3]]]],[11,R[21],E,E,103,[[],[R[3]]]],[11,R[45],E,E,103,[[["self"]],[T]]],[11,R[22],E,E,103,[[["self"]],[T]]],[11,R[26],E,E,103,[[["self"]],[R[46]]]],[11,"vzip",E,E,103,[[],["v"]]],[11,R[3774],E,E,104,[[],[T]]],[11,R[3779],E,R[3776],104,[[["outer"]],[T]]],[11,R[3780],E,R[3777],104,[[["outer"]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[20],E,E,104,[[[U]],[R[3]]]],[11,R[21],E,E,104,[[],[R[3]]]],[11,R[45],E,E,104,[[["self"]],[T]]],[11,R[22],E,E,104,[[["self"]],[T]]],[11,R[26],E,E,104,[[["self"]],[R[46]]]],[11,"vzip",E,E,104,[[],["v"]]],[11,R[3774],E,E,105,[[],[T]]],[11,R[3779],E,R[3776],105,[[["outer"]],[T]]],[11,R[3780],E,R[3777],105,[[["outer"]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[20],E,E,105,[[[U]],[R[3]]]],[11,R[21],E,E,105,[[],[R[3]]]],[11,R[45],E,E,105,[[["self"]],[T]]],[11,R[22],E,E,105,[[["self"]],[T]]],[11,R[26],E,E,105,[[["self"]],[R[46]]]],[11,"vzip",E,E,105,[[],["v"]]],[11,R[3774],E,E,106,[[],[T]]],[11,R[3779],E,R[3776],106,[[["outer"]],[T]]],[11,R[3780],E,R[3777],106,[[["outer"]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[20],E,E,106,[[[U]],[R[3]]]],[11,R[21],E,E,106,[[],[R[3]]]],[11,R[45],E,E,106,[[["self"]],[T]]],[11,R[22],E,E,106,[[["self"]],[T]]],[11,R[26],E,E,106,[[["self"]],[R[46]]]],[11,"vzip",E,E,106,[[],["v"]]],[11,R[3774],E,E,107,[[],[T]]],[11,R[3779],E,R[3776],107,[[["outer"]],[T]]],[11,R[3780],E,R[3777],107,[[["outer"]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[20],E,E,107,[[[U]],[R[3]]]],[11,R[21],E,E,107,[[],[R[3]]]],[11,R[45],E,E,107,[[["self"]],[T]]],[11,R[22],E,E,107,[[["self"]],[T]]],[11,R[26],E,E,107,[[["self"]],[R[46]]]],[11,"vzip",E,E,107,[[],["v"]]],[11,R[3774],E,E,108,[[],[T]]],[11,R[3779],E,R[3776],108,[[["outer"]],[T]]],[11,R[3780],E,R[3777],108,[[["outer"]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[20],E,E,108,[[[U]],[R[3]]]],[11,R[21],E,E,108,[[],[R[3]]]],[11,R[45],E,E,108,[[["self"]],[T]]],[11,R[22],E,E,108,[[["self"]],[T]]],[11,R[26],E,E,108,[[["self"]],[R[46]]]],[11,"vzip",E,E,108,[[],["v"]]],[11,R[3774],E,E,109,[[],[T]]],[11,R[3779],E,R[3776],109,[[["outer"]],[T]]],[11,R[3780],E,R[3777],109,[[["outer"]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[20],E,E,109,[[[U]],[R[3]]]],[11,R[21],E,E,109,[[],[R[3]]]],[11,R[45],E,E,109,[[["self"]],[T]]],[11,R[22],E,E,109,[[["self"]],[T]]],[11,R[26],E,E,109,[[["self"]],[R[46]]]],[11,"vzip",E,E,109,[[],["v"]]],[11,R[3774],E,E,110,[[],[T]]],[11,R[3779],E,R[3776],110,[[["outer"]],[T]]],[11,R[3780],E,R[3777],110,[[["outer"]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[20],E,E,110,[[[U]],[R[3]]]],[11,R[21],E,E,110,[[],[R[3]]]],[11,R[45],E,E,110,[[["self"]],[T]]],[11,R[22],E,E,110,[[["self"]],[T]]],[11,R[26],E,E,110,[[["self"]],[R[46]]]],[11,"vzip",E,E,110,[[],["v"]]],[11,R[3774],E,E,111,[[],[T]]],[11,R[3779],E,R[3776],111,[[["outer"]],[T]]],[11,R[3780],E,R[3777],111,[[["outer"]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[20],E,E,111,[[[U]],[R[3]]]],[11,R[21],E,E,111,[[],[R[3]]]],[11,R[45],E,E,111,[[["self"]],[T]]],[11,R[22],E,E,111,[[["self"]],[T]]],[11,R[26],E,E,111,[[["self"]],[R[46]]]],[11,"vzip",E,E,111,[[],["v"]]],[11,R[3774],E,E,112,[[],[T]]],[11,R[3779],E,R[3776],112,[[["outer"]],[T]]],[11,R[3780],E,R[3777],112,[[["outer"]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[20],E,E,112,[[[U]],[R[3]]]],[11,R[21],E,E,112,[[],[R[3]]]],[11,R[45],E,E,112,[[["self"]],[T]]],[11,R[22],E,E,112,[[["self"]],[T]]],[11,R[26],E,E,112,[[["self"]],[R[46]]]],[11,"vzip",E,E,112,[[],["v"]]],[11,R[3774],E,E,113,[[],[T]]],[11,R[3779],E,R[3776],113,[[["outer"]],[T]]],[11,R[3780],E,R[3777],113,[[["outer"]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[20],E,E,113,[[[U]],[R[3]]]],[11,R[21],E,E,113,[[],[R[3]]]],[11,R[45],E,E,113,[[["self"]],[T]]],[11,R[22],E,E,113,[[["self"]],[T]]],[11,R[26],E,E,113,[[["self"]],[R[46]]]],[11,"vzip",E,E,113,[[],["v"]]],[11,R[3774],E,E,114,[[],[T]]],[11,R[3779],E,R[3776],114,[[["outer"]],[T]]],[11,R[3780],E,R[3777],114,[[["outer"]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[20],E,E,114,[[[U]],[R[3]]]],[11,R[21],E,E,114,[[],[R[3]]]],[11,R[45],E,E,114,[[["self"]],[T]]],[11,R[22],E,E,114,[[["self"]],[T]]],[11,R[26],E,E,114,[[["self"]],[R[46]]]],[11,"vzip",E,E,114,[[],["v"]]],[11,R[3774],E,E,115,[[],[T]]],[11,R[3779],E,R[3776],115,[[["outer"]],[T]]],[11,R[3780],E,R[3777],115,[[["outer"]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[20],E,E,115,[[[U]],[R[3]]]],[11,R[21],E,E,115,[[],[R[3]]]],[11,R[45],E,E,115,[[["self"]],[T]]],[11,R[22],E,E,115,[[["self"]],[T]]],[11,R[26],E,E,115,[[["self"]],[R[46]]]],[11,"vzip",E,E,115,[[],["v"]]],[11,R[3774],E,E,116,[[],[T]]],[11,R[3779],E,R[3776],116,[[["outer"]],[T]]],[11,R[3780],E,R[3777],116,[[["outer"]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[20],E,E,116,[[[U]],[R[3]]]],[11,R[21],E,E,116,[[],[R[3]]]],[11,R[45],E,E,116,[[["self"]],[T]]],[11,R[22],E,E,116,[[["self"]],[T]]],[11,R[26],E,E,116,[[["self"]],[R[46]]]],[11,"vzip",E,E,116,[[],["v"]]],[11,R[3774],E,E,117,[[],[T]]],[11,R[3779],E,R[3776],117,[[["outer"]],[T]]],[11,R[3780],E,R[3777],117,[[["outer"]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[20],E,E,117,[[[U]],[R[3]]]],[11,R[21],E,E,117,[[],[R[3]]]],[11,R[45],E,E,117,[[["self"]],[T]]],[11,R[22],E,E,117,[[["self"]],[T]]],[11,R[26],E,E,117,[[["self"]],[R[46]]]],[11,"vzip",E,E,117,[[],["v"]]],[11,R[3774],E,E,118,[[],[T]]],[11,R[3779],E,R[3776],118,[[["outer"]],[T]]],[11,R[3780],E,R[3777],118,[[["outer"]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[20],E,E,118,[[[U]],[R[3]]]],[11,R[21],E,E,118,[[],[R[3]]]],[11,R[45],E,E,118,[[["self"]],[T]]],[11,R[22],E,E,118,[[["self"]],[T]]],[11,R[26],E,E,118,[[["self"]],[R[46]]]],[11,"vzip",E,E,118,[[],["v"]]],[11,R[3774],E,E,119,[[],[T]]],[11,R[3779],E,R[3776],119,[[["outer"]],[T]]],[11,R[3780],E,R[3777],119,[[["outer"]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[20],E,E,119,[[[U]],[R[3]]]],[11,R[21],E,E,119,[[],[R[3]]]],[11,R[45],E,E,119,[[["self"]],[T]]],[11,R[22],E,E,119,[[["self"]],[T]]],[11,R[26],E,E,119,[[["self"]],[R[46]]]],[11,"vzip",E,E,119,[[],["v"]]],[11,R[3774],E,E,120,[[],[T]]],[11,R[3779],E,R[3776],120,[[["outer"]],[T]]],[11,R[3780],E,R[3777],120,[[["outer"]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[20],E,E,120,[[[U]],[R[3]]]],[11,R[21],E,E,120,[[],[R[3]]]],[11,R[45],E,E,120,[[["self"]],[T]]],[11,R[22],E,E,120,[[["self"]],[T]]],[11,R[26],E,E,120,[[["self"]],[R[46]]]],[11,"vzip",E,E,120,[[],["v"]]],[11,R[3774],E,E,121,[[],[T]]],[11,R[3779],E,R[3776],121,[[["outer"]],[T]]],[11,R[3780],E,R[3777],121,[[["outer"]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[20],E,E,121,[[[U]],[R[3]]]],[11,R[21],E,E,121,[[],[R[3]]]],[11,R[45],E,E,121,[[["self"]],[T]]],[11,R[22],E,E,121,[[["self"]],[T]]],[11,R[26],E,E,121,[[["self"]],[R[46]]]],[11,"vzip",E,E,121,[[],["v"]]],[11,R[3774],E,E,122,[[],[T]]],[11,R[3779],E,R[3776],122,[[["outer"]],[T]]],[11,R[3780],E,R[3777],122,[[["outer"]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[20],E,E,122,[[[U]],[R[3]]]],[11,R[21],E,E,122,[[],[R[3]]]],[11,R[45],E,E,122,[[["self"]],[T]]],[11,R[22],E,E,122,[[["self"]],[T]]],[11,R[26],E,E,122,[[["self"]],[R[46]]]],[11,"vzip",E,E,122,[[],["v"]]],[11,R[3774],E,E,123,[[],[T]]],[11,R[3779],E,R[3776],123,[[["outer"]],[T]]],[11,R[3780],E,R[3777],123,[[["outer"]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[20],E,E,123,[[[U]],[R[3]]]],[11,R[21],E,E,123,[[],[R[3]]]],[11,R[45],E,E,123,[[["self"]],[T]]],[11,R[22],E,E,123,[[["self"]],[T]]],[11,R[26],E,E,123,[[["self"]],[R[46]]]],[11,"vzip",E,E,123,[[],["v"]]],[11,R[3774],E,E,124,[[],[T]]],[11,R[3779],E,R[3776],124,[[["outer"]],[T]]],[11,R[3780],E,R[3777],124,[[["outer"]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[20],E,E,124,[[[U]],[R[3]]]],[11,R[21],E,E,124,[[],[R[3]]]],[11,R[45],E,E,124,[[["self"]],[T]]],[11,R[22],E,E,124,[[["self"]],[T]]],[11,R[26],E,E,124,[[["self"]],[R[46]]]],[11,"vzip",E,E,124,[[],["v"]]],[11,R[3774],E,E,125,[[],[T]]],[11,R[3779],E,R[3776],125,[[["outer"]],[T]]],[11,R[3780],E,R[3777],125,[[["outer"]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[20],E,E,125,[[[U]],[R[3]]]],[11,R[21],E,E,125,[[],[R[3]]]],[11,R[45],E,E,125,[[["self"]],[T]]],[11,R[22],E,E,125,[[["self"]],[T]]],[11,R[26],E,E,125,[[["self"]],[R[46]]]],[11,"vzip",E,E,125,[[],["v"]]],[11,R[3774],E,E,126,[[],[T]]],[11,R[3779],E,R[3776],126,[[["outer"]],[T]]],[11,R[3780],E,R[3777],126,[[["outer"]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[20],E,E,126,[[[U]],[R[3]]]],[11,R[21],E,E,126,[[],[R[3]]]],[11,R[45],E,E,126,[[["self"]],[T]]],[11,R[22],E,E,126,[[["self"]],[T]]],[11,R[26],E,E,126,[[["self"]],[R[46]]]],[11,"vzip",E,E,126,[[],["v"]]],[11,R[3774],E,E,127,[[],[T]]],[11,R[3779],E,R[3776],127,[[["outer"]],[T]]],[11,R[3780],E,R[3777],127,[[["outer"]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[20],E,E,127,[[[U]],[R[3]]]],[11,R[21],E,E,127,[[],[R[3]]]],[11,R[45],E,E,127,[[["self"]],[T]]],[11,R[22],E,E,127,[[["self"]],[T]]],[11,R[26],E,E,127,[[["self"]],[R[46]]]],[11,"vzip",E,E,127,[[],["v"]]],[11,R[3774],E,E,128,[[],[T]]],[11,R[3779],E,R[3776],128,[[["outer"]],[T]]],[11,R[3780],E,R[3777],128,[[["outer"]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[20],E,E,128,[[[U]],[R[3]]]],[11,R[21],E,E,128,[[],[R[3]]]],[11,R[45],E,E,128,[[["self"]],[T]]],[11,R[22],E,E,128,[[["self"]],[T]]],[11,R[26],E,E,128,[[["self"]],[R[46]]]],[11,"vzip",E,E,128,[[],["v"]]],[11,R[3774],E,E,129,[[],[T]]],[11,R[3779],E,R[3776],129,[[["outer"]],[T]]],[11,R[3780],E,R[3777],129,[[["outer"]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[20],E,E,129,[[[U]],[R[3]]]],[11,R[21],E,E,129,[[],[R[3]]]],[11,R[45],E,E,129,[[["self"]],[T]]],[11,R[22],E,E,129,[[["self"]],[T]]],[11,R[26],E,E,129,[[["self"]],[R[46]]]],[11,"vzip",E,E,129,[[],["v"]]],[11,R[3774],E,E,130,[[],[T]]],[11,R[3779],E,R[3776],130,[[["outer"]],[T]]],[11,R[3780],E,R[3777],130,[[["outer"]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[20],E,E,130,[[[U]],[R[3]]]],[11,R[21],E,E,130,[[],[R[3]]]],[11,R[45],E,E,130,[[["self"]],[T]]],[11,R[22],E,E,130,[[["self"]],[T]]],[11,R[26],E,E,130,[[["self"]],[R[46]]]],[11,"vzip",E,E,130,[[],["v"]]],[11,R[3774],E,E,131,[[],[T]]],[11,R[3779],E,R[3776],131,[[["outer"]],[T]]],[11,R[3780],E,R[3777],131,[[["outer"]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[20],E,E,131,[[[U]],[R[3]]]],[11,R[21],E,E,131,[[],[R[3]]]],[11,R[45],E,E,131,[[["self"]],[T]]],[11,R[22],E,E,131,[[["self"]],[T]]],[11,R[26],E,E,131,[[["self"]],[R[46]]]],[11,"vzip",E,E,131,[[],["v"]]],[11,R[3774],E,E,132,[[],[T]]],[11,R[3779],E,R[3776],132,[[["outer"]],[T]]],[11,R[3780],E,R[3777],132,[[["outer"]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[20],E,E,132,[[[U]],[R[3]]]],[11,R[21],E,E,132,[[],[R[3]]]],[11,R[45],E,E,132,[[["self"]],[T]]],[11,R[22],E,E,132,[[["self"]],[T]]],[11,R[26],E,E,132,[[["self"]],[R[46]]]],[11,"vzip",E,E,132,[[],["v"]]],[11,R[3774],E,E,133,[[],[T]]],[11,R[3779],E,R[3776],133,[[["outer"]],[T]]],[11,R[3780],E,R[3777],133,[[["outer"]],[T]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[20],E,E,133,[[[U]],[R[3]]]],[11,R[21],E,E,133,[[],[R[3]]]],[11,R[45],E,E,133,[[["self"]],[T]]],[11,R[22],E,E,133,[[["self"]],[T]]],[11,R[26],E,E,133,[[["self"]],[R[46]]]],[11,"vzip",E,E,133,[[],["v"]]],[11,R[3774],E,E,134,[[],[T]]],[11,R[3779],E,R[3776],134,[[["outer"]],[T]]],[11,R[3780],E,R[3777],134,[[["outer"]],[T]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[20],E,E,134,[[[U]],[R[3]]]],[11,R[21],E,E,134,[[],[R[3]]]],[11,R[45],E,E,134,[[["self"]],[T]]],[11,R[22],E,E,134,[[["self"]],[T]]],[11,R[26],E,E,134,[[["self"]],[R[46]]]],[11,"vzip",E,E,134,[[],["v"]]],[11,R[3774],E,E,135,[[],[T]]],[11,R[3779],E,R[3776],135,[[["outer"]],[T]]],[11,R[3780],E,R[3777],135,[[["outer"]],[T]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[20],E,E,135,[[[U]],[R[3]]]],[11,R[21],E,E,135,[[],[R[3]]]],[11,R[45],E,E,135,[[["self"]],[T]]],[11,R[22],E,E,135,[[["self"]],[T]]],[11,R[26],E,E,135,[[["self"]],[R[46]]]],[11,"vzip",E,E,135,[[],["v"]]],[11,R[3774],E,E,136,[[],[T]]],[11,R[3779],E,R[3776],136,[[["outer"]],[T]]],[11,R[3780],E,R[3777],136,[[["outer"]],[T]]],[11,"into",E,E,136,[[],[U]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[20],E,E,136,[[[U]],[R[3]]]],[11,R[21],E,E,136,[[],[R[3]]]],[11,R[45],E,E,136,[[["self"]],[T]]],[11,R[22],E,E,136,[[["self"]],[T]]],[11,R[26],E,E,136,[[["self"]],[R[46]]]],[11,"vzip",E,E,136,[[],["v"]]],[11,R[3774],E,E,137,[[],[T]]],[11,R[3779],E,R[3776],137,[[["outer"]],[T]]],[11,R[3780],E,R[3777],137,[[["outer"]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[20],E,E,137,[[[U]],[R[3]]]],[11,R[21],E,E,137,[[],[R[3]]]],[11,R[45],E,E,137,[[["self"]],[T]]],[11,R[22],E,E,137,[[["self"]],[T]]],[11,R[26],E,E,137,[[["self"]],[R[46]]]],[11,"vzip",E,E,137,[[],["v"]]],[11,R[3774],E,E,138,[[],[T]]],[11,R[3779],E,R[3776],138,[[["outer"]],[T]]],[11,R[3780],E,R[3777],138,[[["outer"]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[20],E,E,138,[[[U]],[R[3]]]],[11,R[21],E,E,138,[[],[R[3]]]],[11,R[45],E,E,138,[[["self"]],[T]]],[11,R[22],E,E,138,[[["self"]],[T]]],[11,R[26],E,E,138,[[["self"]],[R[46]]]],[11,"vzip",E,E,138,[[],["v"]]],[11,R[3774],E,E,139,[[],[T]]],[11,R[3779],E,R[3776],139,[[["outer"]],[T]]],[11,R[3780],E,R[3777],139,[[["outer"]],[T]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[20],E,E,139,[[[U]],[R[3]]]],[11,R[21],E,E,139,[[],[R[3]]]],[11,R[45],E,E,139,[[["self"]],[T]]],[11,R[22],E,E,139,[[["self"]],[T]]],[11,R[26],E,E,139,[[["self"]],[R[46]]]],[11,"vzip",E,E,139,[[],["v"]]],[11,R[3774],E,E,140,[[],[T]]],[11,R[3779],E,R[3776],140,[[["outer"]],[T]]],[11,R[3780],E,R[3777],140,[[["outer"]],[T]]],[11,"into",E,E,140,[[],[U]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[20],E,E,140,[[[U]],[R[3]]]],[11,R[21],E,E,140,[[],[R[3]]]],[11,R[45],E,E,140,[[["self"]],[T]]],[11,R[22],E,E,140,[[["self"]],[T]]],[11,R[26],E,E,140,[[["self"]],[R[46]]]],[11,"vzip",E,E,140,[[],["v"]]],[11,R[3774],E,E,141,[[],[T]]],[11,R[3779],E,R[3776],141,[[["outer"]],[T]]],[11,R[3780],E,R[3777],141,[[["outer"]],[T]]],[11,"into",E,E,141,[[],[U]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[20],E,E,141,[[[U]],[R[3]]]],[11,R[21],E,E,141,[[],[R[3]]]],[11,R[45],E,E,141,[[["self"]],[T]]],[11,R[22],E,E,141,[[["self"]],[T]]],[11,R[26],E,E,141,[[["self"]],[R[46]]]],[11,"vzip",E,E,141,[[],["v"]]],[11,R[3774],E,E,142,[[],[T]]],[11,R[3779],E,R[3776],142,[[["outer"]],[T]]],[11,R[3780],E,R[3777],142,[[["outer"]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[20],E,E,142,[[[U]],[R[3]]]],[11,R[21],E,E,142,[[],[R[3]]]],[11,R[45],E,E,142,[[["self"]],[T]]],[11,R[22],E,E,142,[[["self"]],[T]]],[11,R[26],E,E,142,[[["self"]],[R[46]]]],[11,"vzip",E,E,142,[[],["v"]]],[11,R[3774],E,E,143,[[],[T]]],[11,R[3779],E,R[3776],143,[[["outer"]],[T]]],[11,R[3780],E,R[3777],143,[[["outer"]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[20],E,E,143,[[[U]],[R[3]]]],[11,R[21],E,E,143,[[],[R[3]]]],[11,R[45],E,E,143,[[["self"]],[T]]],[11,R[22],E,E,143,[[["self"]],[T]]],[11,R[26],E,E,143,[[["self"]],[R[46]]]],[11,"vzip",E,E,143,[[],["v"]]],[11,R[3774],E,E,144,[[],[T]]],[11,R[3779],E,R[3776],144,[[["outer"]],[T]]],[11,R[3780],E,R[3777],144,[[["outer"]],[T]]],[11,"into",E,E,144,[[],[U]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[20],E,E,144,[[[U]],[R[3]]]],[11,R[21],E,E,144,[[],[R[3]]]],[11,R[45],E,E,144,[[["self"]],[T]]],[11,R[22],E,E,144,[[["self"]],[T]]],[11,R[26],E,E,144,[[["self"]],[R[46]]]],[11,"vzip",E,E,144,[[],["v"]]],[11,R[3774],E,E,145,[[],[T]]],[11,R[3779],E,R[3776],145,[[["outer"]],[T]]],[11,R[3780],E,R[3777],145,[[["outer"]],[T]]],[11,"into",E,E,145,[[],[U]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[20],E,E,145,[[[U]],[R[3]]]],[11,R[21],E,E,145,[[],[R[3]]]],[11,R[45],E,E,145,[[["self"]],[T]]],[11,R[22],E,E,145,[[["self"]],[T]]],[11,R[26],E,E,145,[[["self"]],[R[46]]]],[11,"vzip",E,E,145,[[],["v"]]],[11,R[3774],E,E,146,[[],[T]]],[11,R[3779],E,R[3776],146,[[["outer"]],[T]]],[11,R[3780],E,R[3777],146,[[["outer"]],[T]]],[11,"into",E,E,146,[[],[U]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[20],E,E,146,[[[U]],[R[3]]]],[11,R[21],E,E,146,[[],[R[3]]]],[11,R[45],E,E,146,[[["self"]],[T]]],[11,R[22],E,E,146,[[["self"]],[T]]],[11,R[26],E,E,146,[[["self"]],[R[46]]]],[11,"vzip",E,E,146,[[],["v"]]],[11,R[3774],E,E,147,[[],[T]]],[11,R[3779],E,R[3776],147,[[["outer"]],[T]]],[11,R[3780],E,R[3777],147,[[["outer"]],[T]]],[11,"into",E,E,147,[[],[U]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[20],E,E,147,[[[U]],[R[3]]]],[11,R[21],E,E,147,[[],[R[3]]]],[11,R[45],E,E,147,[[["self"]],[T]]],[11,R[22],E,E,147,[[["self"]],[T]]],[11,R[26],E,E,147,[[["self"]],[R[46]]]],[11,"vzip",E,E,147,[[],["v"]]],[11,R[3774],E,E,148,[[],[T]]],[11,R[3779],E,R[3776],148,[[["outer"]],[T]]],[11,R[3780],E,R[3777],148,[[["outer"]],[T]]],[11,"into",E,E,148,[[],[U]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[20],E,E,148,[[[U]],[R[3]]]],[11,R[21],E,E,148,[[],[R[3]]]],[11,R[45],E,E,148,[[["self"]],[T]]],[11,R[22],E,E,148,[[["self"]],[T]]],[11,R[26],E,E,148,[[["self"]],[R[46]]]],[11,"vzip",E,E,148,[[],["v"]]],[11,R[3774],E,E,149,[[],[T]]],[11,R[3779],E,R[3776],149,[[["outer"]],[T]]],[11,R[3780],E,R[3777],149,[[["outer"]],[T]]],[11,"into",E,E,149,[[],[U]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[20],E,E,149,[[[U]],[R[3]]]],[11,R[21],E,E,149,[[],[R[3]]]],[11,R[45],E,E,149,[[["self"]],[T]]],[11,R[22],E,E,149,[[["self"]],[T]]],[11,R[26],E,E,149,[[["self"]],[R[46]]]],[11,"vzip",E,E,149,[[],["v"]]],[11,R[3774],E,E,150,[[],[T]]],[11,R[3779],E,R[3776],150,[[["outer"]],[T]]],[11,R[3780],E,R[3777],150,[[["outer"]],[T]]],[11,"into",E,E,150,[[],[U]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[20],E,E,150,[[[U]],[R[3]]]],[11,R[21],E,E,150,[[],[R[3]]]],[11,R[45],E,E,150,[[["self"]],[T]]],[11,R[22],E,E,150,[[["self"]],[T]]],[11,R[26],E,E,150,[[["self"]],[R[46]]]],[11,"vzip",E,E,150,[[],["v"]]],[11,R[3774],E,E,151,[[],[T]]],[11,R[3779],E,R[3776],151,[[["outer"]],[T]]],[11,R[3780],E,R[3777],151,[[["outer"]],[T]]],[11,"into",E,E,151,[[],[U]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[20],E,E,151,[[[U]],[R[3]]]],[11,R[21],E,E,151,[[],[R[3]]]],[11,R[45],E,E,151,[[["self"]],[T]]],[11,R[22],E,E,151,[[["self"]],[T]]],[11,R[26],E,E,151,[[["self"]],[R[46]]]],[11,"vzip",E,E,151,[[],["v"]]],[11,R[3774],E,E,152,[[],[T]]],[11,R[3779],E,R[3776],152,[[["outer"]],[T]]],[11,R[3780],E,R[3777],152,[[["outer"]],[T]]],[11,"into",E,E,152,[[],[U]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[20],E,E,152,[[[U]],[R[3]]]],[11,R[21],E,E,152,[[],[R[3]]]],[11,R[45],E,E,152,[[["self"]],[T]]],[11,R[22],E,E,152,[[["self"]],[T]]],[11,R[26],E,E,152,[[["self"]],[R[46]]]],[11,"vzip",E,E,152,[[],["v"]]],[11,R[3774],E,E,153,[[],[T]]],[11,R[3779],E,R[3776],153,[[["outer"]],[T]]],[11,R[3780],E,R[3777],153,[[["outer"]],[T]]],[11,"into",E,E,153,[[],[U]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[20],E,E,153,[[[U]],[R[3]]]],[11,R[21],E,E,153,[[],[R[3]]]],[11,R[45],E,E,153,[[["self"]],[T]]],[11,R[22],E,E,153,[[["self"]],[T]]],[11,R[26],E,E,153,[[["self"]],[R[46]]]],[11,"vzip",E,E,153,[[],["v"]]],[11,R[3774],E,E,154,[[],[T]]],[11,R[3779],E,R[3776],154,[[["outer"]],[T]]],[11,R[3780],E,R[3777],154,[[["outer"]],[T]]],[11,"into",E,E,154,[[],[U]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[20],E,E,154,[[[U]],[R[3]]]],[11,R[21],E,E,154,[[],[R[3]]]],[11,R[45],E,E,154,[[["self"]],[T]]],[11,R[22],E,E,154,[[["self"]],[T]]],[11,R[26],E,E,154,[[["self"]],[R[46]]]],[11,"vzip",E,E,154,[[],["v"]]],[11,R[3774],E,E,155,[[],[T]]],[11,R[3779],E,R[3776],155,[[["outer"]],[T]]],[11,R[3780],E,R[3777],155,[[["outer"]],[T]]],[11,"into",E,E,155,[[],[U]]],[11,"from",E,E,155,[[[T]],[T]]],[11,R[20],E,E,155,[[[U]],[R[3]]]],[11,R[21],E,E,155,[[],[R[3]]]],[11,R[45],E,E,155,[[["self"]],[T]]],[11,R[22],E,E,155,[[["self"]],[T]]],[11,R[26],E,E,155,[[["self"]],[R[46]]]],[11,"vzip",E,E,155,[[],["v"]]],[11,R[3774],E,E,156,[[],[T]]],[11,R[3779],E,R[3776],156,[[["outer"]],[T]]],[11,R[3780],E,R[3777],156,[[["outer"]],[T]]],[11,"into",E,E,156,[[],[U]]],[11,"from",E,E,156,[[[T]],[T]]],[11,R[20],E,E,156,[[[U]],[R[3]]]],[11,R[21],E,E,156,[[],[R[3]]]],[11,R[45],E,E,156,[[["self"]],[T]]],[11,R[22],E,E,156,[[["self"]],[T]]],[11,R[26],E,E,156,[[["self"]],[R[46]]]],[11,"vzip",E,E,156,[[],["v"]]],[11,R[3774],E,E,157,[[],[T]]],[11,R[3779],E,R[3776],157,[[["outer"]],[T]]],[11,R[3780],E,R[3777],157,[[["outer"]],[T]]],[11,"into",E,E,157,[[],[U]]],[11,"from",E,E,157,[[[T]],[T]]],[11,R[20],E,E,157,[[[U]],[R[3]]]],[11,R[21],E,E,157,[[],[R[3]]]],[11,R[45],E,E,157,[[["self"]],[T]]],[11,R[22],E,E,157,[[["self"]],[T]]],[11,R[26],E,E,157,[[["self"]],[R[46]]]],[11,"vzip",E,E,157,[[],["v"]]],[11,R[3774],E,E,158,[[],[T]]],[11,R[3779],E,R[3776],158,[[["outer"]],[T]]],[11,R[3780],E,R[3777],158,[[["outer"]],[T]]],[11,"into",E,E,158,[[],[U]]],[11,"from",E,E,158,[[[T]],[T]]],[11,R[20],E,E,158,[[[U]],[R[3]]]],[11,R[21],E,E,158,[[],[R[3]]]],[11,R[45],E,E,158,[[["self"]],[T]]],[11,R[22],E,E,158,[[["self"]],[T]]],[11,R[26],E,E,158,[[["self"]],[R[46]]]],[11,"vzip",E,E,158,[[],["v"]]],[11,R[3774],E,E,159,[[],[T]]],[11,R[3779],E,R[3776],159,[[["outer"]],[T]]],[11,R[3780],E,R[3777],159,[[["outer"]],[T]]],[11,"into",E,E,159,[[],[U]]],[11,"from",E,E,159,[[[T]],[T]]],[11,R[20],E,E,159,[[[U]],[R[3]]]],[11,R[21],E,E,159,[[],[R[3]]]],[11,R[45],E,E,159,[[["self"]],[T]]],[11,R[22],E,E,159,[[["self"]],[T]]],[11,R[26],E,E,159,[[["self"]],[R[46]]]],[11,"vzip",E,E,159,[[],["v"]]],[11,R[3774],E,E,160,[[],[T]]],[11,R[3779],E,R[3776],160,[[["outer"]],[T]]],[11,R[3780],E,R[3777],160,[[["outer"]],[T]]],[11,"into",E,E,160,[[],[U]]],[11,"from",E,E,160,[[[T]],[T]]],[11,R[20],E,E,160,[[[U]],[R[3]]]],[11,R[21],E,E,160,[[],[R[3]]]],[11,R[45],E,E,160,[[["self"]],[T]]],[11,R[22],E,E,160,[[["self"]],[T]]],[11,R[26],E,E,160,[[["self"]],[R[46]]]],[11,"vzip",E,E,160,[[],["v"]]],[11,R[3774],E,E,161,[[],[T]]],[11,R[3779],E,R[3776],161,[[["outer"]],[T]]],[11,R[3780],E,R[3777],161,[[["outer"]],[T]]],[11,"into",E,E,161,[[],[U]]],[11,"from",E,E,161,[[[T]],[T]]],[11,R[20],E,E,161,[[[U]],[R[3]]]],[11,R[21],E,E,161,[[],[R[3]]]],[11,R[45],E,E,161,[[["self"]],[T]]],[11,R[22],E,E,161,[[["self"]],[T]]],[11,R[26],E,E,161,[[["self"]],[R[46]]]],[11,"vzip",E,E,161,[[],["v"]]],[11,R[3774],E,E,162,[[],[T]]],[11,R[3779],E,R[3776],162,[[["outer"]],[T]]],[11,R[3780],E,R[3777],162,[[["outer"]],[T]]],[11,"into",E,E,162,[[],[U]]],[11,"from",E,E,162,[[[T]],[T]]],[11,R[20],E,E,162,[[[U]],[R[3]]]],[11,R[21],E,E,162,[[],[R[3]]]],[11,R[45],E,E,162,[[["self"]],[T]]],[11,R[22],E,E,162,[[["self"]],[T]]],[11,R[26],E,E,162,[[["self"]],[R[46]]]],[11,"vzip",E,E,162,[[],["v"]]],[11,R[3774],E,E,163,[[],[T]]],[11,R[3779],E,R[3776],163,[[["outer"]],[T]]],[11,R[3780],E,R[3777],163,[[["outer"]],[T]]],[11,"into",E,E,163,[[],[U]]],[11,"from",E,E,163,[[[T]],[T]]],[11,R[20],E,E,163,[[[U]],[R[3]]]],[11,R[21],E,E,163,[[],[R[3]]]],[11,R[45],E,E,163,[[["self"]],[T]]],[11,R[22],E,E,163,[[["self"]],[T]]],[11,R[26],E,E,163,[[["self"]],[R[46]]]],[11,"vzip",E,E,163,[[],["v"]]],[11,R[3774],E,E,164,[[],[T]]],[11,R[3779],E,R[3776],164,[[["outer"]],[T]]],[11,R[3780],E,R[3777],164,[[["outer"]],[T]]],[11,"into",E,E,164,[[],[U]]],[11,"from",E,E,164,[[[T]],[T]]],[11,R[20],E,E,164,[[[U]],[R[3]]]],[11,R[21],E,E,164,[[],[R[3]]]],[11,R[45],E,E,164,[[["self"]],[T]]],[11,R[22],E,E,164,[[["self"]],[T]]],[11,R[26],E,E,164,[[["self"]],[R[46]]]],[11,"vzip",E,E,164,[[],["v"]]],[11,R[3774],E,E,165,[[],[T]]],[11,R[3779],E,R[3776],165,[[["outer"]],[T]]],[11,R[3780],E,R[3777],165,[[["outer"]],[T]]],[11,"into",E,E,165,[[],[U]]],[11,"from",E,E,165,[[[T]],[T]]],[11,R[20],E,E,165,[[[U]],[R[3]]]],[11,R[21],E,E,165,[[],[R[3]]]],[11,R[45],E,E,165,[[["self"]],[T]]],[11,R[22],E,E,165,[[["self"]],[T]]],[11,R[26],E,E,165,[[["self"]],[R[46]]]],[11,"vzip",E,E,165,[[],["v"]]],[11,R[3774],E,E,166,[[],[T]]],[11,R[3779],E,R[3776],166,[[["outer"]],[T]]],[11,R[3780],E,R[3777],166,[[["outer"]],[T]]],[11,"into",E,E,166,[[],[U]]],[11,"from",E,E,166,[[[T]],[T]]],[11,R[20],E,E,166,[[[U]],[R[3]]]],[11,R[21],E,E,166,[[],[R[3]]]],[11,R[45],E,E,166,[[["self"]],[T]]],[11,R[22],E,E,166,[[["self"]],[T]]],[11,R[26],E,E,166,[[["self"]],[R[46]]]],[11,"vzip",E,E,166,[[],["v"]]],[11,R[3774],E,E,167,[[],[T]]],[11,R[3779],E,R[3776],167,[[["outer"]],[T]]],[11,R[3780],E,R[3777],167,[[["outer"]],[T]]],[11,"into",E,E,167,[[],[U]]],[11,"from",E,E,167,[[[T]],[T]]],[11,R[20],E,E,167,[[[U]],[R[3]]]],[11,R[21],E,E,167,[[],[R[3]]]],[11,R[45],E,E,167,[[["self"]],[T]]],[11,R[22],E,E,167,[[["self"]],[T]]],[11,R[26],E,E,167,[[["self"]],[R[46]]]],[11,"vzip",E,E,167,[[],["v"]]],[11,R[3774],E,E,168,[[],[T]]],[11,R[3779],E,R[3776],168,[[["outer"]],[T]]],[11,R[3780],E,R[3777],168,[[["outer"]],[T]]],[11,"into",E,E,168,[[],[U]]],[11,"from",E,E,168,[[[T]],[T]]],[11,R[20],E,E,168,[[[U]],[R[3]]]],[11,R[21],E,E,168,[[],[R[3]]]],[11,R[45],E,E,168,[[["self"]],[T]]],[11,R[22],E,E,168,[[["self"]],[T]]],[11,R[26],E,E,168,[[["self"]],[R[46]]]],[11,"vzip",E,E,168,[[],["v"]]],[11,R[3774],E,E,169,[[],[T]]],[11,R[3779],E,R[3776],169,[[["outer"]],[T]]],[11,R[3780],E,R[3777],169,[[["outer"]],[T]]],[11,"into",E,E,169,[[],[U]]],[11,"from",E,E,169,[[[T]],[T]]],[11,R[20],E,E,169,[[[U]],[R[3]]]],[11,R[21],E,E,169,[[],[R[3]]]],[11,R[45],E,E,169,[[["self"]],[T]]],[11,R[22],E,E,169,[[["self"]],[T]]],[11,R[26],E,E,169,[[["self"]],[R[46]]]],[11,"vzip",E,E,169,[[],["v"]]],[11,R[3774],E,E,170,[[],[T]]],[11,R[3779],E,R[3776],170,[[["outer"]],[T]]],[11,R[3780],E,R[3777],170,[[["outer"]],[T]]],[11,"into",E,E,170,[[],[U]]],[11,"from",E,E,170,[[[T]],[T]]],[11,R[20],E,E,170,[[[U]],[R[3]]]],[11,R[21],E,E,170,[[],[R[3]]]],[11,R[45],E,E,170,[[["self"]],[T]]],[11,R[22],E,E,170,[[["self"]],[T]]],[11,R[26],E,E,170,[[["self"]],[R[46]]]],[11,"vzip",E,E,170,[[],["v"]]],[11,R[3774],E,E,171,[[],[T]]],[11,R[3779],E,R[3776],171,[[["outer"]],[T]]],[11,R[3780],E,R[3777],171,[[["outer"]],[T]]],[11,"into",E,E,171,[[],[U]]],[11,"from",E,E,171,[[[T]],[T]]],[11,R[20],E,E,171,[[[U]],[R[3]]]],[11,R[21],E,E,171,[[],[R[3]]]],[11,R[45],E,E,171,[[["self"]],[T]]],[11,R[22],E,E,171,[[["self"]],[T]]],[11,R[26],E,E,171,[[["self"]],[R[46]]]],[11,"vzip",E,E,171,[[],["v"]]],[11,R[3774],E,E,172,[[],[T]]],[11,R[3779],E,R[3776],172,[[["outer"]],[T]]],[11,R[3780],E,R[3777],172,[[["outer"]],[T]]],[11,"into",E,E,172,[[],[U]]],[11,"from",E,E,172,[[[T]],[T]]],[11,R[20],E,E,172,[[[U]],[R[3]]]],[11,R[21],E,E,172,[[],[R[3]]]],[11,R[45],E,E,172,[[["self"]],[T]]],[11,R[22],E,E,172,[[["self"]],[T]]],[11,R[26],E,E,172,[[["self"]],[R[46]]]],[11,"vzip",E,E,172,[[],["v"]]],[11,R[3774],E,E,173,[[],[T]]],[11,R[3779],E,R[3776],173,[[["outer"]],[T]]],[11,R[3780],E,R[3777],173,[[["outer"]],[T]]],[11,"into",E,E,173,[[],[U]]],[11,"from",E,E,173,[[[T]],[T]]],[11,R[20],E,E,173,[[[U]],[R[3]]]],[11,R[21],E,E,173,[[],[R[3]]]],[11,R[45],E,E,173,[[["self"]],[T]]],[11,R[22],E,E,173,[[["self"]],[T]]],[11,R[26],E,E,173,[[["self"]],[R[46]]]],[11,"vzip",E,E,173,[[],["v"]]],[11,R[3774],E,E,174,[[],[T]]],[11,R[3779],E,R[3776],174,[[["outer"]],[T]]],[11,R[3780],E,R[3777],174,[[["outer"]],[T]]],[11,"into",E,E,174,[[],[U]]],[11,"from",E,E,174,[[[T]],[T]]],[11,R[20],E,E,174,[[[U]],[R[3]]]],[11,R[21],E,E,174,[[],[R[3]]]],[11,R[45],E,E,174,[[["self"]],[T]]],[11,R[22],E,E,174,[[["self"]],[T]]],[11,R[26],E,E,174,[[["self"]],[R[46]]]],[11,"vzip",E,E,174,[[],["v"]]],[11,R[3774],E,E,175,[[],[T]]],[11,R[3779],E,R[3776],175,[[["outer"]],[T]]],[11,R[3780],E,R[3777],175,[[["outer"]],[T]]],[11,"into",E,E,175,[[],[U]]],[11,"from",E,E,175,[[[T]],[T]]],[11,R[20],E,E,175,[[[U]],[R[3]]]],[11,R[21],E,E,175,[[],[R[3]]]],[11,R[45],E,E,175,[[["self"]],[T]]],[11,R[22],E,E,175,[[["self"]],[T]]],[11,R[26],E,E,175,[[["self"]],[R[46]]]],[11,"vzip",E,E,175,[[],["v"]]],[11,R[3774],E,E,176,[[],[T]]],[11,R[3779],E,R[3776],176,[[["outer"]],[T]]],[11,R[3780],E,R[3777],176,[[["outer"]],[T]]],[11,"into",E,E,176,[[],[U]]],[11,"from",E,E,176,[[[T]],[T]]],[11,R[20],E,E,176,[[[U]],[R[3]]]],[11,R[21],E,E,176,[[],[R[3]]]],[11,R[45],E,E,176,[[["self"]],[T]]],[11,R[22],E,E,176,[[["self"]],[T]]],[11,R[26],E,E,176,[[["self"]],[R[46]]]],[11,"vzip",E,E,176,[[],["v"]]],[11,R[3774],E,E,177,[[],[T]]],[11,R[3779],E,R[3776],177,[[["outer"]],[T]]],[11,R[3780],E,R[3777],177,[[["outer"]],[T]]],[11,"into",E,E,177,[[],[U]]],[11,"from",E,E,177,[[[T]],[T]]],[11,R[20],E,E,177,[[[U]],[R[3]]]],[11,R[21],E,E,177,[[],[R[3]]]],[11,R[45],E,E,177,[[["self"]],[T]]],[11,R[22],E,E,177,[[["self"]],[T]]],[11,R[26],E,E,177,[[["self"]],[R[46]]]],[11,"vzip",E,E,177,[[],["v"]]],[11,R[3774],E,E,178,[[],[T]]],[11,R[3779],E,R[3776],178,[[["outer"]],[T]]],[11,R[3780],E,R[3777],178,[[["outer"]],[T]]],[11,"into",E,E,178,[[],[U]]],[11,"from",E,E,178,[[[T]],[T]]],[11,R[20],E,E,178,[[[U]],[R[3]]]],[11,R[21],E,E,178,[[],[R[3]]]],[11,R[45],E,E,178,[[["self"]],[T]]],[11,R[22],E,E,178,[[["self"]],[T]]],[11,R[26],E,E,178,[[["self"]],[R[46]]]],[11,"vzip",E,E,178,[[],["v"]]],[11,R[3774],E,E,179,[[],[T]]],[11,R[3779],E,R[3776],179,[[["outer"]],[T]]],[11,R[3780],E,R[3777],179,[[["outer"]],[T]]],[11,"into",E,E,179,[[],[U]]],[11,"from",E,E,179,[[[T]],[T]]],[11,R[20],E,E,179,[[[U]],[R[3]]]],[11,R[21],E,E,179,[[],[R[3]]]],[11,R[45],E,E,179,[[["self"]],[T]]],[11,R[22],E,E,179,[[["self"]],[T]]],[11,R[26],E,E,179,[[["self"]],[R[46]]]],[11,"vzip",E,E,179,[[],["v"]]],[11,R[3774],E,E,180,[[],[T]]],[11,R[3779],E,R[3776],180,[[["outer"]],[T]]],[11,R[3780],E,R[3777],180,[[["outer"]],[T]]],[11,"into",E,E,180,[[],[U]]],[11,"from",E,E,180,[[[T]],[T]]],[11,R[20],E,E,180,[[[U]],[R[3]]]],[11,R[21],E,E,180,[[],[R[3]]]],[11,R[45],E,E,180,[[["self"]],[T]]],[11,R[22],E,E,180,[[["self"]],[T]]],[11,R[26],E,E,180,[[["self"]],[R[46]]]],[11,"vzip",E,E,180,[[],["v"]]],[11,R[3774],E,E,181,[[],[T]]],[11,R[3779],E,R[3776],181,[[["outer"]],[T]]],[11,R[3780],E,R[3777],181,[[["outer"]],[T]]],[11,"into",E,E,181,[[],[U]]],[11,"from",E,E,181,[[[T]],[T]]],[11,R[20],E,E,181,[[[U]],[R[3]]]],[11,R[21],E,E,181,[[],[R[3]]]],[11,R[45],E,E,181,[[["self"]],[T]]],[11,R[22],E,E,181,[[["self"]],[T]]],[11,R[26],E,E,181,[[["self"]],[R[46]]]],[11,"vzip",E,E,181,[[],["v"]]],[11,R[3774],E,E,182,[[],[T]]],[11,R[3779],E,R[3776],182,[[["outer"]],[T]]],[11,R[3780],E,R[3777],182,[[["outer"]],[T]]],[11,"into",E,E,182,[[],[U]]],[11,"from",E,E,182,[[[T]],[T]]],[11,R[20],E,E,182,[[[U]],[R[3]]]],[11,R[21],E,E,182,[[],[R[3]]]],[11,R[45],E,E,182,[[["self"]],[T]]],[11,R[22],E,E,182,[[["self"]],[T]]],[11,R[26],E,E,182,[[["self"]],[R[46]]]],[11,"vzip",E,E,182,[[],["v"]]],[11,R[3774],E,E,183,[[],[T]]],[11,R[3779],E,R[3776],183,[[["outer"]],[T]]],[11,R[3780],E,R[3777],183,[[["outer"]],[T]]],[11,"into",E,E,183,[[],[U]]],[11,"from",E,E,183,[[[T]],[T]]],[11,R[20],E,E,183,[[[U]],[R[3]]]],[11,R[21],E,E,183,[[],[R[3]]]],[11,R[45],E,E,183,[[["self"]],[T]]],[11,R[22],E,E,183,[[["self"]],[T]]],[11,R[26],E,E,183,[[["self"]],[R[46]]]],[11,"vzip",E,E,183,[[],["v"]]],[11,R[3774],E,E,184,[[],[T]]],[11,R[3779],E,R[3776],184,[[["outer"]],[T]]],[11,R[3780],E,R[3777],184,[[["outer"]],[T]]],[11,"into",E,E,184,[[],[U]]],[11,"from",E,E,184,[[[T]],[T]]],[11,R[20],E,E,184,[[[U]],[R[3]]]],[11,R[21],E,E,184,[[],[R[3]]]],[11,R[45],E,E,184,[[["self"]],[T]]],[11,R[22],E,E,184,[[["self"]],[T]]],[11,R[26],E,E,184,[[["self"]],[R[46]]]],[11,"vzip",E,E,184,[[],["v"]]],[11,R[3774],E,E,185,[[],[T]]],[11,R[3779],E,R[3776],185,[[["outer"]],[T]]],[11,R[3780],E,R[3777],185,[[["outer"]],[T]]],[11,"into",E,E,185,[[],[U]]],[11,"from",E,E,185,[[[T]],[T]]],[11,R[20],E,E,185,[[[U]],[R[3]]]],[11,R[21],E,E,185,[[],[R[3]]]],[11,R[45],E,E,185,[[["self"]],[T]]],[11,R[22],E,E,185,[[["self"]],[T]]],[11,R[26],E,E,185,[[["self"]],[R[46]]]],[11,"vzip",E,E,185,[[],["v"]]],[11,R[3774],E,E,186,[[],[T]]],[11,R[3779],E,R[3776],186,[[["outer"]],[T]]],[11,R[3780],E,R[3777],186,[[["outer"]],[T]]],[11,"into",E,E,186,[[],[U]]],[11,"from",E,E,186,[[[T]],[T]]],[11,R[20],E,E,186,[[[U]],[R[3]]]],[11,R[21],E,E,186,[[],[R[3]]]],[11,R[45],E,E,186,[[["self"]],[T]]],[11,R[22],E,E,186,[[["self"]],[T]]],[11,R[26],E,E,186,[[["self"]],[R[46]]]],[11,"vzip",E,E,186,[[],["v"]]],[11,R[3774],E,E,187,[[],[T]]],[11,R[3779],E,R[3776],187,[[["outer"]],[T]]],[11,R[3780],E,R[3777],187,[[["outer"]],[T]]],[11,"into",E,E,187,[[],[U]]],[11,"from",E,E,187,[[[T]],[T]]],[11,R[20],E,E,187,[[[U]],[R[3]]]],[11,R[21],E,E,187,[[],[R[3]]]],[11,R[45],E,E,187,[[["self"]],[T]]],[11,R[22],E,E,187,[[["self"]],[T]]],[11,R[26],E,E,187,[[["self"]],[R[46]]]],[11,"vzip",E,E,187,[[],["v"]]],[11,R[3774],E,E,188,[[],[T]]],[11,R[3779],E,R[3776],188,[[["outer"]],[T]]],[11,R[3780],E,R[3777],188,[[["outer"]],[T]]],[11,"into",E,E,188,[[],[U]]],[11,"from",E,E,188,[[[T]],[T]]],[11,R[20],E,E,188,[[[U]],[R[3]]]],[11,R[21],E,E,188,[[],[R[3]]]],[11,R[45],E,E,188,[[["self"]],[T]]],[11,R[22],E,E,188,[[["self"]],[T]]],[11,R[26],E,E,188,[[["self"]],[R[46]]]],[11,"vzip",E,E,188,[[],["v"]]],[11,R[3774],E,E,189,[[],[T]]],[11,R[3779],E,R[3776],189,[[["outer"]],[T]]],[11,R[3780],E,R[3777],189,[[["outer"]],[T]]],[11,"into",E,E,189,[[],[U]]],[11,"from",E,E,189,[[[T]],[T]]],[11,R[20],E,E,189,[[[U]],[R[3]]]],[11,R[21],E,E,189,[[],[R[3]]]],[11,R[45],E,E,189,[[["self"]],[T]]],[11,R[22],E,E,189,[[["self"]],[T]]],[11,R[26],E,E,189,[[["self"]],[R[46]]]],[11,"vzip",E,E,189,[[],["v"]]],[11,R[3774],E,E,190,[[],[T]]],[11,R[3779],E,R[3776],190,[[["outer"]],[T]]],[11,R[3780],E,R[3777],190,[[["outer"]],[T]]],[11,"into",E,E,190,[[],[U]]],[11,"from",E,E,190,[[[T]],[T]]],[11,R[20],E,E,190,[[[U]],[R[3]]]],[11,R[21],E,E,190,[[],[R[3]]]],[11,R[45],E,E,190,[[["self"]],[T]]],[11,R[22],E,E,190,[[["self"]],[T]]],[11,R[26],E,E,190,[[["self"]],[R[46]]]],[11,"vzip",E,E,190,[[],["v"]]],[11,R[3774],E,E,191,[[],[T]]],[11,R[3779],E,R[3776],191,[[["outer"]],[T]]],[11,R[3780],E,R[3777],191,[[["outer"]],[T]]],[11,"into",E,E,191,[[],[U]]],[11,"from",E,E,191,[[[T]],[T]]],[11,R[20],E,E,191,[[[U]],[R[3]]]],[11,R[21],E,E,191,[[],[R[3]]]],[11,R[45],E,E,191,[[["self"]],[T]]],[11,R[22],E,E,191,[[["self"]],[T]]],[11,R[26],E,E,191,[[["self"]],[R[46]]]],[11,"vzip",E,E,191,[[],["v"]]],[11,R[3782],R[3785],E,27,[[[T]],["outer"]]],[11,R[3774],E,E,27,[[],[T]]],[11,R[3733],E,E,27,[[["str"]],[[R[3724]],[R[3],[R[3724]]]]]],[11,R[3783],E,E,27,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[3779],E,R[3776],27,[[["outer"]],[T]]],[11,R[3780],E,R[3777],27,[[["outer"]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[24],E,E,27,[[["self"]],[T]]],[11,R[25],E,E,27,[[["self"],[T]]]],[11,R[78],E,E,27,[[["self"]],["string"]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,R[292],E,E,27,[[["self"]],["usize"]]],[11,R[3525],E,E,27,[[["self"],["f"]],["r"]]],[11,"encode",E,E,27,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,27,[[["w"],["self"]]]],[11,"decode",E,E,27,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,27,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,27,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,R[3708],E,E,27,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,27,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,27,[[["self"]]]],[11,R[2628],E,E,27,[[]]],[11,R[3774],E,E,32,[[],[T]]],[11,R[3779],E,R[3776],32,[[["outer"]],[T]]],[11,R[3780],E,R[3777],32,[[["outer"]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[24],E,E,32,[[["self"]],[T]]],[11,R[25],E,E,32,[[["self"],[T]]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[3774],E,E,28,[[],[T]]],[11,R[3779],E,R[3776],28,[[["outer"]],[T]]],[11,R[3780],E,R[3777],28,[[["outer"]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[24],E,E,28,[[["self"]],[T]]],[11,R[25],E,E,28,[[["self"],[T]]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,R[292],E,E,28,[[["self"]],["usize"]]],[11,R[3525],E,E,28,[[["self"],["f"]],["r"]]],[11,"encode",E,E,28,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,28,[[["w"],["self"]]]],[11,"decode",E,E,28,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,28,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,28,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,R[3708],E,E,28,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,28,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,28,[[["self"]]]],[11,R[2628],E,E,28,[[]]],[11,R[3774],E,E,29,[[],[T]]],[11,R[3779],E,R[3776],29,[[["outer"]],[T]]],[11,R[3780],E,R[3777],29,[[["outer"]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[24],E,E,29,[[["self"]],[T]]],[11,R[25],E,E,29,[[["self"],[T]]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,R[292],E,E,29,[[["self"]],["usize"]]],[11,R[3525],E,E,29,[[["self"],["f"]],["r"]]],[11,"encode",E,E,29,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,29,[[["w"],["self"]]]],[11,"decode",E,E,29,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,29,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,29,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,R[3774],E,E,30,[[],[T]]],[11,R[3779],E,R[3776],30,[[["outer"]],[T]]],[11,R[3780],E,R[3777],30,[[["outer"]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[24],E,E,30,[[["self"]],[T]]],[11,R[25],E,E,30,[[["self"],[T]]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,R[3774],E,E,31,[[],[T]]],[11,R[3779],E,R[3776],31,[[["outer"]],[T]]],[11,R[3780],E,R[3777],31,[[["outer"]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,R[3782],R[3786],E,33,[[[T]],["outer"]]],[11,R[3774],E,E,33,[[],[T]]],[11,R[3733],E,E,33,[[["str"]],[[R[3724]],[R[3],[R[3724]]]]]],[11,R[3783],E,E,33,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[3779],E,R[3776],33,[[["outer"]],[T]]],[11,R[3780],E,R[3777],33,[[["outer"]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[24],E,E,33,[[["self"]],[T]]],[11,R[25],E,E,33,[[["self"],[T]]]],[11,R[78],E,E,33,[[["self"]],["string"]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,R[292],E,E,33,[[["self"]],["usize"]]],[11,R[3525],E,E,33,[[["self"],["f"]],["r"]]],[11,"encode",E,E,33,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,33,[[["w"],["self"]]]],[11,"decode",E,E,33,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,33,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,33,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,R[3708],E,E,33,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,33,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,33,[[["self"]]]],[11,R[2628],E,E,33,[[]]],[11,R[3774],E,E,36,[[],[T]]],[11,R[3779],E,R[3776],36,[[["outer"]],[T]]],[11,R[3780],E,R[3777],36,[[["outer"]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[24],E,E,36,[[["self"]],[T]]],[11,R[25],E,E,36,[[["self"],[T]]]],[11,R[20],E,E,36,[[[U]],[R[3]]]],[11,R[21],E,E,36,[[],[R[3]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[22],E,E,36,[[["self"]],[T]]],[11,R[26],E,E,36,[[["self"]],[R[46]]]],[11,"vzip",E,E,36,[[],["v"]]],[11,R[3774],E,E,34,[[],[T]]],[11,R[3779],E,R[3776],34,[[["outer"]],[T]]],[11,R[3780],E,R[3777],34,[[["outer"]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[24],E,E,34,[[["self"]],[T]]],[11,R[25],E,E,34,[[["self"],[T]]]],[11,R[20],E,E,34,[[[U]],[R[3]]]],[11,R[21],E,E,34,[[],[R[3]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[["self"]],[T]]],[11,R[26],E,E,34,[[["self"]],[R[46]]]],[11,R[292],E,E,34,[[["self"]],["usize"]]],[11,R[3525],E,E,34,[[["self"],["f"]],["r"]]],[11,"encode",E,E,34,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,34,[[["w"],["self"]]]],[11,"decode",E,E,34,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,34,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,34,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,R[3708],E,E,34,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,34,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,34,[[["self"]]]],[11,R[2628],E,E,34,[[]]],[11,R[3774],E,E,35,[[],[T]]],[11,R[3779],E,R[3776],35,[[["outer"]],[T]]],[11,R[3780],E,R[3777],35,[[["outer"]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[24],E,E,35,[[["self"]],[T]]],[11,R[25],E,E,35,[[["self"],[T]]]],[11,R[20],E,E,35,[[[U]],[R[3]]]],[11,R[21],E,E,35,[[],[R[3]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[["self"]],[T]]],[11,R[26],E,E,35,[[["self"]],[R[46]]]],[11,"vzip",E,E,35,[[],["v"]]],[11,R[3774],R[3787],E,40,[[],[T]]],[11,R[3779],E,R[3776],40,[[["outer"]],[T]]],[11,R[3780],E,R[3777],40,[[["outer"]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[24],E,E,40,[[["self"]],[T]]],[11,R[25],E,E,40,[[["self"],[T]]]],[11,R[20],E,E,40,[[[U]],[R[3]]]],[11,R[21],E,E,40,[[],[R[3]]]],[11,R[45],E,E,40,[[["self"]],[T]]],[11,R[22],E,E,40,[[["self"]],[T]]],[11,R[26],E,E,40,[[["self"]],[R[46]]]],[11,R[292],E,E,40,[[["self"]],["usize"]]],[11,R[3525],E,E,40,[[["self"],["f"]],["r"]]],[11,"encode",E,E,40,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,40,[[["w"],["self"]]]],[11,"decode",E,E,40,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,40,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,40,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"clear",E,E,40,[[["self"]]]],[11,R[2628],E,E,40,[[]]],[11,R[3774],E,E,41,[[],[T]]],[11,R[3779],E,R[3776],41,[[["outer"]],[T]]],[11,R[3780],E,R[3777],41,[[["outer"]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[24],E,E,41,[[["self"]],[T]]],[11,R[25],E,E,41,[[["self"],[T]]]],[11,R[20],E,E,41,[[[U]],[R[3]]]],[11,R[21],E,E,41,[[],[R[3]]]],[11,R[45],E,E,41,[[["self"]],[T]]],[11,R[22],E,E,41,[[["self"]],[T]]],[11,R[26],E,E,41,[[["self"]],[R[46]]]],[11,"vzip",E,E,41,[[],["v"]]],[11,R[3782],E,E,37,[[[T]],["outer"]]],[11,R[3774],E,E,37,[[],[T]]],[11,R[3733],E,E,37,[[["str"]],[[R[3724]],[R[3],[R[3724]]]]]],[11,R[3783],E,E,37,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,R[3779],E,R[3776],37,[[["outer"]],[T]]],[11,R[3780],E,R[3777],37,[[["outer"]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[24],E,E,37,[[["self"]],[T]]],[11,R[25],E,E,37,[[["self"],[T]]]],[11,R[78],E,E,37,[[["self"]],["string"]]],[11,R[20],E,E,37,[[[U]],[R[3]]]],[11,R[21],E,E,37,[[],[R[3]]]],[11,R[45],E,E,37,[[["self"]],[T]]],[11,R[22],E,E,37,[[["self"]],[T]]],[11,R[26],E,E,37,[[["self"]],[R[46]]]],[11,R[292],E,E,37,[[["self"]],["usize"]]],[11,R[3525],E,E,37,[[["self"],["f"]],["r"]]],[11,"encode",E,E,37,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,37,[[["w"],["self"]]]],[11,"decode",E,E,37,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,37,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,37,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,37,[[],["v"]]],[11,"clear",E,E,37,[[["self"]]]],[11,R[2628],E,E,37,[[]]],[11,R[3774],E,E,38,[[],[T]]],[11,R[3779],E,R[3776],38,[[["outer"]],[T]]],[11,R[3780],E,R[3777],38,[[["outer"]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[24],E,E,38,[[["self"]],[T]]],[11,R[25],E,E,38,[[["self"],[T]]]],[11,R[20],E,E,38,[[[U]],[R[3]]]],[11,R[21],E,E,38,[[],[R[3]]]],[11,R[45],E,E,38,[[["self"]],[T]]],[11,R[22],E,E,38,[[["self"]],[T]]],[11,R[26],E,E,38,[[["self"]],[R[46]]]],[11,"vzip",E,E,38,[[],["v"]]],[11,R[3774],E,E,39,[[],[T]]],[11,R[3779],E,R[3776],39,[[["outer"]],[T]]],[11,R[3780],E,R[3777],39,[[["outer"]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[20],E,E,39,[[[U]],[R[3]]]],[11,R[21],E,E,39,[[],[R[3]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[["self"]],[T]]],[11,R[26],E,E,39,[[["self"]],[R[46]]]],[11,"vzip",E,E,39,[[],["v"]]],[11,R[3774],R[3761],E,42,[[],[T]]],[11,R[3779],E,R[3776],42,[[["outer"]],[T]]],[11,R[3780],E,R[3777],42,[[["outer"]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[24],E,E,42,[[["self"]],[T]]],[11,R[25],E,E,42,[[["self"],[T]]]],[11,R[20],E,E,42,[[[U]],[R[3]]]],[11,R[21],E,E,42,[[],[R[3]]]],[11,R[45],E,E,42,[[["self"]],[T]]],[11,R[22],E,E,42,[[["self"]],[T]]],[11,R[26],E,E,42,[[["self"]],[R[46]]]],[11,R[292],E,E,42,[[["self"]],["usize"]]],[11,R[3525],E,E,42,[[["self"],["f"]],["r"]]],[11,"encode",E,E,42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,42,[[["w"],["self"]]]],[11,"decode",E,E,42,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,42,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,42,[[],["v"]]],[11,R[3708],E,E,42,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,42,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3774],E,E,43,[[],[T]]],[11,R[3779],E,R[3776],43,[[["outer"]],[T]]],[11,R[3780],E,R[3777],43,[[["outer"]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[24],E,E,43,[[["self"]],[T]]],[11,R[25],E,E,43,[[["self"],[T]]]],[11,R[20],E,E,43,[[[U]],[R[3]]]],[11,R[21],E,E,43,[[],[R[3]]]],[11,R[45],E,E,43,[[["self"]],[T]]],[11,R[22],E,E,43,[[["self"]],[T]]],[11,R[26],E,E,43,[[["self"]],[R[46]]]],[11,R[292],E,E,43,[[["self"]],["usize"]]],[11,R[3525],E,E,43,[[["self"],["f"]],["r"]]],[11,"encode",E,E,43,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,43,[[["w"],["self"]]]],[11,"decode",E,E,43,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,43,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,43,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,43,[[],["v"]]],[11,R[3708],E,E,43,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,43,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3774],E,E,44,[[],[T]]],[11,R[3779],E,R[3776],44,[[["outer"]],[T]]],[11,R[3780],E,R[3777],44,[[["outer"]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[24],E,E,44,[[["self"]],[T]]],[11,R[25],E,E,44,[[["self"],[T]]]],[11,R[20],E,E,44,[[[U]],[R[3]]]],[11,R[21],E,E,44,[[],[R[3]]]],[11,R[45],E,E,44,[[["self"]],[T]]],[11,R[22],E,E,44,[[["self"]],[T]]],[11,R[26],E,E,44,[[["self"]],[R[46]]]],[11,R[292],E,E,44,[[["self"]],["usize"]]],[11,R[3525],E,E,44,[[["self"],["f"]],["r"]]],[11,"encode",E,E,44,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,44,[[["w"],["self"]]]],[11,"decode",E,E,44,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,44,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,44,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,44,[[],["v"]]],[11,R[3708],E,E,44,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,44,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,44,[[["self"]]]],[11,R[2628],E,E,44,[[]]],[11,R[3774],E,E,45,[[],[T]]],[11,R[3779],E,R[3776],45,[[["outer"]],[T]]],[11,R[3780],E,R[3777],45,[[["outer"]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[24],E,E,45,[[["self"]],[T]]],[11,R[25],E,E,45,[[["self"],[T]]]],[11,R[20],E,E,45,[[[U]],[R[3]]]],[11,R[21],E,E,45,[[],[R[3]]]],[11,R[45],E,E,45,[[["self"]],[T]]],[11,R[22],E,E,45,[[["self"]],[T]]],[11,R[26],E,E,45,[[["self"]],[R[46]]]],[11,R[292],E,E,45,[[["self"]],["usize"]]],[11,R[3525],E,E,45,[[["self"],["f"]],["r"]]],[11,"encode",E,E,45,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,45,[[["w"],["self"]]]],[11,"decode",E,E,45,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,45,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,45,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,45,[[],["v"]]],[11,R[3708],E,E,45,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,45,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3774],E,E,61,[[],[T]]],[11,R[3779],E,R[3776],61,[[["outer"]],[T]]],[11,R[3780],E,R[3777],61,[[["outer"]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[24],E,E,61,[[["self"]],[T]]],[11,R[25],E,E,61,[[["self"],[T]]]],[11,R[20],E,E,61,[[[U]],[R[3]]]],[11,R[21],E,E,61,[[],[R[3]]]],[11,R[45],E,E,61,[[["self"]],[T]]],[11,R[22],E,E,61,[[["self"]],[T]]],[11,R[26],E,E,61,[[["self"]],[R[46]]]],[11,R[292],E,E,61,[[["self"]],["usize"]]],[11,R[3525],E,E,61,[[["self"],["f"]],["r"]]],[11,"encode",E,E,61,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,61,[[["w"],["self"]]]],[11,"decode",E,E,61,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,61,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,61,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,61,[[],["v"]]],[11,R[3708],E,E,61,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,61,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,61,[[["self"]]]],[11,R[2628],E,E,61,[[]]],[11,R[3774],E,E,60,[[],[T]]],[11,R[3779],E,R[3776],60,[[["outer"]],[T]]],[11,R[3780],E,R[3777],60,[[["outer"]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[24],E,E,60,[[["self"]],[T]]],[11,R[25],E,E,60,[[["self"],[T]]]],[11,R[20],E,E,60,[[[U]],[R[3]]]],[11,R[21],E,E,60,[[],[R[3]]]],[11,R[45],E,E,60,[[["self"]],[T]]],[11,R[22],E,E,60,[[["self"]],[T]]],[11,R[26],E,E,60,[[["self"]],[R[46]]]],[11,R[292],E,E,60,[[["self"]],["usize"]]],[11,R[3525],E,E,60,[[["self"],["f"]],["r"]]],[11,"encode",E,E,60,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,60,[[["w"],["self"]]]],[11,"decode",E,E,60,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,60,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,60,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,60,[[],["v"]]],[11,R[3708],E,E,60,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,60,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,60,[[["self"]]]],[11,R[2628],E,E,60,[[]]],[11,R[3774],E,E,62,[[],[T]]],[11,R[3779],E,R[3776],62,[[["outer"]],[T]]],[11,R[3780],E,R[3777],62,[[["outer"]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[24],E,E,62,[[["self"]],[T]]],[11,R[25],E,E,62,[[["self"],[T]]]],[11,R[20],E,E,62,[[[U]],[R[3]]]],[11,R[21],E,E,62,[[],[R[3]]]],[11,R[45],E,E,62,[[["self"]],[T]]],[11,R[22],E,E,62,[[["self"]],[T]]],[11,R[26],E,E,62,[[["self"]],[R[46]]]],[11,"vzip",E,E,62,[[],["v"]]],[11,R[3774],E,E,63,[[],[T]]],[11,R[3779],E,R[3776],63,[[["outer"]],[T]]],[11,R[3780],E,R[3777],63,[[["outer"]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[20],E,E,63,[[[U]],[R[3]]]],[11,R[21],E,E,63,[[],[R[3]]]],[11,R[45],E,E,63,[[["self"]],[T]]],[11,R[22],E,E,63,[[["self"]],[T]]],[11,R[26],E,E,63,[[["self"]],[R[46]]]],[11,"vzip",E,E,63,[[],["v"]]],[11,R[3774],E,E,46,[[],[T]]],[11,R[3779],E,R[3776],46,[[["outer"]],[T]]],[11,R[3780],E,R[3777],46,[[["outer"]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[20],E,E,46,[[[U]],[R[3]]]],[11,R[21],E,E,46,[[],[R[3]]]],[11,R[45],E,E,46,[[["self"]],[T]]],[11,R[22],E,E,46,[[["self"]],[T]]],[11,R[26],E,E,46,[[["self"]],[R[46]]]],[11,"vzip",E,E,46,[[],["v"]]],[11,R[3774],E,E,47,[[],[T]]],[11,R[3779],E,R[3776],47,[[["outer"]],[T]]],[11,R[3780],E,R[3777],47,[[["outer"]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[20],E,E,47,[[[U]],[R[3]]]],[11,R[21],E,E,47,[[],[R[3]]]],[11,R[45],E,E,47,[[["self"]],[T]]],[11,R[22],E,E,47,[[["self"]],[T]]],[11,R[26],E,E,47,[[["self"]],[R[46]]]],[11,"vzip",E,E,47,[[],["v"]]],[11,R[3774],E,E,48,[[],[T]]],[11,R[3779],E,R[3776],48,[[["outer"]],[T]]],[11,R[3780],E,R[3777],48,[[["outer"]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[24],E,E,48,[[["self"]],[T]]],[11,R[25],E,E,48,[[["self"],[T]]]],[11,R[20],E,E,48,[[[U]],[R[3]]]],[11,R[21],E,E,48,[[],[R[3]]]],[11,R[45],E,E,48,[[["self"]],[T]]],[11,R[22],E,E,48,[[["self"]],[T]]],[11,R[26],E,E,48,[[["self"]],[R[46]]]],[11,R[292],E,E,48,[[["self"]],["usize"]]],[11,R[3525],E,E,48,[[["self"],["f"]],["r"]]],[11,"encode",E,E,48,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,48,[[["w"],["self"]]]],[11,"decode",E,E,48,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,48,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,48,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,48,[[],["v"]]],[11,R[3708],E,E,48,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,48,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3774],E,E,49,[[],[T]]],[11,R[3779],E,R[3776],49,[[["outer"]],[T]]],[11,R[3780],E,R[3777],49,[[["outer"]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[24],E,E,49,[[["self"]],[T]]],[11,R[25],E,E,49,[[["self"],[T]]]],[11,R[20],E,E,49,[[[U]],[R[3]]]],[11,R[21],E,E,49,[[],[R[3]]]],[11,R[45],E,E,49,[[["self"]],[T]]],[11,R[22],E,E,49,[[["self"]],[T]]],[11,R[26],E,E,49,[[["self"]],[R[46]]]],[11,R[292],E,E,49,[[["self"]],["usize"]]],[11,R[3525],E,E,49,[[["self"],["f"]],["r"]]],[11,"encode",E,E,49,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,49,[[["w"],["self"]]]],[11,"decode",E,E,49,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,49,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,49,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,49,[[],["v"]]],[11,R[3708],E,E,49,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,49,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3774],E,E,50,[[],[T]]],[11,R[3779],E,R[3776],50,[[["outer"]],[T]]],[11,R[3780],E,R[3777],50,[[["outer"]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[24],E,E,50,[[["self"]],[T]]],[11,R[25],E,E,50,[[["self"],[T]]]],[11,R[20],E,E,50,[[[U]],[R[3]]]],[11,R[21],E,E,50,[[],[R[3]]]],[11,R[45],E,E,50,[[["self"]],[T]]],[11,R[22],E,E,50,[[["self"]],[T]]],[11,R[26],E,E,50,[[["self"]],[R[46]]]],[11,R[292],E,E,50,[[["self"]],["usize"]]],[11,R[3525],E,E,50,[[["self"],["f"]],["r"]]],[11,"encode",E,E,50,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,50,[[["w"],["self"]]]],[11,"decode",E,E,50,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,50,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,50,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,50,[[],["v"]]],[11,R[3708],E,E,50,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,50,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3774],E,E,51,[[],[T]]],[11,R[3779],E,R[3776],51,[[["outer"]],[T]]],[11,R[3780],E,R[3777],51,[[["outer"]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[24],E,E,51,[[["self"]],[T]]],[11,R[25],E,E,51,[[["self"],[T]]]],[11,R[20],E,E,51,[[[U]],[R[3]]]],[11,R[21],E,E,51,[[],[R[3]]]],[11,R[45],E,E,51,[[["self"]],[T]]],[11,R[22],E,E,51,[[["self"]],[T]]],[11,R[26],E,E,51,[[["self"]],[R[46]]]],[11,"vzip",E,E,51,[[],["v"]]],[11,R[3774],R[3788],E,192,[[],[T]]],[11,R[3779],E,R[3776],192,[[["outer"]],[T]]],[11,R[3780],E,R[3777],192,[[["outer"]],[T]]],[11,"into",E,E,192,[[],[U]]],[11,"from",E,E,192,[[[T]],[T]]],[11,R[24],E,E,192,[[["self"]],[T]]],[11,R[25],E,E,192,[[["self"],[T]]]],[11,R[20],E,E,192,[[[U]],[R[3]]]],[11,R[21],E,E,192,[[],[R[3]]]],[11,R[45],E,E,192,[[["self"]],[T]]],[11,R[22],E,E,192,[[["self"]],[T]]],[11,R[26],E,E,192,[[["self"]],[R[46]]]],[11,"vzip",E,E,192,[[],["v"]]],[11,"clear",E,E,192,[[["self"]]]],[11,R[2628],E,E,192,[[]]],[11,R[3774],R[3789],E,52,[[],[T]]],[11,R[3779],E,R[3776],52,[[["outer"]],[T]]],[11,R[3780],E,R[3777],52,[[["outer"]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[20],E,E,52,[[[U]],[R[3]]]],[11,R[21],E,E,52,[[],[R[3]]]],[11,R[45],E,E,52,[[["self"]],[T]]],[11,R[22],E,E,52,[[["self"]],[T]]],[11,R[26],E,E,52,[[["self"]],[R[46]]]],[11,"vzip",E,E,52,[[],["v"]]],[11,"clear",E,E,52,[[["self"]]]],[11,R[2628],E,E,52,[[]]],[11,R[3774],E,E,53,[[],[T]]],[11,R[3779],E,R[3776],53,[[["outer"]],[T]]],[11,R[3780],E,R[3777],53,[[["outer"]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[20],E,E,53,[[[U]],[R[3]]]],[11,R[21],E,E,53,[[],[R[3]]]],[11,R[45],E,E,53,[[["self"]],[T]]],[11,R[22],E,E,53,[[["self"]],[T]]],[11,R[26],E,E,53,[[["self"]],[R[46]]]],[11,"vzip",E,E,53,[[],["v"]]],[11,"clear",E,E,53,[[["self"]]]],[11,R[2628],E,E,53,[[]]],[11,R[3774],E,E,54,[[],[T]]],[11,R[3779],E,R[3776],54,[[["outer"]],[T]]],[11,R[3780],E,R[3777],54,[[["outer"]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[24],E,E,54,[[["self"]],[T]]],[11,R[25],E,E,54,[[["self"],[T]]]],[11,R[20],E,E,54,[[[U]],[R[3]]]],[11,R[21],E,E,54,[[],[R[3]]]],[11,R[45],E,E,54,[[["self"]],[T]]],[11,R[22],E,E,54,[[["self"]],[T]]],[11,R[26],E,E,54,[[["self"]],[R[46]]]],[11,"vzip",E,E,54,[[],["v"]]],[11,"clear",E,E,54,[[["self"]]]],[11,R[2628],E,E,54,[[]]],[11,R[3774],E,E,55,[[],[T]]],[11,R[3779],E,R[3776],55,[[["outer"]],[T]]],[11,R[3780],E,R[3777],55,[[["outer"]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[20],E,E,55,[[[U]],[R[3]]]],[11,R[21],E,E,55,[[],[R[3]]]],[11,R[45],E,E,55,[[["self"]],[T]]],[11,R[22],E,E,55,[[["self"]],[T]]],[11,R[26],E,E,55,[[["self"]],[R[46]]]],[11,"vzip",E,E,55,[[],["v"]]],[11,"clear",E,E,55,[[["self"]]]],[11,R[2628],E,E,55,[[]]],[11,R[3774],E,E,56,[[],[T]]],[11,R[3779],E,R[3776],56,[[["outer"]],[T]]],[11,R[3780],E,R[3777],56,[[["outer"]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[20],E,E,56,[[[U]],[R[3]]]],[11,R[21],E,E,56,[[],[R[3]]]],[11,R[45],E,E,56,[[["self"]],[T]]],[11,R[22],E,E,56,[[["self"]],[T]]],[11,R[26],E,E,56,[[["self"]],[R[46]]]],[11,"vzip",E,E,56,[[],["v"]]],[11,"clear",E,E,56,[[["self"]]]],[11,R[2628],E,E,56,[[]]],[11,R[3774],R[3790],E,193,[[],[T]]],[11,R[3779],E,R[3776],193,[[["outer"]],[T]]],[11,R[3780],E,R[3777],193,[[["outer"]],[T]]],[11,"into",E,E,193,[[],[U]]],[11,"from",E,E,193,[[[T]],[T]]],[11,R[20],E,E,193,[[[U]],[R[3]]]],[11,R[21],E,E,193,[[],[R[3]]]],[11,R[45],E,E,193,[[["self"]],[T]]],[11,R[22],E,E,193,[[["self"]],[T]]],[11,R[26],E,E,193,[[["self"]],[R[46]]]],[11,R[292],E,E,193,[[["self"]],["usize"]]],[11,R[3525],E,E,193,[[["self"],["f"]],["r"]]],[11,"encode",E,E,193,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,193,[[["w"],["self"]]]],[11,"decode",E,E,193,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,193,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,193,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,193,[[],["v"]]],[11,R[3774],E,E,64,[[],[T]]],[11,R[3779],E,R[3776],64,[[["outer"]],[T]]],[11,R[3780],E,R[3777],64,[[["outer"]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[24],E,E,64,[[["self"]],[T]]],[11,R[25],E,E,64,[[["self"],[T]]]],[11,R[20],E,E,64,[[[U]],[R[3]]]],[11,R[21],E,E,64,[[],[R[3]]]],[11,R[45],E,E,64,[[["self"]],[T]]],[11,R[22],E,E,64,[[["self"]],[T]]],[11,R[26],E,E,64,[[["self"]],[R[46]]]],[11,R[292],E,E,64,[[["self"]],["usize"]]],[11,R[3525],E,E,64,[[["self"],["f"]],["r"]]],[11,"encode",E,E,64,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,64,[[["w"],["self"]]]],[11,"decode",E,E,64,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,64,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,64,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,64,[[],["v"]]],[11,R[3774],E,E,65,[[],[T]]],[11,R[3779],E,R[3776],65,[[["outer"]],[T]]],[11,R[3780],E,R[3777],65,[[["outer"]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[24],E,E,65,[[["self"]],[T]]],[11,R[25],E,E,65,[[["self"],[T]]]],[11,R[20],E,E,65,[[[U]],[R[3]]]],[11,R[21],E,E,65,[[],[R[3]]]],[11,R[45],E,E,65,[[["self"]],[T]]],[11,R[22],E,E,65,[[["self"]],[T]]],[11,R[26],E,E,65,[[["self"]],[R[46]]]],[11,R[292],E,E,65,[[["self"]],["usize"]]],[11,R[3525],E,E,65,[[["self"],["f"]],["r"]]],[11,"encode",E,E,65,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,65,[[["w"],["self"]]]],[11,"decode",E,E,65,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,65,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,65,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,65,[[],["v"]]],[11,R[3774],E,E,66,[[],[T]]],[11,R[3779],E,R[3776],66,[[["outer"]],[T]]],[11,R[3780],E,R[3777],66,[[["outer"]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[24],E,E,66,[[["self"]],[T]]],[11,R[25],E,E,66,[[["self"],[T]]]],[11,R[20],E,E,66,[[[U]],[R[3]]]],[11,R[21],E,E,66,[[],[R[3]]]],[11,R[45],E,E,66,[[["self"]],[T]]],[11,R[22],E,E,66,[[["self"]],[T]]],[11,R[26],E,E,66,[[["self"]],[R[46]]]],[11,R[292],E,E,66,[[["self"]],["usize"]]],[11,R[3525],E,E,66,[[["self"],["f"]],["r"]]],[11,"encode",E,E,66,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,66,[[["w"],["self"]]]],[11,"decode",E,E,66,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,66,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,66,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,66,[[],["v"]]],[11,R[3774],E,E,67,[[],[T]]],[11,R[3779],E,R[3776],67,[[["outer"]],[T]]],[11,R[3780],E,R[3777],67,[[["outer"]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[24],E,E,67,[[["self"]],[T]]],[11,R[25],E,E,67,[[["self"],[T]]]],[11,R[20],E,E,67,[[[U]],[R[3]]]],[11,R[21],E,E,67,[[],[R[3]]]],[11,R[45],E,E,67,[[["self"]],[T]]],[11,R[22],E,E,67,[[["self"]],[T]]],[11,R[26],E,E,67,[[["self"]],[R[46]]]],[11,R[292],E,E,67,[[["self"]],["usize"]]],[11,R[3525],E,E,67,[[["self"],["f"]],["r"]]],[11,"encode",E,E,67,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,67,[[["w"],["self"]]]],[11,"decode",E,E,67,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,67,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,67,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,67,[[],["v"]]],[11,R[3774],E,E,68,[[],[T]]],[11,R[3779],E,R[3776],68,[[["outer"]],[T]]],[11,R[3780],E,R[3777],68,[[["outer"]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[24],E,E,68,[[["self"]],[T]]],[11,R[25],E,E,68,[[["self"],[T]]]],[11,R[20],E,E,68,[[[U]],[R[3]]]],[11,R[21],E,E,68,[[],[R[3]]]],[11,R[45],E,E,68,[[["self"]],[T]]],[11,R[22],E,E,68,[[["self"]],[T]]],[11,R[26],E,E,68,[[["self"]],[R[46]]]],[11,R[292],E,E,68,[[["self"]],["usize"]]],[11,R[3525],E,E,68,[[["self"],["f"]],["r"]]],[11,"encode",E,E,68,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,68,[[["w"],["self"]]]],[11,"decode",E,E,68,[[["i"]],[[R[3],["error"]],["error"]]]],[11,R[3604],E,E,68,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,68,[[],[[R[3],["error"]],["error"]]]],[11,"vzip",E,E,68,[[],["v"]]],[11,R[3774],R[3791],E,71,[[],[T]]],[11,R[3779],E,R[3776],71,[[["outer"]],[T]]],[11,R[3780],E,R[3777],71,[[["outer"]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[20],E,E,71,[[[U]],[R[3]]]],[11,R[21],E,E,71,[[],[R[3]]]],[11,R[45],E,E,71,[[["self"]],[T]]],[11,R[22],E,E,71,[[["self"]],[T]]],[11,R[26],E,E,71,[[["self"]],[R[46]]]],[11,"vzip",E,E,71,[[],["v"]]],[11,R[3774],R[3792],E,74,[[],[T]]],[11,R[3779],E,R[3776],74,[[["outer"]],[T]]],[11,R[3780],E,R[3777],74,[[["outer"]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[20],E,E,74,[[[U]],[R[3]]]],[11,R[21],E,E,74,[[],[R[3]]]],[11,R[45],E,E,74,[[["self"]],[T]]],[11,R[22],E,E,74,[[["self"]],[T]]],[11,R[26],E,E,74,[[["self"]],[R[46]]]],[11,"vzip",E,E,74,[[],["v"]]],[11,"clear",E,E,74,[[["self"]]]],[11,R[2628],E,E,74,[[]]],[11,"inner",R[3775],E,0,[[["self"]]]],[11,R[109],E,E,0,[[]]],[11,R[3793],E,E,0,[[],["h160"]]],[11,"inner",E,E,1,[[["self"]]]],[11,R[109],E,E,1,[[]]],[11,R[3793],E,E,1,[[],["h256"]]],[11,"inner",E,E,2,[[["self"]]]],[11,R[109],E,E,2,[[]]],[11,R[3793],E,E,2,[[],["h512"]]],[11,R[421],R[3778],E,3,[[["self"],[T]]]],[11,"fmt",E,E,3,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3775],E,1,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[20],R[3778],E,3,[[["u512"]],[[R[3],["u256","error"]],["error"],["u256"]]]],[11,R[20],E,E,3,[[["u512"]],[[R[3],["u256","error"]],["error"],["u256"]]]],[11,"mul",E,E,3,[[["i64"]],["u256"]]],[11,"mul",E,E,3,[[["i8"]],["u256"]]],[11,"mul",E,E,3,[[["u8"]],["u256"]]],[11,"mul",E,E,3,[[["i32"]],["u256"]]],[11,"mul",E,E,3,[[["isize"]],["u256"]]],[11,"mul",E,E,3,[[["i8"]],["u256"]]],[11,"mul",E,E,3,[[["usize"]],["u256"]]],[11,"mul",E,E,3,[[["usize"]],["u256"]]],[11,"mul",E,E,3,[[["i64"]],["u256"]]],[11,"mul",E,E,3,[[["u32"]],["u256"]]],[11,"mul",E,E,3,[[["u64"]],["u256"]]],[11,"mul",E,E,3,[[["isize"]],["u256"]]],[11,"mul",E,E,3,[[["i32"]],["u256"]]],[11,"mul",E,E,3,[[["u32"]],["u256"]]],[11,"mul",E,E,3,[[["u256"]],["u256"]]],[11,"mul",E,E,3,[[["i16"]],["u256"]]],[11,"mul",E,E,3,[[["u16"]],["u256"]]],[11,"mul",E,E,3,[[["u8"]],["u256"]]],[11,"mul",E,E,3,[[["u64"]],["u256"]]],[11,"mul",E,E,3,[[["u256"]],["u256"]]],[11,"mul",E,E,3,[[["i16"]],["u256"]]],[11,"mul",E,E,3,[[["u16"]],["u256"]]],[11,"decode",R[3775],E,0,[[["i"]],[["error"],[R[3],["h160","error"]],["h160"]]]],[11,"decode",E,E,2,[[["i"]],[[R[3],["h512","error"]],["error"],["h512"]]]],[11,"decode",R[3778],E,3,[[["i"]],[[R[3],["u256","error"]],["u256"],["error"]]]],[11,"decode",R[3775],E,1,[[["i"]],[["error"],["h256"],[R[3],["h256","error"]]]]],[11,R[496],E,E,0,[[["self"],["h160"]]]],[11,R[496],E,E,2,[[["self"],["h512"]]]],[11,R[496],E,E,1,[[["self"],["h256"]]]],[11,R[496],E,E,0,[[["self"],["h160"]]]],[11,R[496],E,E,2,[[["self"],["h512"]]]],[11,R[496],E,E,1,[[["self"],["h256"]]]],[11,"div",R[3778],E,3,[[[T]],["u256"]]],[11,"fmt",R[3775],E,1,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3778],E,3,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3775],E,0,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"shr",R[3778],E,3,[[[T]],["u256"]]],[11,"hash",R[3775],E,0,[[["self"],["h"]]]],[11,"hash",E,E,1,[[["self"],["h"]]]],[11,"hash",E,E,2,[[["self"],["h"]]]],[11,"hash",R[3778],E,3,[[["self"],["__h"]]]],[11,"as_ref",R[3775],E,1,[[["self"]]]],[11,"as_ref",R[3778],E,3,[[["self"]]]],[11,"as_ref",R[3775],E,2,[[["self"]]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,R[476],R[3778],E,3,[[["i64"],["self"]]]],[11,R[476],E,E,3,[[["isize"],["self"]]]],[11,R[476],E,E,3,[[["self"],["u8"]]]],[11,R[476],E,E,3,[[["self"],["i16"]]]],[11,R[476],E,E,3,[[["self"],["i8"]]]],[11,R[476],E,E,3,[[["self"],["usize"]]]],[11,R[476],E,E,3,[[["self"],["u32"]]]],[11,R[476],E,E,3,[[["u16"],["self"]]]],[11,R[476],E,E,3,[[["self"],["u256"]]]],[11,R[476],E,E,3,[[["self"],["u64"]]]],[11,R[476],E,E,3,[[["self"],["i32"]]]],[11,R[463],E,E,3,[[["self"],["u256"]]]],[11,"bitand",R[3775],E,1,[[["h256"]]]],[11,"bitand",E,E,0,[[["h160"]]]],[11,"bitand",R[3778],E,3,[[["u256"]],["u256"]]],[11,"bitand",R[3775],E,2,[[["h512"]]]],[11,R[350],E,E,0,[[["self"],["i"]]]],[11,R[350],E,E,1,[[["self"],["i"]]]],[11,R[350],E,E,2,[[["self"],["i"]]]],[11,"eq",E,E,1,[[["h256"],["self"]],["bool"]]],[11,"eq",R[3778],E,3,[[["self"],["u256"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["u256"]],["bool"]]],[11,"eq",R[3775],E,0,[[["self"],["h160"]],["bool"]]],[11,"eq",E,E,2,[[["h512"],["self"]],["bool"]]],[11,"not",R[3778],E,3,[[],["u256"]]],[11,R[462],E,E,3,[[["self"],[T]]]],[11,"clone",E,E,3,[[["self"]],["u256"]]],[11,"clone",R[3775],E,2,[[["self"]],["h512"]]],[11,"clone",E,E,0,[[["self"]],["h160"]]],[11,"clone",E,E,1,[[["self"]],["h256"]]],[11,"bitor",R[3778],E,3,[[["u256"]],["u256"]]],[11,"bitor",R[3775],E,2,[[["h512"]]]],[11,"bitor",E,E,0,[[["h160"]]]],[11,"bitor",E,E,1,[[["h256"]]]],[11,"bitxor",E,E,0,[[["h160"]]]],[11,"bitxor",R[3778],E,3,[[["u256"]],["u256"]]],[11,"bitxor",R[3775],E,2,[[["h512"]]]],[11,"bitxor",E,E,1,[[["h256"]]]],[11,R[473],E,E,1,[[["self"],["h256"]]]],[11,R[473],E,E,2,[[["self"],["h512"]]]],[11,R[473],E,E,0,[[["self"],["h160"]]]],[11,R[473],E,E,2,[[["self"],["h512"]]]],[11,R[473],E,E,0,[[["self"],["h160"]]]],[11,R[473],E,E,1,[[["self"],["h256"]]]],[11,R[457],E,R[3702],1,[[["str"]],[[R[79]],["h256"],[R[3],["h256",R[79]]]]]],[11,R[457],E,R[3702],0,[[["str"]],[[R[79]],[R[3],["h160",R[79]]],["h160"]]]],[11,R[457],E,R[3702],2,[[["str"]],[[R[79]],[R[3],["h512",R[79]]],["h512"]]]],[11,R[457],R[3778],E,3,[[["str"]],[[R[3],["u256"]],["u256"]]]],[11,"fmt",R[3775],E,0,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3778],E,3,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3775],E,2,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"rem",R[3778],E,3,[[[T]],["u256"]]],[11,R[458],R[3775],E,2,[[["self"],["h512"]]]],[11,R[458],E,E,2,[[["self"],["h512"]]]],[11,R[458],E,E,1,[[["self"],["h256"]]]],[11,R[458],E,E,0,[[["self"],["h160"]]]],[11,R[458],E,E,1,[[["self"],["h256"]]]],[11,R[458],E,E,0,[[["self"],["h160"]]]],[11,R[132],E,E,1,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,0,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,2,[[["s"],["self"]],[R[3]]]],[11,R[132],R[3778],E,3,[[["s"],["self"]],[R[3]]]],[11,"as_mut",R[3775],E,2,[[["self"]]]],[11,"as_mut",E,E,1,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,R[456],R[3778],E,3,[[["self"],[T]]]],[11,"fmt",R[3775],E,0,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,2,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[435],R[3778],E,3,[[["self"],[T]]]],[11,R[3525],R[3775],E,1,[[["self"],["f"]],["r"]]],[11,R[3525],E,E,0,[[["self"],["f"]],["r"]]],[11,R[3525],R[3778],E,3,[[["self"],["f"]],["r"]]],[11,R[3525],R[3775],E,2,[[["self"],["f"]],["r"]]],[11,"index",E,E,2,[[["i"],["self"]]]],[11,"index",E,E,0,[[["i"],["self"]]]],[11,"index",E,E,1,[[["i"],["self"]]]],[11,"from",R[3778],E,3,[[],["u256"]]],[11,"from",E,E,3,[[["u32"]],["u256"]]],[11,"from",E,E,3,[[["u128"]],["u256"]]],[11,"from",E,E,3,[[],["u256"]]],[11,"from",E,E,3,[[["u8"]],["u256"]]],[11,"from",E,E,3,[[["i128"]],["u256"]]],[11,"from",E,E,3,[[["u256"]],["u256"]]],[11,"from",E,E,3,[[["i16"]],["u256"]]],[11,"from",R[3775],R[3701],1,[[],["h256"]]],[11,"from",E,R[3700],0,[[],["h160"]]],[11,"from",E,R[3700],1,[[],["h256"]]],[11,"from",E,R[3700],1,[[],["h256"]]],[11,"from",E,R[3701],0,[[],["h160"]]],[11,"from",R[3778],E,3,[[["usize"]],["u256"]]],[11,"from",E,E,3,[[["str"]],["u256"]]],[11,"from",E,E,3,[[["u64"]],["u256"]]],[11,"from",E,E,3,[[],["u256"]]],[11,"from",E,E,3,[[["i64"]],["u256"]]],[11,"from",R[3775],R[3700],2,[[],["h512"]]],[11,"from",R[3778],E,3,[[["i32"]],["u256"]]],[11,"from",E,E,3,[[["u16"]],["u256"]]],[11,"from",R[3775],E,1,[[["h160"]],["h256"]]],[11,"from",R[3778],E,3,[[["u128"]],["u256"]]],[11,"from",R[3775],R[3700],0,[[],["h160"]]],[11,"from",E,R[3700],2,[[],["h512"]]],[11,"from",R[3778],E,3,[[["isize"]],["u256"]]],[11,"from",E,E,3,[[["i8"]],["u256"]]],[11,"from",R[3775],R[3701],2,[[],["h512"]]],[11,"from",E,E,0,[[["h256"]],["h160"]]],[11,R[106],E,E,2,[[["h512"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[3778],E,3,[[["self"],["u256"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[3775],E,1,[[["h256"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,0,[[["self"],["h160"]],[["option",[R[105]]],[R[105]]]]],[11,R[173],E,E,2,[[["d"]],[[R[3],["h512"]],["h512"]]]],[11,R[173],E,E,1,[[["d"]],[["h256"],[R[3],["h256"]]]]],[11,R[173],E,E,0,[[["d"]],[[R[3],["h160"]],["h160"]]]],[11,R[173],R[3778],E,3,[[["d"]],[[R[3],["u256"]],["u256"]]]],[11,"shl",E,E,3,[[[T]],["u256"]]],[11,"add",E,E,3,[[[T]],["u256"]]],[11,"sub",E,E,3,[[[T]],["u256"]]],[11,R[423],E,E,3,[[["self"],["u256"]]]],[11,R[90],R[3775],E,2,[[],["h512"]]],[11,R[90],R[3778],E,3,[[],["u256"]]],[11,R[90],R[3775],E,1,[[],["h256"]]],[11,R[90],E,E,0,[[],["h160"]]],[11,"cmp",E,E,2,[[["h512"],["self"]],[R[105]]]],[11,"cmp",E,E,1,[[["h256"],["self"]],[R[105]]]],[11,"cmp",R[3778],E,3,[[["self"],["u256"]],[R[105]]]],[11,"cmp",R[3775],E,0,[[["self"],["h160"]],[R[105]]]],[11,R[3782],R[3723],E,80,[[["h256"]],["self"]]],[11,R[3782],R[3785],E,27,[[],["self"]]],[11,R[3782],E,E,27,[[["h256"]],["self"]]],[11,R[3782],R[3786],E,33,[[],["self"]]],[11,R[3782],E,E,33,[[["h256"]],["self"]]],[11,R[3782],R[3787],E,37,[[],["self"]]],[11,"derive",R[3786],R[3731],33,[[["self"],[R[3807]]],[["public"],["option",["public"]]]]],[11,R[768],R[3723],E,81,[[],["self"]]],[11,R[3794],E,E,81,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[589],E,E,81,[[["self"]]]],[11,R[768],R[3785],R[3795],27,[[],["self"]]],[11,R[768],R[3786],R[3795],33,[[],["self"]]],[11,R[768],R[3787],"A new instance from the given slice that should be 33…",37,[[],["self"]]],[11,R[3796],R[3723],E,81,[[["option",["str"]],["str"]]]],[11,R[3729],E,E,81,[[["str"],["option",["str"]]],[[R[3],[R[3730]]],[R[3730]]]]],[11,"derive",E,E,81,[[["option",["dummy"]],[R[3807]],["dummy"],["self"]],[R[3]]]],[11,R[31],E,E,81,[[],["self"]]],[11,R[3797],E,E,81,[[],[[R[3],[R[3730]]],[R[3730]]]]],[11,"sign",E,E,81,[[["self"]]]],[11,"verify",E,E,81,[[["asref"]],["bool"]]],[11,R[3798],E,E,81,[[["asref"]],["bool"]]],[11,"public",E,E,81,[[["self"]]]],[11,R[3794],E,E,81,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3796],R[3785],R[3799],32,[[["option",["str"]],["str"]]]],[11,R[3729],E,R[3805],32,[[["str"],["option",["str"]]],[[R[3730]],[R[3],[R[3730]]]]]],[11,R[31],E,R[3806],32,[[],["pair"]]],[11,R[3797],E,R[3800],32,[[],[[R[3730]],[R[3],["pair",R[3730]]],["pair"]]]],[11,"derive",E,R[3731],32,[[[R[3807]],["option"],["self"]],[[R[3],[R[3801]]],[R[3801]]]]],[11,"public",E,R[3802],32,[[["self"]],["public"]]],[11,"sign",E,R[3803],32,[[["self"]],[R[188]]]],[11,"verify",E,R[3732],32,[[["asref"]],["bool"]]],[11,R[3798],E,R[3732],32,[[["asref"]],["bool"]]],[11,R[3794],E,R[3804],32,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[31],R[3786],R[4212],36,[[],["pair"]]],[11,"public",E,R[3802],36,[[["self"]],["public"]]],[11,R[3797],E,R[3800],36,[[],[["pair"],[R[3],["pair",R[3730]]],[R[3730]]]]],[11,R[3796],E,E,36,[[["option",["str"]],["str"]]]],[11,R[3729],E,E,36,[[["str"],["option",["str"]]],[[R[3],[R[3730]]],[R[3730]]]]],[11,"derive",E,E,36,[[[R[3807]],["option"],["self"]],[R[3]]]],[11,"sign",E,E,36,[[["self"]],[R[188]]]],[11,"verify",E,R[3732],36,[[["asref"]],["bool"]]],[11,R[3798],E,R[3732],36,[[["asref"]],["bool"]]],[11,R[3794],E,R[3804],36,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3796],R[3787],R[3799],41,[[["option",["str"]],["str"]]]],[11,R[3729],E,R[3805],41,[[["str"],["option",["str"]]],[[R[3],[R[3730]]],[R[3730]]]]],[11,R[31],E,R[3806],41,[[],["pair"]]],[11,R[3797],E,R[3800],41,[[],[[R[3],["pair",R[3730]]],[R[3730]],["pair"]]]],[11,"derive",E,R[3731],41,[[[R[3807]],["option"],["self"]],[[R[3801]],[R[3],[R[3801]]]]]],[11,"public",E,R[3802],41,[[["self"]],["public"]]],[11,"sign",E,R[3803],41,[[["self"]],[R[188]]]],[11,"verify",E,R[3732],41,[[["asref"]],["bool"]]],[11,R[3798],E,R[3732],41,[[["asref"]],["bool"]]],[11,R[3794],E,R[3804],41,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"set",R[3788],E,192,[[["self"]]]],[11,"get",E,E,192,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3808],E,E,192,[[["option"],["self"]],["bool"]]],[11,R[3809],R[3789],E,54,[[["self"]],["bool"]]],[11,R[3810],E,E,54,[[["self"]],[[R[3763]],[R[3],[R[3763]]]]]],[11,R[3766],E,E,54,[[["self"]],[R[3766]]]],[11,R[3811],E,E,54,[[["self"],[R[3766]]]]],[11,R[3812],E,E,54,[[["self"]]]],[11,R[3813],E,E,54,[[[R[3764]],["self"]]]],[11,R[3814],E,E,54,[[[R[3764]],["option"],["self"]],["bool"]]],[11,R[3815],E,E,54,[[["self"],[R[3764]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3816],E,E,54,[[["str"],["self"]],[[R[3819]],[R[3],[R[3819]]]]]],[11,R[3817],E,E,54,[[["str"],[R[3819]],["self"]],[R[3]]]],[11,R[3818],E,E,54,[[[R[3819]],["option",[R[3766]]],["self"],[R[3766]]],[[R[3],[R[3768]]],[R[3768]]]]],[11,R[3820],E,E,54,[[["self"],["option",[R[3766]]],[R[3766]]],[["vec",[R[3821]]],[R[3821]]]]],[11,R[3822],E,E,54,[[["self"],[R[3819]]],["vec"]]],[11,R[3823],E,E,54,[[[R[3819]],["option",[R[3766]]],["self"],[R[3766]]],[[R[3],["usize",R[3768]]],["usize"],[R[3768]]]]],[11,R[3809],R[3761],E,63,[[["self"]],["bool"]]],[11,R[3810],E,E,63,[[["self"]],[[R[3763]],[R[3],[R[3763]]]]]],[11,R[3766],E,E,63,[[["self"]],[R[3766]]]],[11,R[3811],E,E,63,[[["self"],[R[3766]]]]],[11,R[3812],E,E,63,[[["self"]]]],[11,R[3813],E,E,63,[[[R[3764]],["self"]]]],[11,R[3814],E,E,63,[[[R[3764]],["option"],["self"]],["bool"]]],[11,R[3815],E,E,63,[[["self"],[R[3764]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3816],E,E,63,[[["str"],["self"]],[[R[3765]],[R[3],[R[3765]]]]]],[11,R[3817],E,E,63,[[["str"],["self"],[R[3765]]],[R[3]]]],[11,R[3818],E,E,63,[[["option",[R[3766]]],["self"],[R[3765]],[R[3766]]],[[R[3],[R[3768]]],[R[3768]]]]],[11,R[3820],E,E,63,[[["option",[R[3766]]],["self"],[R[3766]]],[[R[3767]],["vec",[R[3767]]]]]],[11,R[3822],E,E,63,[[["self"],[R[3765]]],["vec"]]],[11,R[3823],E,E,63,[[["option",[R[3766]]],["self"],[R[3765]],[R[3766]]],[[R[3],["usize",R[3768]]],["usize"],[R[3768]]]]],[11,R[3824],R[3789],E,56,[[["self"],["vec",["u8"]],["u8"]],[R[3]]]],[11,R[3825],R[3792],E,74,[[[R[3771]],["self"]],[["public"],["vec",["public"]]]]],[11,R[3826],E,E,74,[[["option",["str"]],[R[3771]],["str"],["self"]],[["public"],[R[3],["public","string"]],["string"]]]],[11,R[3827],E,E,74,[[[R[3771]],["self"],["public"]],[["option",["pair"]],["pair"]]]],[11,R[3828],E,E,74,[[[R[3771]],["self"]],[["vec",["public"]],["public"]]]],[11,R[3829],E,E,74,[[["option",["str"]],[R[3771]],["str"],["self"]],[[R[3],["public","string"]],["public"],["string"]]]],[11,R[3830],E,E,74,[[["public"],[R[3771]],["self"]],[["option",["pair"]],["pair"]]]],[11,R[3831],E,E,74,[[["str"],[R[3771]],["self"]],[R[3]]]],[11,"password",E,E,74,[[["self"]],[["option",["str"]],["str"]]]],[11,"drop",R[3723],E,79,[[["self"]]]],[11,"drop",R[3789],E,53,[[["self"]]]],[11,"as_ref",R[3723],E,79,[[["self"]],[T]]],[11,"as_ref",E,E,80,[[["self"]]]],[11,"as_ref",E,E,80,[[["self"]]]],[11,"as_ref",E,E,81,[[["self"]]]],[11,"as_ref",R[3785],E,27,[[["self"]]]],[11,"as_ref",E,E,27,[[["self"]]]],[11,"as_ref",E,E,28,[[["self"]]]],[11,"as_ref",E,E,28,[[["self"]]]],[11,"as_ref",R[3786],E,33,[[["self"]]]],[11,"as_ref",E,E,33,[[["self"]]]],[11,"as_ref",E,E,34,[[["self"]]]],[11,"as_ref",E,E,34,[[["self"]]]],[11,"as_ref",E,E,36,[[["self"]],["keypair"]]],[11,"as_ref",R[3787],E,37,[[["self"]]]],[11,"as_ref",E,E,40,[[["self"]]]],[11,"as_ref",E,E,40,[[["self"]]]],[11,"as_mut",R[3723],E,80,[[["self"]]]],[11,"as_mut",E,E,80,[[["self"]]]],[11,"as_mut",E,E,81,[[["self"]]]],[11,"as_mut",R[3785],E,27,[[["self"]]]],[11,"as_mut",E,E,28,[[["self"]]]],[11,"as_mut",R[3786],E,33,[[["self"]]]],[11,"as_mut",E,E,34,[[["self"]]]],[11,"as_mut",R[3787],E,37,[[["self"]]]],[11,"as_mut",E,E,40,[[["self"]]]],[11,"from",R[3723],E,79,[[[T]],["self"]]],[11,"from",E,E,14,[[[T]],[R[3832]]]],[11,"from",E,E,80,[[],[R[3833]]]],[11,"from",E,E,12,[[["u32"]],["self"]]],[11,"from",R[3785],E,27,[[["pair"]],["self"]]],[11,"from",R[3775],E,1,[[["public"]],["self"]]],[11,"from",E,E,2,[[[R[188]]],["h512"]]],[11,"from",E,E,1,[[["public"]],["h256"]]],[11,"from",E,E,2,[[[R[188]]],["h512"]]],[11,"from",R[3786],E,34,[[[R[188]]],[R[188]]]],[11,"from",E,E,36,[[[R[3293]]],["pair"]]],[11,"from",E,E,36,[[[R[3273]]],["pair"]]],[11,"from",E,E,36,[[["keypair"]],["pair"]]],[11,"from",R[3787],E,37,[[["pair"]],["self"]]],[11,"from",E,E,40,[[],[R[188]]]],[11,"from",R[3761],E,62,[[],["self"]]],[11,"from",R[3790],E,66,[[[R[2827]]],[R[3835]]]],[11,"from",E,E,67,[[[R[3835]]],[R[3836]]]],[11,"from","sp_core",E,6,[[["vec",["u8"]],["u8"]],["self"]]],[11,"from",E,E,6,[[[R[3845]]],["self"]]],[11,"from",E,E,9,[[["u32"]],["self"]]],[11,"from",E,E,9,[[["level"]],["self"]]],[11,"clone",R[3723],E,79,[[["self"]],["protected"]]],[11,"clone",E,E,13,[[["self"]],[R[3730]]]],[11,"clone",E,E,14,[[["self"]],[R[3832]]]],[11,"clone",E,E,15,[[["self"]],[R[3724]]]],[11,"clone",E,E,16,[[["self"]],[R[3726]]]],[11,"clone",E,E,80,[[["self"]],[R[3833]]]],[11,"clone",E,E,81,[[["self"]],["dummy"]]],[11,"clone",E,E,12,[[["self"]],[R[3771]]]],[11,"clone",R[3785],E,27,[[["self"]],["public"]]],[11,"clone",E,E,32,[[["self"]],["self"]]],[11,"clone",E,E,28,[[["self"]],["self"]]],[11,"clone",E,E,29,[[["self"]],[R[3834]]]],[11,"clone",E,E,30,[[["self"]],[R[3724]]]],[11,"clone",R[3786],E,33,[[["self"]],["public"]]],[11,"clone",E,E,36,[[["self"]],["self"]]],[11,"clone",E,E,34,[[["self"]],["self"]]],[11,"clone",E,E,35,[[["self"]],[R[3834]]]],[11,"clone",R[3787],E,37,[[["self"]],["public"]]],[11,"clone",E,E,38,[[["self"]],[R[3724]]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",E,E,41,[[["self"]],["pair"]]],[11,"clone",R[3788],E,192,[[["self"]],[R[3837]]]],[11,"clone",R[3789],E,54,[[["self"]],[R[3838]]]],[11,"clone",R[3761],E,48,[[["self"]],[R[3764]]]],[11,"clone",E,E,42,[[["self"]],[R[3765]]]],[11,"clone",E,E,49,[[["self"]],[R[3768]]]],[11,"clone",E,E,50,[[["self"]],[R[3767]]]],[11,"clone",E,E,43,[[["self"]],[R[3763]]]],[11,"clone",E,E,44,[[["self"]],[R[3839]]]],[11,"clone",E,E,45,[[["self"]],[R[3841]]]],[11,"clone",E,E,61,[[["self"]],[R[3766]]]],[11,"clone",E,E,60,[[["self"]],[R[3770]]]],[11,"clone",E,E,51,[[["self"]],[R[3842]]]],[11,"clone",E,E,62,[[["self"]],[R[3772]]]],[11,"clone",R[3790],E,66,[[["self"]],[R[3835]]]],[11,"clone",E,E,67,[[["self"]],[R[3836]]]],[11,"clone",E,E,68,[[["self"]],[R[3843]]]],[11,"clone",E,E,64,[[["self"]],["entry"]]],[11,"clone",E,E,65,[[["self"]],[R[3844]]]],[11,"clone","sp_core",E,5,[[["self"]],[R[3840]]]],[11,"clone",E,E,6,[[["self"]],["bytes"]]],[11,"clone",E,E,9,[[["self"]],["loglevel"]]],[11,R[90],R[3723],E,16,[[],["self"]]],[11,R[90],E,E,80,[[],[R[3833]]]],[11,R[90],E,E,81,[[],["dummy"]]],[11,R[90],E,E,12,[[],[R[3771]]]],[11,R[90],R[3785],E,27,[[],["public"]]],[11,R[90],E,E,28,[[],["self"]]],[11,R[90],R[3786],E,33,[[],["public"]]],[11,R[90],E,E,34,[[],["self"]]],[11,R[90],R[3787],E,37,[[],["self"]]],[11,R[90],E,E,40,[[],["self"]]],[11,R[90],R[3788],E,192,[[],[R[3837]]]],[11,R[90],R[3789],E,52,[[],[R[3762]]]],[11,R[90],E,E,53,[[],["offchainstate"]]],[11,R[90],E,E,54,[[],[R[3838]]]],[11,R[90],E,E,55,[[],["poolstate"]]],[11,R[90],E,E,56,[[],["testtransactionpoolext"]]],[11,R[90],R[3761],E,44,[[],[R[3839]]]],[11,R[90],E,E,61,[[],[R[3766]]]],[11,R[90],E,E,60,[[],[R[3770]]]],[11,R[90],"sp_core",E,5,[[],[R[3840]]]],[11,R[90],R[3792],E,74,[[],["keystore"]]],[11,"cmp",R[3723],E,80,[[["self"],[R[3833]]],[R[105]]]],[11,"cmp",E,E,12,[[[R[3771]],["self"]],[R[105]]]],[11,"cmp",R[3785],E,27,[[["self"],["public"]],[R[105]]]],[11,"cmp",R[3786],E,33,[[["self"],["public"]],[R[105]]]],[11,"cmp",R[3787],E,37,[[["self"]],[R[105]]]],[11,"cmp",R[3761],E,42,[[["self"],[R[3765]]],[R[105]]]],[11,"cmp",E,E,61,[[["self"],[R[3766]]],[R[105]]]],[11,"cmp",E,E,60,[[[R[3770]],["self"]],[R[105]]]],[11,"cmp","sp_core",E,6,[[["bytes"],["self"]],[R[105]]]],[11,"eq",R[3723],E,13,[[["self"],[R[3730]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[3832]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[3832]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[3724]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[3726]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[3726]]],["bool"]]],[11,"eq",E,E,80,[[["self"],[R[3833]]],["bool"]]],[11,"ne",E,E,80,[[["self"],[R[3833]]],["bool"]]],[11,"eq",E,E,81,[[["dummy"],["self"]],["bool"]]],[11,"eq",E,E,12,[[[R[3771]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[3771]],["self"]],["bool"]]],[11,"eq",R[3785],E,27,[[["self"],["public"]],["bool"]]],[11,"ne",E,E,27,[[["self"],["public"]],["bool"]]],[11,"eq",E,E,28,[[["self"]],["bool"]]],[11,"eq",E,E,29,[[[R[3834]],["self"]],["bool"]]],[11,"ne",E,E,29,[[[R[3834]],["self"]],["bool"]]],[11,"eq",E,E,30,[[[R[3724]],["self"]],["bool"]]],[11,"eq",R[3786],E,33,[[["self"],["public"]],["bool"]]],[11,"ne",E,E,33,[[["self"],["public"]],["bool"]]],[11,"eq",E,E,34,[[["self"]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[3834]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[3834]]],["bool"]]],[11,"eq",R[3787],E,37,[[["self"]],["bool"]]],[11,"eq",E,E,38,[[[R[3724]],["self"]],["bool"]]],[11,"eq",E,E,40,[[["self"]],["bool"]]],[11,"eq",R[3789],E,52,[[["self"],[R[3762]]],["bool"]]],[11,"ne",E,E,52,[[["self"],[R[3762]]],["bool"]]],[11,"eq",R[3761],E,48,[[[R[3764]],["self"]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[3765]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[3765]]],["bool"]]],[11,"eq",E,E,49,[[[R[3768]],["self"]],["bool"]]],[11,"eq",E,E,50,[[[R[3767]],["self"]],["bool"]]],[11,"ne",E,E,50,[[[R[3767]],["self"]],["bool"]]],[11,"eq",E,E,43,[[[R[3763]],["self"]],["bool"]]],[11,"ne",E,E,43,[[[R[3763]],["self"]],["bool"]]],[11,"eq",E,E,44,[[["self"],[R[3839]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[3839]]],["bool"]]],[11,"eq",E,E,45,[[[R[3841]],["self"]],["bool"]]],[11,"ne",E,E,45,[[[R[3841]],["self"]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[3766]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[3766]]],["bool"]]],[11,"eq",E,E,60,[[[R[3770]],["self"]],["bool"]]],[11,"ne",E,E,60,[[[R[3770]],["self"]],["bool"]]],[11,"eq",E,E,51,[[[R[3842]],["self"]],["bool"]]],[11,"eq",E,E,62,[[[R[3772]],["self"]],["bool"]]],[11,"ne",E,E,62,[[[R[3772]],["self"]],["bool"]]],[11,"eq",R[3790],E,66,[[["self"],[R[3835]]],["bool"]]],[11,"ne",E,E,66,[[["self"],[R[3835]]],["bool"]]],[11,"eq",E,E,67,[[[R[3836]],["self"]],["bool"]]],[11,"ne",E,E,67,[[[R[3836]],["self"]],["bool"]]],[11,"eq",E,E,68,[[[R[3843]],["self"]],["bool"]]],[11,"ne",E,E,68,[[[R[3843]],["self"]],["bool"]]],[11,"eq",E,E,64,[[["self"],["entry"]],["bool"]]],[11,"ne",E,E,64,[[["self"],["entry"]],["bool"]]],[11,"eq",E,E,65,[[[R[3844]],["self"]],["bool"]]],[11,"ne",E,E,65,[[[R[3844]],["self"]],["bool"]]],[11,"eq","sp_core",E,5,[[["self"],[R[3840]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[3840]]],["bool"]]],[11,"eq",E,E,6,[[["bytes"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["bytes"],["self"]],["bool"]]],[11,"eq",E,E,76,[[[R[3845]],["self"]],["bool"]]],[11,"ne",E,E,76,[[[R[3845]],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"]],["bool"]]],[11,"eq",E,E,78,[[["self"],["nevernativevalue"]],["bool"]]],[11,R[106],R[3723],E,80,[[["self"],[R[3833]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,80,[[["self"],[R[3833]]],["bool"]]],[11,"le",E,E,80,[[["self"],[R[3833]]],["bool"]]],[11,"gt",E,E,80,[[["self"],[R[3833]]],["bool"]]],[11,"ge",E,E,80,[[["self"],[R[3833]]],["bool"]]],[11,R[106],E,E,12,[[[R[3771]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,12,[[[R[3771]],["self"]],["bool"]]],[11,"le",E,E,12,[[[R[3771]],["self"]],["bool"]]],[11,"gt",E,E,12,[[[R[3771]],["self"]],["bool"]]],[11,"ge",E,E,12,[[[R[3771]],["self"]],["bool"]]],[11,R[106],R[3785],E,27,[[["self"],["public"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,27,[[["self"],["public"]],["bool"]]],[11,"le",E,E,27,[[["self"],["public"]],["bool"]]],[11,"gt",E,E,27,[[["self"],["public"]],["bool"]]],[11,"ge",E,E,27,[[["self"],["public"]],["bool"]]],[11,R[106],R[3786],E,33,[[["self"],["public"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,33,[[["self"],["public"]],["bool"]]],[11,"le",E,E,33,[[["self"],["public"]],["bool"]]],[11,"gt",E,E,33,[[["self"],["public"]],["bool"]]],[11,"ge",E,E,33,[[["self"],["public"]],["bool"]]],[11,R[106],R[3787],E,37,[[["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[3761],E,42,[[["self"],[R[3765]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,42,[[["self"],[R[3765]]],["bool"]]],[11,"le",E,E,42,[[["self"],[R[3765]]],["bool"]]],[11,"gt",E,E,42,[[["self"],[R[3765]]],["bool"]]],[11,"ge",E,E,42,[[["self"],[R[3765]]],["bool"]]],[11,R[106],E,E,61,[[["self"],[R[3766]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,61,[[["self"],[R[3766]]],["bool"]]],[11,"le",E,E,61,[[["self"],[R[3766]]],["bool"]]],[11,"gt",E,E,61,[[["self"],[R[3766]]],["bool"]]],[11,"ge",E,E,61,[[["self"],[R[3766]]],["bool"]]],[11,R[106],E,E,60,[[[R[3770]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,60,[[[R[3770]],["self"]],["bool"]]],[11,"le",E,E,60,[[[R[3770]],["self"]],["bool"]]],[11,"gt",E,E,60,[[[R[3770]],["self"]],["bool"]]],[11,"ge",E,E,60,[[[R[3770]],["self"]],["bool"]]],[11,R[106],"sp_core",E,6,[[["bytes"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,6,[[["bytes"],["self"]],["bool"]]],[11,"le",E,E,6,[[["bytes"],["self"]],["bool"]]],[11,"gt",E,E,6,[[["bytes"],["self"]],["bool"]]],[11,"ge",E,E,6,[[["bytes"],["self"]],["bool"]]],[11,"fmt",R[3781],E,11,[[[R[37]],["self"]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[3723],E,80,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3785],E,27,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3786],E,33,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3787],E,37,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3781],E,11,[[[R[37]],["self"]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[3723],E,82,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,79,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,80,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3785],E,27,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,28,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3786],E,33,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,34,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3787],E,38,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[37]]],[R[3]]]],[11,"fmt","sp_core",E,77,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3788],E,192,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3789],E,52,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3761],E,48,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,61,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,60,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3790],E,193,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,66,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,64,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[37]]],[R[3]]]],[11,"fmt","sp_core",E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[[R[37]],["self"]],[R[3]]]],[11,R[20],R[3723],E,16,[[["u8"]],[[R[3],[R[3726]]],[R[3726]]]]],[11,R[20],E,E,16,[[["str"]],[[R[3],[R[3726]]],[R[3726]]]]],[11,R[20],E,E,80,[[],[[R[3],[R[3833]]],[R[3833]]]]],[11,R[20],E,E,12,[[["str"]],[R[3]]]],[11,R[20],R[3785],E,27,[[],[R[3]]]],[11,R[20],E,E,28,[[],[R[3]]]],[11,R[20],R[3786],E,33,[[],[R[3]]]],[11,R[20],E,E,34,[[],[R[3]]]],[11,R[20],R[3787],E,37,[[],[R[3]]]],[11,R[20],E,E,40,[[],[R[3]]]],[11,R[20],R[3761],E,48,[[["u8"]],[R[3]]]],[11,R[20],E,E,48,[[["u32"]],[R[3]]]],[11,R[20],E,E,49,[[["u8"]],[R[3]]]],[11,R[20],E,E,49,[[["u32"]],[R[3]]]],[11,R[20],E,E,50,[[["u32"]],[R[3]]]],[11,R[20],"sp_core",E,9,[[["u8"]],[R[3]]]],[11,R[457],R[3785],E,27,[[["str"]],[R[3]]]],[11,R[457],R[3786],E,33,[[["str"]],[R[3]]]],[11,"deref",R[3723],E,79,[[["self"]],[T]]],[11,"deref",R[3785],E,27,[[["self"]]]],[11,"deref",R[3786],E,33,[[["self"]]]],[11,"deref",R[3761],E,46,[[["self"]]]],[11,"deref",E,E,47,[[["self"]]]],[11,"deref",R[3791],E,71,[[["self"]]]],[11,"deref","sp_core",E,6,[[["self"]]]],[11,"deref",E,E,76,[[["self"]]]],[11,R[99],R[3761],E,46,[[["self"]]]],[11,R[99],E,E,47,[[["self"]]]],[11,R[99],R[3791],E,71,[[["self"]]]],[11,"hash",R[3723],E,14,[[["self"],["__h"]]]],[11,"hash",E,E,81,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",R[3785],E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["h"]]]],[11,"hash",R[3786],E,33,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["h"]]]],[11,"hash",R[3787],E,37,[[["self"],["h"]]]],[11,"hash",E,E,40,[[["self"],["h"]]]],[11,"hash",R[3761],E,42,[[["self"],["__h"]]]],[11,"hash","sp_core",E,6,[[["self"],["__h"]]]],[11,R[132],R[3723],E,80,[[["s"],["self"]],[R[3]]]],[11,R[132],R[3785],E,27,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,28,[[["s"],["self"]],[R[3]]]],[11,R[132],R[3786],E,33,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,34,[[["s"],["self"]],[R[3]]]],[11,R[132],R[3787],E,37,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,40,[[["s"],["self"]],[R[3]]]],[11,R[132],"sp_core",E,5,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,6,[[["self"],["__s"]],[R[3]]]],[11,R[173],R[3723],E,80,[[["d"]],[R[3]]]],[11,R[173],R[3785],E,27,[[["d"]],[R[3]]]],[11,R[173],E,E,28,[[["d"]],[R[3]]]],[11,R[173],R[3786],E,33,[[["d"]],[R[3]]]],[11,R[173],E,E,34,[[["d"]],[R[3]]]],[11,R[173],R[3787],E,37,[[["d"]],[R[3]]]],[11,R[173],E,E,40,[[["d"]],[R[3]]]],[11,R[173],"sp_core",E,5,[[["__d"]],[R[3]]]],[11,R[173],E,E,6,[[["__d"]],[R[3]]]],[11,R[3603],R[3723],E,14,[[["self"],["encout"]]]],[11,R[3603],E,E,80,[[["self"],["encout"]]]],[11,"encode",E,E,80,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,80,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,12,[[["self"],["encout"]]]],[11,"encode",E,E,12,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,12,[[["fnonce"],["self"]],["r"]]],[11,R[3603],R[3785],E,27,[[["self"],["encout"]]]],[11,"encode",E,E,27,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,27,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,28,[[["self"],["encout"]]]],[11,"encode",E,E,28,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,28,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,29,[[["self"],["encout"]]]],[11,R[3603],R[3786],E,33,[[["self"],["encout"]]]],[11,"encode",E,E,33,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,33,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,34,[[["self"],["encout"]]]],[11,"encode",E,E,34,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,34,[[["fnonce"],["self"]],["r"]]],[11,R[3603],R[3787],E,37,[[["self"],["encout"]]]],[11,R[3603],E,E,40,[[["self"],["encout"]]]],[11,"encode",E,E,40,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,40,[[["fnonce"],["self"]],["r"]]],[11,R[3603],R[3761],E,48,[[["self"],["encout"]]]],[11,R[3603],E,E,42,[[["self"],["encout"]]]],[11,"encode",E,E,42,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,42,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,49,[[["self"],["encout"]]]],[11,R[3603],E,E,50,[[["self"],["encout"]]]],[11,R[3603],E,E,43,[[["self"],["encout"]]]],[11,R[3603],E,E,44,[[["self"],["encout"]]]],[11,"encode",E,E,44,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,44,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,45,[[["self"],["encout"]]]],[11,"encode",E,E,45,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,45,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,61,[[["self"],["encout"]]]],[11,"encode",E,E,61,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,61,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,60,[[["self"],["encout"]]]],[11,"encode",E,E,60,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,60,[[["fnonce"],["self"]],["r"]]],[11,R[3603],R[3790],E,193,[[["self"],["encout"]]]],[11,R[3603],E,E,66,[[["self"],["encout"]]]],[11,R[3603],E,E,67,[[["self"],["encout"]]]],[11,R[3603],E,E,68,[[["self"],["encout"]]]],[11,R[3603],E,E,64,[[["self"],["encout"]]]],[11,R[3603],E,E,65,[[["self"],["encout"]]]],[11,"encode",E,E,65,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,65,[[["fnonce"],["self"]],["r"]]],[11,R[3603],"sp_core",E,5,[[["self"],["encout"]]]],[11,R[3603],E,E,76,[[["self"],["encout"]]]],[11,"encode",E,E,76,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,76,[[["fnonce"],["self"]],["r"]]],[11,"encode",E,E,78,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,9,[[["self"],["encout"]]]],[11,"decode",R[3723],E,14,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,80,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,12,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[3785],E,27,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,28,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,29,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[3786],E,33,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,34,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[3787],E,37,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,40,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[3761],E,48,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,42,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,49,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,50,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,43,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,44,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,45,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,61,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,60,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[3790],E,193,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,66,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,67,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,68,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,64,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,65,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode","sp_core",E,5,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,76,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,78,[[["i"]],[[R[3],["error"]],["error"]]]],[11,"decode",E,E,9,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"zeroize",R[3723],E,79,[[["self"]]]],[11,R[109],E,E,12,[[]]],[11,"inner",E,E,12,[[["self"]]]],[11,R[3793],E,E,12,[[],["self"]]],[11,R[109],R[3785],E,27,[[]]],[11,"inner",E,E,27,[[["self"]]]],[11,R[3793],E,E,27,[[],["self"]]],[11,R[109],E,E,28,[[]]],[11,"inner",E,E,28,[[["self"]]]],[11,R[3793],E,E,28,[[],["self"]]],[11,R[109],R[3786],E,33,[[]]],[11,"inner",E,E,33,[[["self"]]]],[11,R[3793],E,E,33,[[],["self"]]],[11,R[109],E,E,34,[[]]],[11,"inner",E,E,34,[[["self"]]]],[11,R[3793],E,E,34,[[],["self"]]],[11,R[109],R[3761],E,42,[[]]],[11,"inner",E,E,42,[[["self"]]]],[11,R[3793],E,E,42,[[],["self"]]],[11,R[109],E,E,44,[[]]],[11,"inner",E,E,44,[[["self"]]]],[11,R[3793],E,E,44,[[],["self"]]],[11,R[109],E,E,45,[[]]],[11,"inner",E,E,45,[[["self"]]]],[11,R[3793],E,E,45,[[],["self"]]],[11,R[109],E,E,61,[[]]],[11,"inner",E,E,61,[[["self"]]]],[11,R[3793],E,E,61,[[],["self"]]],[11,R[109],E,E,60,[[]]],[11,"inner",E,E,60,[[["self"]]]],[11,R[3793],E,E,60,[[],["self"]]],[11,R[3846],E,E,46,[[["self"]],["any"]]],[11,R[3846],E,E,47,[[["self"]],["any"]]],[11,R[3846],R[3791],E,71,[[["self"]],["any"]]],[11,"hash","sp_core",E,77,[[]]],[11,R[3668],R[3775],R[3669],0,[[["u8"]],["h160"]]],[11,"zero",E,R[3670],0,[[],["h160"]]],[11,R[3847],E,R[3671],0,[[],["usize"]]],[11,R[2616],E,R[3672],0,[[["self"]]]],[11,R[3673],E,R[3674],0,[[["self"]]]],[11,R[3675],E,R[3666],0,[[["self"]]]],[11,R[3676],E,R[3666],0,[[["self"]]]],[11,R[3677],E,R[3678],0,[[]]],[11,"as_ptr",E,R[3679],0,[[["self"]]]],[11,R[600],E,R[3680],0,[[["self"]]]],[11,R[1746],E,R[3681],0,[[["self"]]]],[11,R[768],E,R[3682],0,[[],["h160"]]],[11,"covers",E,R[3683],0,[[["self"],["h160"]],["bool"]]],[11,"is_zero",E,R[3684],0,[[["self"]],["bool"]]],[11,R[3685],E,R[3686],0,[[["self"]],["u64"]]],[11,R[3687],E,R[3688],0,[[["self"]],["u64"]]],[11,R[3689],E,R[3690],0,[[["self"]],["u64"]]],[11,R[3691],E,R[3667],0,[[["u64"]],["h160"]]],[11,R[3692],E,R[3667],0,[[["u64"]],["h160"]]],[11,R[3693],E,R[3667],0,[[["u64"]],["h160"]]],[11,R[3694],E,R[3695],0,[[["self"],["r"]]]],[11,R[3848],E,R[3696],0,[[["self"]]]],[11,R[3697],E,R[3698],0,[[["r"]],["h160"]]],[11,"random",E,R[3699],0,[[],["h160"]]],[11,R[3668],E,R[3669],1,[[["u8"]],["h256"]]],[11,"zero",E,R[3670],1,[[],["h256"]]],[11,R[3847],E,R[3671],1,[[],["usize"]]],[11,R[2616],E,R[3672],1,[[["self"]]]],[11,R[3673],E,R[3674],1,[[["self"]]]],[11,R[3675],E,R[3666],1,[[["self"]]]],[11,R[3676],E,R[3666],1,[[["self"]]]],[11,R[3677],E,R[3678],1,[[]]],[11,"as_ptr",E,R[3679],1,[[["self"]]]],[11,R[600],E,R[3680],1,[[["self"]]]],[11,R[1746],E,R[3681],1,[[["self"]]]],[11,R[768],E,R[3682],1,[[],["h256"]]],[11,"covers",E,R[3683],1,[[["h256"],["self"]],["bool"]]],[11,"is_zero",E,R[3684],1,[[["self"]],["bool"]]],[11,R[3685],E,R[3686],1,[[["self"]],["u64"]]],[11,R[3687],E,R[3688],1,[[["self"]],["u64"]]],[11,R[3689],E,R[3690],1,[[["self"]],["u64"]]],[11,R[3691],E,R[3667],1,[[["u64"]],["h256"]]],[11,R[3692],E,R[3667],1,[[["u64"]],["h256"]]],[11,R[3693],E,R[3667],1,[[["u64"]],["h256"]]],[11,R[3694],E,R[3695],1,[[["self"],["r"]]]],[11,R[3848],E,R[3696],1,[[["self"]]]],[11,R[3697],E,R[3698],1,[[["r"]],["h256"]]],[11,"random",E,R[3699],1,[[],["h256"]]],[11,R[3668],E,R[3669],2,[[["u8"]],["h512"]]],[11,"zero",E,R[3670],2,[[],["h512"]]],[11,R[3847],E,R[3671],2,[[],["usize"]]],[11,R[2616],E,R[3672],2,[[["self"]]]],[11,R[3673],E,R[3674],2,[[["self"]]]],[11,R[3675],E,R[3666],2,[[["self"]]]],[11,R[3676],E,R[3666],2,[[["self"]]]],[11,R[3677],E,R[3678],2,[[]]],[11,"as_ptr",E,R[3679],2,[[["self"]]]],[11,R[600],E,R[3680],2,[[["self"]]]],[11,R[1746],E,R[3681],2,[[["self"]]]],[11,R[768],E,R[3682],2,[[],["h512"]]],[11,"covers",E,R[3683],2,[[["h512"],["self"]],["bool"]]],[11,"is_zero",E,R[3684],2,[[["self"]],["bool"]]],[11,R[3685],E,R[3686],2,[[["self"]],["u64"]]],[11,R[3687],E,R[3688],2,[[["self"]],["u64"]]],[11,R[3689],E,R[3690],2,[[["self"]],["u64"]]],[11,R[3691],E,R[3667],2,[[["u64"]],["h512"]]],[11,R[3692],E,R[3667],2,[[["u64"]],["h512"]]],[11,R[3693],E,R[3667],2,[[["u64"]],["h512"]]],[11,R[3694],E,R[3695],2,[[["self"],["r"]]]],[11,R[3848],E,R[3696],2,[[["self"]]]],[11,R[3697],E,R[3698],2,[[["r"]],["h512"]]],[11,"random",E,R[3699],2,[[],["h512"]]],[11,"full_mul",R[3778],R[3849],3,[[["u256"]],["u512"]]],[11,"low_u128",E,R[3664],3,[[["self"]],["u128"]]],[11,"as_u128",E,R[3665],3,[[["self"]],["u128"]]],[18,"MAX",E,R[3620],3,N],[11,R[3621],E,R[3622],3,[[["str"]],[[R[3],["u256",R[3617]]],["u256"],[R[3617]]]]],[11,"low_u32",E,R[3623],3,[[["self"]],["u32"]]],[11,"low_u64",E,R[3624],3,[[["self"]],["u64"]]],[11,"as_u32",E,R[3625],3,[[["self"]],["u32"]]],[11,"as_u64",E,R[3626],3,[[["self"]],["u64"]]],[11,"as_usize",E,R[3627],3,[[["self"]],["usize"]]],[11,"is_zero",E,R[3628],3,[[["self"]],["bool"]]],[11,"bits",E,R[3629],3,[[["self"]],["usize"]]],[11,"bit",E,R[3630],3,[[["self"],["usize"]],["bool"]]],[11,R[559],E,R[560],3,[[["self"]],["u32"]]],[11,R[542],E,R[560],3,[[["self"]],["u32"]]],[11,"byte",E,R[3631],3,[[["self"],["usize"]],["u8"]]],[11,R[3632],E,R[3633],3,[[["self"]]]],[11,R[3634],E,R[3635],3,[[["self"]]]],[11,"exp10",E,R[3636],3,[[["usize"]],["u256"]]],[11,"zero",E,R[3637],3,[[],["u256"]]],[11,"one",E,R[3638],3,[[],["u256"]]],[11,R[536],E,R[3639],3,[[],["u256"]]],[11,"div_mod",E,R[3640],3,[[["u256"]]]],[11,"pow",E,R[3641],3,[[["u256"]],["u256"]]],[11,R[3642],E,R[3643],3,[[["u256"]]]],[11,R[3644],E,R[3645],3,[[["u256"]]]],[11,R[3583],E,R[3646],3,[[["u256"]],["u256"]]],[11,R[1778],E,R[3647],3,[[["u256"]],[["u256"],["option",["u256"]]]]],[11,R[3648],E,R[3649],3,[[["u256"]]]],[11,R[3584],E,R[3650],3,[[["u256"]],["u256"]]],[11,R[1779],E,R[3651],3,[[["u256"]],[["u256"],["option",["u256"]]]]],[11,R[3652],E,R[3653],3,[[["u256"]]]],[11,R[3602],E,R[3654],3,[[["u256"]],["u256"]]],[11,R[1780],E,R[3655],3,[[["u256"]],[["u256"],["option",["u256"]]]]],[11,R[1781],E,R[3656],3,[[["u256"]],[["u256"],["option",["u256"]]]]],[11,R[3618],E,R[3657],3,[[["u256"]],[["u256"],["option",["u256"]]]]],[11,R[3658],E,R[3659],3,[[]]],[11,R[3619],E,R[3660],3,[[],[["u256"],["option",["u256"]]]]],[11,R[3661],E,R[3662],3,[[],["u256"]]],[11,R[2870],E,R[3663],3,[[],["u256"]]]],"p":[[3,"H160"],[3,"H256"],[3,"H512"],[3,"U256"],[8,"Hasher"],[3,R[3850]],[3,"Bytes"],[4,R[3851]],[4,R[3852]],[4,"LogLevel"],[8,"AsBytesRef"],[3,"HexDisplay"],[3,R[4213]],[4,R[3853]],[4,R[3854]],[4,R[3734]],[4,R[3855]],[8,R[3856]],[8,R[3857]],[8,"Ss58Codec"],[8,"Derive"],[8,"Public"],[8,"Pair"],[8,R[3858]],[8,"Wraps"],[8,R[4216]],[8,"Value"],[3,"Public"],[3,R[2884]],[3,R[3743]],[4,R[3734]],[4,R[3741]],[3,"Pair"],[3,"Public"],[3,R[2884]],[3,R[3743]],[3,"Pair"],[4,"Public"],[4,R[3734]],[4,R[3741]],[3,R[2884]],[3,"Pair"],[3,R[3859]],[3,R[3860]],[3,R[3861]],[3,R[3862]],[3,R[3863]],[3,R[3864]],[4,R[3865]],[4,"HttpError"],[4,R[3866]],[4,"Capability"],[3,R[3867]],[3,R[3868]],[3,R[3869]],[3,"PoolState"],[3,R[3870]],[8,R[3871]],[8,R[3490]],[8,R[3769]],[3,"Duration"],[3,"Timestamp"],[3,R[3872]],[3,R[3873]],[3,"Entry"],[3,R[3874]],[4,"TypedValue"],[4,R[3875]],[4,R[3876]],[8,R[3490]],[8,R[3491]],[3,R[3877]],[8,R[3878]],[8,R[3879]],[3,"KeyStore"],[8,"TypeId"],[3,R[3880]],[3,R[3881]],[4,R[3882]],[3,"Protected"],[3,R[3883]],[3,"Dummy"],[4,R[667]],[3,"_0"],[3,"_1"],[3,"_2"],[3,"_3"],[3,"_4"],[3,"_5"],[3,"_6"],[3,"_7"],[3,"_8"],[3,"_9"],[3,"_10"],[3,"_11"],[3,"_12"],[3,"_13"],[3,"_14"],[3,"_15"],[3,"_16"],[3,"_17"],[3,"_18"],[3,"_19"],[3,"_20"],[3,"_21"],[3,"_22"],[3,"_23"],[3,"_24"],[3,"_25"],[3,"_26"],[3,"_27"],[3,"_28"],[3,"_29"],[3,"_30"],[3,"_31"],[3,"_32"],[3,"_33"],[3,"_34"],[3,"_35"],[3,"_36"],[3,"_37"],[3,"_38"],[3,"_39"],[3,"_40"],[3,"_41"],[3,"_42"],[3,"_43"],[3,"_44"],[3,"_45"],[3,"_46"],[3,"_47"],[3,"_48"],[3,"_49"],[3,"_50"],[3,"_51"],[3,"_52"],[3,"_53"],[3,"_54"],[3,"_55"],[3,"_56"],[3,"_57"],[3,"_58"],[3,"_59"],[3,"_60"],[3,"_61"],[3,"_62"],[3,"_63"],[3,"_64"],[3,"_65"],[3,"_66"],[3,"_67"],[3,"_68"],[3,"_69"],[3,"_70"],[3,"_71"],[3,"_72"],[3,"_73"],[3,"_74"],[3,"_75"],[3,"_76"],[3,"_77"],[3,"_78"],[3,"_79"],[3,"_80"],[3,"_81"],[3,"_82"],[3,"_83"],[3,"_84"],[3,"_85"],[3,"_86"],[3,"_87"],[3,"_88"],[3,"_89"],[3,"_90"],[3,"_91"],[3,"_92"],[3,"_93"],[3,"_94"],[3,"_95"],[3,"_96"],[3,"_97"],[3,"_98"],[3,"_99"],[3,"_100"],[3,"_112"],[3,"_128"],[3,"_160"],[3,"_192"],[3,"_224"],[3,"_256"],[3,"_384"],[3,"_512"],[3,R[3884]],[3,R[3939]]]};
searchIndex["sp_debug_derive"]={"doc":"Macros to derive runtime debug implementation.","i":[[24,R[3885],"sp_debug_derive",E,N,N]],"p":[]};
searchIndex["sp_externalities"]={"doc":"Substrate externalities abstraction","i":[[3,"Extensions","sp_externalities","Stores extensions that should be made available through…",N,N],[5,"set_and_run_with_externalities",E,"Set the given externalities while executing the given…",N,[[[R[3886]],["f"]],["r"]]],[5,"with_externalities",E,"Execute the given closure with the currently set…",N,[[["fnonce"]],["option"]]],[11,"new",E,"Create new instance of `Self`.",0,[[],["self"]]],[11,"register",E,"Register the given extension.",0,[[[R[4094]],["self"]]]],[11,R[471],E,"Return a mutable reference to the requested extension.",0,[[["self"],[R[46]]],[["any"],["option",["any"]]]]],[8,R[3492],E,"Marker trait for types that should be registered as…",N,N],[10,R[3846],E,"Return the extension as `&mut dyn Any`.",1,[[["self"]],["any"]]],[8,R[3489],E,"Something that provides access to the [`Extensions`] store.",N,N],[10,R[4117],E,"Tries to find a registered extension by the given…",2,[[["self"],[R[46]]],[["any"],["option",["any"]]]]],[8,R[3490],E,R[3887],N,N],[10,"storage",E,R[3888],3,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,R[3889],E,R[3890],3,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,R[3891],E,R[3892],3,[[[R[3487]],[R[3486]],["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,R[3893],E,R[3894],3,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,R[3895],E,R[3896],3,[[[R[3487]],[R[3486]],["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,R[3897],E,R[3898],3,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,R[3899],E,R[3900],3,[[[R[3487]],[R[3486]],["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,R[3901],E,R[3902],3,[[[R[3487]],[R[3486]],["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3903],E,R[3904],3,[[["vec",["u8"]],["self"],["u8"]]]],[11,R[3905],E,R[3906],3,[[["vec",["u8"]],[R[3487]],[R[3486]],["self"],["u8"]]]],[11,R[3907],E,R[3908],3,[[["self"]]]],[11,R[3909],E,R[3910],3,[[[R[3487]],[R[3486]],["self"]]]],[11,R[3911],E,R[3912],3,[[["self"]],["bool"]]],[11,R[3913],E,R[3914],3,[[[R[3487]],[R[3486]],["self"]],["bool"]]],[10,R[3915],E,R[3488],3,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,R[3916],E,R[3488],3,[[[R[3487]],[R[3486]],["self"]],[["option",["vec"]],["vec",["u8"]]]]],[10,R[3917],E,R[3918],3,[[[R[3487]],["self"],[R[3486]]]]],[10,R[3919],E,R[3920],3,[[["self"]]]],[10,R[3921],E,R[3922],3,[[[R[3487]],[R[3486]],["self"]]]],[10,R[3923],E,R[3924],3,[[["vec",["u8"]],["option",["vec"]],["self"],["u8"]]]],[10,R[3925],E,R[3926],3,[[["vec",["u8"]],[R[3487]],[R[3486]],["self"],["option",["vec"]],["u8"]]]],[10,"chain_id",E,R[3927],3,[[["self"]],["u64"]]],[10,R[3928],E,R[3929],3,[[["self"]],[["vec",["u8"]],["u8"]]]],[10,R[3930],E,R[3931],3,[[["self"],[R[3486]]],[["vec",["u8"]],["u8"]]]],[10,R[3932],E,R[3933],3,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[8,R[3491],E,R[3934],N,N],[10,R[4094],E,R[3935],4,[[["self"]],[[T],["option"]]]],[14,"decl_extension",E,"Macro for declaring an extension that usable with…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[90],E,E,0,[[],[R[4092]]]]],"p":[[3,"Extensions"],[8,R[3492]],[8,R[3489]],[8,R[3490]],[8,R[3491]]]};
searchIndex["sp_inherents"]={"doc":"Provides types and traits for creating and checking…","i":[[3,"Error","sp_inherents","An error that can occur within the inherent data system.",N,N],[3,R[3950],E,"Inherent data to include in a block.",N,N],[3,R[3951],E,"The result of checking inherents.",N,N],[3,R[3952],E,"All `InherentData` providers.",N,N],[3,R[3953],E,"Auxiliary to make any given error resolve to…",N,N],[6,"InherentIdentifier",E,"An identifier for an inherent.",N,N],[8,R[3947],E,"Something that provides inherent data.",N,N],[11,"on_register",E,"Is called when this inherent data provider is registered…",0,[[[R[3946]],["self"]],[["error"],[R[3],["error"]]]]],[10,"inherent_identifier",E,"The identifier of the inherent for that data will be…",0,[[["self"]],[R[3941]]]],[10,"provide_inherent_data",E,"Provide inherent data that should be included in a block.",0,[[[R[3940]],["self"]],[["error"],[R[3],["error"]]]]],[10,R[3944],E,"Convert the given encoded error to a string.",0,[[["self"]],[["string"],["option",["string"]]]]],[8,R[3948],E,"Did we encounter a fatal error while checking an inherent?",N,N],[10,R[3945],E,R[3943],1,[[["self"]],["bool"]]],[8,R[3949],E,"A module that provides an inherent and may also verifies it.",N,N],[16,"Call",E,"The call type of the module.",2,N],[16,"Error",E,"The error returned by `check_inherent`.",2,N],[18,"INHERENT_IDENTIFIER",E,"The inherent identifier used by this inherent.",2,N],[10,"create_inherent",E,"Create an inherent out of the given `InherentData`.",2,[[[R[3940]]],["option"]]],[11,"check_inherent",E,"Check the given inherent if it is valid. Checking the…",2,[[[R[3940]]],[R[3]]]],[11,"into_string",E,"Convert this error into a `String`.",3,[[],["string"]]],[11,"new",E,R[3942],4,[[],["self"]]],[11,"put_data",E,"Put data for an inherent into the internal storage.",4,[[["i"],["self"],[R[3941]]],[["error"],[R[3],["error"]]]]],[11,"replace_data",E,"Replace the data for an inherent.",4,[[["i"],["self"],[R[3941]]]]],[11,"get_data",E,"Returns the data for the requested inherent.",4,[[[R[3941]],["self"]],[["option"],[R[3],["option","error"]],["error"]]]],[11,"new",E,R[3942],5,[[],["self"]]],[11,"put_error",E,"Put an error into the result.",5,[[["self"],[R[3941]],["e"]],[["error"],[R[3],["error"]]]]],[11,"get_error",E,"Get an error out of the result.",5,[[[R[3941]],["self"]],[["error"],["option"],[R[3],["option","error"]]]]],[11,"into_errors",E,"Convert into an iterator over all contained errors.",5,[[],[["vec",["u8"]],[R[3941]],[R[485],[R[3941],"vec"]]]]],[11,"ok",E,"Is this result ok?",5,[[["self"]],["bool"]]],[11,"fatal_error",E,R[3943],5,[[["self"]],["bool"]]],[11,"new",E,R[3942],6,[[],["self"]]],[11,"register_provider",E,"Register an `InherentData` provider.",6,[[["provideinherentdata"],["send"],["self"],["sync"]],[["error"],[R[3],["error"]]]]],[11,"has_provider",E,"Returns if a provider for the given identifier exists.",6,[[[R[3941]],["self"]],["bool"]]],[11,"create_inherent_data",E,"Create inherent data.",6,[[["self"]],[[R[3940]],[R[3],[R[3940],"error"]],["error"]]]],[11,R[3944],E,"Converts a given encoded error into a `String`.",6,[[[R[3941]],["self"]],["string"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[78],E,E,3,[[["self"]],["string"]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[292],E,E,3,[[["self"]],["usize"]]],[11,R[3525],E,E,3,[[["self"],["f"]],["r"]]],[11,"encode",E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,3,[[["w"],["self"]]]],[11,"decode",E,E,3,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,3,[[],[[R[3],["error"]],["error"]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[292],E,E,4,[[["self"]],["usize"]]],[11,R[3525],E,E,4,[[["self"],["f"]],["r"]]],[11,"encode",E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,4,[[["w"],["self"]]]],[11,"decode",E,E,4,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,4,[[],[[R[3],["error"]],["error"]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[292],E,E,5,[[["self"]],["usize"]]],[11,R[3525],E,E,5,[[["self"],["f"]],["r"]]],[11,"encode",E,E,5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,5,[[["w"],["self"]]]],[11,"decode",E,E,5,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,5,[[],[[R[3],["error"]],["error"]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[],[T]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,R[292],E,E,7,[[["self"]],["usize"]]],[11,R[3525],E,E,7,[[["self"],["f"]],["r"]]],[11,"encode",E,E,7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,7,[[["w"],["self"]]]],[11,R[3945],E,E,7,[[["self"]],["bool"]]],[11,"from",E,E,3,[[[T]],["error"]]],[11,"from",E,E,7,[[["e"]],["self"]]],[11,"clone",E,E,4,[[["self"]],[R[3940]]]],[11,"clone",E,E,5,[[["self"]],["checkinherentsresult"]]],[11,"clone",E,E,6,[[["self"]],[R[3946]]]],[11,R[90],E,E,4,[[],[R[3940]]]],[11,R[90],E,E,5,[[],["self"]]],[11,R[90],E,E,6,[[],[R[3946]]]],[11,"eq",E,E,5,[[["self"]],["bool"]]],[11,"fmt",E,E,3,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,R[3603],E,E,3,[[["self"],["encout"]]]],[11,"encode",E,E,3,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,3,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,4,[[["self"],["encout"]]]],[11,"encode",E,E,4,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,4,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,5,[[["self"],["encout"]]]],[11,R[3603],E,E,7,[[["self"],["encout"]]]],[11,"encode",E,E,7,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,7,[[["fnonce"],["self"]],["r"]]],[11,"decode",E,E,3,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,4,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,5,[[["decin"]],[["error"],[R[3],["error"]]]]]],"p":[[8,R[3947]],[8,R[3948]],[8,R[3949]],[3,"Error"],[3,R[3950]],[3,R[3951]],[3,R[3952]],[3,R[3953]]]};
searchIndex["sp_io"]={"doc":"This is part of the Substrate runtime.","i":[[4,R[4170],"sp_io","Error verifying ECDSA signature",N,N],[13,"BadRS",E,"Incorrect value of R or S",0,N],[13,"BadV",E,"Incorrect value of V",0,N],[13,"BadSignature",E,"Invalid signature",0,N],[0,"storage",E,"Interface for accessing the storage from within the runtime.",N,N],[3,R[3397],R[4160],R[4143],N,N],[5,"get",E,"Returns the data for `key` in the storage or `None` if the…",N,[[],[["option",["vec"]],["vec",["u8"]]]]],[5,"child_get",E,"All Child api uses : - A `child_storage_key` to define the…",N,[[["u32"]],[["option",["vec"]],["vec",["u8"]]]]],[5,"read",E,"Get `key` from storage, placing the value into `value_out`…",N,[[["u32"]],[["u32"],["option",["u32"]]]]],[5,"child_read",E,"Get `key` from child storage, placing the value into…",N,[[["u32"]],[["u32"],["option",["u32"]]]]],[5,"set",E,"Set `key` to `value` in the storage.",N,[[]]],[5,"child_set",E,"Set `key` to `value` in the child storage denoted by…",N,[[["u32"]]]],[5,"clear",E,"Clear the storage of the given `key` and its value.",N,[[]]],[5,"child_clear",E,"Clear the given child storage of the given `key` and its…",N,[[["u32"]]]],[5,"child_storage_kill",E,R[3918],N,[[["u32"]]]],[5,"exists",E,R[4140],N,[[],["bool"]]],[5,"child_exists",E,R[4140],N,[[["u32"]],["bool"]]],[5,R[3919],E,"Clear the storage of each key-value pair where the key…",N,[[]]],[5,"child_clear_prefix",E,"Clear the child storage of each key-value pair where the…",N,[[["u32"]]]],[5,"root",E,R[4141],N,[[],[["vec",["u8"]],["u8"]]]],[5,"child_root",E,R[4141],N,[[],[["vec",["u8"]],["u8"]]]],[5,"changes_root",E,"\"Commit\" all existing operations and get the resulting…",N,[[],[["option",["vec"]],["vec",["u8"]]]]],[5,"next_key",E,R[4142],N,[[],[["option",["vec"]],["vec",["u8"]]]]],[5,"child_next_key",E,R[4142],N,[[["u32"]],[["option",["vec"]],["vec",["u8"]]]]],[0,"trie","sp_io","Interface that provides trie related functionality.",N,N],[3,R[3397],R[4161],R[4143],N,N],[5,"blake2_256_root",E,"A trie root formed from the iterated items.",N,[[["vec"]],["h256"]]],[5,"blake2_256_ordered_root",E,"A trie root formed from the enumerated items.",N,[[["vec",["vec"]],["vec",["u8"]]],["h256"]]],[0,"misc","sp_io","Interface that provides miscellaneous functions for…",N,N],[3,R[3397],R[4162],R[4143],N,N],[5,"chain_id",E,"The current relay chain identifier.",N,[[],["u64"]]],[5,"print_num",E,"Print a number.",N,[[["u64"]]]],[5,"print_utf8",E,"Print any valid `utf8` buffer.",N,[[]]],[5,"print_hex",E,"Print any `u8` slice as hex.",N,[[]]],[0,"crypto","sp_io","Interfaces for working with crypto related types from…",N,N],[3,R[3397],R[4163],R[4143],N,N],[5,R[3828],E,"Returns all `ed25519` public keys for the given key id…",N,[[[R[3771]]],[["vec",["public"]],["public"]]]],[5,"ed25519_generate",E,"Generate an `ed22519` key for the given key type using an…",N,[[["option",["vec"]],["vec",["u8"]],[R[3771]]],["public"]]],[5,"ed25519_sign",E,"Sign the given `msg` with the `ed25519` key that…",N,[[[R[3771]],["public"]],[[R[188]],["option",[R[188]]]]]],[5,"ed25519_verify",E,"Verify an `ed25519` signature.",N,[[[R[188]],["public"]],["bool"]]],[5,R[3825],E,"Returns all `sr25519` public keys for the given key id…",N,[[[R[3771]]],[["vec",["public"]],["public"]]]],[5,"sr25519_generate",E,"Generate an `sr22519` key for the given key type using an…",N,[[["option",["vec"]],["vec",["u8"]],[R[3771]]],["public"]]],[5,"sr25519_sign",E,"Sign the given `msg` with the `sr25519` key that…",N,[[[R[3771]],["public"]],[[R[188]],["option",[R[188]]]]]],[5,"sr25519_verify",E,"Verify an `sr25519` signature.",N,[[[R[188]],["public"]],["bool"]]],[5,"secp256k1_ecdsa_recover",E,R[4145],N,[[],[[R[4144]],[R[3],[R[4144]]]]]],[5,"secp256k1_ecdsa_recover_compressed",E,R[4145],N,[[],[[R[3],[R[4144]]],[R[4144]]]]],[0,"hashing","sp_io","Interface that provides functions for hashing with…",N,N],[3,R[3397],R[4164],R[4143],N,N],[5,"keccak_256",E,"Conduct a 256-bit Keccak hash.",N,[[]]],[5,"sha2_256",E,"Conduct a 256-bit Sha2 hash.",N,[[]]],[5,R[4625],E,"Conduct a 128-bit Blake2 hash.",N,[[]]],[5,R[4626],E,"Conduct a 256-bit Blake2 hash.",N,[[]]],[5,R[4817],E,"Conduct four XX hashes to give a 256-bit result.",N,[[]]],[5,R[4816],E,"Conduct two XX hashes to give a 128-bit result.",N,[[]]],[5,"twox_64",E,"Conduct two XX hashes to give a 64-bit result.",N,[[]]],[0,"offchain","sp_io","Interface that provides functions to access the offchain…",N,N],[3,R[3397],R[4165],R[4143],N,N],[5,R[3809],E,R[4146],N,[[],["bool"]]],[5,R[3824],E,"Submit an encoded transaction to the pool.",N,[[["vec",["u8"]],["u8"]],[R[3]]]],[5,R[3810],E,R[4147],N,[[],[[R[3763]],[R[3],[R[3763]]]]]],[5,R[3766],E,R[4148],N,[[],[R[3766]]]],[5,R[3811],E,R[4149],N,[[[R[3766]]]]],[5,R[3812],E,R[4150],N,[[]]],[5,R[3813],E,R[4151],N,[[[R[3764]]]]],[5,R[3814],E,R[4152],N,[[["vec",["u8"]],["option",["vec"]],[R[3764]]],["bool"]]],[5,R[3815],E,R[4153],N,[[[R[3764]]],[["option",["vec"]],["vec",["u8"]]]]],[5,R[3816],E,R[4154],N,[[["str"]],[[R[3],[R[3765]]],[R[3765]]]]],[5,R[3817],E,R[4155],N,[[["str"],[R[3765]]],[R[3]]]],[5,R[3818],E,R[4156],N,[[[R[3765]],["option",[R[3766]]],[R[3766]]],[[R[3768]],[R[3],[R[3768]]]]]],[5,R[3820],E,R[4157],N,[[[R[3766]],["option",[R[3766]]]],[["vec",[R[3767]]],[R[3767]]]]],[5,R[3822],E,R[4158],N,[[[R[3765]]],["vec"]]],[5,R[3823],E,R[4159],N,[[[R[3765]],["option",[R[3766]]],[R[3766]]],[["u32"],[R[3],["u32",R[3768]]],[R[3768]]]]],[0,"logging","sp_io","Interface that provides functions for logging from within…",N,N],[3,R[3397],R[4166],R[4143],N,N],[5,"log",E,"Request to print a log message on the host.",N,[[["str"],["loglevel"]]]],[0,"sandbox","sp_io","Wasm-only interface that provides functions for…",N,N],[3,R[3397],R[4167],R[4143],N,N],[6,R[4128],"sp_io","Type alias for Externalities implementation used in tests.",N,N],[6,"SubstrateHostFunctions",E,"The host functions Substrate provides for the Wasm runtime…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[3774],E,E,0,[[],[T]]],[11,R[292],E,E,0,[[["self"]],["usize"]]],[11,R[3525],E,E,0,[[["self"],["f"]],["r"]]],[11,"encode",E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,0,[[["w"],["self"]]]],[11,"decode",E,E,0,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3779],E,R[3776],0,[[["outer"]],[T]]],[11,R[3780],E,R[3777],0,[[["outer"]],[T]]],[11,R[3604],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,0,[[],[["error"],[R[3],["error"]]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",R[4160],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[3774],E,E,1,[[],[T]]],[11,R[3779],E,R[3776],1,[[["outer"]],[T]]],[11,R[3780],E,R[3777],1,[[["outer"]],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",R[4161],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[3774],E,E,2,[[],[T]]],[11,R[3779],E,R[3776],2,[[["outer"]],[T]]],[11,R[3780],E,R[3777],2,[[["outer"]],[T]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",R[4162],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[3774],E,E,3,[[],[T]]],[11,R[3779],E,R[3776],3,[[["outer"]],[T]]],[11,R[3780],E,R[3777],3,[[["outer"]],[T]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",R[4163],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[3774],E,E,4,[[],[T]]],[11,R[3779],E,R[3776],4,[[["outer"]],[T]]],[11,R[3780],E,R[3777],4,[[["outer"]],[T]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",R[4164],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[3774],E,E,5,[[],[T]]],[11,R[3779],E,R[3776],5,[[["outer"]],[T]]],[11,R[3780],E,R[3777],5,[[["outer"]],[T]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",R[4165],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,R[3774],E,E,6,[[],[T]]],[11,R[3779],E,R[3776],6,[[["outer"]],[T]]],[11,R[3780],E,R[3777],6,[[["outer"]],[T]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",R[4166],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,R[3774],E,E,7,[[],[T]]],[11,R[3779],E,R[3776],7,[[["outer"]],[T]]],[11,R[3780],E,R[3777],7,[[["outer"]],[T]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",R[4167],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,R[3774],E,E,8,[[],[T]]],[11,R[3779],E,R[3776],8,[[["outer"]],[T]]],[11,R[3780],E,R[3777],8,[[["outer"]],[T]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[3603],"sp_io",E,0,[[["self"],["encout"]]]],[11,"decode",E,E,0,[[["decin"]],[[R[3],["error"]],["error"]]]],[11,R[4168],R[4160],E,1,[[],[["vec",[R[4169]]],[R[4169]]]]],[11,R[4168],R[4161],E,2,[[],[["vec",[R[4169]]],[R[4169]]]]],[11,R[4168],R[4162],E,3,[[],[["vec",[R[4169]]],[R[4169]]]]],[11,R[4168],R[4163],E,4,[[],[["vec",[R[4169]]],[R[4169]]]]],[11,R[4168],R[4164],E,5,[[],[["vec",[R[4169]]],[R[4169]]]]],[11,R[4168],R[4165],E,6,[[],[["vec",[R[4169]]],[R[4169]]]]],[11,R[4168],R[4166],E,7,[[],[["vec",[R[4169]]],[R[4169]]]]],[11,R[4168],R[4167],E,8,[[],[["vec",[R[4169]]],[R[4169]]]]]],"p":[[4,R[4170]],[3,R[3397]],[3,R[3397]],[3,R[3397]],[3,R[3397]],[3,R[3397]],[3,R[3397]],[3,R[3397]],[3,R[3397]]]};
searchIndex["sp_panic_handler"]={"doc":"Custom panic hook with bug report link","i":[[3,"AbortGuard","sp_panic_handler","RAII guard for whether panics in the current thread should…",N,N],[5,"set",E,"Set the panic hook.",N,[[["str"],["str"]]]],[11,"force_unwind",E,R[1842],0,[[],[R[1843]]]],[11,"force_abort",E,R[1842],0,[[],[R[1843]]]],[11,"never_abort",E,R[1842],0,[[],[R[1843]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"drop",E,E,0,[[["self"]]]]],"p":[[3,"AbortGuard"]]};
searchIndex["sp_runtime"]={"doc":"Runtime Modules shared primitive types.","i":[[3,"Storage",R[4231],R[4438],N,N],[12,"top",E,R[4439],0,N],[12,"children",E,R[4440],0,N],[3,R[3410],E,R[4434],N,N],[12,"data",E,R[4435],1,N],[12,R[4436],E,R[4437],1,N],[8,"TypeId",E,R[4215],N,N],[18,"TYPE_ID",E,R[4214],2,N],[0,"key_types",E,R[4215],N,N],[17,"BABE","sp_runtime::key_types",R[4192],N,N],[17,"GRANDPA",E,R[4193],N,N],[17,"ACCOUNT",E,R[4194],N,N],[17,"AURA",E,R[4195],N,N],[17,"IM_ONLINE",E,R[4196],N,N],[17,R[4197],E,R[4198],N,N],[17,"DUMMY",E,R[4199],N,N],[3,R[4213],R[4231],R[4215],N,N],[12,"0",E,E,3,N],[8,R[4216],E,R[4215],N,N],[16,"Pair",E,R[4217],4,N],[3,R[3883],E,R[4215],N,N],[8,R[4188],E,R[4218],N,N],[18,"ID",E,R[4175],5,N],[16,R[2884],E,R[4176],5,N],[10,"all",E,R[4219],5,[[],["vec"]]],[10,R[4177],E,R[4220],5,[[["vec",["u8"]],["option",["vec"]]],["self"]]],[10,"sign",E,R[4178],5,[[["self"],["m"]],["option"]]],[10,"verify",E,R[4179],5,[[["self"],["m"]],["bool"]]],[8,R[4189],E,R[4221],N,N],[16,"Public",E,R[4222],6,N],[24,R[3885],E,"Re-export `RuntimeDebug`, to avoid dependency clutter.",N,N],[3,R[3614],E,R[4223],N,N],[3,"Perbill",E,R[4223],N,N],[3,"Permill",E,R[4223],N,N],[3,"Percent",E,R[4223],N,N],[3,R[3615],E,"Re-export top-level arithmetic stuff. A wrapper for any…",N,N],[3,"Fixed64",E,"Re-export top-level arithmetic stuff. An unsigned fixed…",N,N],[0,R[4224],E,"Re-export 128 bit helpers. Some helper functions to work…",N,N],[5,"gcd","sp_runtime::helpers_128bit",R[4225],N,[[["u128"]],["u128"]]],[5,"split",E,R[4226],N,[[["u128"]]]],[5,R[4227],E,R[4228],N,[[["u128"]],["biguint"]]],[5,R[4229],E,R[4230],N,[[["u128"]],[[R[3],["u128","str"]],["str"],["u128"]]]],[0,"biguint",R[4231],"Re-export big_uint stuff. Infinite precision unsigned…",N,N],[6,"Single",R[4309],R[4232],N,N],[6,"Double",E,R[4233],N,N],[5,"split",E,R[4234],N,[[["u64"]]]],[5,"mul_single",E,R[3544],N,[[["u32"]],["u64"]]],[5,"add_single",E,R[3544],N,[[["u32"]]]],[3,"BigUint",E,R[4235],N,N],[8,R[265],R[4231],R[2997],N,N],[10,R[132],E,R[2998],7,[[["s"],["self"]],[R[3]]]],[24,R[265],E,E,N,N],[8,R[264],E,R[2937],N,N],[10,R[173],E,R[2938],8,[[["d"]],[R[3]]]],[24,R[264],E,E,N,N],[8,R[4236],E,R[4237],N,N],[3,"Digest",E,R[4240],N,N],[12,"logs",E,R[4241],9,N],[3,"ModuleId",E,"A module identifier. These are per module and should be…",N,N],[12,"0",E,E,10,N],[3,R[4427],E,R[4238],N,N],[3,R[4388],E,"Simple blob to hold an extrinsic without committing to its…",N,N],[12,"0",E,E,11,N],[4,R[4265],E,R[4242],N,N],[13,R[4243],E,R[4244],12,N],[13,R[4249],E,R[4245],12,N],[13,R[4250],E,R[4246],12,N],[13,"Seal",E,R[4247],12,N],[13,"Other",E,R[4248],12,N],[4,R[4389],E,R[4238],N,N],[13,"Ed25519",E,"An Ed25519 signature.",13,N],[13,"Sr25519",E,"An Sr25519 signature.",13,N],[13,"Ecdsa",E,"An ECDSA/SECP256k1 signature.",13,N],[4,R[4390],E,"Public key for any known crypto algorithm.",N,N],[13,"Ed25519",E,"An Ed25519 identity.",14,N],[13,"Sr25519",E,"An Sr25519 identity.",14,N],[13,"Ecdsa",E,"An SECP256k1/ECDSA identity (actually, the Blake2 hash of…",14,N],[4,R[4391],E,R[4627],N,N],[13,"Other",E,R[4628],15,N],[13,R[4305],E,R[4629],15,N],[13,R[4651],E,R[4630],15,N],[13,"Module",E,R[4631],15,N],[12,"index","sp_runtime::DispatchError",R[4632],15,N],[12,"error",E,R[4633],15,N],[12,"message",E,R[4634],15,N],[5,"verify_encoded_lazy",R[4231],"Verify a signature on an encoded value in a lazy manner.…",N,[[["v"],[T]],["bool"]]],[5,"print",E,R[4635],N,[[]]],[0,"curve",E,"Provides some utilities to define a piecewise linear…",N,N],[3,R[4392],R[4312],"Piecewise Linear function in [0, 1] -> [0, 1].",N,N],[12,"points",E,"Array of points. Must be in order from the lowest…",16,N],[12,"maximum",E,"The maximum value that can be returned.",16,N],[11,"calculate_for_fraction_times_denominator",E,"Compute `f(n/d)*d` with `n <= d`. This is useful to avoid…",16,[[["self"],["n"]],["n"]]],[0,"generic",R[4231],"Generic implementations of Extrinsic/Header/Block.",N,N],[3,R[4393],R[4255],"A extrinsic right from the external world. This is…",N,N],[12,R[188],E,"The signature, address, number of extrinsics have come…",17,N],[12,R[4169],E,R[4239],17,N],[3,R[4398],E,"A payload that has been signed for an unchecked extrinsics.",N,N],[3,R[4394],E,"Definition of something that the external world might want…",N,N],[12,"signed",E,"Who this purports to be from and the number of extrinsics…",18,N],[12,R[4169],E,R[4239],18,N],[3,"Header",E,"Abstraction over a block header for a substrate chain.",N,N],[12,R[4263],E,"The parent hash.",19,N],[12,"number",E,"The block number.",19,N],[12,R[4289],E,"The state trie merkle root",19,N],[12,R[4264],E,"The merkle root of the extrinsics.",19,N],[12,"digest",E,"A chain-specific digest of data useful for light clients…",19,N],[3,"Block",E,"Abstraction over a substrate block.",N,N],[12,"header",E,R[4842],20,N],[12,R[4291],E,"The accompanying extrinsics.",20,N],[3,R[4395],E,"Abstraction over a substrate block and justification.",N,N],[12,"block",E,"Full block.",21,N],[12,"justification",E,"Block justification.",21,N],[3,"Digest",E,R[4240],N,N],[12,"logs",E,R[4241],9,N],[4,"Era",E,"An era to describe the longevity of a transaction.",N,N],[13,"Immortal",E,"The transaction is valid forever. The genesis hash must be…",22,N],[13,"Mortal",E,"Period and phase are encoded: - The period of validity…",22,N],[4,"BlockId",E,"Something to identify a block.",N,N],[13,"Hash",E,"Identify by block header hash.",23,N],[13,"Number",E,"Identify by block number.",23,N],[4,R[4265],E,R[4242],N,N],[13,R[4243],E,R[4244],12,N],[13,R[4249],E,R[4245],12,N],[13,R[4250],E,R[4246],12,N],[13,"Seal",E,R[4247],12,N],[13,"Other",E,R[4248],12,N],[4,R[4396],E,"A 'referencing view' for digest item. Does not own its…",N,N],[13,R[4243],E,"Reference to `DigestItem::ChangesTrieRoot`.",24,N],[13,R[4249],E,R[4245],24,N],[13,R[4250],E,R[4246],24,N],[13,"Seal",E,R[4247],24,N],[13,"Other",E,"Any 'non-system' digest item, opaque to the native code.",24,N],[4,R[4397],E,"Type of a digest item that contains raw data; this also…",N,N],[13,R[4249],E,"Type corresponding to DigestItem::PreRuntime.",25,N],[13,R[4250],E,"Type corresponding to DigestItem::Consensus.",25,N],[13,"Seal",E,"Type corresponding to DigestItem::Seal.",25,N],[13,"Other",E,"Some other (non-prescribed) type.",25,N],[11,"new_signed",E,"New instance of a signed extrinsic aka \"transaction\".",17,[[[R[188]],["extra"],["call"],["address"]],["self"]]],[11,"new_unsigned",E,"New instance of an unsigned extrinsic aka \"inherent\".",17,[[["call"]],["self"]]],[11,"new",E,"Create new `SignedPayload`.",26,[[["extra"],["call"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,R[582],E,"Create new `SignedPayload` from raw components.",26,[[["extra"],["call"]],["self"]]],[11,R[3589],E,"Deconstruct the payload into it's components.",26,[[]]],[11,"mortal",E,"Create a new era based on a period (which should be a…",22,[[["u64"]],["self"]]],[11,"immortal",E,"Create an \"immortal\" transaction.",22,[[],["self"]]],[11,"is_immortal",E,"`true` if this is an immortal transaction.",22,[[["self"]],["bool"]]],[11,"birth",E,"Get the block number of the start of the era whose…",22,[[["u64"]],["u64"]]],[11,"death",E,"Get the block number of the first block at which the era…",22,[[["u64"]],["u64"]]],[11,"hash",E,"Convenience helper for computing the hash of the header…",19,[[["self"]]]],[11,"hash",E,"Create a block ID from a hash.",23,[[],["self"]]],[11,"number",E,"Create a block ID from a number.",23,[[],["self"]]],[11,"logs",R[4231],"Get reference to all digest items.",9,[[["self"]]]],[11,"push",E,"Push new digest item.",9,[[[R[4252]],["self"]]]],[11,"pop",E,"Pop a digest item.",9,[[["self"]],[["option",[R[4252]]],[R[4252]]]]],[11,"log",E,"Get reference to the first digest item that matches the…",9,[[["fn"],["self"]],[[T],["option"]]]],[11,"convert_first",E,"Get a conversion of the first digest item that…",9,[[["fn"],["self"]],["option"]]],[11,"dref",E,"Returns a 'referencing view' for this digest item.",12,[[["self"]],[R[4331]]]],[11,R[4254],E,"Returns `Some` if the entry is the `ChangesTrieRoot` entry.",12,[[["self"]],[["option"],["hash"]]]],[11,R[4256],E,"Returns `Some` if this entry is the `PreRuntime` entry.",12,[[["self"]],["option"]]],[11,R[4257],E,"Returns `Some` if this entry is the `Consensus` entry.",12,[[["self"]],["option"]]],[11,"as_seal",E,"Returns `Some` if this entry is the `Seal` entry.",12,[[["self"]],["option"]]],[11,"as_other",E,"Returns Some if `self` is a `DigestItem::Other`.",12,[[["self"]],["option"]]],[11,"try_as_raw",E,"Returns the opaque data contained in the item if `Some` if…",12,[[["self"],[R[4253]]],["option"]]],[11,"try_to",E,"Returns the data contained in the item if `Some` if this…",12,[[["self"],[R[4253]]],[["decode"],["option"]]]],[11,R[4254],R[4255],"Cast this digest item into `ChangesTrieRoot`.",24,[[["self"]],[["hash"],["option"]]]],[11,R[4256],E,R[4258],24,[[["self"]],["option"]]],[11,R[4257],E,"Cast this digest item into `Consensus`",24,[[["self"]],["option"]]],[11,"as_seal",E,"Cast this digest item into `Seal`",24,[[["self"]],["option"]]],[11,"as_other",E,R[4258],24,[[["self"]],["option"]]],[11,"try_as_raw",E,R[4259],24,[[["self"],[R[4253]]],["option"]]],[11,"try_to",E,R[4259],24,[[["self"],[R[4253]]],[["decode"],["option"]]]],[6,"Phase",E,"Era phase",N,N],[0,"offchain",R[4231],"A collection of higher lever helpers for offchain calls.",N,N],[0,"http","sp_runtime::offchain","A high-level helpers for making HTTP requests from…",N,N],[3,"Request",R[4313],"An HTTP request builder.",N,N],[12,"method",E,"Request method",27,N],[12,"url",E,"Request URL",27,N],[12,"body",E,"Body of the request",27,N],[12,"deadline",E,"Deadline to finish sending the request",27,N],[3,R[3867],E,"A struct representing an uncompleted http request.",N,N],[12,"id",E,"Request ID",28,N],[3,"Response",E,"A HTTP response.",N,N],[12,"id",E,"Request id",29,N],[12,"code",E,"Response status code",29,N],[3,R[4399],E,"A buffered byte iterator over response body.",N,N],[3,"Headers",E,"A collection of Headers in the response.",N,N],[12,"raw",E,"Raw headers",30,N],[3,R[4400],E,"A custom iterator traversing all the headers.",N,N],[4,"Method",E,"Request method (HTTP verb)",N,N],[13,"Get",E,"GET request",31,N],[13,"Post",E,"POST request",31,N],[13,"Put",E,"PUT request",31,N],[13,"Patch",E,"PATCH request",31,N],[13,"Delete",E,"DELETE request",31,N],[13,"Other",E,"Custom verb",31,N],[4,"Error",E,"A request error",N,N],[13,R[3760],E,"Deadline has been reached.",32,N],[13,"IoError",E,"Request had timed out.",32,N],[13,"Unknown",E,"Unknown error has been ecountered.",32,N],[6,"HttpResult",E,"A result of waiting for a pending request.",N,N],[11,"get",E,"Start a simple GET request",27,[[["str"]],["self"]]],[11,"post",E,"Create new POST request with given body.",27,[[["str"],[T]],["self"]]],[11,"new",E,"Create new Request builder with given URL and body.",27,[[["str"]],["self"]]],[11,"method",E,"Change the method of the request",27,[[["method"]],["self"]]],[11,"url",E,"Change the URL of the request.",27,[[["str"]],["self"]]],[11,"body",E,"Set the body of the request.",27,[[[T]],["self"]]],[11,"add_header",E,"Add a header.",27,[[["str"]],["self"]]],[11,"deadline",E,"Set the deadline of the request.",27,[[[R[3766]]],["self"]]],[11,"send",E,"Send the request and return a handle.",27,[[],[[R[3762]],[R[3],[R[3762],R[3768]]],[R[3768]]]]],[11,"wait",E,"Wait for the request to complete.",28,[[],[R[4260]]]],[11,"try_wait",E,"Attempts to wait for the request to finish, but will…",28,[[],[[R[4260]],[R[3],[R[4260],R[3762]]],[R[3762]]]]],[11,"wait_all",E,"Wait for all provided requests.",28,[[["vec",[R[3762]]],[R[3762]]],[[R[4260]],["vec",[R[4260]]]]]],[11,"try_wait_all",E,"Attempt to wait for all provided requests, but up to given…",28,[[["vec",[R[3762]]],[R[3762]]],[[R[3],[R[4260],R[3762]]],["vec",[R[3]]]]]],[11,"headers",E,"Retrieve the headers for this response.",29,[[["self"]],["headers"]]],[11,"body",E,"Retrieve the body of this response.",29,[[["self"]],[R[4332]]]],[11,"deadline",E,"Set the deadline for reading the body.",33,[[["self"]]]],[11,"error",E,"Return an error that caused the iterator to return `None`.",33,[[["self"]],["option"]]],[11,"find",E,"Retrieve a single header from the list of headers.",30,[[["str"],["self"]],[["option",["str"]],["str"]]]],[11,R[211],E,"Convert this headers into an iterator.",30,[[["self"]],[R[4333]]]],[11,"next",E,"Move the iterator to the next position.",34,[[["self"]],["bool"]]],[11,"current",E,"Returns current element (if any).",34,[[["self"]],["option"]]],[0,"testing",R[4231],"Testing utilities.",N,N],[3,"H256",R[4262],R[3718],N,N],[12,"0",E,E,35,N],[0,"sr25519",E,R[4261],N,N],[3,"Public",R[4314],R[4203],N,N],[12,"0",E,E,36,N],[3,"Pair",E,R[4204],N,N],[3,R[2884],E,R[4205],N,N],[12,"0",E,E,37,N],[3,R[3743],E,R[4206],N,N],[12,"signer",E,R[3744],38,N],[12,R[188],E,R[3745],38,N],[3,R[4401],R[4262],"Authority Id",N,N],[12,"0",E,E,39,N],[3,"Header",E,"Block Header",N,N],[12,R[4263],E,"Parent hash",40,N],[12,"number",E,"Block Number",40,N],[12,R[4289],E,"Post-execution state trie root",40,N],[12,R[4264],E,"Merkle root of block's extrinsics",40,N],[12,"digest",E,"Digest items",40,N],[3,R[4428],E,"An opaque extrinsic wrapper type.",N,N],[3,"Block",E,"Testing block",N,N],[12,"header",E,"Block header",41,N],[12,R[4291],E,"List of extrinsics",41,N],[3,"TestXt",E,"Test transaction, tuple of (sender, call, signed_extra)…",N,N],[12,"0",E,E,42,N],[12,"1",E,E,42,N],[6,R[4265],E,"Digest item",N,N],[6,"Digest",E,"Header Digest",N,N],[11,"to_public_key",E,"Convert this authority id into a public key.",39,[[["self"]],["public"]]],[11,"set_all_keys",E,"Set the list of keys returned by the runtime call for all…",39,[[]]],[11,"new_from_number",E,"A new header with the given number and default hash for…",40,[[],["self"]]],[0,"traits",R[4231],R[4266],N,N],[8,R[4267],R[4315],R[4268],N,N],[8,R[3612],E,R[4269],N,N],[10,R[3601],E,R[3586],43,[[],[T]]],[8,R[3611],E,R[4270],N,N],[10,R[4271],E,R[3585],44,[[[T]],["self"]]],[8,R[3582],E,R[4272],N,N],[10,R[3583],E,R[4273],45,[[],["self"]]],[10,R[3584],E,R[4274],45,[[],["self"]]],[10,R[3602],E,R[4275],45,[[],["self"]]],[8,R[3613],E,R[4276],N,N],[11,R[4277],E,R[3585],46,[[[T]],["self"]]],[11,R[4278],E,R[3586],46,[[],[T]]],[8,"Zero",E,R[3551],N,N],[10,"zero",E,R[3552],47,[[],["self"]]],[11,"set_zero",E,R[3553],47,[[["self"]]]],[10,"is_zero",E,R[3554],47,[[["self"]],["bool"]]],[8,"One",E,R[3555],N,N],[10,"one",E,R[3556],48,[[],["self"]]],[11,"set_one",E,R[3557],48,[[["self"]]]],[11,"is_one",E,R[3558],48,[[["self"]],["bool"]]],[8,"Bounded",E,R[3559],N,N],[10,R[534],E,R[3560],49,[[],["self"]]],[10,R[536],E,R[3561],49,[[],["self"]]],[8,R[3562],E,R[3563],N,N],[10,R[1778],E,R[3564],50,[[["self"]],["option"]]],[8,R[3565],E,R[3566],N,N],[10,R[1779],E,R[3567],51,[[["self"]],["option"]]],[8,R[3568],E,R[3569],N,N],[10,R[1780],E,R[3570],52,[[["self"]],["option"]]],[8,R[3571],E,R[3572],N,N],[10,R[1781],E,R[3573],53,[[["self"]],["option"]]],[8,R[3574],E,R[3575],N,N],[10,R[3576],E,R[3577],54,[[["u32"],["self"]],["option"]]],[8,R[3578],E,R[3579],N,N],[10,R[3580],E,R[3581],55,[[["u32"],["self"]],["option"]]],[8,R[120],E,R[3547],N,N],[11,R[119],E,R[3548],56,[[["self"]],["self"]]],[10,R[3549],E,R[3550],56,[[["self"]],["option"]]],[3,R[4651],E,"An error type that indicates that the origin is invalid.",N,N],[3,R[4429],E,"An error that indicates that a lookup failed.",N,N],[3,R[4430],E,"A lookup implementation returning the input value.",N,N],[3,"Identity",E,"A structure that performs identity conversion.",N,N],[3,R[4431],E,"A structure that performs standard conversion using the…",N,N],[3,R[4432],E,"Blake2-256 Hash implementation.",N,N],[3,"ApiRef",E,"Auxiliary wrapper that holds an api instance and binds it…",N,N],[3,R[4418],E,R[4279],N,N],[3,R[4419],E,R[4279],N,N],[6,"HashFor",E,"Extract the hashing type for a block.",N,N],[6,"NumberFor",E,"Extract the number type for a block.",N,N],[6,"DigestFor",E,"Extract the digest type for a block.",N,N],[6,"DigestItemFor",E,"Extract the digest item type for a block.",N,N],[8,"Lazy",E,"A lazy value.",N,N],[10,"get",E,"Get a reference to the underlying value.",57,[[["self"]],[T]]],[8,R[4402],E,"Some type that is able to be collapsed into an account ID.…",N,N],[16,R[4295],E,"The account ID that this can be transformed into.",58,N],[10,R[4300],E,"Transform into an account.",58,[[]]],[8,"Verify",E,"Means of signature verification.",N,N],[16,"Signer",E,R[4280],59,N],[10,"verify",E,R[4281],59,[[["self"],["lazy"]],["bool"]]],[8,"AppVerify",E,"Means of signature verification of an application key.",N,N],[16,R[4295],E,R[4280],60,N],[10,"verify",E,R[4281],60,[[["self"],["lazy"]],["bool"]]],[8,R[4403],E,"Some sort of check on the origin is performed by this…",N,N],[16,"Success",E,"A return type.",61,N],[11,"ensure_origin",E,R[4282],61,[[[R[4283]]],[[R[4649]],[R[3],[R[4649]]]]]],[10,R[4824],E,R[4282],61,[[[R[4283]]],[R[3]]]],[8,"Lookup",E,R[4285],N,N],[16,"Source",E,R[4286],62,N],[16,"Target",E,R[4287],62,N],[10,"lookup",E,R[4288],62,[[["self"]],[[R[4284]],[R[3],[R[4284]]]]]],[8,R[4404],E,R[4285],N,N],[16,"Source",E,R[4286],63,N],[16,"Target",E,R[4287],63,N],[10,"lookup",E,R[4288],63,[[],[[R[3],[R[4284]]],[R[4284]]]]],[10,"unlookup",E,"Convert from Target back to Source.",63,[[]]],[8,"Convert",E,"Extensible conversion trait. Generic over both source and…",N,N],[10,"convert",E,"Make conversion.",64,[[["a"]],["b"]]],[8,R[4405],E,R[4276],N,N],[11,"checked_from",E,R[3585],65,[[[T]],["option"]]],[11,"checked_into",E,"Consume self to return `Some` equivalent value of…",65,[[],["option"]]],[8,"Scale",E,"Multiply and divide by a number that isn't necessarily the…",N,N],[16,"Output",E,"The output type of the product of `self` and `Other`.",66,N],[10,"mul",E,"@return the product of `self` and `other`.",66,[[["other"]]]],[10,"div",E,"@return the integer division of `self` and `other`.",66,[[["other"]]]],[10,"rem",E,"@return the modulo remainder of `self` and `other`.",66,[[["other"]]]],[8,"Clear",E,"Trait for things that can be clear (have no bits set). For…",N,N],[10,R[4308],E,"True iff no bits are set.",67,[[["self"]],["bool"]]],[10,"clear",E,"Return the value of Self that is clear.",67,[[],["self"]]],[8,"SimpleBitOps",E,"A meta trait for all bit ops.",N,N],[8,"OnFinalize",E,"The block finalization trait. Implementing this lets you…",N,N],[11,R[4636],E,"The block is being finalized. Implement to have something…",68,[[[R[4081]]]]],[8,R[4406],E,"The block initialization trait. Implementing this lets you…",N,N],[11,R[4637],E,"The block is being initialized. Implement to have…",69,[[[R[4081]]]]],[8,R[4407],E,"Off-chain computation trait.",N,N],[11,"offchain_worker",E,"This function is being called after every block import…",70,[[[R[4081]]]]],[8,"Hash",E,"Abstraction around hashing",N,N],[16,"Output",E,"The hash type produced.",71,N],[16,"Hasher",E,"The associated hash_db Hasher type.",71,N],[10,"hash",E,"Produce the hash of some byte-slice.",71,[[]]],[11,"hash_of",E,"Produce the hash of some codec-encodable value.",71,[[["s"]]]],[10,R[4022],E,"The ordered Patricia tree root of the given `input`.",71,[[["vec",["vec"]],["vec",["u8"]]]]],[10,R[4028],E,"The Patricia tree root of the given mapping.",71,[[["vec"]]]],[8,"CheckEqual",E,"Something that can be checked for equality and printed out…",N,N],[10,R[4318],E,"Perform the equality check.",72,[[["self"]]]],[8,"MaybeDisplay",E,"A type that implements Display when in std environment.",N,N],[8,"MaybeHash",E,"A type that implements Hash when in std environment.",N,N],[8,"MaybeSerialize",E,"A type that implements Serialize when in std environment.",N,N],[8,"MaybeSerializeDeserialize",E,"A type that implements Serialize, DeserializeOwned and…",N,N],[8,R[4408],E,"A type that provides a randomness beacon.",N,N],[10,"random",E,"Returns 32 bytes of random data. The output will change…",73,[[]]],[8,"Member",E,"A type that can be used in runtime structures.",N,N],[8,"IsMember",E,"Determine if a `MemberId` is a valid member.",N,N],[10,"is_member",E,"Is the given `MemberId` a valid member?",74,[[["memberid"]],["bool"]]],[8,"Header",E,R[4290],N,N],[16,"Number",E,"Header number.",75,N],[16,"Hash",E,"Header hash type",75,N],[16,"Hashing",E,"Hashing algorithm",75,N],[10,"new",E,"Creates new header.",75,[[["digest"]],["self"]]],[10,"number",E,"Returns a reference to the header number.",75,[[["self"]]]],[10,R[4322],E,"Sets the header number.",75,[[["self"]]]],[10,R[4264],E,"Returns a reference to the extrinsics root.",75,[[["self"]]]],[10,R[4319],E,"Sets the extrinsic root.",75,[[["self"]]]],[10,R[4289],E,"Returns a reference to the state root.",75,[[["self"]]]],[10,R[4320],E,"Sets the state root.",75,[[["self"]]]],[10,R[4263],E,"Returns a reference to the parent hash.",75,[[["self"]]]],[10,R[4321],E,"Sets the parent hash.",75,[[["self"]]]],[10,"digest",E,"Returns a reference to the digest.",75,[[["self"]],["digest"]]],[10,R[4323],E,"Get a mutable reference to the digest.",75,[[["self"]],["digest"]]],[11,"hash",E,"Returns the hash of the header.",75,[[["self"]]]],[8,"Block",E,R[4290],N,N],[16,R[4843],E,"Type for extrinsics.",76,N],[16,"Header",E,"Header type.",76,N],[16,"Hash",E,"Block hash type.",76,N],[10,"header",E,"Returns a reference to the header.",76,[[["self"]]]],[10,R[4291],E,"Returns a reference to the list of extrinsics.",76,[[["self"]]]],[10,R[3589],E,"Split the block into header and list of extrinsics.",76,[[]]],[10,"new",E,"Creates new block from header and extrinsics.",76,[[["vec"]],["self"]]],[11,"hash",E,"Returns the hash of the block.",76,[[["self"]]]],[10,R[4324],E,"Creates an encoded block from the given `header` and…",76,[[],[["vec",["u8"]],["u8"]]]],[8,R[4843],E,"Something that acts like an `Extrinsic`.",N,N],[16,"Call",E,"The function call.",77,N],[16,"SignaturePayload",E,"The payload we carry for signed extrinsics.",77,N],[11,R[4325],E,"Is this `Extrinsic` signed? If no information are…",77,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"new",E,"Create new instance of the extrinsic.",77,[[["option"]],["option"]]],[8,"Checkable",E,R[4292],N,N],[16,"Checked",E,R[4293],78,N],[10,"check",E,"Check self, given an instance of Context.",78,[[["context"]],[[R[4251]],[R[3],[R[4251]]]]]],[8,R[4409],E,R[4292],N,N],[16,"Checked",E,R[4293],79,N],[10,"check",E,"Check self.",79,[[],[[R[4251]],[R[3],[R[4251]]]]]],[8,R[4410],E,R[4638],N,N],[16,"Origin",E,R[4639],80,N],[16,"Trait",E,"...",80,N],[10,R[937],E,R[4640],80,[[],[R[4543]]]],[8,R[4411],E,"Means by which a transaction may be extended. This type…",N,N],[16,R[4295],E,"The type which encodes the sender identity.",81,N],[16,"Call",E,"The type which encodes the call to be dispatched.",81,N],[16,"AdditionalSigned",E,"Any additional data that will go into the signed payload.…",81,N],[16,"Pre",E,"The type that encodes information that can be passed from…",81,N],[16,R[4296],E,"An opaque set of information attached to the transaction.…",81,N],[10,R[4825],E,"Construct any additional data that should be in the signed…",81,[[["self"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,R[4847],E,"Validate a signed transaction for the transaction queue.",81,[[["usize"],["self"]],[R[4294]]]],[11,R[4298],E,"Do any pre-flight stuff for a signed transaction.",81,[[["usize"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,R[4299],E,"Validate an unsigned transaction for the transaction queue.",81,[[["usize"]],[R[4294]]]],[11,"pre_dispatch_unsigned",E,"Do any pre-flight stuff for a unsigned transaction.",81,[[["usize"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,"post_dispatch",E,"Do any post-flight stuff for a transaction.",81,[[["usize"]]]],[8,"Applyable",E,"An \"executable\" piece of information, used by the standard…",N,N],[16,R[4295],E,"ID of the account that is responsible for this piece of…",82,N],[16,"Call",E,"Type by which we can dispatch. Restricts the…",82,N],[16,R[4296],E,"An opaque set of information attached to the transaction.",82,N],[10,"sender",E,"Returns a reference to the sender if any.",82,[[["self"]],["option"]]],[10,R[4847],E,R[4327],82,[[["usize"],["self"]],[R[4294]]]],[10,"apply",E,R[4328],82,[[["usize"]],[R[4326]]]],[8,R[4412],E,"Something that provides a runtime api.",N,N],[16,"Api",E,"The concrete type that provides the api.",83,N],[10,"runtime_api",E,"Returns the runtime api. The returned instance will keep…",83,[[["self"]],["apiref"]]],[8,R[4413],E,R[4297],N,N],[16,"RuntimeBlock",E,"The `RuntimeBlock` type.",84,N],[8,R[4414],E,R[4297],N,N],[16,"NodeBlock",E,"The `NodeBlock` type.",85,N],[8,R[4415],E,"Something that provides information about a runtime api.",N,N],[18,"ID",E,"The identifier of the runtime api.",86,N],[18,"VERSION",E,"The version of the runtime api.",86,N],[8,R[4416],E,"Something that can validate unsigned extrinsics for the…",N,N],[16,"Call",E,"The call to validate",87,N],[11,R[4298],E,"Validate the call right before dispatch.",87,[[],[[R[4251]],[R[3],[R[4251]]]]]],[10,R[4299],E,"Return the validity of the call",87,[[],[R[4294]]]],[8,"OpaqueKeys",E,"Opaque datatype that may be destructured into a series of…",N,N],[16,"KeyTypeIdProviders",E,"Types bound to this opaque keys that provide the key type…",88,N],[10,"key_ids",E,"Return the key-type IDs supported by this set.",88,[[]]],[10,"get_raw",E,"Get the raw bytes of key with key-type ID `i`.",88,[[[R[3771]],["self"]]]],[11,"get",E,"Get the decoded key with index `i`.",88,[[[R[3771]],["self"]],[["decode"],["option"]]]],[11,"ownership_proof_is_valid",E,"Verify a proof of ownership for the keys.",88,[[["self"]],["bool"]]],[8,R[4417],E,"This type can be converted into and possibly from an…",N,N],[11,R[4300],E,"Convert into an account ID. This is infallible.",89,[[["self"]],[R[4302]]]],[11,"try_from_account",E,R[4301],89,[[[R[4302]]],["option"]]],[10,R[4310],E,"Convert this value amalgamated with the a secondary \"sub\"…",89,[[["encode"],["self"]],[R[4302]]]],[10,R[4311],E,R[4301],89,[[[R[4302]]],["option"]]],[8,R[4650],E,R[4641],N,N],[10,"print",E,R[4642],90,[[["self"]]]],[8,"BlockIdTo",E,"Something that can convert a [`BlockId`] to a number or a…",N,N],[16,"Error",E,"The error type that will be returned by the functions.",91,N],[10,"to_hash",E,R[4303],91,[[["self"],["blockid"]],[["option"],[R[3],["option"]]]]],[10,"to_number",E,R[4303],91,[[["self"],["blockid"]],[[R[3],["option"]],["option",["numberfor"]]]]],[11,"new",E,R[4304],92,[[[T]],["self"]]],[11,"new",E,R[4304],93,[[],["self"]]],[0,"transaction_validity",R[4231],"Transaction validity interface.",N,N],[3,R[4420],R[4316],"Information concerning a valid transaction.",N,N],[12,"priority",E,"Priority of the transaction.",94,N],[12,"requires",E,"Transaction dependencies",94,N],[12,"provides",E,"Provided tags",94,N],[12,"longevity",E,"Transaction longevity",94,N],[12,"propagate",E,"A flag indicating if the transaction should be propagated…",94,N],[4,R[4421],E,"An invalid transaction validity.",N,N],[13,"Call",E,"The call of the transaction is not expected.",95,N],[13,"Payment",E,"General error to do with the inability to pay some fees…",95,N],[13,"Future",E,"General error to do with the transaction not yet being…",95,N],[13,"Stale",E,"General error to do with the transaction being outdated…",95,N],[13,"BadProof",E,"General error to do with the transaction's proofs (e.g.…",95,N],[13,"AncientBirthBlock",E,"The transaction birth block is ancient.",95,N],[13,"ExhaustsResources",E,"The transaction would exhaust the resources of current…",95,N],[13,"Custom",E,"Any other custom invalid validity that is not covered by…",95,N],[4,R[4422],E,"An unknown transaction validity.",N,N],[13,R[4305],E,"Could not lookup some information that is required to…",96,N],[13,"NoUnsignedValidator",E,"No validator found for the given unsigned transaction.",96,N],[13,"Custom",E,"Any other custom unknown validity that is not covered by…",96,N],[4,R[4423],E,"Errors that can occur while checking the validity of a…",N,N],[13,"Invalid",E,"The transaction is invalid.",97,N],[13,"Unknown",E,"Transaction validity can't be determined.",97,N],[6,R[4551],E,R[4643],N,N],[6,"TransactionLongevity",E,"Minimum number of blocks a transaction will remain valid…",N,N],[6,"TransactionTag",E,"Tag for a transaction. No two transactions with the same…",N,N],[6,"TransactionValidity",E,"Information on a transaction's validity and, if valid, on…",N,N],[11,R[4306],E,"Returns if the reason for the invalidity was block…",95,[[["self"]],["bool"]]],[11,R[4306],E,"Returns `true` if the reason for the error was block…",97,[[["self"]],["bool"]]],[11,"combine_with",E,"Combine two instances into one, as a best effort. This…",94,[[[R[4336]]],["self"]]],[0,"random_number_generator",R[4231],"A simple pseudo random number generator that allows a…",N,N],[3,R[4424],R[4317],"Pseudo-random number streamer. This retains the state of…",N,N],[11,"new",E,"A new source of random data.",98,[[],["self"]]],[11,"pick_u32",E,R[4307],98,[[["self"],["u32"]],["u32"]]],[11,"pick_usize",E,R[4307],98,[[["self"],["usize"]],["usize"]]],[11,"pick_item",E,"Pick a random element from an array of `items`.",98,[[["self"]],[["option"],[T]]]],[6,"Justification",R[4231],"An abstraction over justification for a block's validity…",N,N],[6,"RuntimeString",E,"A String that is a `&'static str` on `no_std` and a…",N,N],[6,R[4644],E,R[4645],N,N],[6,R[4646],E,R[4647],N,N],[6,R[4433],E,"This type specifies the outcome of dispatching a call to a…",N,N],[6,"ApplyExtrinsicResult",E,"The result of applying of an extrinsic.",N,N],[8,R[4425],E,"Complex storage builder stuff.",N,N],[11,R[4844],E,"Build the storage out of this builder.",99,[[["self"]],[["string"],[R[3],["storage","string"]],["storage"]]]],[10,R[4329],E,R[4845],99,[[["storage"],["self"]],[[R[3],["string"]],["string"]]]],[8,R[4426],E,"Something that can build the genesis storage of a module.",N,N],[10,R[4846],E,"Create the module genesis storage into the given `storage`…",100,[[["storage"],["self"]],[[R[3],["string"]],["string"]]]],[11,"stripped",E,R[4648],15,[[],["self"]]],[14,"count",E,"Calls a given macro a number of times with a set of fixed…",N,N],[14,"impl_opaque_keys",E,"Implement `OpaqueKeys` for a described struct.",N,N],[14,R[4441],E,R[4442],N,N],[14,"__impl_outer_config_types",E,"Helper macro for `impl_outer_config`",N,N],[14,"impl_outer_config",E,"Implement the output \"meta\" module configuration struct,…",N,N],[14,"assert_eq_error_rate",E,"Checks that `$x` is equal to `$y` with an error rate of…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],0,[[["outer"]],[T]]],[11,R[3780],E,R[3777],0,[[["outer"]],[T]]],[11,R[3774],E,E,0,[[],[T]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[2628],E,E,0,[[]]],[11,R[3601],E,E,0,[[],[T]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],1,[[["outer"]],[T]]],[11,R[3780],E,R[3777],1,[[["outer"]],[T]]],[11,R[3774],E,E,1,[[],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[3601],E,E,1,[[],[T]]],[11,R[4308],E,E,3,[[["self"]],["bool"]]],[11,"clear",E,E,3,[[],[T]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[292],E,E,3,[[["self"]],["usize"]]],[11,R[3525],E,E,3,[[["self"],["f"]],["r"]]],[11,"encode",E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,3,[[["w"],["self"]]]],[11,"decode",E,E,3,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,3,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],3,[[["outer"]],[T]]],[11,R[3780],E,R[3777],3,[[["outer"]],[T]]],[11,R[3774],E,E,3,[[],[T]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[3708],E,E,3,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,3,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[2628],E,E,3,[[]]],[11,R[3601],E,E,3,[[],[T]]],[11,R[4308],E,E,101,[[["self"]],["bool"]]],[11,"clear",E,E,101,[[],[T]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[24],E,E,101,[[["self"]],[T]]],[11,R[25],E,E,101,[[["self"],[T]]]],[11,R[78],E,E,101,[[["self"]],["string"]]],[11,R[20],E,E,101,[[[U]],[R[3]]]],[11,R[21],E,E,101,[[],[R[3]]]],[11,R[45],E,E,101,[[["self"]],[T]]],[11,R[22],E,E,101,[[["self"]],[T]]],[11,R[26],E,E,101,[[["self"]],[R[46]]]],[11,R[292],E,E,101,[[["self"]],["usize"]]],[11,R[3525],E,E,101,[[["self"],["f"]],["r"]]],[11,"encode",E,E,101,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,101,[[["w"],["self"]]]],[11,"decode",E,E,101,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,101,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,101,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],101,[[["outer"]],[T]]],[11,R[3780],E,R[3777],101,[[["outer"]],[T]]],[11,R[3782],E,E,101,[[[T]],["outer"]]],[11,R[3774],E,E,101,[[],[T]]],[11,R[3733],E,E,101,[[["str"]],[[R[3724]],[R[3],[R[3724]]]]]],[11,R[3783],E,E,101,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,"vzip",E,E,101,[[],["v"]]],[11,"clear",E,E,101,[[["self"]]]],[11,R[2628],E,E,101,[[]]],[11,R[4184],E,E,101,[[["self"]],[U]]],[11,R[4183],E,E,101,[[["self"]],[U]]],[11,R[3601],E,E,101,[[],[T]]],[11,R[4308],E,E,102,[[["self"]],["bool"]]],[11,"clear",E,E,102,[[],[T]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[24],E,E,102,[[["self"]],[T]]],[11,R[25],E,E,102,[[["self"],[T]]]],[11,R[20],E,E,102,[[[U]],[R[3]]]],[11,R[21],E,E,102,[[],[R[3]]]],[11,R[45],E,E,102,[[["self"]],[T]]],[11,R[22],E,E,102,[[["self"]],[T]]],[11,R[26],E,E,102,[[["self"]],[R[46]]]],[11,R[292],E,E,102,[[["self"]],["usize"]]],[11,R[3525],E,E,102,[[["self"],["f"]],["r"]]],[11,"encode",E,E,102,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,102,[[["w"],["self"]]]],[11,"decode",E,E,102,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,102,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,102,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],102,[[["outer"]],[T]]],[11,R[3780],E,R[3777],102,[[["outer"]],[T]]],[11,R[3774],E,E,102,[[],[T]]],[11,"vzip",E,E,102,[[],["v"]]],[11,"clear",E,E,102,[[["self"]]]],[11,R[2628],E,E,102,[[]]],[11,R[3601],E,E,102,[[],[T]]],[11,R[3583],E,E,102,[[[T]],[T]]],[11,R[3584],E,E,102,[[[T]],[T]]],[11,R[3602],E,E,102,[[[T]],[T]]],[11,R[4308],E,E,103,[[["self"]],["bool"]]],[11,"clear",E,E,103,[[],[T]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[24],E,E,103,[[["self"]],[T]]],[11,R[25],E,E,103,[[["self"],[T]]]],[11,R[20],E,E,103,[[[U]],[R[3]]]],[11,R[21],E,E,103,[[],[R[3]]]],[11,R[45],E,E,103,[[["self"]],[T]]],[11,R[22],E,E,103,[[["self"]],[T]]],[11,R[26],E,E,103,[[["self"]],[R[46]]]],[11,R[292],E,E,103,[[["self"]],["usize"]]],[11,R[3525],E,E,103,[[["self"],["f"]],["r"]]],[11,"encode",E,E,103,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,103,[[["w"],["self"]]]],[11,"decode",E,E,103,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,103,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,103,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],103,[[["outer"]],[T]]],[11,R[3780],E,R[3777],103,[[["outer"]],[T]]],[11,R[3774],E,E,103,[[],[T]]],[11,"vzip",E,E,103,[[],["v"]]],[11,"clear",E,E,103,[[["self"]]]],[11,R[2628],E,E,103,[[]]],[11,R[3601],E,E,103,[[],[T]]],[11,R[3583],E,E,103,[[[T]],[T]]],[11,R[3584],E,E,103,[[[T]],[T]]],[11,R[3602],E,E,103,[[[T]],[T]]],[11,R[4308],E,E,104,[[["self"]],["bool"]]],[11,"clear",E,E,104,[[],[T]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[24],E,E,104,[[["self"]],[T]]],[11,R[25],E,E,104,[[["self"],[T]]]],[11,R[20],E,E,104,[[[U]],[R[3]]]],[11,R[21],E,E,104,[[],[R[3]]]],[11,R[45],E,E,104,[[["self"]],[T]]],[11,R[22],E,E,104,[[["self"]],[T]]],[11,R[26],E,E,104,[[["self"]],[R[46]]]],[11,R[292],E,E,104,[[["self"]],["usize"]]],[11,R[3525],E,E,104,[[["self"],["f"]],["r"]]],[11,"encode",E,E,104,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,104,[[["w"],["self"]]]],[11,"decode",E,E,104,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,104,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,104,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],104,[[["outer"]],[T]]],[11,R[3780],E,R[3777],104,[[["outer"]],[T]]],[11,R[3774],E,E,104,[[],[T]]],[11,"vzip",E,E,104,[[],["v"]]],[11,"clear",E,E,104,[[["self"]]]],[11,R[2628],E,E,104,[[]]],[11,R[3601],E,E,104,[[],[T]]],[11,R[3583],E,E,104,[[[T]],[T]]],[11,R[3584],E,E,104,[[[T]],[T]]],[11,R[3602],E,E,104,[[[T]],[T]]],[11,R[4308],E,E,105,[[["self"]],["bool"]]],[11,"clear",E,E,105,[[],[T]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[24],E,E,105,[[["self"]],[T]]],[11,R[25],E,E,105,[[["self"],[T]]]],[11,R[20],E,E,105,[[[U]],[R[3]]]],[11,R[21],E,E,105,[[],[R[3]]]],[11,R[45],E,E,105,[[["self"]],[T]]],[11,R[22],E,E,105,[[["self"]],[T]]],[11,R[26],E,E,105,[[["self"]],[R[46]]]],[11,R[292],E,E,105,[[["self"]],["usize"]]],[11,R[3525],E,E,105,[[["self"],["f"]],["r"]]],[11,"encode",E,E,105,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,105,[[["w"],["self"]]]],[11,"decode",E,E,105,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,105,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,105,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],105,[[["outer"]],[T]]],[11,R[3780],E,R[3777],105,[[["outer"]],[T]]],[11,R[3774],E,E,105,[[],[T]]],[11,"vzip",E,E,105,[[],["v"]]],[11,"clear",E,E,105,[[["self"]]]],[11,R[2628],E,E,105,[[]]],[11,R[3601],E,E,105,[[],[T]]],[11,R[3583],E,E,105,[[[T]],[T]]],[11,R[3584],E,E,105,[[[T]],[T]]],[11,R[3602],E,E,105,[[[T]],[T]]],[11,R[4308],E,E,106,[[["self"]],["bool"]]],[11,"clear",E,E,106,[[],[T]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[24],E,E,106,[[["self"]],[T]]],[11,R[25],E,E,106,[[["self"],[T]]]],[11,R[20],E,E,106,[[[U]],[R[3]]]],[11,R[21],E,E,106,[[],[R[3]]]],[11,R[45],E,E,106,[[["self"]],[T]]],[11,R[22],E,E,106,[[["self"]],[T]]],[11,R[26],E,E,106,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],106,[[["outer"]],[T]]],[11,R[3780],E,R[3777],106,[[["outer"]],[T]]],[11,R[3774],E,E,106,[[],[T]]],[11,"vzip",E,E,106,[[],["v"]]],[11,"clear",E,E,106,[[["self"]]]],[11,R[2628],E,E,106,[[]]],[11,R[3601],E,E,106,[[],[T]]],[11,R[4308],E,E,107,[[["self"]],["bool"]]],[11,"clear",E,E,107,[[],[T]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[24],E,E,107,[[["self"]],[T]]],[11,R[25],E,E,107,[[["self"],[T]]]],[11,R[20],E,E,107,[[[U]],[R[3]]]],[11,R[21],E,E,107,[[],[R[3]]]],[11,R[45],E,E,107,[[["self"]],[T]]],[11,R[22],E,E,107,[[["self"]],[T]]],[11,R[26],E,E,107,[[["self"]],[R[46]]]],[11,R[292],E,E,107,[[["self"]],["usize"]]],[11,R[3525],E,E,107,[[["self"],["f"]],["r"]]],[11,"encode",E,E,107,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,107,[[["w"],["self"]]]],[11,"decode",E,E,107,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,107,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,107,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],107,[[["outer"]],[T]]],[11,R[3780],E,R[3777],107,[[["outer"]],[T]]],[11,R[3774],E,E,107,[[],[T]]],[11,"vzip",E,E,107,[[],["v"]]],[11,"clear",E,E,107,[[["self"]]]],[11,R[2628],E,E,107,[[]]],[11,R[3601],E,E,107,[[],[T]]],[11,R[3583],E,E,107,[[[T]],[T]]],[11,R[3584],E,E,107,[[[T]],[T]]],[11,R[3602],E,E,107,[[[T]],[T]]],[11,R[4308],R[4309],E,108,[[["self"]],["bool"]]],[11,"clear",E,E,108,[[],[T]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[24],E,E,108,[[["self"]],[T]]],[11,R[25],E,E,108,[[["self"],[T]]]],[11,R[20],E,E,108,[[[U]],[R[3]]]],[11,R[21],E,E,108,[[],[R[3]]]],[11,R[45],E,E,108,[[["self"]],[T]]],[11,R[22],E,E,108,[[["self"]],[T]]],[11,R[26],E,E,108,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],108,[[["outer"]],[T]]],[11,R[3780],E,R[3777],108,[[["outer"]],[T]]],[11,R[3774],E,E,108,[[],[T]]],[11,"vzip",E,E,108,[[],["v"]]],[11,"clear",E,E,108,[[["self"]]]],[11,R[2628],E,E,108,[[]]],[11,R[3601],E,E,108,[[],[T]]],[11,R[4308],R[4231],E,9,[[["self"]],["bool"]]],[11,"clear",E,E,9,[[],[T]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,R[292],E,E,9,[[["self"]],["usize"]]],[11,R[3525],E,E,9,[[["self"],["f"]],["r"]]],[11,"encode",E,E,9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,9,[[["w"],["self"]]]],[11,"decode",E,E,9,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,9,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],9,[[["outer"]],[T]]],[11,R[3780],E,R[3777],9,[[["outer"]],[T]]],[11,R[3774],E,E,9,[[],[T]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"clear",E,E,9,[[["self"]]]],[11,R[2628],E,E,9,[[]]],[11,R[3601],E,E,9,[[],[T]]],[11,R[4310],E,E,10,[[["s"],["self"]],[T]]],[11,R[4311],E,E,10,[[[T]],["option"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,R[292],E,E,10,[[["self"]],["usize"]]],[11,R[3525],E,E,10,[[["self"],["f"]],["r"]]],[11,"encode",E,E,10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,10,[[["w"],["self"]]]],[11,"decode",E,E,10,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,10,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],10,[[["outer"]],[T]]],[11,R[3780],E,R[3777],10,[[["outer"]],[T]]],[11,R[3774],E,E,10,[[],[T]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[3601],E,E,10,[[],[T]]],[11,R[4308],E,E,109,[[["self"]],["bool"]]],[11,"clear",E,E,109,[[],[T]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[24],E,E,109,[[["self"]],[T]]],[11,R[25],E,E,109,[[["self"],[T]]]],[11,R[20],E,E,109,[[[U]],[R[3]]]],[11,R[21],E,E,109,[[],[R[3]]]],[11,R[45],E,E,109,[[["self"]],[T]]],[11,R[22],E,E,109,[[["self"]],[T]]],[11,R[26],E,E,109,[[["self"]],[R[46]]]],[11,R[292],E,E,109,[[["self"]],["usize"]]],[11,R[3525],E,E,109,[[["self"],["f"]],["r"]]],[11,"encode",E,E,109,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,109,[[["w"],["self"]]]],[11,"decode",E,E,109,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,109,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,109,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],109,[[["outer"]],[T]]],[11,R[3780],E,R[3777],109,[[["outer"]],[T]]],[11,R[3774],E,E,109,[[],[T]]],[11,"vzip",E,E,109,[[],["v"]]],[11,"clear",E,E,109,[[["self"]]]],[11,R[2628],E,E,109,[[]]],[11,R[3601],E,E,109,[[],[T]]],[11,R[4308],E,E,11,[[["self"]],["bool"]]],[11,"clear",E,E,11,[[],[T]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,R[292],E,E,11,[[["self"]],["usize"]]],[11,R[3525],E,E,11,[[["self"],["f"]],["r"]]],[11,"encode",E,E,11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,11,[[["w"],["self"]]]],[11,"decode",E,E,11,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,11,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],11,[[["outer"]],[T]]],[11,R[3780],E,R[3777],11,[[["outer"]],[T]]],[11,R[3774],E,E,11,[[],[T]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"clear",E,E,11,[[["self"]]]],[11,R[2628],E,E,11,[[]]],[11,R[3601],E,E,11,[[],[T]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,R[292],E,E,12,[[["self"]],["usize"]]],[11,R[3525],E,E,12,[[["self"],["f"]],["r"]]],[11,"encode",E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,12,[[["w"],["self"]]]],[11,"decode",E,E,12,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,12,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],12,[[["outer"]],[T]]],[11,R[3780],E,R[3777],12,[[["outer"]],[T]]],[11,R[3774],E,E,12,[[],[T]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[3601],E,E,12,[[],[T]]],[11,R[4308],E,E,13,[[["self"]],["bool"]]],[11,"clear",E,E,13,[[],[T]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"],[T]]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,R[292],E,E,13,[[["self"]],["usize"]]],[11,R[3525],E,E,13,[[["self"],["f"]],["r"]]],[11,"encode",E,E,13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,13,[[["w"],["self"]]]],[11,"decode",E,E,13,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,13,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],13,[[["outer"]],[T]]],[11,R[3780],E,R[3777],13,[[["outer"]],[T]]],[11,R[3774],E,E,13,[[],[T]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"clear",E,E,13,[[["self"]]]],[11,R[2628],E,E,13,[[]]],[11,R[3601],E,E,13,[[],[T]]],[11,R[4308],E,E,14,[[["self"]],["bool"]]],[11,"clear",E,E,14,[[],[T]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,R[78],E,E,14,[[["self"]],["string"]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,R[292],E,E,14,[[["self"]],["usize"]]],[11,R[3525],E,E,14,[[["self"],["f"]],["r"]]],[11,"encode",E,E,14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,14,[[["w"],["self"]]]],[11,"decode",E,E,14,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,14,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],14,[[["outer"]],[T]]],[11,R[3780],E,R[3777],14,[[["outer"]],[T]]],[11,R[3782],E,E,14,[[[T]],["outer"]]],[11,R[3774],E,E,14,[[],[T]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"clear",E,E,14,[[["self"]]]],[11,R[2628],E,E,14,[[]]],[11,R[4184],E,E,14,[[["self"]],[U]]],[11,R[4183],E,E,14,[[["self"]],[U]]],[11,R[3601],E,E,14,[[],[T]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,R[292],E,E,15,[[["self"]],["usize"]]],[11,R[3525],E,E,15,[[["self"],["f"]],["r"]]],[11,"encode",E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,15,[[["w"],["self"]]]],[11,"decode",E,E,15,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,15,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],15,[[["outer"]],[T]]],[11,R[3780],E,R[3777],15,[[["outer"]],[T]]],[11,R[3774],E,E,15,[[],[T]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[3601],E,E,15,[[],[T]]],[11,"into",R[4312],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],16,[[["outer"]],[T]]],[11,R[3780],E,R[3777],16,[[["outer"]],[T]]],[11,R[3774],E,E,16,[[],[T]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[3601],E,E,16,[[],[T]]],[11,"check",R[4255],E,17,[[["context"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,R[292],E,E,17,[[["self"]],["usize"]]],[11,R[3525],E,E,17,[[["self"],["f"]],["r"]]],[11,"encode",E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,17,[[["w"],["self"]]]],[11,"decode",E,E,17,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,17,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],17,[[["outer"]],[T]]],[11,R[3780],E,R[3777],17,[[["outer"]],[T]]],[11,R[3774],E,E,17,[[],[T]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[3601],E,E,17,[[],[T]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,R[292],E,E,26,[[["self"]],["usize"]]],[11,R[3525],E,E,26,[[["self"],["f"]],["r"]]],[11,"encode",E,E,26,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,26,[[["w"],["self"]]]],[11,R[3779],E,R[3776],26,[[["outer"]],[T]]],[11,R[3780],E,R[3777],26,[[["outer"]],[T]]],[11,R[3774],E,E,26,[[],[T]]],[11,"vzip",E,E,26,[[],["v"]]],[11,R[3601],E,E,26,[[],[T]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"],[T]]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],18,[[["outer"]],[T]]],[11,R[3780],E,R[3777],18,[[["outer"]],[T]]],[11,R[3774],E,E,18,[[],[T]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[3601],E,E,18,[[],[T]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"],[T]]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,R[292],E,E,19,[[["self"]],["usize"]]],[11,R[3525],E,E,19,[[["self"],["f"]],["r"]]],[11,"encode",E,E,19,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,19,[[["w"],["self"]]]],[11,"decode",E,E,19,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,19,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,19,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],19,[[["outer"]],[T]]],[11,R[3780],E,R[3777],19,[[["outer"]],[T]]],[11,R[3774],E,E,19,[[],[T]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[3601],E,E,19,[[],[T]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[24],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"],[T]]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,R[292],E,E,20,[[["self"]],["usize"]]],[11,R[3525],E,E,20,[[["self"],["f"]],["r"]]],[11,"encode",E,E,20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,20,[[["w"],["self"]]]],[11,"decode",E,E,20,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,20,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],20,[[["outer"]],[T]]],[11,R[3780],E,R[3777],20,[[["outer"]],[T]]],[11,R[3774],E,E,20,[[],[T]]],[11,"vzip",E,E,20,[[],["v"]]],[11,R[3601],E,E,20,[[],[T]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[24],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"],[T]]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,R[292],E,E,21,[[["self"]],["usize"]]],[11,R[3525],E,E,21,[[["self"],["f"]],["r"]]],[11,"encode",E,E,21,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,21,[[["w"],["self"]]]],[11,"decode",E,E,21,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,21,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,21,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],21,[[["outer"]],[T]]],[11,R[3780],E,R[3777],21,[[["outer"]],[T]]],[11,R[3774],E,E,21,[[],[T]]],[11,"vzip",E,E,21,[[],["v"]]],[11,R[3601],E,E,21,[[],[T]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[24],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"],[T]]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,R[292],E,E,22,[[["self"]],["usize"]]],[11,R[3525],E,E,22,[[["self"],["f"]],["r"]]],[11,"encode",E,E,22,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,22,[[["w"],["self"]]]],[11,"decode",E,E,22,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,22,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,22,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],22,[[["outer"]],[T]]],[11,R[3780],E,R[3777],22,[[["outer"]],[T]]],[11,R[3774],E,E,22,[[],[T]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[3601],E,E,22,[[],[T]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,R[78],E,E,23,[[["self"]],["string"]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],23,[[["outer"]],[T]]],[11,R[3780],E,R[3777],23,[[["outer"]],[T]]],[11,R[3774],E,E,23,[[],[T]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[3601],E,E,23,[[],[T]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[24],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"],[T]]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,R[292],E,E,24,[[["self"]],["usize"]]],[11,R[3525],E,E,24,[[["self"],["f"]],["r"]]],[11,"encode",E,E,24,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,24,[[["w"],["self"]]]],[11,R[3779],E,R[3776],24,[[["outer"]],[T]]],[11,R[3780],E,R[3777],24,[[["outer"]],[T]]],[11,R[3774],E,E,24,[[],[T]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[3601],E,E,24,[[],[T]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[24],E,E,25,[[["self"]],[T]]],[11,R[25],E,E,25,[[["self"],[T]]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],25,[[["outer"]],[T]]],[11,R[3780],E,R[3777],25,[[["outer"]],[T]]],[11,R[3774],E,E,25,[[],[T]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[3601],E,E,25,[[],[T]]],[11,R[4308],R[4313],E,27,[[["self"]],["bool"]]],[11,"clear",E,E,27,[[],[T]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[24],E,E,27,[[["self"]],[T]]],[11,R[25],E,E,27,[[["self"],[T]]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],27,[[["outer"]],[T]]],[11,R[3780],E,R[3777],27,[[["outer"]],[T]]],[11,R[3774],E,E,27,[[],[T]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"clear",E,E,27,[[["self"]]]],[11,R[2628],E,E,27,[[]]],[11,R[3601],E,E,27,[[],[T]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],28,[[["outer"]],[T]]],[11,R[3780],E,R[3777],28,[[["outer"]],[T]]],[11,R[3774],E,E,28,[[],[T]]],[11,"vzip",E,E,28,[[],["v"]]],[11,R[3601],E,E,28,[[],[T]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],29,[[["outer"]],[T]]],[11,R[3780],E,R[3777],29,[[["outer"]],[T]]],[11,R[3774],E,E,29,[[],[T]]],[11,"vzip",E,E,29,[[],["v"]]],[11,R[3601],E,E,29,[[],[T]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[211],E,E,33,[[],["i"]]],[11,R[24],E,E,33,[[["self"]],[T]]],[11,R[25],E,E,33,[[["self"],[T]]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],33,[[["outer"]],[T]]],[11,R[3780],E,R[3777],33,[[["outer"]],[T]]],[11,R[3774],E,E,33,[[],[T]]],[11,"vzip",E,E,33,[[],["v"]]],[11,R[3601],E,E,33,[[],[T]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[24],E,E,30,[[["self"]],[T]]],[11,R[25],E,E,30,[[["self"],[T]]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],30,[[["outer"]],[T]]],[11,R[3780],E,R[3777],30,[[["outer"]],[T]]],[11,R[3774],E,E,30,[[],[T]]],[11,"vzip",E,E,30,[[],["v"]]],[11,R[3601],E,E,30,[[],[T]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[24],E,E,34,[[["self"]],[T]]],[11,R[25],E,E,34,[[["self"],[T]]]],[11,R[20],E,E,34,[[[U]],[R[3]]]],[11,R[21],E,E,34,[[],[R[3]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[["self"]],[T]]],[11,R[26],E,E,34,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],34,[[["outer"]],[T]]],[11,R[3780],E,R[3777],34,[[["outer"]],[T]]],[11,R[3774],E,E,34,[[],[T]]],[11,"vzip",E,E,34,[[],["v"]]],[11,R[3601],E,E,34,[[],[T]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[24],E,E,31,[[["self"]],[T]]],[11,R[25],E,E,31,[[["self"],[T]]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],31,[[["outer"]],[T]]],[11,R[3780],E,R[3777],31,[[["outer"]],[T]]],[11,R[3774],E,E,31,[[],[T]]],[11,"vzip",E,E,31,[[],["v"]]],[11,R[3601],E,E,31,[[],[T]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[24],E,E,32,[[["self"]],[T]]],[11,R[25],E,E,32,[[["self"],[T]]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],32,[[["outer"]],[T]]],[11,R[3780],E,R[3777],32,[[["outer"]],[T]]],[11,R[3774],E,E,32,[[],[T]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[3601],E,E,32,[[],[T]]],[11,R[4308],R[4262],E,35,[[["self"]],["bool"]]],[11,"clear",E,E,35,[[],[T]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[24],E,E,35,[[["self"]],[T]]],[11,R[25],E,E,35,[[["self"],[T]]]],[11,R[78],E,E,35,[[["self"]],["string"]]],[11,R[20],E,E,35,[[[U]],[R[3]]]],[11,R[21],E,E,35,[[],[R[3]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[["self"]],[T]]],[11,R[26],E,E,35,[[["self"]],[R[46]]]],[11,R[292],E,E,35,[[["self"]],["usize"]]],[11,R[3525],E,E,35,[[["self"],["f"]],["r"]]],[11,"encode",E,E,35,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,35,[[["w"],["self"]]]],[11,"decode",E,E,35,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,35,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,35,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],35,[[["outer"]],[T]]],[11,R[3780],E,R[3777],35,[[["outer"]],[T]]],[11,R[3774],E,E,35,[[],[T]]],[11,"vzip",E,E,35,[[],["v"]]],[11,R[3708],E,E,35,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,35,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,35,[[["self"]]]],[11,R[2628],E,E,35,[[]]],[11,R[4184],E,E,35,[[["self"]],[U]]],[11,R[4183],E,E,35,[[["self"]],[U]]],[11,R[3601],E,E,35,[[],[T]]],[11,R[4308],R[4314],E,36,[[["self"]],["bool"]]],[11,"clear",E,E,36,[[],[T]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[24],E,E,36,[[["self"]],[T]]],[11,R[25],E,E,36,[[["self"],[T]]]],[11,R[78],E,E,36,[[["self"]],["string"]]],[11,R[20],E,E,36,[[[U]],[R[3]]]],[11,R[21],E,E,36,[[],[R[3]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[22],E,E,36,[[["self"]],[T]]],[11,R[26],E,E,36,[[["self"]],[R[46]]]],[11,R[292],E,E,36,[[["self"]],["usize"]]],[11,R[3525],E,E,36,[[["self"],["f"]],["r"]]],[11,"encode",E,E,36,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,36,[[["w"],["self"]]]],[11,"decode",E,E,36,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,36,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,36,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],36,[[["outer"]],[T]]],[11,R[3780],E,R[3777],36,[[["outer"]],[T]]],[11,R[3782],E,E,36,[[[T]],["outer"]]],[11,R[3774],E,E,36,[[],[T]]],[11,R[3733],E,E,36,[[["str"]],[[R[3724]],[R[3],[R[3724]]]]]],[11,R[3783],E,E,36,[[["str"]],[[R[3],[R[3724]]],[R[3724]]]]],[11,"vzip",E,E,36,[[],["v"]]],[11,R[3708],E,E,36,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,36,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,36,[[["self"]]]],[11,R[2628],E,E,36,[[]]],[11,R[4184],E,E,36,[[["self"]],[U]]],[11,R[4183],E,E,36,[[["self"]],[U]]],[11,R[3601],E,E,36,[[],[T]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[24],E,E,110,[[["self"]],[T]]],[11,R[25],E,E,110,[[["self"],[T]]]],[11,R[20],E,E,110,[[[U]],[R[3]]]],[11,R[21],E,E,110,[[],[R[3]]]],[11,R[45],E,E,110,[[["self"]],[T]]],[11,R[22],E,E,110,[[["self"]],[T]]],[11,R[26],E,E,110,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],110,[[["outer"]],[T]]],[11,R[3780],E,R[3777],110,[[["outer"]],[T]]],[11,R[3774],E,E,110,[[],[T]]],[11,"vzip",E,E,110,[[],["v"]]],[11,R[3601],E,E,110,[[],[T]]],[11,R[4308],E,E,37,[[["self"]],["bool"]]],[11,"clear",E,E,37,[[],[T]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[24],E,E,37,[[["self"]],[T]]],[11,R[25],E,E,37,[[["self"],[T]]]],[11,R[20],E,E,37,[[[U]],[R[3]]]],[11,R[21],E,E,37,[[],[R[3]]]],[11,R[45],E,E,37,[[["self"]],[T]]],[11,R[22],E,E,37,[[["self"]],[T]]],[11,R[26],E,E,37,[[["self"]],[R[46]]]],[11,R[292],E,E,37,[[["self"]],["usize"]]],[11,R[3525],E,E,37,[[["self"],["f"]],["r"]]],[11,"encode",E,E,37,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,37,[[["w"],["self"]]]],[11,"decode",E,E,37,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,37,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,37,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],37,[[["outer"]],[T]]],[11,R[3780],E,R[3777],37,[[["outer"]],[T]]],[11,R[3774],E,E,37,[[],[T]]],[11,"vzip",E,E,37,[[],["v"]]],[11,R[3708],E,E,37,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,R[3709],E,E,37,[[[R[3703]]],[[R[3],["string"]],["string"]]]],[11,"clear",E,E,37,[[["self"]]]],[11,R[2628],E,E,37,[[]]],[11,R[4184],E,E,37,[[["self"]],[U]]],[11,R[4183],E,E,37,[[["self"]],[U]]],[11,R[3601],E,E,37,[[],[T]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[24],E,E,38,[[["self"]],[T]]],[11,R[25],E,E,38,[[["self"],[T]]]],[11,R[20],E,E,38,[[[U]],[R[3]]]],[11,R[21],E,E,38,[[],[R[3]]]],[11,R[45],E,E,38,[[["self"]],[T]]],[11,R[22],E,E,38,[[["self"]],[T]]],[11,R[26],E,E,38,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],38,[[["outer"]],[T]]],[11,R[3780],E,R[3777],38,[[["outer"]],[T]]],[11,R[3774],E,E,38,[[],[T]]],[11,"vzip",E,E,38,[[],["v"]]],[11,R[3601],E,E,38,[[],[T]]],[11,R[4308],R[4262],E,39,[[["self"]],["bool"]]],[11,"clear",E,E,39,[[],[T]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[24],E,E,39,[[["self"]],[T]]],[11,R[25],E,E,39,[[["self"],[T]]]],[11,R[20],E,E,39,[[[U]],[R[3]]]],[11,R[21],E,E,39,[[],[R[3]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[["self"]],[T]]],[11,R[26],E,E,39,[[["self"]],[R[46]]]],[11,R[292],E,E,39,[[["self"]],["usize"]]],[11,R[3525],E,E,39,[[["self"],["f"]],["r"]]],[11,"encode",E,E,39,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,39,[[["w"],["self"]]]],[11,"decode",E,E,39,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,39,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,39,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],39,[[["outer"]],[T]]],[11,R[3780],E,R[3777],39,[[["outer"]],[T]]],[11,R[3774],E,E,39,[[],[T]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"clear",E,E,39,[[["self"]]]],[11,R[2628],E,E,39,[[]]],[11,R[4184],E,E,39,[[["self"]],[U]]],[11,R[4183],E,E,39,[[["self"]],[U]]],[11,R[3601],E,E,39,[[],[T]]],[11,R[4308],E,E,40,[[["self"]],["bool"]]],[11,"clear",E,E,40,[[],[T]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[24],E,E,40,[[["self"]],[T]]],[11,R[25],E,E,40,[[["self"],[T]]]],[11,R[20],E,E,40,[[[U]],[R[3]]]],[11,R[21],E,E,40,[[],[R[3]]]],[11,R[45],E,E,40,[[["self"]],[T]]],[11,R[22],E,E,40,[[["self"]],[T]]],[11,R[26],E,E,40,[[["self"]],[R[46]]]],[11,R[292],E,E,40,[[["self"]],["usize"]]],[11,R[3525],E,E,40,[[["self"],["f"]],["r"]]],[11,"encode",E,E,40,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,40,[[["w"],["self"]]]],[11,"decode",E,E,40,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,40,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,40,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],40,[[["outer"]],[T]]],[11,R[3780],E,R[3777],40,[[["outer"]],[T]]],[11,R[3774],E,E,40,[[],[T]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"clear",E,E,40,[[["self"]]]],[11,R[2628],E,E,40,[[]]],[11,R[3601],E,E,40,[[],[T]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[],[T]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[24],E,E,111,[[["self"]],[T]]],[11,R[25],E,E,111,[[["self"],[T]]]],[11,R[20],E,E,111,[[[U]],[R[3]]]],[11,R[21],E,E,111,[[],[R[3]]]],[11,R[45],E,E,111,[[["self"]],[T]]],[11,R[22],E,E,111,[[["self"]],[T]]],[11,R[26],E,E,111,[[["self"]],[R[46]]]],[11,R[292],E,E,111,[[["self"]],["usize"]]],[11,R[3525],E,E,111,[[["self"],["f"]],["r"]]],[11,"encode",E,E,111,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,111,[[["w"],["self"]]]],[11,"decode",E,E,111,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,111,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,111,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],111,[[["outer"]],[T]]],[11,R[3780],E,R[3777],111,[[["outer"]],[T]]],[11,R[3774],E,E,111,[[],[T]]],[11,"vzip",E,E,111,[[],["v"]]],[11,R[3601],E,E,111,[[],[T]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[24],E,E,41,[[["self"]],[T]]],[11,R[25],E,E,41,[[["self"],[T]]]],[11,R[20],E,E,41,[[[U]],[R[3]]]],[11,R[21],E,E,41,[[],[R[3]]]],[11,R[45],E,E,41,[[["self"]],[T]]],[11,R[22],E,E,41,[[["self"]],[T]]],[11,R[26],E,E,41,[[["self"]],[R[46]]]],[11,R[292],E,E,41,[[["self"]],["usize"]]],[11,R[3525],E,E,41,[[["self"],["f"]],["r"]]],[11,"encode",E,E,41,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,41,[[["w"],["self"]]]],[11,"decode",E,E,41,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,41,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,41,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],41,[[["outer"]],[T]]],[11,R[3780],E,R[3777],41,[[["outer"]],[T]]],[11,R[3774],E,E,41,[[],[T]]],[11,"vzip",E,E,41,[[],["v"]]],[11,R[3601],E,E,41,[[],[T]]],[11,"check",E,E,42,[[["context"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[24],E,E,42,[[["self"]],[T]]],[11,R[25],E,E,42,[[["self"],[T]]]],[11,R[20],E,E,42,[[[U]],[R[3]]]],[11,R[21],E,E,42,[[],[R[3]]]],[11,R[45],E,E,42,[[["self"]],[T]]],[11,R[22],E,E,42,[[["self"]],[T]]],[11,R[26],E,E,42,[[["self"]],[R[46]]]],[11,R[292],E,E,42,[[["self"]],["usize"]]],[11,R[3525],E,E,42,[[["self"],["f"]],["r"]]],[11,"encode",E,E,42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,42,[[["w"],["self"]]]],[11,"decode",E,E,42,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,42,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],42,[[["outer"]],[T]]],[11,R[3780],E,R[3777],42,[[["outer"]],[T]]],[11,R[3774],E,E,42,[[],[T]]],[11,"vzip",E,E,42,[[],["v"]]],[11,R[3601],E,E,42,[[],[T]]],[11,"into",R[4315],E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[20],E,E,112,[[[U]],[R[3]]]],[11,R[21],E,E,112,[[],[R[3]]]],[11,R[45],E,E,112,[[["self"]],[T]]],[11,R[22],E,E,112,[[["self"]],[T]]],[11,R[26],E,E,112,[[["self"]],[R[46]]]],[11,R[292],E,E,112,[[["self"]],["usize"]]],[11,R[3525],E,E,112,[[["self"],["f"]],["r"]]],[11,"encode",E,E,112,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,112,[[["w"],["self"]]]],[11,"decode",E,E,112,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,112,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,112,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],112,[[["outer"]],[T]]],[11,R[3780],E,R[3777],112,[[["outer"]],[T]]],[11,R[3774],E,E,112,[[],[T]]],[11,"vzip",E,E,112,[[],["v"]]],[11,R[3601],E,E,112,[[],[T]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[20],E,E,113,[[[U]],[R[3]]]],[11,R[21],E,E,113,[[],[R[3]]]],[11,R[45],E,E,113,[[["self"]],[T]]],[11,R[22],E,E,113,[[["self"]],[T]]],[11,R[26],E,E,113,[[["self"]],[R[46]]]],[11,R[292],E,E,113,[[["self"]],["usize"]]],[11,R[3525],E,E,113,[[["self"],["f"]],["r"]]],[11,"encode",E,E,113,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,113,[[["w"],["self"]]]],[11,"decode",E,E,113,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,113,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,113,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],113,[[["outer"]],[T]]],[11,R[3780],E,R[3777],113,[[["outer"]],[T]]],[11,R[3774],E,E,113,[[],[T]]],[11,"vzip",E,E,113,[[],["v"]]],[11,R[3601],E,E,113,[[],[T]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[20],E,E,114,[[[U]],[R[3]]]],[11,R[21],E,E,114,[[],[R[3]]]],[11,R[45],E,E,114,[[["self"]],[T]]],[11,R[22],E,E,114,[[["self"]],[T]]],[11,R[26],E,E,114,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],114,[[["outer"]],[T]]],[11,R[3780],E,R[3777],114,[[["outer"]],[T]]],[11,R[3774],E,E,114,[[],[T]]],[11,"vzip",E,E,114,[[],["v"]]],[11,"clear",E,E,114,[[["self"]]]],[11,R[2628],E,E,114,[[]]],[11,R[3601],E,E,114,[[],[T]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[20],E,E,115,[[[U]],[R[3]]]],[11,R[21],E,E,115,[[],[R[3]]]],[11,R[45],E,E,115,[[["self"]],[T]]],[11,R[22],E,E,115,[[["self"]],[T]]],[11,R[26],E,E,115,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],115,[[["outer"]],[T]]],[11,R[3780],E,R[3777],115,[[["outer"]],[T]]],[11,R[3774],E,E,115,[[],[T]]],[11,"vzip",E,E,115,[[],["v"]]],[11,R[3601],E,E,115,[[],[T]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[20],E,E,116,[[[U]],[R[3]]]],[11,R[21],E,E,116,[[],[R[3]]]],[11,R[45],E,E,116,[[["self"]],[T]]],[11,R[22],E,E,116,[[["self"]],[T]]],[11,R[26],E,E,116,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],116,[[["outer"]],[T]]],[11,R[3780],E,R[3777],116,[[["outer"]],[T]]],[11,R[3774],E,E,116,[[],[T]]],[11,"vzip",E,E,116,[[],["v"]]],[11,R[3601],E,E,116,[[],[T]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[24],E,E,117,[[["self"]],[T]]],[11,R[25],E,E,117,[[["self"],[T]]]],[11,R[20],E,E,117,[[[U]],[R[3]]]],[11,R[21],E,E,117,[[],[R[3]]]],[11,R[45],E,E,117,[[["self"]],[T]]],[11,R[22],E,E,117,[[["self"]],[T]]],[11,R[26],E,E,117,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],117,[[["outer"]],[T]]],[11,R[3780],E,R[3777],117,[[["outer"]],[T]]],[11,R[3774],E,E,117,[[],[T]]],[11,"vzip",E,E,117,[[],["v"]]],[11,R[3601],E,E,117,[[],[T]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[],[T]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[20],E,E,118,[[[U]],[R[3]]]],[11,R[21],E,E,118,[[],[R[3]]]],[11,R[45],E,E,118,[[["self"]],[T]]],[11,R[22],E,E,118,[[["self"]],[T]]],[11,R[26],E,E,118,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],118,[[["outer"]],[T]]],[11,R[3780],E,R[3777],118,[[["outer"]],[T]]],[11,R[3774],E,E,118,[[],[T]]],[11,"vzip",E,E,118,[[],["v"]]],[11,R[3601],E,E,118,[[],[T]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[20],E,E,92,[[[U]],[R[3]]]],[11,R[21],E,E,92,[[],[R[3]]]],[11,R[45],E,E,92,[[["self"]],[T]]],[11,R[22],E,E,92,[[["self"]],[T]]],[11,R[26],E,E,92,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],92,[[["outer"]],[T]]],[11,R[3780],E,R[3777],92,[[["outer"]],[T]]],[11,R[3774],E,E,92,[[],[T]]],[11,"vzip",E,E,92,[[],["v"]]],[11,R[3601],E,E,92,[[],[T]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[20],E,E,93,[[[U]],[R[3]]]],[11,R[21],E,E,93,[[],[R[3]]]],[11,R[45],E,E,93,[[["self"]],[T]]],[11,R[22],E,E,93,[[["self"]],[T]]],[11,R[26],E,E,93,[[["self"]],[R[46]]]],[11,R[3779],E,R[3776],93,[[["outer"]],[T]]],[11,R[3780],E,R[3777],93,[[["outer"]],[T]]],[11,R[3774],E,E,93,[[],[T]]],[11,"vzip",E,E,93,[[],["v"]]],[11,R[3601],E,E,93,[[],[T]]],[11,R[4308],R[4316],E,94,[[["self"]],["bool"]]],[11,"clear",E,E,94,[[],[T]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[24],E,E,94,[[["self"]],[T]]],[11,R[25],E,E,94,[[["self"],[T]]]],[11,R[20],E,E,94,[[[U]],[R[3]]]],[11,R[21],E,E,94,[[],[R[3]]]],[11,R[45],E,E,94,[[["self"]],[T]]],[11,R[22],E,E,94,[[["self"]],[T]]],[11,R[26],E,E,94,[[["self"]],[R[46]]]],[11,R[292],E,E,94,[[["self"]],["usize"]]],[11,R[3525],E,E,94,[[["self"],["f"]],["r"]]],[11,"encode",E,E,94,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,94,[[["w"],["self"]]]],[11,"decode",E,E,94,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,94,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,94,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],94,[[["outer"]],[T]]],[11,R[3780],E,R[3777],94,[[["outer"]],[T]]],[11,R[3774],E,E,94,[[],[T]]],[11,"vzip",E,E,94,[[],["v"]]],[11,"clear",E,E,94,[[["self"]]]],[11,R[2628],E,E,94,[[]]],[11,R[3601],E,E,94,[[],[T]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[24],E,E,95,[[["self"]],[T]]],[11,R[25],E,E,95,[[["self"],[T]]]],[11,R[20],E,E,95,[[[U]],[R[3]]]],[11,R[21],E,E,95,[[],[R[3]]]],[11,R[45],E,E,95,[[["self"]],[T]]],[11,R[22],E,E,95,[[["self"]],[T]]],[11,R[26],E,E,95,[[["self"]],[R[46]]]],[11,R[292],E,E,95,[[["self"]],["usize"]]],[11,R[3525],E,E,95,[[["self"],["f"]],["r"]]],[11,"encode",E,E,95,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,95,[[["w"],["self"]]]],[11,"decode",E,E,95,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,95,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,95,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],95,[[["outer"]],[T]]],[11,R[3780],E,R[3777],95,[[["outer"]],[T]]],[11,R[3774],E,E,95,[[],[T]]],[11,"vzip",E,E,95,[[],["v"]]],[11,R[3601],E,E,95,[[],[T]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[24],E,E,96,[[["self"]],[T]]],[11,R[25],E,E,96,[[["self"],[T]]]],[11,R[20],E,E,96,[[[U]],[R[3]]]],[11,R[21],E,E,96,[[],[R[3]]]],[11,R[45],E,E,96,[[["self"]],[T]]],[11,R[22],E,E,96,[[["self"]],[T]]],[11,R[26],E,E,96,[[["self"]],[R[46]]]],[11,R[292],E,E,96,[[["self"]],["usize"]]],[11,R[3525],E,E,96,[[["self"],["f"]],["r"]]],[11,"encode",E,E,96,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,96,[[["w"],["self"]]]],[11,"decode",E,E,96,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,96,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,96,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],96,[[["outer"]],[T]]],[11,R[3780],E,R[3777],96,[[["outer"]],[T]]],[11,R[3774],E,E,96,[[],[T]]],[11,"vzip",E,E,96,[[],["v"]]],[11,R[3601],E,E,96,[[],[T]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[24],E,E,97,[[["self"]],[T]]],[11,R[25],E,E,97,[[["self"],[T]]]],[11,R[20],E,E,97,[[[U]],[R[3]]]],[11,R[21],E,E,97,[[],[R[3]]]],[11,R[45],E,E,97,[[["self"]],[T]]],[11,R[22],E,E,97,[[["self"]],[T]]],[11,R[26],E,E,97,[[["self"]],[R[46]]]],[11,R[292],E,E,97,[[["self"]],["usize"]]],[11,R[3525],E,E,97,[[["self"],["f"]],["r"]]],[11,"encode",E,E,97,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,97,[[["w"],["self"]]]],[11,"decode",E,E,97,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,97,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,97,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],97,[[["outer"]],[T]]],[11,R[3780],E,R[3777],97,[[["outer"]],[T]]],[11,R[3774],E,E,97,[[],[T]]],[11,"vzip",E,E,97,[[],["v"]]],[11,R[3601],E,E,97,[[],[T]]],[11,"into",R[4317],E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[20],E,E,98,[[[U]],[R[3]]]],[11,R[21],E,E,98,[[],[R[3]]]],[11,R[45],E,E,98,[[["self"]],[T]]],[11,R[22],E,E,98,[[["self"]],[T]]],[11,R[26],E,E,98,[[["self"]],[R[46]]]],[11,R[292],E,E,98,[[["self"]],["usize"]]],[11,R[3525],E,E,98,[[["self"],["f"]],["r"]]],[11,"encode",E,E,98,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,98,[[["w"],["self"]]]],[11,"decode",E,E,98,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,98,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,98,[[],[[R[3],["error"]],["error"]]]],[11,R[3779],E,R[3776],98,[[["outer"]],[T]]],[11,R[3780],E,R[3777],98,[[["outer"]],[T]]],[11,R[3774],E,E,98,[[],[T]]],[11,"vzip",E,E,98,[[],["v"]]],[11,R[3601],E,E,98,[[],[T]]],[11,"all",R[4314],E,36,[[[R[3771]]],[["vec",["public"]],["public"]]]],[11,R[4177],E,E,36,[[["option",["vec"]],["vec",["u8"]],[R[3771]]],["public"]]],[11,"sign",E,E,36,[[["m"],["self"],[R[3771]]],["option"]]],[11,"verify",E,E,36,[[["self"],["m"]],["bool"]]],[11,"from",E,E,110,[[["pair"]],["pair"]]],[11,"from",E,E,37,[[[R[188]]],[R[188]]]],[11,"from",E,E,36,[[["public"]],["public"]]],[11,R[20],R[4231],E,3,[[["str"]],[[R[3],[R[3771]]],[R[3771]]]]],[11,R[20],R[4314],E,37,[[],[[R[3],[R[188]]],[R[188]]]]],[11,R[20],R[4231],E,101,[[],[[R[3833]],[R[3],[R[3833]]]]]],[11,R[20],R[4314],E,36,[[],[["public"],[R[3],["public"]]]]],[11,R[31],E,R[4212],110,[[],["pair"]]],[11,"public",E,R[3802],110,[[["self"]],["public"]]],[11,R[3797],E,R[3800],110,[[],[["pair"],[R[3730]],[R[3],["pair",R[3730]]]]]],[11,R[3796],E,E,110,[[["option",["str"]],["str"]]]],[11,R[3729],E,E,110,[[["str"],["option",["str"]]],[[R[3730]],[R[3],[R[3730]]]]]],[11,"derive",E,E,110,[[["option"],["iter"],["self"]],[R[3]]]],[11,"sign",E,E,110,[[["self"]],[R[188]]]],[11,"verify",E,R[3732],110,[[["m"]],["bool"]]],[11,R[3798],E,R[3732],110,[[["m"],["p"]],["bool"]]],[11,R[3794],E,R[3804],110,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[768],E,R[3795],36,[[],["public"]]],[11,"decode",E,E,36,[[["decin"]],[["error"],[R[3],["public","error"]],["public"]]]],[11,"decode",R[4231],E,101,[[["decin"]],[[R[3833]],["error"],[R[3],[R[3833],"error"]]]]],[11,"decode",E,E,3,[[["decin"]],[[R[3],[R[3771],"error"]],["error"],[R[3771]]]]],[11,"decode",R[4314],E,37,[[["decin"]],[["error"],[R[3],[R[188],"error"]],[R[188]]]]],[11,"fmt",E,E,36,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4231],E,3,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4314],E,38,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4231],E,101,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4314],E,37,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"as_ref",R[4231],E,101,[[["self"]]]],[11,"as_ref",R[4314],E,36,[[["self"]]]],[11,"as_ref",E,E,36,[[["self"]]]],[11,"as_ref",R[4231],E,101,[[["self"]]]],[11,"as_ref",R[4314],E,37,[[["self"]]]],[11,"as_ref",E,E,37,[[["self"]]]],[11,"as_ref",E,E,110,[[["self"]],["keypair"]]],[11,"hash",R[4231],E,3,[[["self"],["__h"]]]],[11,"hash",R[4314],E,36,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["h"]]]],[11,"eq",E,E,37,[[["self"],[R[188]]],["bool"]]],[11,"eq",R[4231],E,3,[[["self"],[R[3771]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[3771]]],["bool"]]],[11,"eq",R[4314],E,38,[[[R[3834]],["self"]],["bool"]]],[11,"ne",E,E,38,[[[R[3834]],["self"]],["bool"]]],[11,"eq",R[4231],E,101,[[[R[3833]],["self"]],["bool"]]],[11,"ne",E,E,101,[[[R[3833]],["self"]],["bool"]]],[11,"eq",R[4314],E,36,[[["public"],["self"]],["bool"]]],[11,"ne",E,E,36,[[["public"],["self"]],["bool"]]],[11,"clone",E,E,37,[[["self"]],[R[188]]]],[11,"clone",E,E,38,[[["self"]],[R[3834]]]],[11,"clone",R[4231],E,3,[[["self"]],[R[3771]]]],[11,"clone",R[4314],E,110,[[["self"]],["pair"]]],[11,"clone",R[4231],E,101,[[["self"]],[R[3833]]]],[11,"clone",R[4314],E,36,[[["self"]],["public"]]],[11,R[457],E,E,36,[[["str"]],[[R[3],["public"]],["public"]]]],[11,R[173],E,E,37,[[["d"]],[[R[3],[R[188]]],[R[188]]]]],[11,R[173],R[4231],E,101,[[["d"]],[[R[3833]],[R[3],[R[3833]]]]]],[11,R[173],R[4314],E,36,[[["d"]],[[R[3],["public"]],["public"]]]],[11,"derive",E,R[3731],36,[[["self"],["iter"]],[["public"],["option",["public"]]]]],[11,R[3782],E,E,36,[[["h256"]],["public"]]],[11,R[3782],R[4231],E,101,[[["h256"]],[R[3833]]]],[11,R[3782],R[4314],E,36,[[],["public"]]],[11,R[109],E,E,36,[[]]],[11,"inner",E,E,36,[[["self"]]]],[11,R[3793],E,E,36,[[],["public"]]],[11,R[109],E,E,37,[[]]],[11,"inner",E,E,37,[[["self"]]]],[11,R[3793],E,E,37,[[],[R[188]]]],[11,R[109],R[4231],E,3,[[]]],[11,"inner",E,E,3,[[["self"]]]],[11,R[3793],E,E,3,[[],[R[3771]]]],[11,"as_mut",E,E,101,[[["self"]]]],[11,"as_mut",R[4314],E,36,[[["self"]]]],[11,"as_mut",E,E,37,[[["self"]]]],[11,"as_mut",R[4231],E,101,[[["self"]]]],[11,"deref",R[4314],E,36,[[["self"]]]],[11,R[106],R[4231],E,101,[[[R[3833]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,101,[[[R[3833]],["self"]],["bool"]]],[11,"le",E,E,101,[[[R[3833]],["self"]],["bool"]]],[11,"gt",E,E,101,[[[R[3833]],["self"]],["bool"]]],[11,"ge",E,E,101,[[[R[3833]],["self"]],["bool"]]],[11,R[106],R[4314],E,36,[[["public"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,36,[[["public"],["self"]],["bool"]]],[11,"le",E,E,36,[[["public"],["self"]],["bool"]]],[11,"gt",E,E,36,[[["public"],["self"]],["bool"]]],[11,"ge",E,E,36,[[["public"],["self"]],["bool"]]],[11,R[106],R[4231],E,3,[[["self"],[R[3771]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,3,[[["self"],[R[3771]]],["bool"]]],[11,"le",E,E,3,[[["self"],[R[3771]]],["bool"]]],[11,"gt",E,E,3,[[["self"],[R[3771]]],["bool"]]],[11,"ge",E,E,3,[[["self"],[R[3771]]],["bool"]]],[11,R[3603],R[4314],E,36,[[["self"],["encout"]]]],[11,"encode",E,E,36,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,36,[[["self"],["f"]],["r"]]],[11,R[3603],E,E,37,[[["self"],["encout"]]]],[11,"encode",E,E,37,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,37,[[["self"],["f"]],["r"]]],[11,R[3603],R[4231],E,101,[[["self"],["encout"]]]],[11,"encode",E,E,101,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,101,[[["self"],["f"]],["r"]]],[11,R[3603],E,E,3,[[["self"],["encout"]]]],[11,"encode",E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,3,[[["self"],["f"]],["r"]]],[11,"from",R[4314],E,110,[[[R[3273]]],["pair"]]],[11,"from",R[4262],E,35,[[["public"]],["h256"]]],[11,"from",R[4231],E,3,[[["u32"]],[R[3771]]]],[11,"from",R[4262],E,35,[[["public"]],["h256"]]],[11,"from",R[4314],E,110,[[["keypair"]],["pair"]]],[11,"from",E,E,110,[[[R[3293]]],["pair"]]],[11,"from",E,E,37,[[[R[188]]],[R[188]]]],[11,"from",R[4231],E,101,[[],[R[3833]]]],[11,R[132],R[4314],E,36,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,37,[[["s"],["self"]],[R[3]]]],[11,R[132],R[4231],E,101,[[["s"],["self"]],[R[3]]]],[11,"fmt",E,E,101,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4314],E,36,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[90],R[4231],E,101,[[],[R[3833]]]],[11,R[90],R[4314],E,36,[[],["public"]]],[11,R[90],R[4231],E,3,[[],[R[3771]]]],[11,R[90],R[4314],E,37,[[],[R[188]]]],[11,"cmp",R[4231],E,101,[[[R[3833]],["self"]],[R[105]]]],[11,"cmp",E,E,3,[[["self"],[R[3771]]],[R[105]]]],[11,"cmp",R[4314],E,36,[[["public"],["self"]],[R[105]]]],[11,"inner",R[4262],E,35,[[["self"]]]],[11,R[109],E,E,35,[[]]],[11,R[3793],E,E,35,[[],["h256"]]],[11,"clone",R[4231],E,1,[[["self"]],[R[3407]]]],[11,"clone",E,E,0,[[["self"]],["storage"]]],[11,R[90],E,E,0,[[],["storage"]]],[11,"fmt",E,E,1,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,0,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"eq",E,E,1,[[[R[3407]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[3407]],["self"]],["bool"]]],[11,"fmt",R[4262],E,35,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,35,[[["i"]],[[R[3],["h256","error"]],["h256"],["error"]]]],[11,R[496],E,E,35,[[["self"],["h256"]]]],[11,R[496],E,E,35,[[["h256"],["self"]]]],[11,"fmt",E,E,35,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"hash",E,E,35,[[["self"],["h"]]]],[11,"as_ref",E,E,35,[[["self"]]]],[11,"bitand",E,E,35,[[["h256"]]]],[11,R[350],E,E,35,[[["self"],["i"]]]],[11,"eq",E,E,35,[[["h256"],["self"]],["bool"]]],[11,"clone",E,E,35,[[["self"]],["h256"]]],[11,"bitor",E,E,35,[[["h256"]]]],[11,"bitxor",E,E,35,[[["h256"]]]],[11,R[473],E,E,35,[[["h256"],["self"]]]],[11,R[473],E,E,35,[[["self"],["h256"]]]],[11,R[457],E,R[3702],35,[[["str"]],[["h256"],[R[3],["h256",R[79]]],[R[79]]]]],[11,"fmt",E,E,35,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[458],E,E,35,[[["h256"],["self"]]]],[11,R[458],E,E,35,[[["self"],["h256"]]]],[11,R[132],E,E,35,[[["s"],["self"]],[R[3]]]],[11,"as_mut",E,E,35,[[["self"]]]],[11,"fmt",E,E,35,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[3525],E,E,35,[[["self"],["f"]],["r"]]],[11,"index",E,E,35,[[["i"],["self"]]]],[11,"from",E,R[3701],35,[[],["h256"]]],[11,"from",E,R[3700],35,[[],["h256"]]],[11,"from",E,R[3700],35,[[],["h256"]]],[11,"from",E,E,35,[[["h160"]],["h256"]]],[11,R[106],E,E,35,[[["h256"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[173],E,E,35,[[["d"]],[[R[3],["h256"]],["h256"]]]],[11,R[90],E,E,35,[[],["h256"]]],[11,"cmp",E,E,35,[[["h256"],["self"]],[R[105]]]],[11,"mul",R[4231],E,104,[[["n"]]]],[11,"mul",E,E,105,[[["n"]]]],[11,"mul",E,E,103,[[["n"]]]],[11,"mul",E,E,102,[[["n"]]]],[11,"mul",R[4309],E,108,[[["biguint"]]]],[11,"zero",E,E,108,[[],["biguint"]]],[11,"is_zero",E,E,108,[[["self"]],["bool"]]],[11,R[1779],R[4231],E,107,[[["fixed64"],["self"]],[["option",["fixed64"]],["fixed64"]]]],[11,"div",E,E,104,[[["permill"]]]],[11,"div",E,E,105,[[["percent"]]]],[11,"div",E,E,103,[[["perbill"]]]],[11,"div",E,E,102,[[[R[3607]]]]],[11,"div",E,E,107,[[["fixed64"]]]],[11,"fmt",R[4309],E,108,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4231],E,107,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,103,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,104,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,106,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,105,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,102,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[173],E,E,103,[[["__d"]],[["perbill"],[R[3],["perbill"]]]]],[11,R[173],E,E,105,[[["__d"]],[["percent"],[R[3],["percent"]]]]],[11,R[173],E,E,104,[[["__d"]],[["permill"],[R[3],["permill"]]]]],[11,R[173],E,E,102,[[["__d"]],[[R[3],[R[3607]]],[R[3607]]]]],[11,"decode",E,E,105,[[["decin"]],[["percent"],["error"],[R[3],["percent","error"]]]]],[11,"decode",E,E,104,[[["decin"]],[[R[3],["permill","error"]],["permill"],["error"]]]],[11,"decode",E,E,102,[[["decin"]],[[R[3607]],["error"],[R[3],[R[3607],"error"]]]]],[11,"decode",E,E,107,[[["decin"]],[["fixed64"],[R[3],["fixed64","error"]],["error"]]]],[11,"decode",E,E,103,[[["decin"]],[[R[3],["perbill","error"]],["perbill"],["error"]]]],[11,"eq",E,E,106,[[[R[3608]],["self"]],["bool"]]],[11,"eq",E,E,107,[[["fixed64"],["self"]],["bool"]]],[11,"ne",E,E,107,[[["fixed64"],["self"]],["bool"]]],[11,"eq",E,E,102,[[["self"],[R[3607]]],["bool"]]],[11,"ne",E,E,102,[[["self"],[R[3607]]],["bool"]]],[11,"eq",E,E,103,[[["self"],["perbill"]],["bool"]]],[11,"ne",E,E,103,[[["self"],["perbill"]],["bool"]]],[11,"eq",E,E,105,[[["percent"],["self"]],["bool"]]],[11,"ne",E,E,105,[[["percent"],["self"]],["bool"]]],[11,"eq",R[4309],E,108,[[["biguint"],["self"]],["bool"]]],[11,"eq",R[4231],E,104,[[["self"],["permill"]],["bool"]]],[11,"ne",E,E,104,[[["self"],["permill"]],["bool"]]],[11,R[132],E,E,105,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,103,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,104,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,102,[[["self"],["__s"]],[R[3]]]],[11,"clone",E,E,107,[[["self"]],["fixed64"]]],[11,"clone",E,E,102,[[["self"]],[R[3607]]]],[11,"clone",E,E,105,[[["self"]],["percent"]]],[11,"clone",E,E,104,[[["self"]],["permill"]]],[11,"clone",E,E,106,[[["self"]],[R[3608]]]],[11,"clone",R[4309],E,108,[[["self"]],["biguint"]]],[11,"clone",R[4231],E,103,[[["self"]],["perbill"]]],[11,R[1778],E,E,107,[[["fixed64"],["self"]],[["option",["fixed64"]],["fixed64"]]]],[11,R[3583],E,E,107,[[["fixed64"]],["fixed64"]]],[11,R[3602],E,E,107,[[["fixed64"]],["fixed64"]]],[11,R[3584],E,E,107,[[["fixed64"]],["fixed64"]]],[11,R[3583],E,E,104,[[["permill"]],["permill"]]],[11,R[3584],E,E,104,[[["permill"]],["permill"]]],[11,R[3602],E,E,104,[[["permill"]],["permill"]]],[11,R[3583],E,E,103,[[["perbill"]],["perbill"]]],[11,R[3584],E,E,103,[[["perbill"]],["perbill"]]],[11,R[3602],E,E,103,[[["perbill"]],["perbill"]]],[11,R[3583],E,E,102,[[[R[3607]]],[R[3607]]]],[11,R[3584],E,E,102,[[[R[3607]]],[R[3607]]]],[11,R[3602],E,E,102,[[[R[3607]]],[R[3607]]]],[11,R[3583],E,E,105,[[["percent"]],["percent"]]],[11,R[3584],E,E,105,[[["percent"]],["percent"]]],[11,R[3602],E,E,105,[[["percent"]],["percent"]]],[11,R[1781],E,E,107,[[["fixed64"],["self"]],[["option",["fixed64"]],["fixed64"]]]],[11,R[106],E,E,103,[[["self"],["perbill"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,103,[[["self"],["perbill"]],["bool"]]],[11,"le",E,E,103,[[["self"],["perbill"]],["bool"]]],[11,"gt",E,E,103,[[["self"],["perbill"]],["bool"]]],[11,"ge",E,E,103,[[["self"],["perbill"]],["bool"]]],[11,R[106],R[4309],E,108,[[["biguint"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[4231],E,104,[[["self"],["permill"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,104,[[["self"],["permill"]],["bool"]]],[11,"le",E,E,104,[[["self"],["permill"]],["bool"]]],[11,"gt",E,E,104,[[["self"],["permill"]],["bool"]]],[11,"ge",E,E,104,[[["self"],["permill"]],["bool"]]],[11,R[106],E,E,106,[[[R[3608]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,105,[[["percent"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,105,[[["percent"],["self"]],["bool"]]],[11,"le",E,E,105,[[["percent"],["self"]],["bool"]]],[11,"gt",E,E,105,[[["percent"],["self"]],["bool"]]],[11,"ge",E,E,105,[[["percent"],["self"]],["bool"]]],[11,R[106],E,E,102,[[["self"],[R[3607]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,102,[[["self"],[R[3607]]],["bool"]]],[11,"le",E,E,102,[[["self"],[R[3607]]],["bool"]]],[11,"gt",E,E,102,[[["self"],[R[3607]]],["bool"]]],[11,"ge",E,E,102,[[["self"],[R[3607]]],["bool"]]],[11,R[106],E,E,107,[[["fixed64"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,107,[[["fixed64"],["self"]],["bool"]]],[11,"le",E,E,107,[[["fixed64"],["self"]],["bool"]]],[11,"gt",E,E,107,[[["fixed64"],["self"]],["bool"]]],[11,"ge",E,E,107,[[["fixed64"],["self"]],["bool"]]],[11,R[90],E,E,105,[[],["percent"]]],[11,R[90],E,E,106,[[],[R[3608]]]],[11,R[90],R[4309],E,108,[[],["biguint"]]],[11,R[90],R[4231],E,104,[[],["permill"]]],[11,R[90],E,E,103,[[],["perbill"]]],[11,R[90],E,E,107,[[],["fixed64"]]],[11,R[90],E,E,102,[[],[R[3607]]]],[11,R[3603],E,E,105,[[["self"],["encout"]]]],[11,"encode",E,E,105,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,105,[[["self"],["f"]],["r"]]],[11,R[3603],E,E,104,[[["self"],["encout"]]]],[11,"encode",E,E,104,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,104,[[["self"],["f"]],["r"]]],[11,R[3603],E,E,103,[[["self"],["encout"]]]],[11,"encode",E,E,103,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,103,[[["self"],["f"]],["r"]]],[11,R[3603],E,E,102,[[["self"],["encout"]]]],[11,"encode",E,E,102,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,102,[[["self"],["f"]],["r"]]],[11,R[3603],E,E,107,[[["self"],["encout"]]]],[11,"encode",E,E,107,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3525],E,E,107,[[["self"],["f"]],["r"]]],[11,"from",R[4309],E,108,[[["u32"]],["biguint"]]],[11,"from",E,E,108,[[["u8"]],["biguint"]]],[11,"from",R[4231],E,104,[[["permill"],["compact",["permill"]]],["permill"]]],[11,"from",R[4309],E,108,[[["u64"]],["biguint"]]],[11,"from",R[4231],E,102,[[[R[3607]],["compact",[R[3607]]]],[R[3607]]]],[11,"from",E,E,103,[[["compact",["perbill"]],["perbill"]],["perbill"]]],[11,"from",E,E,105,[[["compact",["percent"]],["percent"]],["percent"]]],[11,"from",R[4309],E,108,[[["u16"]],["biguint"]]],[11,"add",E,E,108,[[["biguint"]]]],[11,"add",R[4231],E,107,[[["fixed64"]]]],[11,"sub",R[4309],E,108,[[["biguint"]]]],[11,"sub",R[4231],E,107,[[["fixed64"]]]],[11,R[3610],E,E,103,[[["self"]],["u32"]]],[11,R[3609],E,E,103,[[["u32"]],["perbill"]]],[11,R[3610],E,E,105,[[["self"]],["u8"]]],[11,R[3609],E,E,105,[[["u8"]],["percent"]]],[11,R[3610],E,E,102,[[["self"]],["u64"]]],[11,R[3609],E,E,102,[[["u64"]],[R[3607]]]],[11,R[3610],E,E,104,[[["self"]],["u32"]]],[11,R[3609],E,E,104,[[["u32"]],["permill"]]],[11,"cmp",E,E,107,[[["fixed64"],["self"]],[R[105]]]],[11,"cmp",E,E,106,[[[R[3608]],["self"]],[R[105]]]],[11,"cmp",R[4309],E,108,[[["biguint"],["self"]],[R[105]]]],[11,"cmp",R[4231],E,102,[[["self"],[R[3607]]],[R[105]]]],[11,"cmp",E,E,103,[[["self"],["perbill"]],[R[105]]]],[11,"cmp",E,E,105,[[["percent"],["self"]],[R[105]]]],[11,"cmp",E,E,104,[[["self"],["permill"]],[R[105]]]],[11,R[4300],R[4314],E,36,[[],["self"]]],[11,R[4300],R[4231],E,14,[[],[R[3833]]]],[11,"verify",R[4314],E,37,[[["public"],["self"],["lazy"]],["bool"]]],[11,"verify",R[4231],E,13,[[[R[3833]],["self"],["lazy"]],["bool"]]],[11,"verify",E,E,109,[[["public"],["self"],["lazy"]],["bool"]]],[11,"lookup",R[4315],E,114,[[["self"],[T]],[[R[3],[R[4284]]],[R[4284]]]]],[11,"lookup",E,E,114,[[[T]],[[R[3],[R[4284]]],[R[4284]]]]],[11,"unlookup",E,E,114,[[[T]],[T]]],[11,"convert",E,E,115,[[[T]],[T]]],[11,"convert",E,E,116,[[["a"]],["b"]]],[11,"hash",E,E,117,[[]]],[11,R[4028],E,E,117,[[["vec"]]]],[11,R[4022],E,E,117,[[["vec",["vec"]],["vec",["u8"]]]]],[11,R[4318],R[4262],E,35,[[["self"]]]],[11,R[4318],R[4231],E,12,[[["self"]]]],[11,"number",R[4255],E,19,[[["self"]]]],[11,R[4322],E,E,19,[[["self"]]]],[11,R[4264],E,E,19,[[["self"]]]],[11,R[4319],E,E,19,[[["self"]]]],[11,R[4289],E,E,19,[[["self"]]]],[11,R[4320],E,E,19,[[["self"]]]],[11,R[4263],E,E,19,[[["self"]]]],[11,R[4321],E,E,19,[[["self"]]]],[11,"digest",E,E,19,[[["self"]],["digest"]]],[11,R[4323],E,E,19,[[["self"]],["digest"]]],[11,"new",E,E,19,[[["digest"]],["self"]]],[11,"number",R[4262],E,40,[[["self"]]]],[11,R[4322],E,E,40,[[["self"]]]],[11,R[4264],E,E,40,[[["self"]]]],[11,R[4319],E,E,40,[[["self"]]]],[11,R[4289],E,E,40,[[["self"]]]],[11,R[4320],E,E,40,[[["self"]]]],[11,R[4263],E,E,40,[[["self"]]]],[11,R[4321],E,E,40,[[["self"]]]],[11,"digest",E,E,40,[[["self"]],["digest"]]],[11,R[4323],E,E,40,[[["self"]],["digest"]]],[11,"new",E,E,40,[[["digest"]],["self"]]],[11,"header",R[4255],E,20,[[["self"]]]],[11,R[4291],E,E,20,[[["self"]]]],[11,R[3589],E,E,20,[[]]],[11,"new",E,E,20,[[["vec"]],["self"]]],[11,R[4324],E,E,20,[[],[["vec",["u8"]],["u8"]]]],[11,"header",R[4262],E,41,[[["self"]]]],[11,R[4291],E,E,41,[[["self"]]]],[11,R[3589],E,E,41,[[]]],[11,"new",E,E,41,[[["vec"]],["self"]]],[11,R[4324],E,E,41,[[],[["vec",["u8"]],["u8"]]]],[11,R[4325],R[4255],E,17,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"new",E,E,17,[[["option"],["call"]],["option"]]],[11,R[4325],R[4262],E,111,[[["self"]],[["option",["bool"]],["bool"]]]],[11,R[4325],E,E,42,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"new",E,E,42,[[["option"],["call"]],["option"]]],[11,"check",R[4255],E,17,[[["lookup"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,"check",R[4262],E,42,[[["context"]],[[R[4251]],[R[3],[R[4251]]]]]],[11,"sender",R[4255],E,18,[[["self"]],["option"]]],[11,R[4847],E,E,18,[[["usize"],["self"]],[R[4294]]]],[11,"apply",E,E,18,[[["usize"]],[R[4326]]]],[11,"sender",R[4262],E,42,[[["self"]],["option"]]],[11,R[4847],E,R[4327],42,[[["usize"],["self"]],[R[4294]]]],[11,"apply",E,R[4328],42,[[["usize"]],[R[4326]]]],[11,"key_ids",E,E,39,[[]]],[11,"get_raw",E,E,39,[[["self"],[R[3771]]]]],[11,"get",E,E,39,[[["self"],[R[3771]]],[["decode"],["option"]]]],[11,"print",R[4231],E,15,[[["self"]]]],[11,R[4329],E,E,0,[[["storage"],["self"]],[[R[3],["string"]],["string"]]]],[11,"as_ref",R[4313],E,31,[[["self"]],["str"]]],[11,"as_ref",R[4262],E,39,[[["self"]]]],[11,"as_ref",R[4231],E,14,[[["self"]]]],[11,"into",R[4316],E,95,[[],[R[4294]]]],[11,"into",E,E,96,[[],[R[4294]]]],[11,"into",R[4231],E,15,[[],["str"]]],[11,"from",R[4262],E,39,[[["u64"]],["self"]]],[11,"from",E,E,111,[[["xt"]],["self"]]],[11,"from",R[4316],E,97,[[[R[4284]]],["self"]]],[11,"from",R[4315],E,118,[[[T]],["self"]]],[11,"from",R[4316],E,97,[[[R[4334]]],["self"]]],[11,"from",E,E,97,[[[R[4335]]],["self"]]],[11,"from",R[4231],E,13,[[[R[188]]],["self"]]],[11,"from",E,E,13,[[[R[188]]],["self"]]],[11,"from",E,E,13,[[[R[188]]],["self"]]],[11,"from",E,E,14,[[["public"]],["self"]]],[11,"from",E,E,14,[[["public"]],["self"]]],[11,"from",E,E,14,[[["public"]],["self"]]],[11,"from",E,E,109,[[[R[188]]],["self"]]],[11,"from",E,E,109,[[[R[188]]],["self"]]],[11,"from",E,E,119,[[[R[4330]]],["self"]]],[11,"from",E,E,15,[[[R[4284]]],["self"]]],[11,"from",E,E,15,[[[R[4649]]],["self"]]],[11,"from",E,E,15,[[["str"]],[R[4330]]]],[11,"next",R[4313],E,33,[[["self"]],["option"]]],[11,"clone",R[4255],E,17,[[["self"]],[R[4342]]]],[11,"clone",E,E,22,[[["self"]],["era"]]],[11,"clone",E,E,18,[[["self"]],[R[4343]]]],[11,"clone",E,E,19,[[["self"]],["header"]]],[11,"clone",E,E,23,[[["self"]],["blockid"]]],[11,"clone",E,E,20,[[["self"]],["block"]]],[11,"clone",E,E,21,[[["self"]],[R[4344]]]],[11,"clone",R[4231],E,9,[[["self"]],["digest"]]],[11,"clone",E,E,12,[[["self"]],[R[4252]]]],[11,"clone",R[4255],E,24,[[["self"]],[R[4331]]]],[11,"clone",E,E,25,[[["self"]],[R[4253]]]],[11,"clone",R[4313],E,31,[[["self"]],["method"]]],[11,"clone",E,E,27,[[["self"]],["request"]]],[11,"clone",E,E,32,[[["self"]],["error"]]],[11,"clone",E,E,33,[[["self"]],[R[4332]]]],[11,"clone",E,E,30,[[["self"]],["headers"]]],[11,"clone",E,E,34,[[["self"]],[R[4333]]]],[11,"clone",R[4262],E,39,[[["self"]],[R[4337]]]],[11,"clone",E,E,40,[[["self"]],["header"]]],[11,"clone",E,E,111,[[["self"]],[R[4345]]]],[11,"clone",E,E,41,[[["self"]],["block"]]],[11,"clone",E,E,42,[[["self"]],["testxt"]]],[11,"clone",R[4315],E,117,[[["self"]],[R[4346]]]],[11,"clone",R[4316],E,95,[[["self"]],[R[4334]]]],[11,"clone",E,E,96,[[["self"]],[R[4335]]]],[11,"clone",E,E,97,[[["self"]],[R[4251]]]],[11,"clone",E,E,94,[[["self"]],[R[4336]]]],[11,"clone",R[4231],E,10,[[["self"]],["moduleid"]]],[11,"clone",E,E,13,[[["self"]],[R[4347]]]],[11,"clone",E,E,14,[[["self"]],[R[4340]]]],[11,"clone",E,E,109,[[["self"]],[R[4338]]]],[11,"clone",E,E,15,[[["self"]],[R[4330]]]],[11,"clone",E,E,11,[[["self"]],[R[4339]]]],[11,R[90],E,E,9,[[],["self"]]],[11,R[90],R[4313],E,27,[[],["self"]]],[11,R[90],R[4262],E,39,[[],[R[4337]]]],[11,R[90],E,E,40,[[],["header"]]],[11,R[90],R[4315],E,114,[[],["identitylookup"]]],[11,R[90],R[4316],E,94,[[],["self"]]],[11,R[90],R[4231],E,13,[[],["self"]]],[11,R[90],E,E,14,[[],["self"]]],[11,R[90],E,E,109,[[],[R[4338]]]],[11,R[90],E,E,11,[[],[R[4339]]]],[11,"cmp",R[4255],E,25,[[[R[4253]],["self"]],[R[105]]]],[11,"cmp",R[4262],E,39,[[[R[4337]],["self"]],[R[105]]]],[11,"cmp",R[4231],E,14,[[["self"],[R[4340]]],[R[105]]]],[11,"eq",R[4312],E,16,[[[R[4341]],["self"]],["bool"]]],[11,"ne",E,E,16,[[[R[4341]],["self"]],["bool"]]],[11,"eq",R[4255],E,17,[[[R[4342]],["self"]],["bool"]]],[11,"ne",E,E,17,[[[R[4342]],["self"]],["bool"]]],[11,"eq",E,E,22,[[["era"],["self"]],["bool"]]],[11,"ne",E,E,22,[[["era"],["self"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[4343]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[4343]]],["bool"]]],[11,"eq",E,E,19,[[["self"],["header"]],["bool"]]],[11,"ne",E,E,19,[[["self"],["header"]],["bool"]]],[11,"eq",E,E,23,[[["self"],["blockid"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["blockid"]],["bool"]]],[11,"eq",E,E,20,[[["block"],["self"]],["bool"]]],[11,"ne",E,E,20,[[["block"],["self"]],["bool"]]],[11,"eq",E,E,21,[[[R[4344]],["self"]],["bool"]]],[11,"ne",E,E,21,[[[R[4344]],["self"]],["bool"]]],[11,"eq",R[4231],E,9,[[["self"],["digest"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["digest"]],["bool"]]],[11,"eq",E,E,12,[[[R[4252]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[4252]],["self"]],["bool"]]],[11,"eq",R[4255],E,24,[[[R[4331]],["self"]],["bool"]]],[11,"ne",E,E,24,[[[R[4331]],["self"]],["bool"]]],[11,"eq",E,E,25,[[[R[4253]],["self"]],["bool"]]],[11,"ne",E,E,25,[[[R[4253]],["self"]],["bool"]]],[11,"eq",R[4313],E,31,[[["method"],["self"]],["bool"]]],[11,"ne",E,E,31,[[["method"],["self"]],["bool"]]],[11,"eq",E,E,27,[[["request"],["self"]],["bool"]]],[11,"ne",E,E,27,[[["request"],["self"]],["bool"]]],[11,"eq",E,E,32,[[["error"],["self"]],["bool"]]],[11,"eq",E,E,28,[[[R[3762]],["self"]],["bool"]]],[11,"ne",E,E,28,[[[R[3762]],["self"]],["bool"]]],[11,"eq",E,E,30,[[["headers"],["self"]],["bool"]]],[11,"ne",E,E,30,[[["headers"],["self"]],["bool"]]],[11,"eq",R[4262],E,39,[[[R[4337]],["self"]],["bool"]]],[11,"ne",E,E,39,[[[R[4337]],["self"]],["bool"]]],[11,"eq",E,E,40,[[["self"],["header"]],["bool"]]],[11,"ne",E,E,40,[[["self"],["header"]],["bool"]]],[11,"eq",E,E,111,[[["self"],[R[4345]]],["bool"]]],[11,"ne",E,E,111,[[["self"],[R[4345]]],["bool"]]],[11,"eq",E,E,41,[[["self"],["block"]],["bool"]]],[11,"ne",E,E,41,[[["self"],["block"]],["bool"]]],[11,"eq",E,E,42,[[["testxt"],["self"]],["bool"]]],[11,"ne",E,E,42,[[["testxt"],["self"]],["bool"]]],[11,"eq",R[4315],E,117,[[["self"],[R[4346]]],["bool"]]],[11,"eq",R[4316],E,95,[[["self"],[R[4334]]],["bool"]]],[11,"ne",E,E,95,[[["self"],[R[4334]]],["bool"]]],[11,"eq",E,E,96,[[[R[4335]],["self"]],["bool"]]],[11,"ne",E,E,96,[[[R[4335]],["self"]],["bool"]]],[11,"eq",E,E,97,[[[R[4251]],["self"]],["bool"]]],[11,"ne",E,E,97,[[[R[4251]],["self"]],["bool"]]],[11,"eq",E,E,94,[[["self"],[R[4336]]],["bool"]]],[11,"ne",E,E,94,[[["self"],[R[4336]]],["bool"]]],[11,"eq",R[4231],E,10,[[["moduleid"],["self"]],["bool"]]],[11,"ne",E,E,10,[[["moduleid"],["self"]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[4347]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[4347]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[4340]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[4340]]],["bool"]]],[11,"eq",E,E,109,[[[R[4338]],["self"]],["bool"]]],[11,"ne",E,E,109,[[[R[4338]],["self"]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[4330]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[4330]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[4339]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[4339]]],["bool"]]],[11,R[106],R[4255],E,25,[[[R[4253]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,25,[[[R[4253]],["self"]],["bool"]]],[11,"le",E,E,25,[[[R[4253]],["self"]],["bool"]]],[11,"gt",E,E,25,[[[R[4253]],["self"]],["bool"]]],[11,"ge",E,E,25,[[[R[4253]],["self"]],["bool"]]],[11,R[106],R[4262],E,39,[[[R[4337]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,39,[[[R[4337]],["self"]],["bool"]]],[11,"le",E,E,39,[[[R[4337]],["self"]],["bool"]]],[11,"gt",E,E,39,[[[R[4337]],["self"]],["bool"]]],[11,"ge",E,E,39,[[[R[4337]],["self"]],["bool"]]],[11,R[106],R[4231],E,14,[[["self"],[R[4340]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,14,[[["self"],[R[4340]]],["bool"]]],[11,"le",E,E,14,[[["self"],[R[4340]]],["bool"]]],[11,"gt",E,E,14,[[["self"],[R[4340]]],["bool"]]],[11,"ge",E,E,14,[[["self"],[R[4340]]],["bool"]]],[11,"fmt",R[4255],E,23,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4231],E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4312],E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4255],E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4231],E,9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4255],E,24,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4313],E,31,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4262],E,39,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,111,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4315],E,117,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4316],E,95,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,96,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,97,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,94,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4231],E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,109,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,11,[[[R[37]],["self"]],[R[3]]]],[11,R[20],R[4314],E,36,[[[R[4340]]],[R[3]]]],[11,"deref",R[4262],E,111,[[["self"]]]],[11,"deref",R[4315],E,118,[[["self"]]]],[11,R[99],E,E,118,[[["self"]],[T]]],[11,"hash",R[4262],E,39,[[["self"],["__h"]]]],[11,R[3524],R[4315],E,92,[[["self"]],[[R[3],["option","error"]],["option",["usize"]],["error"]]]],[11,"read",E,E,92,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[3524],E,E,93,[[["self"]],[[R[3],["option","error"]],["option",["usize"]],["error"]]]],[11,"read",E,E,93,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[3525],R[4255],"Get an encoded version of this payload.",26,[[["fnonce"],["self"]],["r"]]],[11,"encode",E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,22,[[["self"],[T]]]],[11,R[3603],E,E,19,[[["self"],[T]]]],[11,R[3603],E,E,20,[[["self"],["encout"]]]],[11,R[3603],E,E,21,[[["self"],["encout"]]]],[11,R[3603],R[4231],E,9,[[["self"],["encout"]]]],[11,"encode",E,E,9,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,9,[[["fnonce"],["self"]],["r"]]],[11,"encode",E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode",R[4255],E,24,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],R[4262],E,39,[[["self"],["encout"]]]],[11,"encode",E,E,39,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,39,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,40,[[["self"],["encout"]]]],[11,R[3603],E,E,111,[[["self"],["encout"]]]],[11,"encode",E,E,111,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,111,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,41,[[["self"],["encout"]]]],[11,R[3603],E,E,42,[[["self"],["encout"]]]],[11,R[3603],R[4315],E,112,[[["self"],["encout"]]]],[11,R[3603],E,E,113,[[["self"],["encout"]]]],[11,R[3603],R[4316],E,95,[[["self"],["encout"]]]],[11,R[3603],E,E,96,[[["self"],["encout"]]]],[11,R[3603],E,E,97,[[["self"],["encout"]]]],[11,R[3603],E,E,94,[[["self"],["encout"]]]],[11,R[3603],R[4317],E,98,[[["self"],["encout"]]]],[11,R[3603],R[4231],E,10,[[["self"],["encout"]]]],[11,"encode",E,E,10,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,10,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,13,[[["self"],["encout"]]]],[11,R[3603],E,E,14,[[["self"],["encout"]]]],[11,R[3603],E,E,109,[[["self"],["encout"]]]],[11,"encode",E,E,109,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,109,[[["fnonce"],["self"]],["r"]]],[11,R[3603],E,E,15,[[["self"],["encout"]]]],[11,R[3603],E,E,11,[[["self"],["encout"]]]],[11,"encode",E,E,11,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,11,[[["fnonce"],["self"]],["r"]]],[11,"decode",R[4255],E,17,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,22,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,19,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,20,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,21,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[4231],E,9,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,12,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[4262],E,39,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,40,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,111,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,41,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,42,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[4315],E,112,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,113,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[4316],E,95,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,96,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,97,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,94,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[4317],E,98,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",R[4231],E,10,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,13,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,14,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,109,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,15,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"decode",E,E,11,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,R[132],R[4255],E,17,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,22,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,19,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,23,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,20,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,21,[[["self"],["__s"]],[R[3]]]],[11,R[132],R[4231],E,9,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,12,[[["s"],["self"]],[R[3]]]],[11,R[132],R[4262],E,39,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,40,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,111,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,41,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,42,[[["s"],["self"]],[R[3]]]],[11,R[132],R[4315],E,117,[[["self"],["__s"]],[R[3]]]],[11,R[132],R[4316],E,95,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,96,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,97,[[["self"],["__s"]],[R[3]]]],[11,R[132],R[4231],E,13,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,14,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,109,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,15,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,11,[[["s"],["self"]],[R[3]]]],[11,R[173],R[4255],E,22,[[["__d"]],[R[3]]]],[11,R[173],E,E,19,[[["__d"]],[R[3]]]],[11,R[173],E,E,20,[[["__d"]],[R[3]]]],[11,R[173],E,E,21,[[["__d"]],[R[3]]]],[11,R[173],R[4231],E,9,[[["__d"]],[R[3]]]],[11,R[173],E,E,12,[[["d"]],[R[3]]]],[11,R[173],R[4262],E,39,[[["__d"]],[R[3]]]],[11,R[173],E,E,40,[[[R[4348]]],[R[3]]]],[11,R[173],E,E,41,[[[R[4348]]],[R[3]]]],[11,R[173],R[4315],E,117,[[["__d"]],[R[3]]]],[11,R[173],R[4231],E,13,[[["__d"]],[R[3]]]],[11,R[173],E,E,14,[[["__d"]],[R[3]]]],[11,R[173],E,E,109,[[["__d"]],[R[3]]]],[11,R[173],E,E,11,[[["d"]],[R[3]]]],[11,"all",R[4262],E,39,[[],["vec"]]],[11,R[4177],E,E,39,[[["option",["vec"]],["vec",["u8"]]],["self"]]],[11,"sign",E,E,39,[[["self"],["m"]],["option"]]],[11,"verify",E,E,39,[[["self"],["m"]],["bool"]]],[11,R[3782],R[4231],E,14,[[[T]],["self"]]],[11,"zero",E,R[4349],102,[[],[R[3607]]]],[11,"is_zero",E,R[3587],102,[[["self"]],["bool"]]],[11,"one",E,R[3588],102,[[],[R[3607]]]],[11,R[3589],E,R[3590],102,[[],["u64"]]],[11,R[4350],E,R[3591],102,[[],["u64"]]],[11,R[3600],E,R[3592],102,[[["u64"]],[R[3607]]]],[11,R[3593],E,R[3594],102,[[["u64"]],[R[3607]]]],[11,"square",E,R[3595],102,[[],[R[3607]]]],[11,R[3596],E,R[3597],102,[[["f64"]],[R[3607]]]],[11,R[3598],E,R[3599],102,[[["n"]],[R[3607]]]],[11,"zero",E,R[4349],103,[[],["perbill"]]],[11,"is_zero",E,R[3587],103,[[["self"]],["bool"]]],[11,"one",E,R[3588],103,[[],["perbill"]]],[11,R[3589],E,R[3590],103,[[],["u32"]]],[11,R[4350],E,R[3591],103,[[],["u32"]]],[11,R[3600],E,R[3592],103,[[["u32"]],["perbill"]]],[11,R[3593],E,R[3594],103,[[["u32"]],["perbill"]]],[11,"square",E,R[3595],103,[[],["perbill"]]],[11,R[3596],E,R[3597],103,[[["f64"]],["perbill"]]],[11,R[3598],E,R[3599],103,[[["n"]],["perbill"]]],[11,"zero",E,R[4349],104,[[],["permill"]]],[11,"is_zero",E,R[3587],104,[[["self"]],["bool"]]],[11,"one",E,R[3588],104,[[],["permill"]]],[11,R[3589],E,R[3590],104,[[],["u32"]]],[11,R[4350],E,R[3591],104,[[],["u32"]]],[11,R[3600],E,R[3592],104,[[["u32"]],["permill"]]],[11,R[3593],E,R[3594],104,[[["u32"]],["permill"]]],[11,"square",E,R[3595],104,[[],["permill"]]],[11,R[3596],E,R[3597],104,[[["f64"]],["permill"]]],[11,R[3598],E,R[3599],104,[[["n"]],["permill"]]],[11,"zero",E,R[4349],105,[[],["percent"]]],[11,"is_zero",E,R[3587],105,[[["self"]],["bool"]]],[11,"one",E,R[3588],105,[[],["percent"]]],[11,R[3589],E,R[3590],105,[[],["u8"]]],[11,R[4350],E,R[3591],105,[[],["u8"]]],[11,R[3600],E,R[3592],105,[[["u8"]],["percent"]]],[11,R[3593],E,R[3594],105,[[["u8"]],["percent"]]],[11,"square",E,R[3595],105,[[],["percent"]]],[11,R[3596],E,R[3597],105,[[["f64"]],["percent"]]],[11,R[3598],E,R[3599],105,[[["n"]],["percent"]]],[11,"zero",E,R[4349],106,[[],[R[3608]]]],[11,"is_zero",E,R[4351],106,[[["self"]],["bool"]]],[11,"from",E,R[4352],106,[[["u128"]],[R[3608]]]],[11,R[4353],E,R[4354],106,[[["u128"]],[R[3608]]]],[11,"n",E,R[4355],106,[[["self"]],["u128"]]],[11,"d",E,R[4356],106,[[["self"]],["u128"]]],[11,"to_den",E,R[4357],106,[[["u128"]],[["str"],[R[3],[R[3608],"str"]],[R[3608]]]]],[11,"lcm",E,R[4358],106,[[[R[3608]],["self"]],[[R[3],["u128","str"]],["str"],["u128"]]]],[11,R[4359],E,R[4360],106,[[[R[3608]]],[R[3608]]]],[11,R[4361],E,R[4362],106,[[[R[3608]]],[R[3608]]]],[11,R[1778],E,R[4363],106,[[[R[3608]]],[["str"],[R[3],[R[3608],"str"]],[R[3608]]]]],[11,R[1779],E,R[4364],106,[[[R[3608]]],[["str"],[R[3],[R[3608],"str"]],[R[3608]]]]],[11,R[4365],E,R[4366],107,[[["i64"]],["fixed64"]]],[11,R[4350],E,R[4367],107,[[],["i64"]]],[11,R[109],E,R[4368],107,[[],["i64"]]],[11,R[3600],E,R[4369],107,[[["i64"]],["fixed64"]]],[11,R[4370],E,R[4371],107,[[["i64"],["u64"]],["fixed64"]]],[11,R[4372],E,R[4373],107,[[["n"]],["n"]]],[11,R[287],R[4309],R[4374],108,[[["usize"]],["biguint"]]],[11,"from_limbs",E,R[4375],108,[[],["biguint"]]],[11,"len",E,R[4376],108,[[["self"]],["usize"]]],[11,"get",E,R[3545],108,[[["self"],["usize"]],["u32"]]],[11,R[4377],E,R[3545],108,[[["self"],["usize"]],[["u32"],["option",["u32"]]]]],[11,"set",E,R[4378],108,[[["self"],["usize"],["u32"]]]],[11,"lsb",E,R[4379],108,[[["self"]],["u32"]]],[11,"msb",E,R[4380],108,[[["self"]],["u32"]]],[11,"lstrip",E,R[4381],108,[[["self"]]]],[11,"lpad",E,R[4382],108,[[["self"],["usize"]]]],[11,"add",E,R[4383],108,[[["biguint"]],["biguint"]]],[11,"sub",E,R[4384],108,[[["biguint"]],[[R[3],["biguint","biguint"]],["biguint"]]]],[11,"mul",E,R[4385],108,[[["biguint"]],["biguint"]]],[11,"div_unit",E,R[4386],108,[[["u32"]],["biguint"]]],[11,"div",E,R[4387],108,[[["biguint"],["bool"]],["option"]]],[11,R[3668],R[4262],R[3669],35,[[["u8"]],["h256"]]],[11,"zero",E,R[3670],35,[[],["h256"]]],[11,R[3847],E,R[3671],35,[[],["usize"]]],[11,R[2616],E,R[3672],35,[[["self"]]]],[11,R[3673],E,R[3674],35,[[["self"]]]],[11,R[3675],E,R[3666],35,[[["self"]]]],[11,R[3676],E,R[3666],35,[[["self"]]]],[11,R[3677],E,R[3678],35,[[]]],[11,"as_ptr",E,R[3679],35,[[["self"]]]],[11,R[600],E,R[3680],35,[[["self"]]]],[11,R[1746],E,R[3681],35,[[["self"]]]],[11,R[768],E,R[3682],35,[[],["h256"]]],[11,"covers",E,R[3683],35,[[["h256"],["self"]],["bool"]]],[11,"is_zero",E,R[3684],35,[[["self"]],["bool"]]],[11,R[3685],E,R[3686],35,[[["self"]],["u64"]]],[11,R[3687],E,R[3688],35,[[["self"]],["u64"]]],[11,R[3689],E,R[3690],35,[[["self"]],["u64"]]],[11,R[3691],E,R[3667],35,[[["u64"]],["h256"]]],[11,R[3692],E,R[3667],35,[[["u64"]],["h256"]]],[11,R[3693],E,R[3667],35,[[["u64"]],["h256"]]],[11,R[3694],E,R[3695],35,[[["self"],["r"]]]],[11,R[3848],E,R[3696],35,[[["self"]]]],[11,R[3697],E,R[3698],35,[[["r"]],["h256"]]],[11,"random",E,R[3699],35,[[],["h256"]]],[11,R[582],R[4314],R[3749],36,[[],["public"]]],[11,R[4208],E,R[3750],36,[[["h256"]],["public"]]],[11,R[3751],E,R[3742],36,[[["self"]]]],[11,R[1662],E,R[4209],110,[[["option",["str"]],["str"]]]],[11,R[582],E,R[3746],37,[[],[R[188]]]],[11,R[768],E,R[3747],37,[[],[R[188]]]],[11,R[4207],E,R[3748],37,[[["h512"]],[R[188]]]]],"p":[[3,"Storage"],[3,R[3410]],[8,"TypeId"],[3,R[4213]],[8,R[4216]],[8,R[4188]],[8,R[4189]],[8,R[265]],[8,R[264]],[3,"Digest"],[3,"ModuleId"],[3,R[4388]],[4,R[4265]],[4,R[4389]],[4,R[4390]],[4,R[4391]],[3,R[4392]],[3,R[4393]],[3,R[4394]],[3,"Header"],[3,"Block"],[3,R[4395]],[4,"Era"],[4,"BlockId"],[4,R[4396]],[4,R[4397]],[3,R[4398]],[3,"Request"],[3,R[3867]],[3,"Response"],[3,"Headers"],[4,"Method"],[4,"Error"],[3,R[4399]],[3,R[4400]],[3,"H256"],[3,"Public"],[3,R[2884]],[3,R[3743]],[3,R[4401]],[3,"Header"],[3,"Block"],[3,"TestXt"],[8,R[3612]],[8,R[3611]],[8,R[3582]],[8,R[3613]],[8,"Zero"],[8,"One"],[8,"Bounded"],[8,R[3562]],[8,R[3565]],[8,R[3568]],[8,R[3571]],[8,R[3574]],[8,R[3578]],[8,R[120]],[8,"Lazy"],[8,R[4402]],[8,"Verify"],[8,"AppVerify"],[8,R[4403]],[8,"Lookup"],[8,R[4404]],[8,"Convert"],[8,R[4405]],[8,"Scale"],[8,"Clear"],[8,"OnFinalize"],[8,R[4406]],[8,R[4407]],[8,"Hash"],[8,"CheckEqual"],[8,R[4408]],[8,"IsMember"],[8,"Header"],[8,"Block"],[8,R[4843]],[8,"Checkable"],[8,R[4409]],[8,R[4410]],[8,R[4411]],[8,"Applyable"],[8,R[4412]],[8,R[4413]],[8,R[4414]],[8,R[4415]],[8,R[4416]],[8,"OpaqueKeys"],[8,R[4417]],[8,R[4650]],[8,"BlockIdTo"],[3,R[4418]],[3,R[4419]],[3,R[4420]],[4,R[4421]],[4,R[4422]],[4,R[4423]],[3,R[4424]],[8,R[4425]],[8,R[4426]],[3,R[3883]],[3,R[3614]],[3,"Perbill"],[3,"Permill"],[3,"Percent"],[3,R[3615]],[3,"Fixed64"],[3,"BigUint"],[3,R[4427]],[3,"Pair"],[3,R[4428]],[3,R[4651]],[3,R[4429]],[3,R[4430]],[3,"Identity"],[3,R[4431]],[3,R[4432]],[3,"ApiRef"],[6,R[4433]]]};
searchIndex["sp_runtime_interface"]={"doc":"Substrate runtime interface","i":[[23,R[3715],R[3706],"Attribute macro for transforming a trait declaration into…",N,N],[5,"unpack_ptr_and_len",E,"Unpacks an `u64` into the pointer and length.",N,[[["u64"]]]],[0,"host",E,"Traits required by the runtime interface from the host side.",N,N],[8,R[3712],"sp_runtime_interface::host","Something that can be converted into a ffi value.",N,N],[10,R[3708],E,"Convert `self` into a ffi value.",0,[[[R[3703]]],[R[3]]]],[8,R[3713],E,"Something that can be converted into a preallocated ffi…",N,N],[16,R[3704],E,R[3705],1,N],[10,"into_preallocated_ffi_value",E,"Convert `self_instance` into the given preallocated ffi…",1,[[[R[3703]]],[R[3]]]],[8,R[3714],E,"Something that can be created from a ffi value.",N,N],[16,R[3704],E,R[3705],2,N],[10,R[3709],E,"Create `SelfInstance` from the given",2,[[[R[3703]]],[R[3]]]],[0,"pass_by",R[3706],"Provides the `PassBy` trait to simplify the implementation…",N,N],[24,R[3716],R[3711],R[3707],N,N],[24,R[3710],E,R[3707],N,N],[24,"PassByEnum",E,"Derive macro for implementing [`PassBy`] with the [`Enum`]…",N,N],[3,"Codec",E,"The implementation of the pass by codec strategy. This…",N,N],[3,"Inner",E,"The implementation of the pass by inner type strategy. The…",N,N],[3,"Enum",E,"The implementation of the pass by enum strategy. This…",N,N],[8,"PassBy",E,"Something that should be passed between wasm and the host…",N,N],[16,"PassBy",E,"The strategy that should be used to pass the type.",3,N],[8,"PassByImpl",E,"Something that provides a strategy for passing a type…",N,N],[10,R[3708],E,"Convert the given instance to the ffi value.",4,[[[T],[R[3703]]],[R[3]]]],[10,R[3709],E,"Create `T` from the given ffi value.",4,[[[R[3703]]],[R[3]]]],[8,R[3710],E,"Trait that needs to be implemented by a type that should…",N,N],[16,"Inner",E,"The inner type that is wrapped by `Self`.",5,N],[10,R[109],E,"Consumes `self` and returns the inner type.",5,[[]]],[10,"inner",E,"Returns the reference to the inner type.",5,[[["self"]]]],[10,R[3793],E,"Construct `Self` from the given `inner`.",5,[[],["self"]]],[6,"Pointer",R[3706],"A pointer that can be used in a runtime interface function…",N,N],[8,"RIType",E,"Something that can be used by the runtime interface as…",N,N],[16,"FFIType",E,"The ffi type that is used to represent `Self`.",6,N],[11,"into",R[3711],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[3708],R[3706],E,10,[[[R[3703]]],[["u32"],[R[3],["u32"]]]]],[11,R[3709],E,E,10,[[["u32"],[R[3703]]],[R[3]]]],[11,R[3708],R[3711],E,7,[[[T],[R[3703]]],[R[3]]]],[11,R[3709],E,E,7,[[[R[3703]]],[R[3]]]],[11,R[3708],E,E,8,[[[T],[R[3703]]],[R[3]]]],[11,R[3709],E,E,8,[[[R[3703]]],[R[3]]]],[11,R[3708],E,E,9,[[[T],[R[3703]]],[R[3]]]],[11,R[3709],E,E,9,[[[R[3703]]],[R[3]]]]],"p":[[8,R[3712]],[8,R[3713]],[8,R[3714]],[8,"PassBy"],[8,"PassByImpl"],[8,R[3710]],[8,"RIType"],[3,"Codec"],[3,"Inner"],[3,"Enum"],[6,"Pointer"]]};
searchIndex["sp_runtime_interface_proc_macro"]={"doc":"This crate provides procedural macros for usage within the…","i":[[23,R[3715],"sp_runtime_interface_proc_macro",E,N,N],[24,R[3716],E,E,N,N],[24,R[3710],E,E,N,N],[24,"PassByEnum",E,E,N,N]],"p":[]};
searchIndex["sp_state_machine"]={"doc":"Substrate state machine implementation.","i":[[6,"Layout",R[4091],E,N,N],[6,R[4026],E,R[3961],N,N],[8,"TrieMut",E,R[3444],N,N],[10,"root",E,R[3445],0,[[["self"]]]],[10,R[340],E,R[3446],0,[[["self"]],["bool"]]],[11,R[114],E,R[3447],0,[[["self"]],[["bool"],["box",[R[3954]]],[R[3],["bool","box"]]]]],[10,"get",E,R[3448],0,[[["self"]],[["option",["vec"]],["box",[R[3954]]],[R[3],["option","box"]]]]],[10,"insert",E,R[4011],0,[[["self"]],[["option",["vec"]],["box",[R[3954]]],[R[3],["option","box"]]]]],[10,"remove",E,R[4012],0,[[["self"]],[["option",["vec"]],["box",[R[3954]]],[R[3],["option","box"]]]]],[6,"DBValue",E,R[4139],N,N],[6,"MemoryDB",E,R[3959],N,N],[3,R[4128],E,"Simple HashMap-based Externalities impl.",N,N],[3,R[4129],E,"Simple Map-based Externalities impl.",N,N],[3,"Ext",E,"Wraps a read-only backend, call executor, and current…",N,N],[12,"id",E,"Pseudo-unique id used for tracing.",1,N],[3,R[4118],E,"Block identifier that could be used to determine fork of…",N,N],[12,"hash",E,"Hash of this block.",2,N],[12,"number",E,"Number of this block.",2,N],[3,R[4127],E,"In-memory implementation of changes trie storage.",N,N],[3,R[4126],E,"Changes trie build cache.",N,N],[3,R[4119],E,"Blocks range where configuration has been constant.",N,N],[12,"config",E,"Active configuration.",3,N],[12,"zero",E,"Zero block of this configuration. The configuration is…",3,N],[12,"end",E,"End block of this configuration. It is the last block…",3,N],[3,R[4130],E,"The overlayed changes to state to be queried on top of the…",N,N],[3,R[4133],E,"Patricia trie-based backend which also tracks all touched…",N,N],[3,R[4132],E,"Patricia trie-based backend specialized in get value proofs.",N,N],[3,R[4131],E,"A proof that some set of key-value pairs are included in…",N,N],[3,R[4134],E,"Patricia trie-based backend. Transaction type is an…",N,N],[3,R[4137],E,"The substrate state machine.",N,N],[4,R[4120],E,"The action to perform when block-with-changes-trie is…",N,N],[13,"CacheBuildData",E,"Cache data that has been collected when CT has been built.",4,N],[13,"Clear",E,"Clear cache from all existing entries.",4,N],[4,R[4121],E,"Externalities Error.",N,N],[13,"Backend",E,"Backend error.",5,N],[13,"CodeEntryDoesNotExist",E,"The entry `:code` doesn't exist in storage so there's no…",5,N],[13,"UnableToGenerateProof",E,"Backend is incompatible with execution proof generation…",5,N],[13,"InvalidProof",E,"Invalid execution proof.",5,N],[4,R[4122],E,"Strategy for executing a call into the runtime.",N,N],[13,R[4075],E,R[4076],6,N],[13,"AlwaysWasm",E,"Use the given wasm module.",6,N],[13,"Both",E,R[4077],6,N],[13,R[4078],E,R[4079],6,N],[4,R[4123],E,"Storage backend trust level.",N,N],[13,"Trusted",E,"Panics from trusted backends are considered justified, and…",7,N],[13,"Untrusted",E,"Panics from untrusted backend are caught and interpreted…",7,N],[4,R[4124],E,"Like `ExecutionStrategy` only it also stores a handler in…",N,N],[13,R[4075],E,R[4076],8,N],[13,"AlwaysWasm",E,"Use the given wasm module. The backend on which code is…",8,N],[13,"Both",E,R[4077],8,N],[13,R[4078],E,R[4079],8,N],[5,"key_changes",E,"Return changes of given key at given blocks range. `max`…",N,[[["option"],[R[4081]],["storage"],[R[4083]],[R[4082]]],[[R[3],[R[4080],"string"]],["string"],[R[4080]]]]],[5,"key_changes_proof",E,"Returns proof of changes of given key at given blocks…",N,[[[R[4081]],["storage"],[R[4082]],["option"],[R[4083]]],[["vec",["vec"]],[R[3],["vec","string"]],["string"]]]],[5,"key_changes_proof_check",E,"Check key changes proof and return changes of the key at…",N,[[[R[4098]],[R[4081]],["vec",["vec"]],["vec",["u8"]],[R[4082]],["option"],[R[4083]]],[[R[3],["vec","string"]],["vec"],["string"]]]],[5,"prune_changes_tries",E,"Prune obsolete changes tries. Pruning happens at the same…",N,[[["s"],[R[4081]],[R[4082]],[R[3840]],["fnmut"]]]],[5,"oldest_non_pruned_changes_trie",E,"Get number of oldest block for which changes trie is not…",N,[[[R[3840]],[R[4081]]],[R[4081]]]],[5,"create_proof_check_backend",E,"Create proof check backend.",N,[[[R[4085]]],[[R[3],[R[4084],"box"]],[R[4084],["memorydb"]],["box",["error"]]]]],[5,"create_proof_check_backend_storage",E,"Create in-memory storage of proof check backend.",N,[[[R[4085]]],["memorydb"]]],[5,"merge_storage_proofs",E,"Merges multiple storage proofs covering potentially…",N,[[["i"]],[R[4085]]]],[5,"native_else_wasm",E,"Evaluate to ExecutionManager::NativeElseWasm, without…",N,[[],[[R[4086]],[R[4102],[R[4086]]]]]],[5,"prove_execution",E,"Prove execution using the given state backend, overlayed…",N,[[["exec"],["str"],[R[4087]],["b"]],[[R[3],["box"]],["box",["error"]]]]],[5,"prove_execution_on_trie_backend",E,"Prove execution using the given trie backend, overlayed…",N,[[["exec"],[R[4084]],[R[4087]],["str"]],[[R[3],["box"]],["box",["error"]]]]],[5,"execution_proof_check",E,"Check execution proof, generated by `prove_execution` call.",N,[[["exec"],["str"],[R[4087]],[R[4085]]],[[R[3],["vec","box"]],["vec",["u8"]],["box",["error"]]]]],[5,"execution_proof_check_on_trie_backend",E,"Check execution proof on proving backend, generated by…",N,[[["exec"],["str"],[R[4087]],[R[4084]]],[[R[3],["vec","box"]],["vec",["u8"]],["box",["error"]]]]],[5,"prove_read",E,"Generate storage read proof.",N,[[["i"],["b"]],[[R[4085]],["box",["error"]],[R[3],[R[4085],"box"]]]]],[5,"prove_child_read",E,"Generate child storage read proof.",N,[[[R[3487]],["i"],["b"]],[[R[4085]],["box",["error"]],[R[3],[R[4085],"box"]]]]],[5,"prove_read_on_trie_backend",E,R[4088],N,[[[R[4084]],["i"]],[[R[4085]],["box",["error"]],[R[3],[R[4085],"box"]]]]],[5,"prove_child_read_on_trie_backend",E,R[4088],N,[[[R[4084]],[R[3487]],["i"]],[[R[4085]],["box",["error"]],[R[3],[R[4085],"box"]]]]],[5,"read_proof_check",E,"Check storage read proof, generated by `prove_read` call.",N,[[["i"],[R[4085]]],[["box",["error"]],[R[3],["hashmap","box"]],["hashmap",["vec","option"]]]]],[5,"read_child_proof_check",E,"Check child storage read proof, generated by…",N,[[[R[4085]],["i"]],[["box",["error"]],[R[3],["hashmap","box"]],["hashmap",["vec","option"]]]]],[5,"read_proof_check_on_proving_backend",E,"Check storage read proof on pre-created proving backend.",N,[[[R[4084]]],[["option",["vec"]],[R[3],["option","box"]],["box",["error"]]]]],[5,"read_child_proof_check_on_proving_backend",E,"Check child storage read proof on pre-created proving…",N,[[[R[4084]]],[["option",["vec"]],[R[3],["option","box"]],["box",["error"]]]]],[0,"backend",E,"State machine backends. These manage the code and storage…",N,N],[3,"InMemory",R[4104],"In-memory backend. Fully recomputes tries each time…",N,N],[4,"Void",E,"Error impossible.",N,N],[8,"Backend",E,"A state backend is used to read state data and can have…",N,N],[16,"Error",E,"An error type when fetching data is not possible.",9,N],[16,"Transaction",E,"Storage changes to be applied if committing",9,N],[16,R[4100],E,"Type of trie backend storage.",9,N],[10,"storage",E,"Get keyed storage or None if there is nothing associated.",9,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[3889],E,"Get keyed storage value hash or None if there is nothing…",9,[[["self"]],[[R[3],["option"]],["option"]]]],[10,R[3901],E,"Get keyed child storage or None if there is nothing…",9,[[[R[3487]],["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[3891],E,"Get child keyed storage value hash or None if there is…",9,[[[R[3487]],["self"]],[[R[3],["option"]],["option"]]]],[11,R[3911],E,"true if a key exists in storage.",9,[[["self"]],[[R[3],["bool"]],["bool"]]]],[11,R[3913],E,"true if a key exists in child storage.",9,[[[R[3487]],["self"]],[[R[3],["bool"]],["bool"]]]],[10,R[3915],E,"Return the next key in storage in lexicographic order or…",9,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[10,R[3916],E,"Return the next key in child storage in lexicographic…",9,[[[R[3487]],["self"]],[["option",["vec"]],[R[3],["option"]]]]],[10,R[4107],E,"Retrieve all entries keys of child storage and call `f`…",9,[[[R[3487]],["fnmut"],["self"]]]],[11,R[4105],E,"Retrieve all entries keys which start with the given…",9,[[["self"],["fnmut"]]]],[10,R[4106],E,"Retrieve all entries keys and values of which start with…",9,[[["self"],["fnmut"]]]],[10,R[4108],E,"Retrieve all child entries keys which start with the given…",9,[[[R[3487]],["fnmut"],["self"]]]],[10,R[3928],E,R[4089],9,[[["i"],["self"]]]],[10,R[3930],E,"Calculate the child storage root, with given delta over…",9,[[[R[3487]],["i"],["self"]]]],[10,"pairs",E,"Get all key/value pairs into a Vec.",9,[[["self"]],["vec"]]],[11,"keys",E,"Get all keys with given prefix",9,[[["self"]],[["vec",["vec"]],["vec",["u8"]]]]],[11,R[4110],E,"Get all keys of child storage with given prefix",9,[[[R[3487]],["self"]],[["vec",["vec"]],["vec",["u8"]]]]],[11,R[4109],E,"Try convert into trie backend.",9,[[["self"]],[["option",[R[4084]]],[R[4084]]]]],[11,"full_storage_root",E,R[4089],9,[[["i1"],["self"],["i2"]]]],[8,R[4125],E,"Trait that allows consolidate two transactions together.",N,N],[10,R[4090],E,"Consolidate two transactions into one.",10,[[["self"]]]],[11,"update",E,"Copy the state, with applied updates",11,[[["self"]],["self"]]],[11,"child_storage_keys",E,"child storage key iterator",11,[[["self"]]]],[11,"new",R[4091],"Create new changes trie build cache.",12,[[],["self"]]],[11,"get",E,"Get cached changed keys for changes trie with given root.",12,[[["self"],["h"]],[["hashmap"],["option",["hashmap"]]]]],[11,"with_changed_keys",E,"Execute given functor with cached entry for given block.…",12,[[["fnmut"],["self"],["h"]],["bool"]]],[11,"perform",E,"Insert data into cache.",12,[[["self"],[R[4115]]]]],[11,"with_db",E,"Creates storage from given in-memory database.",13,[[["memorydb"]],["self"]]],[11,"new",E,"Creates storage with empty database.",13,[[],["self"]]],[11,"with_proof",E,"Creates storage with given proof.",13,[[["vec",["vec"]],["vec",["u8"]]],["self"]]],[11,"cache_mut",E,"Get mutable cache reference.",13,[[["self"]],["buildcache"]]],[11,"with_blocks",E,"Create the storage with given blocks.",13,[[["vec"]],["self"]]],[11,"insert",E,"Insert changes trie for given block.",13,[[["number"],["self"],["memorydb"]]]],[11,"new",E,"Create a new `Ext` from overlayed changes and read-only…",1,[[[R[4087]],["b"],["option",[R[4092]]],[R[4092]],["option"],[T]],["self"]]],[11,"transaction",E,"Get the transaction necessary to update the backend.",1,[[["self"]]]],[11,"ext",E,"Get externalities implementation.",14,[[["self"]],[["inmemory"],[R[4093]],["ext",["inmemory",R[4093]]]]]],[11,"new",E,"Create a new instance of `TestExternalities` with storage.",14,[[["storage"]],["self"]]],[11,"new_with_code",E,"Create a new instance of `TestExternalities` with code and…",14,[[["storage"]],["self"]]],[11,"insert",E,"Insert key/value into backend",14,[[["vec",["u8"]],["self"],["u8"]]]],[11,"register_extension",E,"Registers the given extension for this instance.",14,[[["self"],["any"],[R[4094]]]]],[11,"changes_trie_storage",E,"Get mutable reference to changes trie storage.",14,[[["self"]],[R[4093]]]],[11,"commit_all",E,"Return a new backend with all pending value.",14,[[["self"]],["inmemory"]]],[11,R[4095],E,R[4096],14,[[["self"]],["r"]]],[11,"new",E,"Create a new instance of `BasicExternalities`",15,[[["storage"]],["self"]]],[11,"insert",E,"Insert key/value",15,[[["vec",["u8"]],["self"],["u8"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"into_storages",E,"Consume self and returns inner storages",15,[[],["storage"]]],[11,"execute_with_storage",E,"Execute the given closure `f` with the externalities set…",15,[[["storage"]],["r"]]],[11,R[4095],E,R[4096],15,[[["self"]],["r"]]],[11,R[340],E,"Whether the overlayed changes are empty.",16,[[["self"]],["bool"]]],[11,"storage",E,R[4097],16,[[["self"]],[["option",["option"]],["option"]]]],[11,R[3901],E,R[4097],16,[[["self"]],[["option",["option"]],["option"]]]],[11,"discard_prospective",E,"Discard prospective changes to state.",16,[[["self"]]]],[11,"commit_prospective",E,"Commit prospective changes to state.",16,[[["self"]]]],[11,"into_committed",E,"Consume `OverlayedChanges` and take committed set.",16,[[]]],[11,R[4436],E,"Get child info for a storage key. Take the latest value so…",16,[[["self"]],[["option",[R[3403]]],[R[3403]]]]],[11,"next_storage_key_change",E,"Returns the next (in lexicographic order) storage key in…",16,[[["self"]],["option"]]],[11,"next_child_storage_key_change",E,"Returns the next (in lexicographic order) child storage…",16,[[["self"]],["option"]]],[11,"new",E,"Constructs a storage proof from a subset of encoded trie…",17,[[["vec",["vec"]],["vec",["u8"]]],["self"]]],[11,"empty",E,"Returns a new empty proof.",17,[[],["self"]]],[11,R[340],E,"Returns whether this is an empty proof.",17,[[["self"]],["bool"]]],[11,"iter_nodes",E,"Create an iterator over trie nodes constructed from the…",17,[[],["storageproofnodeiterator"]]],[11,"storage",E,"Produce proof for a key query.",18,[[["self"]],[["option",["vec"]],[R[3],["option","string"]],["string"]]]],[11,R[3901],E,"Produce proof for a child key query.",18,[[[R[3487]],["self"]],[["option",["vec"]],[R[3],["option","string"]],["string"]]]],[11,R[4138],E,"Produce proof for the whole backend.",18,[[["self"]]]],[11,"new",E,"Create new proving backend.",19,[[[R[4084]]],["self"]]],[11,"new_with_recorder",E,"Create new proving backend with the given recorder.",19,[[[R[4084]],["proofrecorder"]],["self"]]],[11,"extract_proof",E,"Extracting the gathered unordered proof.",19,[[["self"]],[R[4085]]]],[11,"new",E,"Create new trie-based backend.",20,[[["s"]],["self"]]],[11,"essence",E,"Get backend essence reference.",20,[[["self"]],["triebackendessence"]]],[11,"backend_storage",E,"Get backend storage reference.",20,[[["self"]],["s"]]],[11,"root",E,"Get trie root.",20,[[["self"]]]],[11,"into_storage",E,"Consumes self and returns underlying storage.",20,[[],["s"]]],[6,"ProofRecorder",E,"Global proof recorder, act as a layer over a hash db for…",N,N],[6,"DefaultHandler",E,"Default handler of the execution manager.",N,N],[6,"ChangesTrieTransaction",E,"Type of changes trie transaction.",N,N],[8,R[4135],E,R[4099],N,N],[10,R[4112],E,"Casts from self reference to RootsStorage reference.",21,[[["self"]],[R[4098]]]],[10,R[4113],E,"Execute given functor with cached entry for given trie…",21,[[["fnmut"],["self"]],["bool"]]],[10,"get",E,R[4101],21,[[["prefix"],["self"]],[["option",["dbvalue"]],["string"],[R[3],["option","string"]]]]],[8,R[4136],E,R[4099],N,N],[10,R[4111],E,"Resolve hash of the block into anchor.",22,[[["self"]],[[R[4082]],["string"],[R[3],[R[4082],"string"]]]]],[10,"root",E,"Get changes trie root for the block with given number…",22,[[[R[4082]],["self"],["number"]],[[R[3],["option","string"]],["option"],["string"]]]],[8,R[4100],E,"Key-value pairs storage that is used by trie backend…",N,N],[16,"Overlay",E,"Type of in-memory overlay.",23,N],[10,"get",E,"Get the value stored at key.",23,[[["prefix"],["self"]],[["option",["dbvalue"]],["string"],[R[3],["option","string"]]]]],[8,"Storage",E,"Patricia trie-based storage trait.",N,N],[10,"get",E,R[4101],24,[[["prefix"],["self"]],[["option",["dbvalue"]],["string"],[R[3],["option","string"]]]]],[8,"Error",E,"State Machine Error bound.",N,N],[11,"get_manager",E,"Gets the corresponding manager for the execution strategy.",6,[[],[[R[4086]],[R[4102],[R[4086]]]]]],[11,"new",E,"Creates new substrate state machine.",25,[[["exec"],[R[4087]],["b"],[T],["str"],["option"],[R[4092]]],["self"]]],[11,"execute",E,R[4103],25,[[[R[4114]],["self"]],[["box",["error"]],[R[3],["box"]]]]],[11,"execute_using_consensus_failure_handler",E,R[4103],25,[[[R[4102]],["option"],["self"],["bool"]],[["box",["error"]],[R[3],["box"]]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,R[3774],E,E,14,[[],[T]]],[11,R[3779],E,R[3776],14,[[["outer"]],[T]]],[11,R[3780],E,R[3777],14,[[["outer"]],[T]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"clear",E,E,14,[[["self"]]]],[11,R[2628],E,E,14,[[]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,R[3774],E,E,15,[[],[T]]],[11,R[3779],E,R[3776],15,[[["outer"]],[T]]],[11,R[3780],E,R[3777],15,[[["outer"]],[T]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"clear",E,E,15,[[["self"]]]],[11,R[2628],E,E,15,[[]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[3774],E,E,1,[[],[T]]],[11,R[3779],E,R[3776],1,[[["outer"]],[T]]],[11,R[3780],E,R[3777],1,[[["outer"]],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[3774],E,E,2,[[],[T]]],[11,R[3779],E,R[3776],2,[[["outer"]],[T]]],[11,R[3780],E,R[3777],2,[[["outer"]],[T]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,R[3774],E,E,13,[[],[T]]],[11,R[3779],E,R[3776],13,[[["outer"]],[T]]],[11,R[3780],E,R[3777],13,[[["outer"]],[T]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,R[3774],E,E,12,[[],[T]]],[11,R[3779],E,R[3776],12,[[["outer"]],[T]]],[11,R[3780],E,R[3777],12,[[["outer"]],[T]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[3774],E,E,3,[[],[T]]],[11,R[3779],E,R[3776],3,[[["outer"]],[T]]],[11,R[3780],E,R[3777],3,[[["outer"]],[T]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,R[3774],E,E,16,[[],[T]]],[11,R[3779],E,R[3776],16,[[["outer"]],[T]]],[11,R[3780],E,R[3777],16,[[["outer"]],[T]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"clear",E,E,16,[[["self"]]]],[11,R[2628],E,E,16,[[]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,R[3774],E,E,19,[[],[T]]],[11,R[3779],E,R[3776],19,[[["outer"]],[T]]],[11,R[3780],E,R[3777],19,[[["outer"]],[T]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,R[3774],E,E,18,[[],[T]]],[11,R[3779],E,R[3776],18,[[["outer"]],[T]]],[11,R[3780],E,R[3777],18,[[["outer"]],[T]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,R[292],E,E,17,[[["self"]],["usize"]]],[11,R[3525],E,E,17,[[["self"],["f"]],["r"]]],[11,"encode",E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,17,[[["w"],["self"]]]],[11,"decode",E,E,17,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[3604],E,E,17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,17,[[],[["error"],[R[3],["error"]]]]],[11,R[3774],E,E,17,[[],[T]]],[11,R[3779],E,R[3776],17,[[["outer"]],[T]]],[11,R[3780],E,R[3777],17,[[["outer"]],[T]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,R[3774],E,E,20,[[],[T]]],[11,R[3779],E,R[3776],20,[[["outer"]],[T]]],[11,R[3780],E,R[3777],20,[[["outer"]],[T]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,R[3774],E,E,25,[[],[T]]],[11,R[3779],E,R[3776],25,[[["outer"]],[T]]],[11,R[3780],E,R[3777],25,[[["outer"]],[T]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[3774],E,E,4,[[],[T]]],[11,R[3779],E,R[3776],4,[[["outer"]],[T]]],[11,R[3780],E,R[3777],4,[[["outer"]],[T]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[78],E,E,5,[[["self"]],["string"]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,R[3774],E,E,5,[[],[T]]],[11,R[3779],E,R[3776],5,[[["outer"]],[T]]],[11,R[3780],E,R[3777],5,[[["outer"]],[T]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,R[3774],E,E,6,[[],[T]]],[11,R[3779],E,R[3776],6,[[["outer"]],[T]]],[11,R[3780],E,R[3777],6,[[["outer"]],[T]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,R[3774],E,E,7,[[],[T]]],[11,R[3779],E,R[3776],7,[[["outer"]],[T]]],[11,R[3780],E,R[3777],7,[[["outer"]],[T]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,R[3774],E,E,8,[[],[T]]],[11,R[3779],E,R[3776],8,[[["outer"]],[T]]],[11,R[3780],E,R[3777],8,[[["outer"]],[T]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",R[4104],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,R[3774],E,E,11,[[],[T]]],[11,R[3779],E,R[3776],11,[[["outer"]],[T]]],[11,R[3780],E,R[3777],11,[[["outer"]],[T]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"clear",E,E,11,[[["self"]]]],[11,R[2628],E,E,11,[[]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[78],E,E,26,[[["self"]],["string"]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,R[3774],E,E,26,[[],[T]]],[11,R[3779],E,R[3776],26,[[["outer"]],[T]]],[11,R[3780],E,R[3777],26,[[["outer"]],[T]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"as_fail",E,E,26,[[["self"]],["fail"]]],[11,"storage",E,E,11,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[3901],E,E,11,[[[R[3487]],["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[3911],E,E,11,[[["self"]],[[R[3],["bool"]],["bool"]]]],[11,R[3915],E,E,11,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[3916],E,E,11,[[[R[3487]],["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[4105],E,E,11,[[["self"],["fnmut"]]]],[11,R[4106],E,E,11,[[["self"],["fnmut"]]]],[11,R[4107],E,E,11,[[[R[3487]],["fnmut"],["self"]]]],[11,R[4108],E,E,11,[[[R[3487]],["fnmut"],["self"]]]],[11,R[3928],E,E,11,[[["i"],["self"]]]],[11,R[3930],E,E,11,[[[R[3487]],["i"],["self"]]]],[11,"pairs",E,E,11,[[["self"]],["vec"]]],[11,"keys",E,E,11,[[["self"]],[["vec",["vec"]],["vec",["u8"]]]]],[11,R[4110],E,E,11,[[[R[3487]],["self"]],[["vec",["vec"]],["vec",["u8"]]]]],[11,R[4109],E,E,11,[[["self"]],[["option",[R[4084]]],[R[4084]]]]],[11,"storage",R[4091],E,19,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[3901],E,E,19,[[[R[3487]],["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[4107],E,E,19,[[[R[3487]],["fnmut"],["self"]]]],[11,R[3915],E,E,19,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[3916],E,E,19,[[[R[3487]],["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[4105],E,E,19,[[["self"],["fnmut"]]]],[11,R[4106],E,E,19,[[["self"],["fnmut"]]]],[11,R[4108],E,E,19,[[[R[3487]],["fnmut"],["self"]]]],[11,"pairs",E,E,19,[[["self"]],["vec"]]],[11,"keys",E,E,19,[[["self"]],[["vec",["vec"]],["vec",["u8"]]]]],[11,R[4110],E,E,19,[[[R[3487]],["self"]],[["vec",["vec"]],["vec",["u8"]]]]],[11,R[3928],E,E,19,[[["i"],["self"]]]],[11,R[3930],E,E,19,[[[R[3487]],["i"],["self"]]]],[11,"storage",E,E,20,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[3901],E,E,20,[[[R[3487]],["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[3915],E,E,20,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[3916],E,E,20,[[[R[3487]],["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[4105],E,E,20,[[["self"],["fnmut"]]]],[11,R[4106],E,E,20,[[["self"],["fnmut"]]]],[11,R[4107],E,E,20,[[[R[3487]],["fnmut"],["self"]]]],[11,R[4108],E,E,20,[[[R[3487]],["fnmut"],["self"]]]],[11,"pairs",E,E,20,[[["self"]],["vec"]]],[11,"keys",E,E,20,[[["self"]],[["vec",["vec"]],["vec",["u8"]]]]],[11,R[3928],E,E,20,[[["i"],["self"]]]],[11,R[3930],E,E,20,[[[R[3487]],["i"],["self"]]]],[11,R[4109],E,E,20,[[["self"]],[["option",[R[4084]]],[R[4084]]]]],[11,R[4111],E,E,13,[[["self"]],[[R[4082]],["string"],[R[3],[R[4082],"string"]]]]],[11,"root",E,E,13,[[[R[4082]],["self"],["number"]],[[R[3],["option","string"]],["option"],["string"]]]],[11,R[4112],E,E,13,[[["self"]],[R[4098]]]],[11,R[4113],E,E,13,[[["fnmut"],["self"]],["bool"]]],[11,"get",E,E,13,[[["prefix"],["self"]],[["option",["dbvalue"]],["string"],[R[3],["option","string"]]]]],[11,"get",E,E,27,[[["prefix"],["self"]],[["option",["dbvalue"]],["string"],[R[3],["option","string"]]]]],[11,"from",R[4104],E,11,[[[R[501],["vec","vec"]],["option"],["hashmap",["option",R[501]]]],["self"]]],[11,"from",E,E,11,[[["storage"]],["self"]]],[11,"from",E,E,11,[[[R[501],["vec","vec"]],["vec",["u8"]]],["self"]]],[11,"from",E,E,11,[[["vec"]],["self"]]],[11,"from",R[4091],E,14,[[["storage"]],["self"]]],[11,"from",E,E,15,[[[R[501],["vec","vec"]],["vec",["u8"]]],["self"]]],[11,"from",E,E,6,[[[R[4102]]],["self"]]],[11,"clone",R[4104],E,11,[[["self"]],["self"]]],[11,"clone",R[4091],E,3,[[["self"]],[R[4083]]]],[11,"clone",E,E,16,[[["self"]],[R[4087]]]],[11,"clone",E,E,17,[[["self"]],[R[4085]]]],[11,"clone",E,E,6,[[["self"]],[R[4114]]]],[11,"clone",E,E,7,[[["self"]],["backendtrustlevel"]]],[11,"clone",E,E,8,[[["self"]],[R[4102]]]],[11,R[90],R[4104],E,11,[[],["self"]]],[11,R[90],R[4091],E,14,[[],["self"]]],[11,R[90],E,E,15,[[],["self"]]],[11,R[90],E,E,16,[[],[R[4087]]]],[11,"eq",R[4104],E,11,[[["self"]],["bool"]]],[11,"eq",R[4091],E,4,[[[R[4115]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[4115]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[4116]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[4116]]],["bool"]]],[11,"eq",E,"This doesn't test if they are in the same state, only if…",14,[[[R[4848]],["self"]],["bool"]]],[11,"eq",E,E,15,[[["self"],["basicexternalities"]],["bool"]]],[11,"eq",E,E,17,[[[R[4085]],["self"]],["bool"]]],[11,"ne",E,E,17,[[[R[4085]],["self"]],["bool"]]],[11,"eq",E,E,6,[[[R[4114]],["self"]],["bool"]]],[11,"fmt",R[4104],E,26,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4091],E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4104],E,26,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[4091],E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,R[293],E,E,15,[[[R[294]]],["self"]]],[11,R[38],R[4104],E,26,[[["self"]],["str"]]],[11,R[3603],R[4091],E,17,[[["self"],["encout"]]]],[11,"encode",E,E,17,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[3525],E,E,17,[[["fnonce"],["self"]],["r"]]],[11,"decode",E,E,17,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,"storage",E,E,1,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3889],E,E,1,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3893],E,E,1,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3897],E,E,1,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3901],E,E,1,[[[R[3487]],["self"],[R[3486]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3891],E,E,1,[[[R[3487]],["self"],[R[3486]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3895],E,E,1,[[[R[3487]],["self"],[R[3486]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3899],E,E,1,[[[R[3487]],["self"],[R[3486]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3911],E,E,1,[[["self"]],["bool"]]],[11,R[3913],E,E,1,[[[R[3487]],["self"],[R[3486]]],["bool"]]],[11,R[3915],E,E,1,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3916],E,E,1,[[[R[3487]],["self"],[R[3486]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3923],E,E,1,[[["vec",["u8"]],["option",["vec"]],["self"],["u8"]]]],[11,R[3925],E,E,1,[[[R[3487]],["vec",["u8"]],["option",["vec"]],["self"],[R[3486]],["u8"]]]],[11,R[3917],E,E,1,[[["self"],[R[3486]],[R[3487]]]]],[11,R[3919],E,E,1,[[["self"]]]],[11,R[3921],E,E,1,[[[R[3487]],["self"],[R[3486]]]]],[11,"chain_id",E,E,1,[[["self"]],["u64"]]],[11,R[3928],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3930],E,E,1,[[["self"],[R[3486]]],[["vec",["u8"]],["u8"]]]],[11,R[3932],E,E,1,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,"storage",E,E,15,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3889],E,E,15,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3893],E,E,15,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3897],E,E,15,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3901],E,E,15,[[[R[3487]],["self"],[R[3486]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3891],E,E,15,[[[R[3487]],["self"],[R[3486]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3899],E,E,15,[[[R[3487]],["self"],[R[3486]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3895],E,E,15,[[[R[3487]],["self"],[R[3486]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3915],E,E,15,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3916],E,E,15,[[[R[3487]],["self"],[R[3486]]],[["option",["vec"]],["vec",["u8"]]]]],[11,R[3923],E,E,15,[[["vec",["u8"]],["option",["vec"]],["self"],["u8"]]]],[11,R[3925],E,E,15,[[[R[3487]],["vec",["u8"]],["option",["vec"]],["self"],[R[3486]],["u8"]]]],[11,R[3917],E,E,15,[[["self"],[R[3486]],[R[3487]]]]],[11,R[3919],E,E,15,[[["self"]]]],[11,R[3921],E,E,15,[[[R[3487]],["self"],[R[3486]]]]],[11,"chain_id",E,E,15,[[["self"]],["u64"]]],[11,R[3928],E,E,15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3930],E,E,15,[[["self"],[R[3486]]],[["vec",["u8"]],["u8"]]]],[11,R[3932],E,E,15,[[["self"]],[["option",["vec"]],[R[3],["option"]]]]],[11,R[4117],E,E,1,[[["self"],[R[46]]],[["any"],["option",["any"]]]]],[11,R[4117],E,E,14,[[["self"],[R[46]]],[["any"],["option",["any"]]]]],[11,R[4117],E,E,15,[[["self"],[R[46]]],[["any"],["option",["any"]]]]]],"p":[[8,"TrieMut"],[3,"Ext"],[3,R[4118]],[3,R[4119]],[4,R[4120]],[4,R[4121]],[4,R[4122]],[4,R[4123]],[4,R[4124]],[8,"Backend"],[8,R[4125]],[3,"InMemory"],[3,R[4126]],[3,R[4127]],[3,R[4128]],[3,R[4129]],[3,R[4130]],[3,R[4131]],[3,R[4132]],[3,R[4133]],[3,R[4134]],[8,R[4135]],[8,R[4136]],[8,R[4100]],[8,"Storage"],[3,R[4137]],[4,"Void"],[6,"MemoryDB"]]};
searchIndex["sp_std"]={"doc":"Lowest-abstraction level for the Substrate runtime: just…","i":[[0,"alloc","sp_std","Memory allocation APIs",N,N],[3,"System",R[388],"The default memory allocator provided by the operating…",N,N],[5,"set_alloc_error_hook",E,"Registers a custom allocation error hook, replacing any…",N,[[]]],[5,"take_alloc_error_hook",E,"Unregisters the current allocation error hook, returning it.",N,[[]]],[3,"AllocErr",E,"The `AllocErr` error indicates an allocation failure that…",N,N],[3,R[662],E,"The parameters given to `Layout::from_size_align` or some…",N,N],[3,R[663],E,"The `CannotReallocInPlace` error is used when…",N,N],[8,R[633],E,"A memory allocator that can be registered as the standard…",N,N],[10,"alloc",E,"Allocate memory as described by the given `layout`.",0,[[["layout"],["self"]]]],[10,R[498],E,"Deallocate the block of memory at the given `ptr` pointer…",0,[[["layout"],["self"]]]],[11,R[313],E,R[316],0,[[["layout"],["self"]]]],[11,R[499],E,"Shrink or grow a block of memory to the given `new_size`.…",0,[[["usize"],["layout"],["self"]]]],[3,"Layout",E,"Layout of a block of memory.",N,N],[3,"Global",E,"The global memory allocator.",N,N],[5,"alloc",E,"Allocate memory with the global allocator.",N,[[["layout"]]]],[5,R[498],E,"Deallocate memory with the global allocator.",N,[[["layout"]]]],[5,R[499],E,"Reallocate memory with the global allocator.",N,[[["layout"],["usize"]]]],[5,R[313],E,"Allocate zero-initialized memory with the global allocator.",N,[[["layout"]]]],[5,"handle_alloc_error",E,"Abort on memory allocation error or failure.",N,[[["layout"]]]],[3,"Excess",E,"Represents the combination of a starting address and a…",N,N],[12,"0",E,E,1,N],[12,"1",E,E,1,N],[8,"Alloc",E,"An implementation of `Alloc` can allocate, reallocate, and…",N,N],[10,"alloc",E,"Returns a pointer meeting the size and alignment…",2,[[["layout"],["self"]],[[R[314]],[R[3],[R[315],R[314]]],[R[315],["u8"]]]]],[10,R[498],E,"Deallocate the memory referenced by `ptr`.",2,[[["u8"],["layout"],["self"],[R[315],["u8"]]]]],[11,"usable_size",E,"Returns bounds on the guaranteed usable size of a…",2,[[["self"],["layout"]]]],[11,R[499],E,"Returns a pointer suitable for holding data described by a…",2,[[["u8"],["usize"],["layout"],["self"],[R[315],["u8"]]],[[R[314]],[R[3],[R[315],R[314]]],[R[315],["u8"]]]]],[11,R[313],E,R[316],2,[[["layout"],["self"]],[[R[314]],[R[3],[R[315],R[314]]],[R[315],["u8"]]]]],[11,"alloc_excess",E,"Behaves like `alloc`, but also returns the whole size of…",2,[[["layout"],["self"]],[["excess"],[R[314]],[R[3],["excess",R[314]]]]]],[11,"realloc_excess",E,"Behaves like `realloc`, but also returns the whole size of…",2,[[["u8"],["usize"],["layout"],["self"],[R[315],["u8"]]],[["excess"],[R[314]],[R[3],["excess",R[314]]]]]],[11,"grow_in_place",E,"Attempts to extend the allocation referenced by `ptr` to…",2,[[["u8"],["usize"],["layout"],["self"],[R[315],["u8"]]],[[R[3],[R[317]]],[R[317]]]]],[11,"shrink_in_place",E,"Attempts to shrink the allocation referenced by `ptr` to…",2,[[["u8"],["usize"],["layout"],["self"],[R[315],["u8"]]],[[R[3],[R[317]]],[R[317]]]]],[11,"alloc_one",E,"Allocates a block suitable for holding an instance of `T`.",2,[[["self"]],[[R[315]],[R[314]],[R[3],[R[315],R[314]]]]]],[11,"dealloc_one",E,"Deallocates a block suitable for holding an instance of `T`.",2,[[[R[315]],["self"]]]],[11,"alloc_array",E,"Allocates a block suitable for holding `n` instances of `T`.",2,[[["self"],["usize"]],[[R[315]],[R[314]],[R[3],[R[315],R[314]]]]]],[11,"realloc_array",E,"Reallocates a block previously suitable for holding…",2,[[[R[315]],["usize"],["self"]],[[R[315]],[R[314]],[R[3],[R[315],R[314]]]]]],[11,"dealloc_array",E,"Deallocates a block suitable for holding `n` instances of…",2,[[[R[315]],["self"],["usize"]],[[R[314]],[R[3],[R[314]]]]]],[0,"any","sp_std","This module implements the `Any` trait, which enables…",N,N],[8,"Any",R[389],"A type to emulate dynamic typing.",N,N],[10,R[26],E,"Gets the `TypeId` of `self`.",3,[[["self"]],[R[46]]]],[3,"TypeId",E,"A `TypeId` represents a globally unique identifier for a…",N,N],[5,"type_name",E,"Returns the name of a type as a string slice.",N,[[],["str"]]],[0,R[45],"sp_std","A module for working with borrowed data.",N,N],[8,"ToOwned",R[390],"A generalization of `Clone` to borrowed data.",N,N],[16,"Owned",E,"The resulting type after obtaining ownership.",4,N],[10,R[24],E,"Creates owned data from borrowed data, usually by cloning.",4,[[["self"]]]],[11,R[25],E,"Uses borrowed data to replace owned data, usually by…",4,[[["self"]]]],[4,"Cow",E,"A clone-on-write smart pointer.",N,N],[13,"Borrowed",E,"Borrowed data.",5,N],[13,"Owned",E,"Owned data.",5,N],[8,"Borrow",E,"A trait for borrowing data.",N,N],[10,R[45],E,"Immutably borrows from an owned value.",6,[[["self"]],["borrowed"]]],[8,R[634],E,"A trait for mutably borrowing data.",N,N],[10,R[22],E,"Mutably borrows from an owned value.",7,[[["self"]],["borrowed"]]],[0,"boxed","sp_std",R[318],N,N],[3,"Box","sp_std::boxed",R[318],N,N],[0,"cell","sp_std","Shareable mutable containers.",N,N],[3,"Cell",R[396],"A mutable memory location.",N,N],[3,"RefCell",E,"A mutable memory location with dynamically checked borrow…",N,N],[3,R[664],E,"An error returned by `RefCell::try_borrow`.",N,N],[3,R[665],E,"An error returned by `RefCell::try_borrow_mut`.",N,N],[3,"Ref",E,"Wraps a borrowed reference to a value in a `RefCell` box.…",N,N],[3,"RefMut",E,"A wrapper type for a mutably borrowed value from a…",N,N],[3,R[666],E,"The core primitive for interior mutability in Rust.",N,N],[0,"clone","sp_std","The `Clone` trait for types that cannot be 'implicitly…",N,N],[8,"Clone","sp_std::clone",R[383],N,N],[10,"clone",E,R[384],8,[[["self"]],["self"]]],[11,R[385],E,R[386],8,[[["self"],["self"]]]],[14,"Clone",E,R[387],N,N],[0,"cmp","sp_std","Functionality for ordering and comparison.",N,N],[8,R[321],R[397],R[378],N,N],[10,"eq",E,R[379],9,[[["rhs"],["self"]],["bool"]]],[11,"ne",E,R[380],9,[[["rhs"],["self"]],["bool"]]],[8,"Eq",E,R[376],N,N],[4,"Ordering",E,"An `Ordering` is the result of a comparison between two…",N,N],[13,"Less",E,"An ordering where a compared value is less than another.",10,N],[13,"Equal",E,"An ordering where a compared value is equal to another.",10,N],[13,"Greater",E,"An ordering where a compared value is greater than another.",10,N],[3,"Reverse",E,R[382],N,N],[12,"0",E,E,11,N],[8,"Ord",E,"Trait for types that form a total order.",N,N],[10,"cmp",E,"This method returns an `Ordering` between `self` and…",12,[[["self"]],[R[105]]]],[11,"max",E,R[320],12,[[],["self"]]],[11,"min",E,R[319],12,[[],["self"]]],[11,"clamp",E,"Restrict a value to a certain interval.",12,[[],["self"]]],[8,R[322],E,"Trait for values that can be compared for a sort-order.",N,N],[10,R[106],E,"This method returns an ordering between `self` and `other`…",13,[[["rhs"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,"This method tests less than (for `self` and `other`) and…",13,[[["rhs"],["self"]],["bool"]]],[11,"le",E,"This method tests less than or equal to (for `self` and…",13,[[["rhs"],["self"]],["bool"]]],[11,"gt",E,"This method tests greater than (for `self` and `other`)…",13,[[["rhs"],["self"]],["bool"]]],[11,"ge",E,"This method tests greater than or equal to (for `self` and…",13,[[["rhs"],["self"]],["bool"]]],[5,"min",E,R[319],N,[[[T]],[T]]],[5,"min_by",E,"Returns the minimum of two values with respect to the…",N,[[[T],["f"]],[T]]],[5,R[331],E,R[332],N,[[[T],["f"]],[T]]],[5,"max",E,R[320],N,[[[T]],[T]]],[5,"max_by",E,"Returns the maximum of two values with respect to the…",N,[[[T],["f"]],[T]]],[5,R[329],E,R[330],N,[[[T],["f"]],[T]]],[14,R[321],E,R[381],N,N],[14,"Eq",E,R[377],N,N],[14,"Ord",E,"Derive macro generating an impl of the trait `Ord`.",N,N],[14,R[322],E,"Derive macro generating an impl of the trait `PartialOrd`.",N,N],[0,"convert","sp_std","Traits for conversions between types.",N,N],[5,"identity",R[398],"The identity function.",N,[[[T]],[T]]],[8,"AsRef",E,"Used to do a cheap reference-to-reference conversion.",N,N],[10,"as_ref",E,R[323],14,[[["self"]],[T]]],[8,"AsMut",E,"Used to do a cheap mutable-to-mutable reference conversion.",N,N],[10,"as_mut",E,R[323],15,[[["self"]],[T]]],[8,"Into",E,"A value-to-value conversion that consumes the input value.…",N,N],[10,"into",E,R[323],16,[[],[T]]],[8,"From",E,"Used to do value-to-value conversions while consuming the…",N,N],[10,"from",E,R[323],17,[[[T]],["self"]]],[8,"TryInto",E,"An attempted conversion that consumes `self`, which may or…",N,N],[16,"Error",E,R[324],18,N],[10,R[21],E,R[323],18,[[],[R[3]]]],[8,"TryFrom",E,"Simple and safe type conversions that may fail in a…",N,N],[16,"Error",E,R[324],19,N],[10,R[20],E,R[323],19,[[[T]],[R[3]]]],[4,R[667],E,"The error type for errors that can never happen.",N,N],[0,R[90],"sp_std","The `Default` trait for types which may have meaningful…",N,N],[8,"Default","sp_std::default","A trait for giving a type a useful default value.",N,N],[10,R[90],E,"Returns the \"default value\" for a type.",20,[[],["self"]]],[14,"Default",E,"Derive macro generating an impl of the trait `Default`.",N,N],[0,"fmt","sp_std",R[4652],N,N],[5,"format",R[399],R[4653],N,[[[R[325]]],["string"]]],[3,R[668],E,R[4654],N,N],[6,"Result",E,R[4655],N,N],[8,"Write",E,R[4656],N,N],[10,R[492],E,R[4657],21,[[["str"],["self"]],[["error"],[R[3],["error"]]]]],[11,R[493],E,R[4658],21,[[["self"],["char"]],[["error"],[R[3],["error"]]]]],[11,R[417],E,R[4659],21,[[["self"],[R[325]]],[["error"],[R[3],["error"]]]]],[8,"Binary",E,R[4660],N,N],[10,"fmt",E,R[326],22,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"Octal",E,R[4661],N,N],[10,"fmt",E,R[326],23,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"Debug",E,R[4662],N,N],[10,"fmt",E,R[326],24,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[14,"Debug",E,R[4663],N,N],[8,"Display",E,R[4664],N,N],[10,"fmt",E,R[326],25,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"LowerHex",E,R[4665],N,N],[10,"fmt",E,R[326],26,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"Pointer",E,R[4666],N,N],[10,"fmt",E,R[326],27,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"UpperHex",E,R[4667],N,N],[10,"fmt",E,R[326],28,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"LowerExp",E,R[4668],N,N],[10,"fmt",E,R[326],29,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[8,"UpperExp",E,R[4669],N,N],[10,"fmt",E,R[326],30,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[3,"Error",E,R[4670],N,N],[5,"write",E,R[4671],N,[[["write"],[R[325]]],[["error"],[R[3],["error"]]]]],[3,R[669],E,R[4672],N,N],[3,R[670],E,R[327],N,N],[3,"DebugMap",E,R[327],N,N],[3,"DebugSet",E,R[327],N,N],[3,R[671],E,R[327],N,N],[3,R[672],E,R[327],N,N],[4,R[635],E,R[4673],N,N],[13,"Left",E,R[4674],31,N],[13,"Right",E,R[4675],31,N],[13,"Center",E,R[4676],31,N],[0,"hash","sp_std","Generic hashing support.",N,N],[8,"Hash",R[400],"A hashable type.",N,N],[10,"hash",E,"Feeds this value into the given [`Hasher`].",32,[[["self"],["h"]]]],[11,"hash_slice",E,"Feeds a slice of this type into the given [`Hasher`].",32,[[["h"]]]],[8,"Hasher",E,R[1381],N,N],[10,"finish",E,"Returns the hash value for the values written so far.",33,[[["self"]],["u64"]]],[10,"write",E,"Writes some data into this `Hasher`.",33,[[["self"]]]],[11,"write_u8",E,"Writes a single `u8` into this hasher.",33,[[["self"],["u8"]]]],[11,R[503],E,"Writes a single `u16` into this hasher.",33,[[["u16"],["self"]]]],[11,R[504],E,"Writes a single `u32` into this hasher.",33,[[["self"],["u32"]]]],[11,R[505],E,"Writes a single `u64` into this hasher.",33,[[["self"],["u64"]]]],[11,R[506],E,"Writes a single `u128` into this hasher.",33,[[["self"],["u128"]]]],[11,R[507],E,"Writes a single `usize` into this hasher.",33,[[["self"],["usize"]]]],[11,"write_i8",E,"Writes a single `i8` into this hasher.",33,[[["self"],["i8"]]]],[11,R[508],E,"Writes a single `i16` into this hasher.",33,[[["self"],["i16"]]]],[11,R[509],E,"Writes a single `i32` into this hasher.",33,[[["self"],["i32"]]]],[11,R[510],E,"Writes a single `i64` into this hasher.",33,[[["i64"],["self"]]]],[11,R[511],E,"Writes a single `i128` into this hasher.",33,[[["self"],["i128"]]]],[11,R[512],E,"Writes a single `isize` into this hasher.",33,[[["isize"],["self"]]]],[8,R[636],E,"A trait for creating instances of [`Hasher`].",N,N],[16,"Hasher",E,"Type of the hasher that will be created.",34,N],[10,R[427],E,"Creates a new hasher.",34,[[["self"]]]],[3,R[673],E,"Used to create a default [`BuildHasher`] instance for…",N,N],[3,R[674],E,"An implementation of SipHash 2-4.",N,N],[14,"Hash",E,"Derive macro generating an impl of the trait `Hash`.",N,N],[0,"iter","sp_std","Composable external iteration.",N,N],[8,"Iterator",R[401],"An interface for dealing with iterators.",N,N],[16,"Item",E,R[338],35,N],[10,"next",E,"Advances the iterator and returns the next value.",35,[[["self"]],["option"]]],[11,R[292],E,"Returns the bounds on the remaining length of the iterator.",35,[[["self"]]]],[11,"count",E,"Consumes the iterator, counting the number of iterations…",35,[[],["usize"]]],[11,"last",E,"Consumes the iterator, returning the last element.",35,[[],["option"]]],[11,"nth",E,"Returns the `n`th element of the iterator.",35,[[["self"],["usize"]],["option"]]],[11,"step_by",E,"Creates an iterator starting at the same point, but…",35,[[["usize"]],["stepby"]]],[11,"chain",E,"Takes two iterators and creates a new iterator over both…",35,[[[U]],["chain"]]],[11,"zip",E,"'Zips up' two iterators into a single iterator of pairs.",35,[[[U]],["zip"]]],[11,"map",E,"Takes a closure and creates an iterator which calls that…",35,[[["f"]],["map"]]],[11,"for_each",E,"Calls a closure on each element of an iterator.",35,[[["f"]]]],[11,"filter",E,R[607],35,[[["p"]],["filter"]]],[11,"filter_map",E,"Creates an iterator that both filters and maps.",35,[[["f"]],[R[489]]]],[11,R[328],E,"Creates an iterator which gives the current iteration…",35,[[],[R[328]]]],[11,R[477],E,"Creates an iterator which can use `peek` to look at the…",35,[[],[R[477]]]],[11,"skip_while",E,"Creates an iterator that [`skip`]s elements based on a…",35,[[["p"]],[R[481]]]],[11,"take_while",E,"Creates an iterator that yields elements based on a…",35,[[["p"]],[R[482]]]],[11,"skip",E,"Creates an iterator that skips the first `n` elements.",35,[[["usize"]],["skip"]]],[11,"take",E,"Creates an iterator that yields its first `n` elements.",35,[[["usize"]],["take"]]],[11,"scan",E,"An iterator adaptor similar to [`fold`] that holds…",35,[[["f"],["st"]],["scan"]]],[11,"flat_map",E,"Creates an iterator that works like map, but flattens…",35,[[["f"]],["flatmap"]]],[11,"flatten",E,"Creates an iterator that flattens nested structure.",35,[[],["flatten"]]],[11,"fuse",E,"Creates an iterator which ends after the first [`None`].",35,[[],["fuse"]]],[11,"inspect",E,"Do something with each element of an iterator, passing the…",35,[[["f"]],["inspect"]]],[11,"by_ref",E,"Borrows an iterator, rather than consuming it.",35,[[["self"]],["self"]]],[11,"collect",E,"Transforms an iterator into a collection.",35,[[],["b"]]],[11,"partition",E,"Consumes an iterator, creating two collections from it.",35,[[["f"]]]],[11,"partition_in_place",E,"Reorder the elements of this iterator in-place according…",35,[[["p"]],["usize"]]],[11,"is_partitioned",E,"Checks if the elements of this iterator are partitioned…",35,[[["p"]],["bool"]]],[11,R[465],E,"An iterator method that applies a function as long as it…",35,[[["self"],["b"],["f"]],["r"]]],[11,"try_for_each",E,"An iterator method that applies a fallible function to…",35,[[["self"],["f"]],["r"]]],[11,"fold",E,"An iterator method that applies a function, producing a…",35,[[["b"],["f"]],["b"]]],[11,"all",E,"Tests if every element of the iterator matches a predicate.",35,[[["self"],["f"]],["bool"]]],[11,"any",E,"Tests if any element of the iterator matches a predicate.",35,[[["self"],["f"]],["bool"]]],[11,"find",E,"Searches for an element of an iterator that satisfies a…",35,[[["self"],["p"]],["option"]]],[11,"find_map",E,"Applies function to the elements of iterator and returns…",35,[[["self"],["f"]],["option"]]],[11,R[467],E,"Searches for an element in an iterator, returning its index.",35,[[["self"],["p"]],[["option",["usize"]],["usize"]]]],[11,R[466],E,"Searches for an element in an iterator from the right,…",35,[[["self"],["p"]],[["option",["usize"]],["usize"]]]],[11,"max",E,"Returns the maximum element of an iterator.",35,[[],["option"]]],[11,"min",E,"Returns the minimum element of an iterator.",35,[[],["option"]]],[11,R[329],E,R[330],35,[[["f"]],["option"]]],[11,"max_by",E,"Returns the element that gives the maximum value with…",35,[[["f"]],["option"]]],[11,R[331],E,R[332],35,[[["f"]],["option"]]],[11,"min_by",E,"Returns the element that gives the minimum value with…",35,[[["f"]],["option"]]],[11,"rev",E,"Reverses an iterator's direction.",35,[[],["rev"]]],[11,"unzip",E,"Converts an iterator of pairs into a pair of containers.",35,[[]]],[11,"copied",E,"Creates an iterator which copies all of its elements.",35,[[],["copied"]]],[11,"cloned",E,"Creates an iterator which [`clone`]s all of its elements.",35,[[],["cloned"]]],[11,"cycle",E,"Repeats an iterator endlessly.",35,[[],["cycle"]]],[11,"sum",E,"Sums the elements of an iterator.",35,[[],["s"]]],[11,R[424],E,"Iterates over the entire iterator, multiplying all the…",35,[[],["p"]]],[11,"cmp",E,R[333],35,[[["i"]],[R[105]]]],[11,"cmp_by",E,R[333],35,[[["i"],["f"]],[R[105]]]],[11,R[106],E,R[333],35,[[["i"]],[["option",[R[105]]],[R[105]]]]],[11,"partial_cmp_by",E,R[333],35,[[["i"],["f"]],[["option",[R[105]]],[R[105]]]]],[11,"eq",E,R[334],35,[[["i"]],["bool"]]],[11,"eq_by",E,R[334],35,[[["i"],["f"]],["bool"]]],[11,"ne",E,"Determines if the elements of this `Iterator` are unequal…",35,[[["i"]],["bool"]]],[11,"lt",E,R[335],35,[[["i"]],["bool"]]],[11,"le",E,R[335],35,[[["i"]],["bool"]]],[11,"gt",E,R[335],35,[[["i"]],["bool"]]],[11,"ge",E,R[335],35,[[["i"]],["bool"]]],[11,"is_sorted",E,"Checks if the elements of this iterator are sorted.",35,[[],["bool"]]],[11,R[468],E,R[336],35,[[["f"]],["bool"]]],[11,"is_sorted_by_key",E,R[336],35,[[["f"]],["bool"]]],[8,"Step",E,"Objects that can be stepped over in both directions.",N,N],[10,"steps_between",E,"Returns the number of steps between two step objects. The…",36,[[["self"]],[["option",["usize"]],["usize"]]]],[10,"replace_one",E,"Replaces this step with `1`, returning itself.",36,[[["self"]],["self"]]],[10,"replace_zero",E,"Replaces this step with `0`, returning itself.",36,[[["self"]],["self"]]],[10,"add_one",E,"Adds one to this step, returning the result.",36,[[["self"]],["self"]]],[10,"sub_one",E,"Subtracts one to this step, returning the result.",36,[[["self"]],["self"]]],[10,"add_usize",E,"Adds a `usize`, returning `None` on overflow.",36,[[["self"],["usize"]],["option"]]],[11,"sub_usize",E,"Subtracts a `usize`, returning `None` on underflow.",36,[[["self"],["usize"]],["option"]]],[3,"Repeat",E,"An iterator that repeats an element endlessly.",N,N],[5,"repeat",E,"Creates a new iterator that endlessly repeats a single…",N,[[[T]],["repeat"]]],[3,R[675],E,"An iterator that repeats elements of type `A` endlessly by…",N,N],[5,"repeat_with",E,"Creates a new iterator that repeats elements of type `A`…",N,[[["f"]],[R[480]]]],[3,"Empty",E,"An iterator that yields nothing.",N,N],[5,"empty",E,"Creates an iterator that yields nothing.",N,[[],["empty"]]],[3,"Once",E,"An iterator that yields an element exactly once.",N,N],[5,"once",E,"Creates an iterator that yields an element exactly once.",N,[[[T]],["once"]]],[3,"OnceWith",E,"An iterator that yields a single element of type `A` by…",N,N],[5,"once_with",E,"Creates an iterator that lazily generates a value exactly…",N,[[["f"]],["oncewith"]]],[3,"FromFn",E,"An iterator where each iteration calls the provided…",N,N],[5,"from_fn",E,"Creates a new iterator where each iteration calls the…",N,[[["f"]],["fromfn"]]],[3,R[676],E,"An new iterator where each successive item is computed…",N,N],[5,R[337],E,"Creates a new iterator where each successive item is…",N,[[["option"],["f"]],[R[337]]]],[8,R[637],E,"Conversion from an `Iterator`.",N,N],[10,R[293],E,"Creates a value from an iterator.",37,[[[T]],["self"]]],[8,R[638],E,"Conversion into an `Iterator`.",N,N],[16,"Item",E,R[338],38,N],[16,R[339],E,"Which kind of iterator are we turning this into?",38,N],[10,R[211],E,"Creates an iterator from a value.",38,[[]]],[8,R[639],E,"An iterator able to yield elements from both ends.",N,N],[10,R[295],E,"Removes and returns an element from the end of the iterator.",39,[[["self"]],["option"]]],[11,R[425],E,"Returns the `n`th element from the end of the iterator.",39,[[["self"],["usize"]],["option"]]],[11,R[426],E,"This is the reverse version of [`try_fold()`]: it takes…",39,[[["self"],["b"],["f"]],["r"]]],[11,"rfold",E,"An iterator method that reduces the iterator's elements to…",39,[[["b"],["f"]],["b"]]],[11,"rfind",E,"Searches for an element of an iterator from the back that…",39,[[["self"],["p"]],["option"]]],[8,"Extend",E,"Extend a collection with the contents of an iterator.",N,N],[10,"extend",E,"Extends a collection with the contents of an iterator.",40,[[["self"],[T]]]],[8,R[640],E,"An iterator that knows its exact length.",N,N],[11,"len",E,"Returns the exact number of times the iterator will iterate.",41,[[["self"]],["usize"]]],[11,R[340],E,"Returns `true` if the iterator is empty.",41,[[["self"]],["bool"]]],[8,"Sum",E,"Trait to represent types that can be created by summing up…",N,N],[10,"sum",E,R[341],42,[[["i"]],["self"]]],[8,"Product",E,"Trait to represent types that can be created by…",N,N],[10,R[424],E,R[341],43,[[["i"]],["self"]]],[8,"FusedIterator",E,"An iterator that always continues to yield `None` when…",N,N],[8,"TrustedLen",E,"An iterator that reports an accurate length using size_hint.",N,N],[3,"Rev",E,"A double-ended iterator with the direction inverted.",N,N],[3,"Cycle",E,"An iterator that repeats endlessly.",N,N],[3,"Chain",E,"An iterator that strings two iterators together.",N,N],[3,"Zip",E,"An iterator that iterates two other iterators…",N,N],[3,"Map",E,"An iterator that maps the values of `iter` with `f`.",N,N],[3,"Filter",E,"An iterator that filters the elements of `iter` with…",N,N],[3,R[677],E,"An iterator that uses `f` to both filter and map elements…",N,N],[3,R[678],E,"An iterator that yields the current count and the element…",N,N],[3,"Peekable",E,"An iterator with a `peek()` that returns an optional…",N,N],[3,R[679],E,"An iterator that rejects elements while `predicate`…",N,N],[3,R[680],E,"An iterator that only accepts elements while `predicate`…",N,N],[3,"Skip",E,"An iterator that skips over `n` elements of `iter`.",N,N],[3,"Take",E,"An iterator that only iterates over the first `n`…",N,N],[3,"Scan",E,"An iterator to maintain state while iterating another…",N,N],[3,"FlatMap",E,"An iterator that maps each element to an iterator, and…",N,N],[3,"Fuse",E,"An iterator that yields `None` forever after the…",N,N],[3,"Inspect",E,"An iterator that calls a function with a reference to each…",N,N],[3,"Cloned",E,"An iterator that clones the elements of an underlying…",N,N],[3,"StepBy",E,"An iterator for stepping iterators by a custom amount.",N,N],[3,"Flatten",E,"An iterator that flattens one level of nesting in an…",N,N],[3,"Copied",E,"An iterator that copies the elements of an underlying…",N,N],[0,"marker","sp_std",R[4677],N,N],[8,"Send",R[402],R[4678],N,N],[8,"Sized",E,R[4679],N,N],[8,"Unsize",E,R[4680],N,N],[8,R[4681],E,R[342],N,N],[8,R[4682],E,R[342],N,N],[8,"Copy",E,R[4683],N,N],[8,"Sync",E,R[4684],N,N],[3,R[681],E,R[4685],N,N],[8,"Unpin",E,R[4686],N,N],[3,R[682],E,R[4687],N,N],[14,"Copy",E,R[4688],N,N],[0,"mem","sp_std","Basic functions for dealing with memory.",N,N],[5,"forget",R[403],"Takes ownership and \"forgets\" about the value without…",N,[[[T]]]],[5,"forget_unsized",E,"Like [`forget`], but also accepts unsized values.",N,[[[T]]]],[5,"size_of",E,"Returns the size of a type in bytes.",N,[[],["usize"]]],[5,"size_of_val",E,"Returns the size of the pointed-to value in bytes.",N,[[[T]],["usize"]]],[5,"min_align_of",E,R[343],N,[[],["usize"]]],[5,"min_align_of_val",E,R[344],N,[[[T]],["usize"]]],[5,"align_of",E,R[343],N,[[],["usize"]]],[5,"align_of_val",E,R[344],N,[[[T]],["usize"]]],[5,"needs_drop",E,"Returns `true` if dropping values of type `T` matters.",N,[[],["bool"]]],[5,"zeroed",E,"Returns the value of type `T` represented by the all-zero…",N,[[],[T]]],[5,"uninitialized",E,"Bypasses Rust's normal memory-initialization checks by…",N,[[],[T]]],[5,"swap",E,"Swaps the values at two mutable locations, without…",N,[[[T]]]],[5,"take",E,"Replace `dest` with the default value of `T`, and return…",N,[[[T]],[T]]],[5,"replace",E,"Moves `src` into the referenced `dest`, returning the…",N,[[[T],[T]],[T]]],[5,"drop",E,"Disposes of a value.",N,[[[T]]]],[5,"transmute_copy",E,"Interprets `src` as having type `&U`, and then reads `src`…",N,[[[T]],[U]]],[3,R[683],E,"Opaque type representing the discriminant of an enum.",N,N],[5,R[345],E,"Returns a value uniquely identifying the enum variant in…",N,[[[T]],[R[345]]]],[3,R[684],E,"A wrapper to inhibit compiler from automatically calling…",N,N],[19,R[685],E,R[904],N,N],[5,"transmute",E,"Reinterprets the bits of a value of one type as another…",N,[[[T]],[U]]],[0,"num","sp_std","Additional functionality for numerics.",N,N],[4,R[641],R[404],"A classification of floating point numbers.",N,N],[13,"Nan",E,"\"Not a Number\", often obtained by dividing by zero.",44,N],[13,"Infinite",E,"Positive or negative infinity.",44,N],[13,"Zero",E,"Positive or negative zero.",44,N],[13,"Subnormal",E,"De-normalized floating point representation (less precise…",44,N],[13,"Normal",E,"A regular floating point number.",44,N],[3,R[686],E,"An error which can be returned when parsing an integer.",N,N],[3,R[687],E,"An error which can be returned when parsing a float.",N,N],[3,R[688],E,"The error type returned when a checked integral type…",N,N],[3,"Wrapping",E,"Provides intentionally-wrapped arithmetic on `T`.",N,N],[12,"0",E,E,45,N],[3,R[689],E,R[346],N,N],[3,R[690],E,R[346],N,N],[3,R[691],E,R[346],N,N],[3,R[692],E,R[346],N,N],[3,R[693],E,R[346],N,N],[3,R[694],E,R[346],N,N],[3,R[695],E,R[346],N,N],[3,R[696],E,R[346],N,N],[3,R[697],E,R[346],N,N],[3,R[698],E,R[346],N,N],[3,R[699],E,R[346],N,N],[3,R[700],E,R[346],N,N],[4,R[642],E,"Enum to store the various types of errors that can cause…",N,N],[13,"Empty",E,"Value being parsed is empty.",46,N],[13,"InvalidDigit",E,"Contains an invalid digit.",46,N],[13,"Overflow",E,"Integer is too large to store in target integer type.",46,N],[13,"Underflow",E,"Integer is too small to store in target integer type.",46,N],[13,"Zero",E,"Value was Zero",46,N],[0,"ops","sp_std","Overloadable operators.",N,N],[8,"Add",R[405],"The addition operator `+`.",N,N],[16,"Output",E,"The resulting type after applying the `+` operator.",47,N],[10,"add",E,"Performs the `+` operation.",47,[[["rhs"]]]],[8,"Sub",E,"The subtraction operator `-`.",N,N],[16,"Output",E,R[347],48,N],[10,"sub",E,"Performs the `-` operation.",48,[[["rhs"]]]],[8,"Mul",E,"The multiplication operator `*`.",N,N],[16,"Output",E,"The resulting type after applying the `*` operator.",49,N],[10,"mul",E,"Performs the `*` operation.",49,[[["rhs"]]]],[8,"Div",E,"The division operator `/`.",N,N],[16,"Output",E,"The resulting type after applying the `/` operator.",50,N],[10,"div",E,"Performs the `/` operation.",50,[[["rhs"]]]],[8,"Rem",E,"The remainder operator `%`.",N,N],[16,"Output",E,"The resulting type after applying the `%` operator.",51,N],[10,"rem",E,"Performs the `%` operation.",51,[[["rhs"]]]],[8,"Neg",E,"The unary negation operator `-`.",N,N],[16,"Output",E,R[347],52,N],[10,"neg",E,"Performs the unary `-` operation.",52,[[]]],[8,R[643],E,"The addition assignment operator `+=`.",N,N],[10,R[423],E,"Performs the `+=` operation.",53,[[["self"],["rhs"]]]],[8,R[644],E,"The subtraction assignment operator `-=`.",N,N],[10,R[463],E,"Performs the `-=` operation.",54,[[["self"],["rhs"]]]],[8,R[645],E,"The multiplication assignment operator `*=`.",N,N],[10,R[476],E,"Performs the `*=` operation.",55,[[["self"],["rhs"]]]],[8,R[646],E,"The division assignment operator `/=`.",N,N],[10,R[421],E,"Performs the `/=` operation.",56,[[["self"],["rhs"]]]],[8,R[647],E,"The remainder assignment operator `%=`.",N,N],[10,R[462],E,"Performs the `%=` operation.",57,[[["self"],["rhs"]]]],[8,"Not",E,"The unary logical negation operator `!`.",N,N],[16,"Output",E,"The resulting type after applying the `!` operator.",58,N],[10,"not",E,"Performs the unary `!` operation.",58,[[]]],[8,"BitAnd",E,"The bitwise AND operator `&`.",N,N],[16,"Output",E,"The resulting type after applying the `&` operator.",59,N],[10,"bitand",E,"Performs the `&` operation.",59,[[["rhs"]]]],[8,"BitOr",E,"The bitwise OR operator `|`.",N,N],[16,"Output",E,"The resulting type after applying the `|` operator.",60,N],[10,"bitor",E,"Performs the `|` operation.",60,[[["rhs"]]]],[8,"BitXor",E,"The bitwise XOR operator `^`.",N,N],[16,"Output",E,"The resulting type after applying the `^` operator.",61,N],[10,"bitxor",E,"Performs the `^` operation.",61,[[["rhs"]]]],[8,"Shl",E,"The left shift operator `<<`. Note that because this trait…",N,N],[16,"Output",E,"The resulting type after applying the `<<` operator.",62,N],[10,"shl",E,"Performs the `<<` operation.",62,[[["rhs"]]]],[8,"Shr",E,"The right shift operator `>>`. Note that because this…",N,N],[16,"Output",E,"The resulting type after applying the `>>` operator.",63,N],[10,"shr",E,"Performs the `>>` operation.",63,[[["rhs"]]]],[8,R[648],E,"The bitwise AND assignment operator `&=`.",N,N],[10,R[458],E,"Performs the `&=` operation.",64,[[["self"],["rhs"]]]],[8,R[649],E,"The bitwise OR assignment operator `|=`.",N,N],[10,R[473],E,"Performs the `|=` operation.",65,[[["self"],["rhs"]]]],[8,R[650],E,"The bitwise XOR assignment operator `^=`.",N,N],[10,R[496],E,"Performs the `^=` operation.",66,[[["self"],["rhs"]]]],[8,R[651],E,"The left shift assignment operator `<<=`.",N,N],[10,R[456],E,"Performs the `<<=` operation.",67,[[["self"],["rhs"]]]],[8,R[652],E,"The right shift assignment operator `>>=`.",N,N],[10,R[435],E,"Performs the `>>=` operation.",68,[[["self"],["rhs"]]]],[8,"Deref",E,"Used for immutable dereferencing operations, like `*v`.",N,N],[16,"Target",E,"The resulting type after dereferencing.",69,N],[10,"deref",E,"Dereferences the value.",69,[[["self"]]]],[8,"DerefMut",E,"Used for mutable dereferencing operations, like in `*v =…",N,N],[10,R[99],E,"Mutably dereferences the value.",70,[[["self"]]]],[8,"Drop",E,"Used to run some code when a value goes out of scope. This…",N,N],[10,"drop",E,"Executes the destructor for this type.",71,[[["self"]]]],[8,"Fn",E,"The version of the call operator that takes an immutable…",N,N],[10,"call",E,R[348],72,[[["args"],["self"]]]],[8,"FnMut",E,"The version of the call operator that takes a mutable…",N,N],[10,"call_mut",E,R[348],73,[[["args"],["self"]]]],[8,"FnOnce",E,"The version of the call operator that takes a by-value…",N,N],[16,"Output",E,"The returned type after the call operator is used.",74,N],[10,R[502],E,R[348],74,[[["args"]]]],[8,"Index",E,R[349],N,N],[16,"Output",E,"The returned type after indexing.",75,N],[10,"index",E,"Performs the indexing (`container[index]`) operation.",75,[[["idx"],["self"]]]],[8,"IndexMut",E,R[349],N,N],[10,R[350],E,"Performs the mutable indexing (`container[index]`)…",76,[[["self"],["idx"]]]],[3,"Range",E,"A (half-open) range bounded inclusively below and…",N,N],[12,"start",E,R[351],77,N],[12,"end",E,R[352],77,N],[3,R[653],E,"A range only bounded inclusively below (`start..`).",N,N],[12,"start",E,R[351],78,N],[3,R[701],E,"An unbounded range (`..`).",N,N],[3,"RangeTo",E,"A range only bounded exclusively above (`..end`).",N,N],[12,"end",E,R[352],79,N],[3,R[702],E,"A range bounded inclusively below and above (`start..=end`).",N,N],[3,R[654],E,"A range only bounded inclusively above (`..=end`).",N,N],[12,"end",E,"The upper bound of the range (inclusive)",80,N],[8,R[655],E,"`RangeBounds` is implemented by Rust's built-in range…",N,N],[10,R[494],E,"Start index bound.",81,[[["self"]],[["bound"],[T]]]],[10,R[495],E,"End index bound.",81,[[["self"]],[["bound"],[T]]]],[11,R[114],E,R[575],81,[[["self"],[U]],["bool"]]],[4,"Bound",E,"An endpoint of a range of keys.",N,N],[13,"Included",E,"An inclusive bound.",82,N],[13,"Excluded",E,"An exclusive bound.",82,N],[13,"Unbounded",E,"An infinite endpoint. Indicates that there is no bound in…",82,N],[8,"Try",E,"A trait for customizing the behavior of the `?` operator.",N,N],[16,"Ok",E,"The type of this value when viewed as successful.",83,N],[16,"Error",E,"The type of this value when viewed as failed.",83,N],[10,R[428],E,"Applies the \"?\" operator. A return of `Ok(t)` means that…",83,[[],[R[3]]]],[10,R[429],E,"Wrap an error value to construct the composite result. For…",83,[[],["self"]]],[10,"from_ok",E,"Wrap an OK value to construct the composite result. For…",83,[[],["self"]]],[8,R[656],E,"The trait implemented by builtin generator types.",N,N],[16,"Yield",E,"The type of value this generator yields.",84,N],[16,"Return",E,"The type of value this generator returns.",84,N],[10,"resume",E,"Resumes the execution of this generator.",84,[[["self"],["pin"]],[R[450]]]],[4,R[657],E,"The result of a generator resumption.",N,N],[13,"Yielded",E,"The generator suspended with a value.",85,N],[13,"Complete",E,"The generator completed with a return value.",85,N],[8,"CoerceUnsized",E,"Trait that indicates that this is a pointer or a wrapper…",N,N],[8,"DispatchFromDyn",E,"This is used for object safety, to check that a method's…",N,N],[0,"ptr","sp_std","Manually manage memory through raw pointers.",N,N],[5,"drop_in_place",R[406],"Executes the destructor (if any) of the pointed-to value.",N,[[]]],[5,"null",E,"Creates a null raw pointer.",N,[[]]],[5,"null_mut",E,"Creates a null mutable raw pointer.",N,[[]]],[5,"slice_from_raw_parts",E,R[360],N,[[["usize"]]]],[5,"slice_from_raw_parts_mut",E,R[361],N,[[["usize"]]]],[5,"swap",E,"Swaps the values at two mutable locations of the same…",N,[[]]],[5,"swap_nonoverlapping",E,"Swaps `count * size_of::<T>()` bytes between the two…",N,[[["usize"]]]],[5,"replace",E,"Moves `src` into the pointed `dst`, returning the previous…",N,[[[T]],[T]]],[5,"read",E,R[353],N,[[],[T]]],[5,"read_unaligned",E,R[353],N,[[],[T]]],[5,"write",E,R[354],N,[[[T]]]],[5,"write_unaligned",E,R[354],N,[[[T]]]],[5,"read_volatile",E,"Performs a volatile read of the value from `src` without…",N,[[],[T]]],[5,"write_volatile",E,"Performs a volatile write of a memory location with the…",N,[[[T]]]],[5,"eq",E,"Compares raw pointers for equality.",N,[[],["bool"]]],[5,"hash",E,"Hash a raw pointer.",N,[[["s"]]]],[5,R[2834],E,R[355],N,[[["usize"]]]],[5,"copy",E,R[355],N,[[["usize"]]]],[5,"write_bytes",E,"Sets `count * size_of::<T>()` bytes of memory starting at…",N,[[["u8"],["usize"]]]],[3,"NonNull",E,"`*mut T` but non-zero and covariant.",N,N],[0,"rc","sp_std","Single-threaded reference-counting pointers. 'Rc' stands…",N,N],[3,"Rc",R[407],"A single-threaded reference-counting pointer. 'Rc' stands…",N,N],[3,"Weak",E,"`Weak` is a version of [`Rc`] that holds a non-owning…",N,N],[0,R[3],"sp_std",R[4689],N,N],[4,"Result",R[408],R[4690],N,N],[13,"Ok",E,R[4691],86,N],[13,"Err",E,R[4692],86,N],[3,"Iter",E,R[4693],N,N],[3,R[703],E,R[4694],N,N],[3,R[339],E,R[4695],N,N],[0,"slice","sp_std","A dynamically-sized view into a contiguous sequence, `[T]`.",N,N],[8,"Concat",R[409],"Helper trait for `[T]::concat`.",N,N],[16,"Output",E,R[356],87,N],[10,"concat",E,"Implementation of `[T]::concat`",87,[[["self"]]]],[8,"Join",E,"Helper trait for `[T]::join`",N,N],[16,"Output",E,R[356],88,N],[10,"join",E,"Implementation of `[T]::join`",88,[[["self"],["separator"]]]],[3,"Chunks",E,R[365],N,N],[3,"Windows",E,"An iterator over overlapping subslices of length `size`.",N,N],[3,"Iter",E,"Immutable slice iterator",N,N],[3,R[703],E,"Mutable slice iterator.",N,N],[3,"SplitMut",E,R[358],N,N],[3,R[704],E,R[366],N,N],[3,"Split",E,R[357],N,N],[3,"SplitN",E,R[357],N,N],[3,"RSplitN",E,R[357],N,N],[3,R[705],E,R[357],N,N],[3,R[706],E,R[357],N,N],[3,"RSplit",E,R[357],N,N],[3,R[707],E,R[358],N,N],[5,R[359],E,R[360],N,[[["usize"]]]],[5,"from_raw_parts_mut",E,R[361],N,[[["usize"]]]],[5,R[3779],E,R[362],N,[[[T]]]],[5,R[3780],E,R[362],N,[[[T]]]],[8,R[658],E,"A helper trait used for indexing operations.",N,N],[16,"Output",E,"The output type returned by methods.",89,N],[10,"get",E,R[363],89,[[[T]],["option"]]],[10,R[471],E,R[364],89,[[[T]],["option"]]],[10,R[469],E,R[363],89,[[[T]]]],[10,R[470],E,R[364],89,[[[T]]]],[10,"index",E,R[363],89,[[[T]]]],[10,R[350],E,R[364],89,[[[T]]]],[3,R[708],E,R[365],N,N],[3,R[709],E,R[366],N,N],[3,"RChunks",E,R[365],N,N],[3,R[710],E,R[366],N,N],[3,R[711],E,R[365],N,N],[3,R[712],E,R[366],N,N],[0,"str","sp_std","Unicode string slices.",N,N],[5,"from_boxed_utf8_unchecked",R[370],"Converts a boxed slice of bytes to a boxed string slice…",N,[[["box"]],[["str"],["box",["str"]]]]],[8,"FromStr",E,"Parse a value from a string",N,N],[16,"Err",E,"The associated error which can be returned from parsing.",90,N],[10,R[457],E,"Parses a string `s` to return a value of this type.",90,[[["str"]],[R[3]]]],[3,R[713],E,"Errors which can occur when attempting to interpret a…",N,N],[3,"Lines",E,"An iterator over the lines of a string, as string slices.",N,N],[3,"LinesAny",E,"Created with the method [`lines_any`].",N,N],[3,"Split",E,"Created with the method [`split`].",N,N],[3,"RSplit",E,"Created with the method [`rsplit`].",N,N],[3,"SplitN",E,"Created with the method [`splitn`].",N,N],[3,"RSplitN",E,"Created with the method [`rsplitn`].",N,N],[3,R[714],E,"Created with the method [`split_terminator`].",N,N],[3,R[715],E,"Created with the method [`rsplit_terminator`].",N,N],[3,"Matches",E,"Created with the method [`matches`].",N,N],[3,"RMatches",E,"Created with the method [`rmatches`].",N,N],[3,R[716],E,"Created with the method [`match_indices`].",N,N],[3,R[717],E,"Created with the method [`rmatch_indices`].",N,N],[5,"from_utf8",E,"Converts a slice of bytes to a string slice.",N,[[],[["str"],[R[3],["str",R[367]]],[R[367]]]]],[5,"from_utf8_mut",E,"Converts a mutable slice of bytes to a mutable string slice.",N,[[],[[R[3],["str",R[367]]],["str"],[R[367]]]]],[3,"Chars",E,"An iterator over the [`char`]s of a string slice.",N,N],[3,R[718],E,"An iterator over the [`char`]s of a string slice, and…",N,N],[3,"Bytes",E,"An iterator over the bytes of a string slice.",N,N],[5,"from_utf8_unchecked",E,R[368],N,[[],["str"]]],[5,"from_utf8_unchecked_mut",E,R[368],N,[[],["str"]]],[3,R[719],E,"An error returned when parsing a `bool` using [`from_str`]…",N,N],[3,R[720],E,"An iterator over the non-whitespace substrings of a…",N,N],[0,"pattern",E,"The string Pattern API.",N,N],[8,"Pattern",R[410],"A string pattern.",N,N],[16,R[660],E,"Associated searcher for this pattern",91,N],[10,R[392],E,"Constructs the associated searcher from `self` and the…",91,[[["str"]]]],[11,R[393],E,"Checks whether the pattern matches anywhere in the haystack",91,[[["str"]],["bool"]]],[11,R[394],E,"Checks whether the pattern matches at the front of the…",91,[[["str"]],["bool"]]],[11,R[395],E,"Checks whether the pattern matches at the back of the…",91,[[["str"]],["bool"]]],[4,R[659],E,"Result of calling `Searcher::next()` or…",N,N],[13,"Match",E,"Expresses that a match of the pattern has been found at…",92,N],[13,"Reject",E,"Expresses that `haystack[a..b]` has been rejected as a…",92,N],[13,"Done",E,"Expresses that every byte of the haystack has been…",92,N],[8,R[660],E,"A searcher for a string pattern.",N,N],[10,R[431],E,"Getter for the underlying string to be searched in",93,[[["self"]],["str"]]],[10,"next",E,"Performs the next search step starting from the front.",93,[[["self"]],[R[369]]]],[11,R[430],E,"Finds the next `Match` result. See `next()`",93,[[["self"]],["option"]]],[11,R[432],E,"Finds the next `Reject` result. See `next()` and…",93,[[["self"]],["option"]]],[8,R[661],E,"A reverse searcher for a string pattern.",N,N],[10,R[295],E,"Performs the next search step starting from the back.",94,[[["self"]],[R[369]]]],[11,R[474],E,"Finds the next `Match` result. See `next_back()`",94,[[["self"]],["option"]]],[11,R[475],E,"Finds the next `Reject` result. See `next_back()`",94,[[["self"]],["option"]]],[8,"DoubleEndedSearcher",E,"A marker trait to express that a `ReverseSearcher` can be…",N,N],[3,R[721],E,"Associated type for `<char as Pattern<'a>>::Searcher`.",N,N],[3,R[722],E,"Associated type for `<&[char] as Pattern<'a>>::Searcher`.",N,N],[3,R[723],E,"Associated type for `<F as Pattern<'a>>::Searcher`.",N,N],[3,R[724],E,"Associated type for `<&str as Pattern<'a>>::Searcher`.",N,N],[3,R[725],R[370],"An iterator of [`u16`] over the string encoded as UTF-16.",N,N],[3,R[726],E,"An iterator over the non-ASCII-whitespace substrings of a…",N,N],[3,R[727],E,"The return type of [`str::escape_debug`].",N,N],[3,R[728],E,"The return type of [`str::escape_default`].",N,N],[3,R[729],E,"The return type of [`str::escape_unicode`].",N,N],[0,"vec","sp_std","A contiguous growable array type with heap-allocated…",N,N],[3,"Vec",R[411],R[375],N,N],[3,R[339],E,"An iterator that moves out of a vector.",N,N],[3,"Drain",E,"A draining iterator for `Vec<T>`.",N,N],[3,"Splice",E,"A splicing iterator for `Vec`.",N,N],[3,R[730],E,"An iterator produced by calling `drain_filter` on Vec.",N,N],[14,"vec","sp_std","Creates a [`Vec`] containing the arguments.",N,N],[0,"collections",E,E,N,N],[0,"btree_map",R[372],R[371],N,N],[3,"BTreeMap",R[412],R[371],N,N],[3,"Keys",E,"An iterator over the keys of a `BTreeMap`.",N,N],[3,"Iter",E,"An iterator over the entries of a `BTreeMap`.",N,N],[3,R[339],E,"An owning iterator over the entries of a `BTreeMap`.",N,N],[3,"Values",E,"An iterator over the values of a `BTreeMap`.",N,N],[3,"Range",E,"An iterator over a sub-range of entries in a `BTreeMap`.",N,N],[3,"RangeMut",E,"A mutable iterator over a sub-range of entries in a…",N,N],[4,"Entry",E,R[1516],N,N],[13,"Vacant",E,R[1518],95,N],[13,"Occupied",E,R[1517],95,N],[3,R[731],E,"A view into a vacant entry in a `BTreeMap`. It is part of…",N,N],[3,R[732],E,"A view into an occupied entry in a `BTreeMap`. It is part…",N,N],[3,R[703],E,"A mutable iterator over the entries of a `BTreeMap`.",N,N],[3,R[733],E,"A mutable iterator over the values of a `BTreeMap`.",N,N],[0,"btree_set",R[372],R[373],N,N],[3,"Iter",R[413],"An iterator over the items of a `BTreeSet`.",N,N],[3,R[734],E,R[1545],N,N],[3,R[735],E,R[1546],N,N],[3,R[736],E,R[1547],N,N],[3,"Union",E,R[1548],N,N],[3,"BTreeSet",E,R[373],N,N],[3,R[339],E,"An owning iterator over the items of a `BTreeSet`.",N,N],[3,"Range",E,"An iterator over a sub-range of items in a `BTreeSet`.",N,N],[0,"vec_deque",R[372],R[374],N,N],[3,"VecDeque",R[414],R[374],N,N],[3,"Iter",E,"An iterator over the elements of a `VecDeque`.",N,N],[3,R[703],E,"A mutable iterator over the elements of a `VecDeque`.",N,N],[3,R[339],E,"An owning iterator over the elements of a `VecDeque`.",N,N],[3,"Drain",E,"A draining iterator over the elements of a `VecDeque`.",N,N],[0,"prelude","sp_std","Prelude of common useful imports.",N,N],[3,"Vec",R[391],R[375],N,N],[3,"Box",E,R[318],N,N],[8,"Eq",E,R[376],N,N],[14,"Eq",E,R[377],N,N],[8,R[321],E,R[378],N,N],[10,"eq",E,R[379],9,[[["rhs"],["self"]],["bool"]]],[11,"ne",E,R[380],9,[[["rhs"],["self"]],["bool"]]],[14,R[321],E,R[381],N,N],[3,"Reverse",E,R[382],N,N],[12,"0",E,E,11,N],[8,"Clone",E,R[383],N,N],[10,"clone",E,R[384],8,[[["self"]],["self"]]],[11,R[385],E,R[386],8,[[["self"],["self"]]]],[14,"Clone",E,R[387],N,N],[14,"map","sp_std",E,N,N],[14,"if_std",E,"Feature gate some code that should only be run when `std`…",N,N],[11,"into",R[388],E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[24],E,E,96,[[["self"]],[T]]],[11,R[25],E,E,96,[[["self"],[T]]]],[11,R[20],E,E,96,[[[U]],[R[3]]]],[11,R[21],E,E,96,[[],[R[3]]]],[11,R[45],E,E,96,[[["self"]],[T]]],[11,R[22],E,E,96,[[["self"]],[T]]],[11,R[26],E,E,96,[[["self"]],[R[46]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[24],E,E,97,[[["self"]],[T]]],[11,R[25],E,E,97,[[["self"],[T]]]],[11,R[78],E,E,97,[[["self"]],["string"]]],[11,R[20],E,E,97,[[[U]],[R[3]]]],[11,R[21],E,E,97,[[],[R[3]]]],[11,R[45],E,E,97,[[["self"]],[T]]],[11,R[22],E,E,97,[[["self"]],[T]]],[11,R[26],E,E,97,[[["self"]],[R[46]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[24],E,E,98,[[["self"]],[T]]],[11,R[25],E,E,98,[[["self"],[T]]]],[11,R[78],E,E,98,[[["self"]],["string"]]],[11,R[20],E,E,98,[[[U]],[R[3]]]],[11,R[21],E,E,98,[[],[R[3]]]],[11,R[45],E,E,98,[[["self"]],[T]]],[11,R[22],E,E,98,[[["self"]],[T]]],[11,R[26],E,E,98,[[["self"]],[R[46]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[24],E,E,99,[[["self"]],[T]]],[11,R[25],E,E,99,[[["self"],[T]]]],[11,R[78],E,E,99,[[["self"]],["string"]]],[11,R[20],E,E,99,[[[U]],[R[3]]]],[11,R[21],E,E,99,[[],[R[3]]]],[11,R[45],E,E,99,[[["self"]],[T]]],[11,R[22],E,E,99,[[["self"]],[T]]],[11,R[26],E,E,99,[[["self"]],[R[46]]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[24],E,E,100,[[["self"]],[T]]],[11,R[25],E,E,100,[[["self"],[T]]]],[11,R[20],E,E,100,[[[U]],[R[3]]]],[11,R[21],E,E,100,[[],[R[3]]]],[11,R[45],E,E,100,[[["self"]],[T]]],[11,R[22],E,E,100,[[["self"]],[T]]],[11,R[26],E,E,100,[[["self"]],[R[46]]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[24],E,E,101,[[["self"]],[T]]],[11,R[25],E,E,101,[[["self"],[T]]]],[11,R[20],E,E,101,[[[U]],[R[3]]]],[11,R[21],E,E,101,[[],[R[3]]]],[11,R[45],E,E,101,[[["self"]],[T]]],[11,R[22],E,E,101,[[["self"]],[T]]],[11,R[26],E,E,101,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",R[389],E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[24],E,E,102,[[["self"]],[T]]],[11,R[25],E,E,102,[[["self"],[T]]]],[11,R[20],E,E,102,[[[U]],[R[3]]]],[11,R[21],E,E,102,[[],[R[3]]]],[11,R[45],E,E,102,[[["self"]],[T]]],[11,R[22],E,E,102,[[["self"]],[T]]],[11,R[26],E,E,102,[[["self"]],[R[46]]]],[11,"into",R[390],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[["self"]],["string"]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",R[391],E,103,[[],[U]]],[11,"from",E,E,103,[[],[T]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[211],E,E,103,[[],["i"]]],[11,R[24],E,E,103,[[["self"]],[T]]],[11,R[25],E,E,103,[[["self"],[T]]]],[11,R[78],E,E,103,[[["self"]],["string"]]],[11,R[392],E,E,103,[[["str"]],[R[479]]]],[11,R[393],E,E,103,[[["str"]],["bool"]]],[11,R[394],E,E,103,[[["str"]],["bool"]]],[11,R[395],E,E,103,[[["str"]],["bool"]]],[11,R[20],E,E,103,[[[U]],[R[3]]]],[11,R[21],E,E,103,[[],[R[3]]]],[11,R[45],E,E,103,[[["self"]],[T]]],[11,R[22],E,E,103,[[["self"]],[T]]],[11,R[26],E,E,103,[[["self"]],[R[46]]]],[11,"into",R[396],E,104,[[],[U]]],[11,"from",E,E,104,[[],[T]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[24],E,E,104,[[["self"]],[T]]],[11,R[25],E,E,104,[[["self"],[T]]]],[11,R[20],E,E,104,[[[U]],[R[3]]]],[11,R[21],E,E,104,[[],[R[3]]]],[11,R[45],E,E,104,[[["self"]],[T]]],[11,R[22],E,E,104,[[["self"]],[T]]],[11,R[26],E,E,104,[[["self"]],[R[46]]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[],[T]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[24],E,E,105,[[["self"]],[T]]],[11,R[25],E,E,105,[[["self"],[T]]]],[11,R[20],E,E,105,[[[U]],[R[3]]]],[11,R[21],E,E,105,[[],[R[3]]]],[11,R[45],E,E,105,[[["self"]],[T]]],[11,R[22],E,E,105,[[["self"]],[T]]],[11,R[26],E,E,105,[[["self"]],[R[46]]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[78],E,E,106,[[["self"]],["string"]]],[11,R[20],E,E,106,[[[U]],[R[3]]]],[11,R[21],E,E,106,[[],[R[3]]]],[11,R[45],E,E,106,[[["self"]],[T]]],[11,R[22],E,E,106,[[["self"]],[T]]],[11,R[26],E,E,106,[[["self"]],[R[46]]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[78],E,E,107,[[["self"]],["string"]]],[11,R[20],E,E,107,[[[U]],[R[3]]]],[11,R[21],E,E,107,[[],[R[3]]]],[11,R[45],E,E,107,[[["self"]],[T]]],[11,R[22],E,E,107,[[["self"]],[T]]],[11,R[26],E,E,107,[[["self"]],[R[46]]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[78],E,E,108,[[["self"]],["string"]]],[11,R[20],E,E,108,[[[U]],[R[3]]]],[11,R[21],E,E,108,[[],[R[3]]]],[11,R[45],E,E,108,[[["self"]],[T]]],[11,R[22],E,E,108,[[["self"]],[T]]],[11,R[26],E,E,108,[[["self"]],[R[46]]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[78],E,E,109,[[["self"]],["string"]]],[11,R[20],E,E,109,[[[U]],[R[3]]]],[11,R[21],E,E,109,[[],[R[3]]]],[11,R[45],E,E,109,[[["self"]],[T]]],[11,R[22],E,E,109,[[["self"]],[T]]],[11,R[26],E,E,109,[[["self"]],[R[46]]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[],[T]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[20],E,E,110,[[[U]],[R[3]]]],[11,R[21],E,E,110,[[],[R[3]]]],[11,R[45],E,E,110,[[["self"]],[T]]],[11,R[22],E,E,110,[[["self"]],[T]]],[11,R[26],E,E,110,[[["self"]],[R[46]]]],[11,"into",R[397],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into",R[391],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",R[398],E,111,[[],[U]]],[11,"from",E,E,111,[[],[T]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[24],E,E,111,[[["self"]],[T]]],[11,R[25],E,E,111,[[["self"],[T]]]],[11,R[78],E,E,111,[[["self"]],["string"]]],[11,R[20],E,E,111,[[[U]],[R[3]]]],[11,R[21],E,E,111,[[],[R[3]]]],[11,R[45],E,E,111,[[["self"]],[T]]],[11,R[22],E,E,111,[[["self"]],[T]]],[11,R[26],E,E,111,[[["self"]],[R[46]]]],[11,"into",R[399],E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[20],E,E,112,[[[U]],[R[3]]]],[11,R[21],E,E,112,[[],[R[3]]]],[11,R[45],E,E,112,[[["self"]],[T]]],[11,R[22],E,E,112,[[["self"]],[T]]],[11,R[26],E,E,112,[[["self"]],[R[46]]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[24],E,E,113,[[["self"]],[T]]],[11,R[25],E,E,113,[[["self"],[T]]]],[11,R[78],E,E,113,[[["self"]],["string"]]],[11,R[20],E,E,113,[[[U]],[R[3]]]],[11,R[21],E,E,113,[[],[R[3]]]],[11,R[45],E,E,113,[[["self"]],[T]]],[11,R[22],E,E,113,[[["self"]],[T]]],[11,R[26],E,E,113,[[["self"]],[R[46]]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[24],E,E,114,[[["self"]],[T]]],[11,R[25],E,E,114,[[["self"],[T]]]],[11,R[78],E,E,114,[[["self"]],["string"]]],[11,R[20],E,E,114,[[[U]],[R[3]]]],[11,R[21],E,E,114,[[],[R[3]]]],[11,R[45],E,E,114,[[["self"]],[T]]],[11,R[22],E,E,114,[[["self"]],[T]]],[11,R[26],E,E,114,[[["self"]],[R[46]]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[20],E,E,115,[[[U]],[R[3]]]],[11,R[21],E,E,115,[[],[R[3]]]],[11,R[45],E,E,115,[[["self"]],[T]]],[11,R[22],E,E,115,[[["self"]],[T]]],[11,R[26],E,E,115,[[["self"]],[R[46]]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[20],E,E,116,[[[U]],[R[3]]]],[11,R[21],E,E,116,[[],[R[3]]]],[11,R[45],E,E,116,[[["self"]],[T]]],[11,R[22],E,E,116,[[["self"]],[T]]],[11,R[26],E,E,116,[[["self"]],[R[46]]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[20],E,E,117,[[[U]],[R[3]]]],[11,R[21],E,E,117,[[],[R[3]]]],[11,R[45],E,E,117,[[["self"]],[T]]],[11,R[22],E,E,117,[[["self"]],[T]]],[11,R[26],E,E,117,[[["self"]],[R[46]]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[20],E,E,118,[[[U]],[R[3]]]],[11,R[21],E,E,118,[[],[R[3]]]],[11,R[45],E,E,118,[[["self"]],[T]]],[11,R[22],E,E,118,[[["self"]],[T]]],[11,R[26],E,E,118,[[["self"]],[R[46]]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[20],E,E,119,[[[U]],[R[3]]]],[11,R[21],E,E,119,[[],[R[3]]]],[11,R[45],E,E,119,[[["self"]],[T]]],[11,R[22],E,E,119,[[["self"]],[T]]],[11,R[26],E,E,119,[[["self"]],[R[46]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,"into",R[400],E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[24],E,E,120,[[["self"]],[T]]],[11,R[25],E,E,120,[[["self"],[T]]]],[11,R[20],E,E,120,[[[U]],[R[3]]]],[11,R[21],E,E,120,[[],[R[3]]]],[11,R[45],E,E,120,[[["self"]],[T]]],[11,R[22],E,E,120,[[["self"]],[T]]],[11,R[26],E,E,120,[[["self"]],[R[46]]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[24],E,E,121,[[["self"]],[T]]],[11,R[25],E,E,121,[[["self"],[T]]]],[11,R[20],E,E,121,[[[U]],[R[3]]]],[11,R[21],E,E,121,[[],[R[3]]]],[11,R[45],E,E,121,[[["self"]],[T]]],[11,R[22],E,E,121,[[["self"]],[T]]],[11,R[26],E,E,121,[[["self"]],[R[46]]]],[11,"into",R[401],E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[211],E,E,122,[[],["i"]]],[11,R[24],E,E,122,[[["self"]],[T]]],[11,R[25],E,E,122,[[["self"],[T]]]],[11,R[20],E,E,122,[[[U]],[R[3]]]],[11,R[21],E,E,122,[[],[R[3]]]],[11,R[45],E,E,122,[[["self"]],[T]]],[11,R[22],E,E,122,[[["self"]],[T]]],[11,R[26],E,E,122,[[["self"]],[R[46]]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[211],E,E,123,[[],["i"]]],[11,R[24],E,E,123,[[["self"]],[T]]],[11,R[25],E,E,123,[[["self"],[T]]]],[11,R[20],E,E,123,[[[U]],[R[3]]]],[11,R[21],E,E,123,[[],[R[3]]]],[11,R[45],E,E,123,[[["self"]],[T]]],[11,R[22],E,E,123,[[["self"]],[T]]],[11,R[26],E,E,123,[[["self"]],[R[46]]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[211],E,E,124,[[],["i"]]],[11,R[24],E,E,124,[[["self"]],[T]]],[11,R[25],E,E,124,[[["self"],[T]]]],[11,R[20],E,E,124,[[[U]],[R[3]]]],[11,R[21],E,E,124,[[],[R[3]]]],[11,R[45],E,E,124,[[["self"]],[T]]],[11,R[22],E,E,124,[[["self"]],[T]]],[11,R[26],E,E,124,[[["self"]],[R[46]]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[211],E,E,125,[[],["i"]]],[11,R[24],E,E,125,[[["self"]],[T]]],[11,R[25],E,E,125,[[["self"],[T]]]],[11,R[20],E,E,125,[[[U]],[R[3]]]],[11,R[21],E,E,125,[[],[R[3]]]],[11,R[45],E,E,125,[[["self"]],[T]]],[11,R[22],E,E,125,[[["self"]],[T]]],[11,R[26],E,E,125,[[["self"]],[R[46]]]],[11,"into",E,E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[211],E,E,126,[[],["i"]]],[11,R[24],E,E,126,[[["self"]],[T]]],[11,R[25],E,E,126,[[["self"],[T]]]],[11,R[20],E,E,126,[[[U]],[R[3]]]],[11,R[21],E,E,126,[[],[R[3]]]],[11,R[45],E,E,126,[[["self"]],[T]]],[11,R[22],E,E,126,[[["self"]],[T]]],[11,R[26],E,E,126,[[["self"]],[R[46]]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[211],E,E,127,[[],["i"]]],[11,R[24],E,E,127,[[["self"]],[T]]],[11,R[25],E,E,127,[[["self"],[T]]]],[11,R[20],E,E,127,[[[U]],[R[3]]]],[11,R[21],E,E,127,[[],[R[3]]]],[11,R[45],E,E,127,[[["self"]],[T]]],[11,R[22],E,E,127,[[["self"]],[T]]],[11,R[26],E,E,127,[[["self"]],[R[46]]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[211],E,E,128,[[],["i"]]],[11,R[24],E,E,128,[[["self"]],[T]]],[11,R[25],E,E,128,[[["self"],[T]]]],[11,R[20],E,E,128,[[[U]],[R[3]]]],[11,R[21],E,E,128,[[],[R[3]]]],[11,R[45],E,E,128,[[["self"]],[T]]],[11,R[22],E,E,128,[[["self"]],[T]]],[11,R[26],E,E,128,[[["self"]],[R[46]]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[211],E,E,129,[[],["i"]]],[11,R[24],E,E,129,[[["self"]],[T]]],[11,R[25],E,E,129,[[["self"],[T]]]],[11,R[20],E,E,129,[[[U]],[R[3]]]],[11,R[21],E,E,129,[[],[R[3]]]],[11,R[45],E,E,129,[[["self"]],[T]]],[11,R[22],E,E,129,[[["self"]],[T]]],[11,R[26],E,E,129,[[["self"]],[R[46]]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[211],E,E,130,[[],["i"]]],[11,R[24],E,E,130,[[["self"]],[T]]],[11,R[25],E,E,130,[[["self"],[T]]]],[11,R[20],E,E,130,[[[U]],[R[3]]]],[11,R[21],E,E,130,[[],[R[3]]]],[11,R[45],E,E,130,[[["self"]],[T]]],[11,R[22],E,E,130,[[["self"]],[T]]],[11,R[26],E,E,130,[[["self"]],[R[46]]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[211],E,E,131,[[],["i"]]],[11,R[24],E,E,131,[[["self"]],[T]]],[11,R[25],E,E,131,[[["self"],[T]]]],[11,R[20],E,E,131,[[[U]],[R[3]]]],[11,R[21],E,E,131,[[],[R[3]]]],[11,R[45],E,E,131,[[["self"]],[T]]],[11,R[22],E,E,131,[[["self"]],[T]]],[11,R[26],E,E,131,[[["self"]],[R[46]]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[211],E,E,132,[[],["i"]]],[11,R[24],E,E,132,[[["self"]],[T]]],[11,R[25],E,E,132,[[["self"],[T]]]],[11,R[20],E,E,132,[[[U]],[R[3]]]],[11,R[21],E,E,132,[[],[R[3]]]],[11,R[45],E,E,132,[[["self"]],[T]]],[11,R[22],E,E,132,[[["self"]],[T]]],[11,R[26],E,E,132,[[["self"]],[R[46]]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[211],E,E,133,[[],["i"]]],[11,R[24],E,E,133,[[["self"]],[T]]],[11,R[25],E,E,133,[[["self"],[T]]]],[11,R[20],E,E,133,[[[U]],[R[3]]]],[11,R[21],E,E,133,[[],[R[3]]]],[11,R[45],E,E,133,[[["self"]],[T]]],[11,R[22],E,E,133,[[["self"]],[T]]],[11,R[26],E,E,133,[[["self"]],[R[46]]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[211],E,E,134,[[],["i"]]],[11,R[24],E,E,134,[[["self"]],[T]]],[11,R[25],E,E,134,[[["self"],[T]]]],[11,R[20],E,E,134,[[[U]],[R[3]]]],[11,R[21],E,E,134,[[],[R[3]]]],[11,R[45],E,E,134,[[["self"]],[T]]],[11,R[22],E,E,134,[[["self"]],[T]]],[11,R[26],E,E,134,[[["self"]],[R[46]]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[211],E,E,135,[[],["i"]]],[11,R[24],E,E,135,[[["self"]],[T]]],[11,R[25],E,E,135,[[["self"],[T]]]],[11,R[20],E,E,135,[[[U]],[R[3]]]],[11,R[21],E,E,135,[[],[R[3]]]],[11,R[45],E,E,135,[[["self"]],[T]]],[11,R[22],E,E,135,[[["self"]],[T]]],[11,R[26],E,E,135,[[["self"]],[R[46]]]],[11,"into",E,E,136,[[],[U]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[211],E,E,136,[[],["i"]]],[11,R[24],E,E,136,[[["self"]],[T]]],[11,R[25],E,E,136,[[["self"],[T]]]],[11,R[20],E,E,136,[[[U]],[R[3]]]],[11,R[21],E,E,136,[[],[R[3]]]],[11,R[45],E,E,136,[[["self"]],[T]]],[11,R[22],E,E,136,[[["self"]],[T]]],[11,R[26],E,E,136,[[["self"]],[R[46]]]],[11,"into",E,E,137,[[],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[211],E,E,137,[[],["i"]]],[11,R[24],E,E,137,[[["self"]],[T]]],[11,R[25],E,E,137,[[["self"],[T]]]],[11,R[20],E,E,137,[[[U]],[R[3]]]],[11,R[21],E,E,137,[[],[R[3]]]],[11,R[45],E,E,137,[[["self"]],[T]]],[11,R[22],E,E,137,[[["self"]],[T]]],[11,R[26],E,E,137,[[["self"]],[R[46]]]],[11,"into",E,E,138,[[],[U]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[211],E,E,138,[[],["i"]]],[11,R[24],E,E,138,[[["self"]],[T]]],[11,R[25],E,E,138,[[["self"],[T]]]],[11,R[20],E,E,138,[[[U]],[R[3]]]],[11,R[21],E,E,138,[[],[R[3]]]],[11,R[45],E,E,138,[[["self"]],[T]]],[11,R[22],E,E,138,[[["self"]],[T]]],[11,R[26],E,E,138,[[["self"]],[R[46]]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[211],E,E,139,[[],["i"]]],[11,R[24],E,E,139,[[["self"]],[T]]],[11,R[25],E,E,139,[[["self"],[T]]]],[11,R[20],E,E,139,[[[U]],[R[3]]]],[11,R[21],E,E,139,[[],[R[3]]]],[11,R[45],E,E,139,[[["self"]],[T]]],[11,R[22],E,E,139,[[["self"]],[T]]],[11,R[26],E,E,139,[[["self"]],[R[46]]]],[11,"into",E,E,140,[[],[U]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[211],E,E,140,[[],["i"]]],[11,R[24],E,E,140,[[["self"]],[T]]],[11,R[25],E,E,140,[[["self"],[T]]]],[11,R[20],E,E,140,[[[U]],[R[3]]]],[11,R[21],E,E,140,[[],[R[3]]]],[11,R[45],E,E,140,[[["self"]],[T]]],[11,R[22],E,E,140,[[["self"]],[T]]],[11,R[26],E,E,140,[[["self"]],[R[46]]]],[11,"into",E,E,141,[[],[U]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[211],E,E,141,[[],["i"]]],[11,R[24],E,E,141,[[["self"]],[T]]],[11,R[25],E,E,141,[[["self"],[T]]]],[11,R[20],E,E,141,[[[U]],[R[3]]]],[11,R[21],E,E,141,[[],[R[3]]]],[11,R[45],E,E,141,[[["self"]],[T]]],[11,R[22],E,E,141,[[["self"]],[T]]],[11,R[26],E,E,141,[[["self"]],[R[46]]]],[11,"into",E,E,142,[[],[U]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[211],E,E,142,[[],["i"]]],[11,R[24],E,E,142,[[["self"]],[T]]],[11,R[25],E,E,142,[[["self"],[T]]]],[11,R[20],E,E,142,[[[U]],[R[3]]]],[11,R[21],E,E,142,[[],[R[3]]]],[11,R[45],E,E,142,[[["self"]],[T]]],[11,R[22],E,E,142,[[["self"]],[T]]],[11,R[26],E,E,142,[[["self"]],[R[46]]]],[11,"into",E,E,143,[[],[U]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[211],E,E,143,[[],["i"]]],[11,R[24],E,E,143,[[["self"]],[T]]],[11,R[25],E,E,143,[[["self"],[T]]]],[11,R[20],E,E,143,[[[U]],[R[3]]]],[11,R[21],E,E,143,[[],[R[3]]]],[11,R[45],E,E,143,[[["self"]],[T]]],[11,R[22],E,E,143,[[["self"]],[T]]],[11,R[26],E,E,143,[[["self"]],[R[46]]]],[11,"into",E,E,144,[[],[U]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[211],E,E,144,[[],["i"]]],[11,R[24],E,E,144,[[["self"]],[T]]],[11,R[25],E,E,144,[[["self"],[T]]]],[11,R[20],E,E,144,[[[U]],[R[3]]]],[11,R[21],E,E,144,[[],[R[3]]]],[11,R[45],E,E,144,[[["self"]],[T]]],[11,R[22],E,E,144,[[["self"]],[T]]],[11,R[26],E,E,144,[[["self"]],[R[46]]]],[11,"into",E,E,145,[[],[U]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[211],E,E,145,[[],["i"]]],[11,R[24],E,E,145,[[["self"]],[T]]],[11,R[25],E,E,145,[[["self"],[T]]]],[11,R[20],E,E,145,[[[U]],[R[3]]]],[11,R[21],E,E,145,[[],[R[3]]]],[11,R[45],E,E,145,[[["self"]],[T]]],[11,R[22],E,E,145,[[["self"]],[T]]],[11,R[26],E,E,145,[[["self"]],[R[46]]]],[11,"into",E,E,146,[[],[U]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[211],E,E,146,[[],["i"]]],[11,R[24],E,E,146,[[["self"]],[T]]],[11,R[25],E,E,146,[[["self"],[T]]]],[11,R[20],E,E,146,[[[U]],[R[3]]]],[11,R[21],E,E,146,[[],[R[3]]]],[11,R[45],E,E,146,[[["self"]],[T]]],[11,R[22],E,E,146,[[["self"]],[T]]],[11,R[26],E,E,146,[[["self"]],[R[46]]]],[11,"into",E,E,147,[[],[U]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[211],E,E,147,[[],["i"]]],[11,R[24],E,E,147,[[["self"]],[T]]],[11,R[25],E,E,147,[[["self"],[T]]]],[11,R[20],E,E,147,[[[U]],[R[3]]]],[11,R[21],E,E,147,[[],[R[3]]]],[11,R[45],E,E,147,[[["self"]],[T]]],[11,R[22],E,E,147,[[["self"]],[T]]],[11,R[26],E,E,147,[[["self"]],[R[46]]]],[11,"into",E,E,148,[[],[U]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[211],E,E,148,[[],["i"]]],[11,R[24],E,E,148,[[["self"]],[T]]],[11,R[25],E,E,148,[[["self"],[T]]]],[11,R[20],E,E,148,[[[U]],[R[3]]]],[11,R[21],E,E,148,[[],[R[3]]]],[11,R[45],E,E,148,[[["self"]],[T]]],[11,R[22],E,E,148,[[["self"]],[T]]],[11,R[26],E,E,148,[[["self"]],[R[46]]]],[11,"into",E,E,149,[[],[U]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[211],E,E,149,[[],["i"]]],[11,R[24],E,E,149,[[["self"]],[T]]],[11,R[25],E,E,149,[[["self"],[T]]]],[11,R[20],E,E,149,[[[U]],[R[3]]]],[11,R[21],E,E,149,[[],[R[3]]]],[11,R[45],E,E,149,[[["self"]],[T]]],[11,R[22],E,E,149,[[["self"]],[T]]],[11,R[26],E,E,149,[[["self"]],[R[46]]]],[11,"into",R[402],E,150,[[],[U]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[24],E,E,150,[[["self"]],[T]]],[11,R[25],E,E,150,[[["self"],[T]]]],[11,R[20],E,E,150,[[[U]],[R[3]]]],[11,R[21],E,E,150,[[],[R[3]]]],[11,R[45],E,E,150,[[["self"]],[T]]],[11,R[22],E,E,150,[[["self"]],[T]]],[11,R[26],E,E,150,[[["self"]],[R[46]]]],[11,"into",E,E,151,[[],[U]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[24],E,E,151,[[["self"]],[T]]],[11,R[25],E,E,151,[[["self"],[T]]]],[11,R[20],E,E,151,[[[U]],[R[3]]]],[11,R[21],E,E,151,[[],[R[3]]]],[11,R[45],E,E,151,[[["self"]],[T]]],[11,R[22],E,E,151,[[["self"]],[T]]],[11,R[26],E,E,151,[[["self"]],[R[46]]]],[11,"into",R[403],E,152,[[],[U]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[24],E,E,152,[[["self"]],[T]]],[11,R[25],E,E,152,[[["self"],[T]]]],[11,R[20],E,E,152,[[[U]],[R[3]]]],[11,R[21],E,E,152,[[],[R[3]]]],[11,R[45],E,E,152,[[["self"]],[T]]],[11,R[22],E,E,152,[[["self"]],[T]]],[11,R[26],E,E,152,[[["self"]],[R[46]]]],[11,"into",E,E,153,[[],[U]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[24],E,E,153,[[["self"]],[T]]],[11,R[25],E,E,153,[[["self"],[T]]]],[11,R[20],E,E,153,[[[U]],[R[3]]]],[11,R[21],E,E,153,[[],[R[3]]]],[11,R[45],E,E,153,[[["self"]],[T]]],[11,R[22],E,E,153,[[["self"]],[T]]],[11,R[26],E,E,153,[[["self"]],[R[46]]]],[11,"into",E,E,154,[[],[U]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[24],E,E,154,[[["self"]],[T]]],[11,R[25],E,E,154,[[["self"],[T]]]],[11,R[20],E,E,154,[[[U]],[R[3]]]],[11,R[21],E,E,154,[[],[R[3]]]],[11,R[45],E,E,154,[[["self"]],[T]]],[11,R[22],E,E,154,[[["self"]],[T]]],[11,R[26],E,E,154,[[["self"]],[R[46]]]],[11,"into",R[404],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[24],E,E,44,[[["self"]],[T]]],[11,R[25],E,E,44,[[["self"],[T]]]],[11,R[20],E,E,44,[[[U]],[R[3]]]],[11,R[21],E,E,44,[[],[R[3]]]],[11,R[45],E,E,44,[[["self"]],[T]]],[11,R[22],E,E,44,[[["self"]],[T]]],[11,R[26],E,E,44,[[["self"]],[R[46]]]],[11,"into",E,E,155,[[],[U]]],[11,"from",E,E,155,[[[T]],[T]]],[11,R[24],E,E,155,[[["self"]],[T]]],[11,R[25],E,E,155,[[["self"],[T]]]],[11,R[78],E,E,155,[[["self"]],["string"]]],[11,R[20],E,E,155,[[[U]],[R[3]]]],[11,R[21],E,E,155,[[],[R[3]]]],[11,R[45],E,E,155,[[["self"]],[T]]],[11,R[22],E,E,155,[[["self"]],[T]]],[11,R[26],E,E,155,[[["self"]],[R[46]]]],[11,"into",E,E,156,[[],[U]]],[11,"from",E,E,156,[[[T]],[T]]],[11,R[24],E,E,156,[[["self"]],[T]]],[11,R[25],E,E,156,[[["self"],[T]]]],[11,R[78],E,E,156,[[["self"]],["string"]]],[11,R[20],E,E,156,[[[U]],[R[3]]]],[11,R[21],E,E,156,[[],[R[3]]]],[11,R[45],E,E,156,[[["self"]],[T]]],[11,R[22],E,E,156,[[["self"]],[T]]],[11,R[26],E,E,156,[[["self"]],[R[46]]]],[11,"into",E,E,157,[[],[U]]],[11,"from",E,E,157,[[],[T]]],[11,"from",E,E,157,[[[T]],[T]]],[11,R[24],E,E,157,[[["self"]],[T]]],[11,R[25],E,E,157,[[["self"],[T]]]],[11,R[78],E,E,157,[[["self"]],["string"]]],[11,R[20],E,E,157,[[[U]],[R[3]]]],[11,R[21],E,E,157,[[],[R[3]]]],[11,R[45],E,E,157,[[["self"]],[T]]],[11,R[22],E,E,157,[[["self"]],[T]]],[11,R[26],E,E,157,[[["self"]],[R[46]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[24],E,E,45,[[["self"]],[T]]],[11,R[25],E,E,45,[[["self"],[T]]]],[11,R[78],E,E,45,[[["self"]],["string"]]],[11,R[20],E,E,45,[[[U]],[R[3]]]],[11,R[21],E,E,45,[[],[R[3]]]],[11,R[45],E,E,45,[[["self"]],[T]]],[11,R[22],E,E,45,[[["self"]],[T]]],[11,R[26],E,E,45,[[["self"]],[R[46]]]],[11,"into",E,E,158,[[],[U]]],[11,"from",E,E,158,[[[T]],[T]]],[11,R[24],E,E,158,[[["self"]],[T]]],[11,R[25],E,E,158,[[["self"],[T]]]],[11,R[78],E,E,158,[[["self"]],["string"]]],[11,R[20],E,E,158,[[[U]],[R[3]]]],[11,R[21],E,E,158,[[],[R[3]]]],[11,R[45],E,E,158,[[["self"]],[T]]],[11,R[22],E,E,158,[[["self"]],[T]]],[11,R[26],E,E,158,[[["self"]],[R[46]]]],[11,"into",E,E,159,[[],[U]]],[11,"from",E,E,159,[[[T]],[T]]],[11,R[24],E,E,159,[[["self"]],[T]]],[11,R[25],E,E,159,[[["self"],[T]]]],[11,R[78],E,E,159,[[["self"]],["string"]]],[11,R[20],E,E,159,[[[U]],[R[3]]]],[11,R[21],E,E,159,[[],[R[3]]]],[11,R[45],E,E,159,[[["self"]],[T]]],[11,R[22],E,E,159,[[["self"]],[T]]],[11,R[26],E,E,159,[[["self"]],[R[46]]]],[11,"into",E,E,160,[[],[U]]],[11,"from",E,E,160,[[[T]],[T]]],[11,R[24],E,E,160,[[["self"]],[T]]],[11,R[25],E,E,160,[[["self"],[T]]]],[11,R[78],E,E,160,[[["self"]],["string"]]],[11,R[20],E,E,160,[[[U]],[R[3]]]],[11,R[21],E,E,160,[[],[R[3]]]],[11,R[45],E,E,160,[[["self"]],[T]]],[11,R[22],E,E,160,[[["self"]],[T]]],[11,R[26],E,E,160,[[["self"]],[R[46]]]],[11,"into",E,E,161,[[],[U]]],[11,"from",E,E,161,[[[T]],[T]]],[11,R[24],E,E,161,[[["self"]],[T]]],[11,R[25],E,E,161,[[["self"],[T]]]],[11,R[78],E,E,161,[[["self"]],["string"]]],[11,R[20],E,E,161,[[[U]],[R[3]]]],[11,R[21],E,E,161,[[],[R[3]]]],[11,R[45],E,E,161,[[["self"]],[T]]],[11,R[22],E,E,161,[[["self"]],[T]]],[11,R[26],E,E,161,[[["self"]],[R[46]]]],[11,"into",E,E,162,[[],[U]]],[11,"from",E,E,162,[[[T]],[T]]],[11,R[24],E,E,162,[[["self"]],[T]]],[11,R[25],E,E,162,[[["self"],[T]]]],[11,R[78],E,E,162,[[["self"]],["string"]]],[11,R[20],E,E,162,[[[U]],[R[3]]]],[11,R[21],E,E,162,[[],[R[3]]]],[11,R[45],E,E,162,[[["self"]],[T]]],[11,R[22],E,E,162,[[["self"]],[T]]],[11,R[26],E,E,162,[[["self"]],[R[46]]]],[11,"into",E,E,163,[[],[U]]],[11,"from",E,E,163,[[[T]],[T]]],[11,R[24],E,E,163,[[["self"]],[T]]],[11,R[25],E,E,163,[[["self"],[T]]]],[11,R[78],E,E,163,[[["self"]],["string"]]],[11,R[20],E,E,163,[[[U]],[R[3]]]],[11,R[21],E,E,163,[[],[R[3]]]],[11,R[45],E,E,163,[[["self"]],[T]]],[11,R[22],E,E,163,[[["self"]],[T]]],[11,R[26],E,E,163,[[["self"]],[R[46]]]],[11,"into",E,E,164,[[],[U]]],[11,"from",E,E,164,[[[T]],[T]]],[11,R[24],E,E,164,[[["self"]],[T]]],[11,R[25],E,E,164,[[["self"],[T]]]],[11,R[78],E,E,164,[[["self"]],["string"]]],[11,R[20],E,E,164,[[[U]],[R[3]]]],[11,R[21],E,E,164,[[],[R[3]]]],[11,R[45],E,E,164,[[["self"]],[T]]],[11,R[22],E,E,164,[[["self"]],[T]]],[11,R[26],E,E,164,[[["self"]],[R[46]]]],[11,"into",E,E,165,[[],[U]]],[11,"from",E,E,165,[[[T]],[T]]],[11,R[24],E,E,165,[[["self"]],[T]]],[11,R[25],E,E,165,[[["self"],[T]]]],[11,R[78],E,E,165,[[["self"]],["string"]]],[11,R[20],E,E,165,[[[U]],[R[3]]]],[11,R[21],E,E,165,[[],[R[3]]]],[11,R[45],E,E,165,[[["self"]],[T]]],[11,R[22],E,E,165,[[["self"]],[T]]],[11,R[26],E,E,165,[[["self"]],[R[46]]]],[11,"into",E,E,166,[[],[U]]],[11,"from",E,E,166,[[[T]],[T]]],[11,R[24],E,E,166,[[["self"]],[T]]],[11,R[25],E,E,166,[[["self"],[T]]]],[11,R[78],E,E,166,[[["self"]],["string"]]],[11,R[20],E,E,166,[[[U]],[R[3]]]],[11,R[21],E,E,166,[[],[R[3]]]],[11,R[45],E,E,166,[[["self"]],[T]]],[11,R[22],E,E,166,[[["self"]],[T]]],[11,R[26],E,E,166,[[["self"]],[R[46]]]],[11,"into",E,E,167,[[],[U]]],[11,"from",E,E,167,[[[T]],[T]]],[11,R[24],E,E,167,[[["self"]],[T]]],[11,R[25],E,E,167,[[["self"],[T]]]],[11,R[78],E,E,167,[[["self"]],["string"]]],[11,R[20],E,E,167,[[[U]],[R[3]]]],[11,R[21],E,E,167,[[],[R[3]]]],[11,R[45],E,E,167,[[["self"]],[T]]],[11,R[22],E,E,167,[[["self"]],[T]]],[11,R[26],E,E,167,[[["self"]],[R[46]]]],[11,"into",E,E,168,[[],[U]]],[11,"from",E,E,168,[[[T]],[T]]],[11,R[24],E,E,168,[[["self"]],[T]]],[11,R[25],E,E,168,[[["self"],[T]]]],[11,R[78],E,E,168,[[["self"]],["string"]]],[11,R[20],E,E,168,[[[U]],[R[3]]]],[11,R[21],E,E,168,[[],[R[3]]]],[11,R[45],E,E,168,[[["self"]],[T]]],[11,R[22],E,E,168,[[["self"]],[T]]],[11,R[26],E,E,168,[[["self"]],[R[46]]]],[11,"into",E,E,169,[[],[U]]],[11,"from",E,E,169,[[[T]],[T]]],[11,R[24],E,E,169,[[["self"]],[T]]],[11,R[25],E,E,169,[[["self"],[T]]]],[11,R[78],E,E,169,[[["self"]],["string"]]],[11,R[20],E,E,169,[[[U]],[R[3]]]],[11,R[21],E,E,169,[[],[R[3]]]],[11,R[45],E,E,169,[[["self"]],[T]]],[11,R[22],E,E,169,[[["self"]],[T]]],[11,R[26],E,E,169,[[["self"]],[R[46]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[24],E,E,46,[[["self"]],[T]]],[11,R[25],E,E,46,[[["self"],[T]]]],[11,R[20],E,E,46,[[[U]],[R[3]]]],[11,R[21],E,E,46,[[],[R[3]]]],[11,R[45],E,E,46,[[["self"]],[T]]],[11,R[22],E,E,46,[[["self"]],[T]]],[11,R[26],E,E,46,[[["self"]],[R[46]]]],[11,"into",R[405],E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[211],E,E,77,[[],["i"]]],[11,R[24],E,E,77,[[["self"]],[T]]],[11,R[25],E,E,77,[[["self"],[T]]]],[11,R[20],E,E,77,[[[U]],[R[3]]]],[11,R[21],E,E,77,[[],[R[3]]]],[11,R[45],E,E,77,[[["self"]],[T]]],[11,R[22],E,E,77,[[["self"]],[T]]],[11,R[26],E,E,77,[[["self"]],[R[46]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[211],E,E,78,[[],["i"]]],[11,R[24],E,E,78,[[["self"]],[T]]],[11,R[25],E,E,78,[[["self"],[T]]]],[11,R[20],E,E,78,[[[U]],[R[3]]]],[11,R[21],E,E,78,[[],[R[3]]]],[11,R[45],E,E,78,[[["self"]],[T]]],[11,R[22],E,E,78,[[["self"]],[T]]],[11,R[26],E,E,78,[[["self"]],[R[46]]]],[11,"into",E,E,170,[[],[U]]],[11,"from",E,E,170,[[[T]],[T]]],[11,R[24],E,E,170,[[["self"]],[T]]],[11,R[25],E,E,170,[[["self"],[T]]]],[11,R[20],E,E,170,[[[U]],[R[3]]]],[11,R[21],E,E,170,[[],[R[3]]]],[11,R[45],E,E,170,[[["self"]],[T]]],[11,R[22],E,E,170,[[["self"]],[T]]],[11,R[26],E,E,170,[[["self"]],[R[46]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[24],E,E,79,[[["self"]],[T]]],[11,R[25],E,E,79,[[["self"],[T]]]],[11,R[20],E,E,79,[[[U]],[R[3]]]],[11,R[21],E,E,79,[[],[R[3]]]],[11,R[45],E,E,79,[[["self"]],[T]]],[11,R[22],E,E,79,[[["self"]],[T]]],[11,R[26],E,E,79,[[["self"]],[R[46]]]],[11,"into",E,E,171,[[],[U]]],[11,"from",E,E,171,[[[T]],[T]]],[11,R[211],E,E,171,[[],["i"]]],[11,R[24],E,E,171,[[["self"]],[T]]],[11,R[25],E,E,171,[[["self"],[T]]]],[11,R[20],E,E,171,[[[U]],[R[3]]]],[11,R[21],E,E,171,[[],[R[3]]]],[11,R[45],E,E,171,[[["self"]],[T]]],[11,R[22],E,E,171,[[["self"]],[T]]],[11,R[26],E,E,171,[[["self"]],[R[46]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[24],E,E,80,[[["self"]],[T]]],[11,R[25],E,E,80,[[["self"],[T]]]],[11,R[20],E,E,80,[[[U]],[R[3]]]],[11,R[21],E,E,80,[[],[R[3]]]],[11,R[45],E,E,80,[[["self"]],[T]]],[11,R[22],E,E,80,[[["self"]],[T]]],[11,R[26],E,E,80,[[["self"]],[R[46]]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[24],E,E,82,[[["self"]],[T]]],[11,R[25],E,E,82,[[["self"],[T]]]],[11,R[20],E,E,82,[[[U]],[R[3]]]],[11,R[21],E,E,82,[[],[R[3]]]],[11,R[45],E,E,82,[[["self"]],[T]]],[11,R[22],E,E,82,[[["self"]],[T]]],[11,R[26],E,E,82,[[["self"]],[R[46]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[24],E,E,85,[[["self"]],[T]]],[11,R[25],E,E,85,[[["self"],[T]]]],[11,R[20],E,E,85,[[[U]],[R[3]]]],[11,R[21],E,E,85,[[],[R[3]]]],[11,R[45],E,E,85,[[["self"]],[T]]],[11,R[22],E,E,85,[[["self"]],[T]]],[11,R[26],E,E,85,[[["self"]],[R[46]]]],[11,"into",R[406],E,172,[[],[U]]],[11,"from",E,E,172,[[[T]],[T]]],[11,R[24],E,E,172,[[["self"]],[T]]],[11,R[25],E,E,172,[[["self"],[T]]]],[11,R[20],E,E,172,[[[U]],[R[3]]]],[11,R[21],E,E,172,[[],[R[3]]]],[11,R[45],E,E,172,[[["self"]],[T]]],[11,R[22],E,E,172,[[["self"]],[T]]],[11,R[26],E,E,172,[[["self"]],[R[46]]]],[11,"into",R[407],E,173,[[],[U]]],[11,"from",E,E,173,[[],[T]]],[11,"from",E,E,173,[[[T]],[T]]],[11,R[24],E,E,173,[[["self"]],[T]]],[11,R[25],E,E,173,[[["self"],[T]]]],[11,R[78],E,E,173,[[["self"]],["string"]]],[11,R[20],E,E,173,[[[U]],[R[3]]]],[11,R[21],E,E,173,[[],[R[3]]]],[11,R[45],E,E,173,[[["self"]],[T]]],[11,R[22],E,E,173,[[["self"]],[T]]],[11,R[26],E,E,173,[[["self"]],[R[46]]]],[11,"into",E,E,174,[[],[U]]],[11,"from",E,E,174,[[[T]],[T]]],[11,R[24],E,E,174,[[["self"]],[T]]],[11,R[25],E,E,174,[[["self"],[T]]]],[11,R[20],E,E,174,[[[U]],[R[3]]]],[11,R[21],E,E,174,[[],[R[3]]]],[11,R[45],E,E,174,[[["self"]],[T]]],[11,R[22],E,E,174,[[["self"]],[T]]],[11,R[26],E,E,174,[[["self"]],[R[46]]]],[11,"into",R[408],E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[211],E,E,86,[[],["i"]]],[11,R[24],E,E,86,[[["self"]],[T]]],[11,R[25],E,E,86,[[["self"],[T]]]],[11,R[20],E,E,86,[[[U]],[R[3]]]],[11,R[21],E,E,86,[[],[R[3]]]],[11,R[45],E,E,86,[[["self"]],[T]]],[11,R[22],E,E,86,[[["self"]],[T]]],[11,R[26],E,E,86,[[["self"]],[R[46]]]],[11,"into",E,E,175,[[],[U]]],[11,"from",E,E,175,[[[T]],[T]]],[11,R[211],E,E,175,[[],["i"]]],[11,R[24],E,E,175,[[["self"]],[T]]],[11,R[25],E,E,175,[[["self"],[T]]]],[11,R[20],E,E,175,[[[U]],[R[3]]]],[11,R[21],E,E,175,[[],[R[3]]]],[11,R[45],E,E,175,[[["self"]],[T]]],[11,R[22],E,E,175,[[["self"]],[T]]],[11,R[26],E,E,175,[[["self"]],[R[46]]]],[11,"into",E,E,176,[[],[U]]],[11,"from",E,E,176,[[[T]],[T]]],[11,R[211],E,E,176,[[],["i"]]],[11,R[20],E,E,176,[[[U]],[R[3]]]],[11,R[21],E,E,176,[[],[R[3]]]],[11,R[45],E,E,176,[[["self"]],[T]]],[11,R[22],E,E,176,[[["self"]],[T]]],[11,R[26],E,E,176,[[["self"]],[R[46]]]],[11,"into",E,E,177,[[],[U]]],[11,"from",E,E,177,[[[T]],[T]]],[11,R[211],E,E,177,[[],["i"]]],[11,R[24],E,E,177,[[["self"]],[T]]],[11,R[25],E,E,177,[[["self"],[T]]]],[11,R[20],E,E,177,[[[U]],[R[3]]]],[11,R[21],E,E,177,[[],[R[3]]]],[11,R[45],E,E,177,[[["self"]],[T]]],[11,R[22],E,E,177,[[["self"]],[T]]],[11,R[26],E,E,177,[[["self"]],[R[46]]]],[11,"into",R[409],E,178,[[],[U]]],[11,"from",E,E,178,[[[T]],[T]]],[11,R[211],E,E,178,[[],["i"]]],[11,R[24],E,E,178,[[["self"]],[T]]],[11,R[25],E,E,178,[[["self"],[T]]]],[11,R[20],E,E,178,[[[U]],[R[3]]]],[11,R[21],E,E,178,[[],[R[3]]]],[11,R[45],E,E,178,[[["self"]],[T]]],[11,R[22],E,E,178,[[["self"]],[T]]],[11,R[26],E,E,178,[[["self"]],[R[46]]]],[11,"into",E,E,179,[[],[U]]],[11,"from",E,E,179,[[[T]],[T]]],[11,R[211],E,E,179,[[],["i"]]],[11,R[24],E,E,179,[[["self"]],[T]]],[11,R[25],E,E,179,[[["self"],[T]]]],[11,R[20],E,E,179,[[[U]],[R[3]]]],[11,R[21],E,E,179,[[],[R[3]]]],[11,R[45],E,E,179,[[["self"]],[T]]],[11,R[22],E,E,179,[[["self"]],[T]]],[11,R[26],E,E,179,[[["self"]],[R[46]]]],[11,"into",E,E,180,[[],[U]]],[11,"from",E,E,180,[[[T]],[T]]],[11,R[211],E,E,180,[[],["i"]]],[11,R[24],E,E,180,[[["self"]],[T]]],[11,R[25],E,E,180,[[["self"],[T]]]],[11,R[20],E,E,180,[[[U]],[R[3]]]],[11,R[21],E,E,180,[[],[R[3]]]],[11,R[45],E,E,180,[[["self"]],[T]]],[11,R[22],E,E,180,[[["self"]],[T]]],[11,R[26],E,E,180,[[["self"]],[R[46]]]],[11,"into",E,E,181,[[],[U]]],[11,"from",E,E,181,[[[T]],[T]]],[11,R[211],E,E,181,[[],["i"]]],[11,R[20],E,E,181,[[[U]],[R[3]]]],[11,R[21],E,E,181,[[],[R[3]]]],[11,R[45],E,E,181,[[["self"]],[T]]],[11,R[22],E,E,181,[[["self"]],[T]]],[11,R[26],E,E,181,[[["self"]],[R[46]]]],[11,"into",E,E,182,[[],[U]]],[11,"from",E,E,182,[[[T]],[T]]],[11,R[211],E,E,182,[[],["i"]]],[11,R[20],E,E,182,[[[U]],[R[3]]]],[11,R[21],E,E,182,[[],[R[3]]]],[11,R[45],E,E,182,[[["self"]],[T]]],[11,R[22],E,E,182,[[["self"]],[T]]],[11,R[26],E,E,182,[[["self"]],[R[46]]]],[11,"into",E,E,183,[[],[U]]],[11,"from",E,E,183,[[[T]],[T]]],[11,R[211],E,E,183,[[],["i"]]],[11,R[20],E,E,183,[[[U]],[R[3]]]],[11,R[21],E,E,183,[[],[R[3]]]],[11,R[45],E,E,183,[[["self"]],[T]]],[11,R[22],E,E,183,[[["self"]],[T]]],[11,R[26],E,E,183,[[["self"]],[R[46]]]],[11,"into",E,E,184,[[],[U]]],[11,"from",E,E,184,[[[T]],[T]]],[11,R[211],E,E,184,[[],["i"]]],[11,R[24],E,E,184,[[["self"]],[T]]],[11,R[25],E,E,184,[[["self"],[T]]]],[11,R[20],E,E,184,[[[U]],[R[3]]]],[11,R[21],E,E,184,[[],[R[3]]]],[11,R[45],E,E,184,[[["self"]],[T]]],[11,R[22],E,E,184,[[["self"]],[T]]],[11,R[26],E,E,184,[[["self"]],[R[46]]]],[11,"into",E,E,185,[[],[U]]],[11,"from",E,E,185,[[[T]],[T]]],[11,R[211],E,E,185,[[],["i"]]],[11,R[20],E,E,185,[[[U]],[R[3]]]],[11,R[21],E,E,185,[[],[R[3]]]],[11,R[45],E,E,185,[[["self"]],[T]]],[11,R[22],E,E,185,[[["self"]],[T]]],[11,R[26],E,E,185,[[["self"]],[R[46]]]],[11,"into",E,E,186,[[],[U]]],[11,"from",E,E,186,[[[T]],[T]]],[11,R[211],E,E,186,[[],["i"]]],[11,R[20],E,E,186,[[[U]],[R[3]]]],[11,R[21],E,E,186,[[],[R[3]]]],[11,R[45],E,E,186,[[["self"]],[T]]],[11,R[22],E,E,186,[[["self"]],[T]]],[11,R[26],E,E,186,[[["self"]],[R[46]]]],[11,"into",E,E,187,[[],[U]]],[11,"from",E,E,187,[[[T]],[T]]],[11,R[211],E,E,187,[[],["i"]]],[11,R[20],E,E,187,[[[U]],[R[3]]]],[11,R[21],E,E,187,[[],[R[3]]]],[11,R[45],E,E,187,[[["self"]],[T]]],[11,R[22],E,E,187,[[["self"]],[T]]],[11,R[26],E,E,187,[[["self"]],[R[46]]]],[11,"into",E,E,188,[[],[U]]],[11,"from",E,E,188,[[[T]],[T]]],[11,R[211],E,E,188,[[],["i"]]],[11,R[20],E,E,188,[[[U]],[R[3]]]],[11,R[21],E,E,188,[[],[R[3]]]],[11,R[45],E,E,188,[[["self"]],[T]]],[11,R[22],E,E,188,[[["self"]],[T]]],[11,R[26],E,E,188,[[["self"]],[R[46]]]],[11,"into",E,E,189,[[],[U]]],[11,"from",E,E,189,[[[T]],[T]]],[11,R[211],E,E,189,[[],["i"]]],[11,R[24],E,E,189,[[["self"]],[T]]],[11,R[25],E,E,189,[[["self"],[T]]]],[11,R[20],E,E,189,[[[U]],[R[3]]]],[11,R[21],E,E,189,[[],[R[3]]]],[11,R[45],E,E,189,[[["self"]],[T]]],[11,R[22],E,E,189,[[["self"]],[T]]],[11,R[26],E,E,189,[[["self"]],[R[46]]]],[11,"into",E,E,190,[[],[U]]],[11,"from",E,E,190,[[[T]],[T]]],[11,R[211],E,E,190,[[],["i"]]],[11,R[20],E,E,190,[[[U]],[R[3]]]],[11,R[21],E,E,190,[[],[R[3]]]],[11,R[45],E,E,190,[[["self"]],[T]]],[11,R[22],E,E,190,[[["self"]],[T]]],[11,R[26],E,E,190,[[["self"]],[R[46]]]],[11,"into",E,E,191,[[],[U]]],[11,"from",E,E,191,[[[T]],[T]]],[11,R[211],E,E,191,[[],["i"]]],[11,R[24],E,E,191,[[["self"]],[T]]],[11,R[25],E,E,191,[[["self"],[T]]]],[11,R[20],E,E,191,[[[U]],[R[3]]]],[11,R[21],E,E,191,[[],[R[3]]]],[11,R[45],E,E,191,[[["self"]],[T]]],[11,R[22],E,E,191,[[["self"]],[T]]],[11,R[26],E,E,191,[[["self"]],[R[46]]]],[11,"into",E,E,192,[[],[U]]],[11,"from",E,E,192,[[[T]],[T]]],[11,R[211],E,E,192,[[],["i"]]],[11,R[20],E,E,192,[[[U]],[R[3]]]],[11,R[21],E,E,192,[[],[R[3]]]],[11,R[45],E,E,192,[[["self"]],[T]]],[11,R[22],E,E,192,[[["self"]],[T]]],[11,R[26],E,E,192,[[["self"]],[R[46]]]],[11,"into",E,E,193,[[],[U]]],[11,"from",E,E,193,[[[T]],[T]]],[11,R[211],E,E,193,[[],["i"]]],[11,R[24],E,E,193,[[["self"]],[T]]],[11,R[25],E,E,193,[[["self"],[T]]]],[11,R[20],E,E,193,[[[U]],[R[3]]]],[11,R[21],E,E,193,[[],[R[3]]]],[11,R[45],E,E,193,[[["self"]],[T]]],[11,R[22],E,E,193,[[["self"]],[T]]],[11,R[26],E,E,193,[[["self"]],[R[46]]]],[11,"into",E,E,194,[[],[U]]],[11,"from",E,E,194,[[[T]],[T]]],[11,R[211],E,E,194,[[],["i"]]],[11,R[20],E,E,194,[[[U]],[R[3]]]],[11,R[21],E,E,194,[[],[R[3]]]],[11,R[45],E,E,194,[[["self"]],[T]]],[11,R[22],E,E,194,[[["self"]],[T]]],[11,R[26],E,E,194,[[["self"]],[R[46]]]],[11,"into",E,E,195,[[],[U]]],[11,"from",E,E,195,[[[T]],[T]]],[11,R[211],E,E,195,[[],["i"]]],[11,R[24],E,E,195,[[["self"]],[T]]],[11,R[25],E,E,195,[[["self"],[T]]]],[11,R[20],E,E,195,[[[U]],[R[3]]]],[11,R[21],E,E,195,[[],[R[3]]]],[11,R[45],E,E,195,[[["self"]],[T]]],[11,R[22],E,E,195,[[["self"]],[T]]],[11,R[26],E,E,195,[[["self"]],[R[46]]]],[11,"into",E,E,196,[[],[U]]],[11,"from",E,E,196,[[[T]],[T]]],[11,R[211],E,E,196,[[],["i"]]],[11,R[20],E,E,196,[[[U]],[R[3]]]],[11,R[21],E,E,196,[[],[R[3]]]],[11,R[45],E,E,196,[[["self"]],[T]]],[11,R[22],E,E,196,[[["self"]],[T]]],[11,R[26],E,E,196,[[["self"]],[R[46]]]],[11,"into",R[370],E,197,[[],[U]]],[11,"from",E,E,197,[[[T]],[T]]],[11,R[24],E,E,197,[[["self"]],[T]]],[11,R[25],E,E,197,[[["self"],[T]]]],[11,R[78],E,E,197,[[["self"]],["string"]]],[11,R[20],E,E,197,[[[U]],[R[3]]]],[11,R[21],E,E,197,[[],[R[3]]]],[11,R[45],E,E,197,[[["self"]],[T]]],[11,R[22],E,E,197,[[["self"]],[T]]],[11,R[26],E,E,197,[[["self"]],[R[46]]]],[11,"into",E,E,198,[[],[U]]],[11,"from",E,E,198,[[[T]],[T]]],[11,R[211],E,E,198,[[],["i"]]],[11,R[24],E,E,198,[[["self"]],[T]]],[11,R[25],E,E,198,[[["self"],[T]]]],[11,R[20],E,E,198,[[[U]],[R[3]]]],[11,R[21],E,E,198,[[],[R[3]]]],[11,R[45],E,E,198,[[["self"]],[T]]],[11,R[22],E,E,198,[[["self"]],[T]]],[11,R[26],E,E,198,[[["self"]],[R[46]]]],[11,"into",E,E,199,[[],[U]]],[11,"from",E,E,199,[[[T]],[T]]],[11,R[211],E,E,199,[[],["i"]]],[11,R[24],E,E,199,[[["self"]],[T]]],[11,R[25],E,E,199,[[["self"],[T]]]],[11,R[20],E,E,199,[[[U]],[R[3]]]],[11,R[21],E,E,199,[[],[R[3]]]],[11,R[45],E,E,199,[[["self"]],[T]]],[11,R[22],E,E,199,[[["self"]],[T]]],[11,R[26],E,E,199,[[["self"]],[R[46]]]],[11,"into",E,E,200,[[],[U]]],[11,"from",E,E,200,[[[T]],[T]]],[11,R[211],E,E,200,[[],["i"]]],[11,R[24],E,E,200,[[["self"]],[T]]],[11,R[25],E,E,200,[[["self"],[T]]]],[11,R[20],E,E,200,[[[U]],[R[3]]]],[11,R[21],E,E,200,[[],[R[3]]]],[11,R[45],E,E,200,[[["self"]],[T]]],[11,R[22],E,E,200,[[["self"]],[T]]],[11,R[26],E,E,200,[[["self"]],[R[46]]]],[11,"into",E,E,201,[[],[U]]],[11,"from",E,E,201,[[[T]],[T]]],[11,R[211],E,E,201,[[],["i"]]],[11,R[24],E,E,201,[[["self"]],[T]]],[11,R[25],E,E,201,[[["self"],[T]]]],[11,R[20],E,E,201,[[[U]],[R[3]]]],[11,R[21],E,E,201,[[],[R[3]]]],[11,R[45],E,E,201,[[["self"]],[T]]],[11,R[22],E,E,201,[[["self"]],[T]]],[11,R[26],E,E,201,[[["self"]],[R[46]]]],[11,"into",E,E,202,[[],[U]]],[11,"from",E,E,202,[[[T]],[T]]],[11,R[211],E,E,202,[[],["i"]]],[11,R[24],E,E,202,[[["self"]],[T]]],[11,R[25],E,E,202,[[["self"],[T]]]],[11,R[20],E,E,202,[[[U]],[R[3]]]],[11,R[21],E,E,202,[[],[R[3]]]],[11,R[45],E,E,202,[[["self"]],[T]]],[11,R[22],E,E,202,[[["self"]],[T]]],[11,R[26],E,E,202,[[["self"]],[R[46]]]],[11,"into",E,E,203,[[],[U]]],[11,"from",E,E,203,[[[T]],[T]]],[11,R[211],E,E,203,[[],["i"]]],[11,R[24],E,E,203,[[["self"]],[T]]],[11,R[25],E,E,203,[[["self"],[T]]]],[11,R[20],E,E,203,[[[U]],[R[3]]]],[11,R[21],E,E,203,[[],[R[3]]]],[11,R[45],E,E,203,[[["self"]],[T]]],[11,R[22],E,E,203,[[["self"]],[T]]],[11,R[26],E,E,203,[[["self"]],[R[46]]]],[11,"into",E,E,204,[[],[U]]],[11,"from",E,E,204,[[[T]],[T]]],[11,R[211],E,E,204,[[],["i"]]],[11,R[24],E,E,204,[[["self"]],[T]]],[11,R[25],E,E,204,[[["self"],[T]]]],[11,R[20],E,E,204,[[[U]],[R[3]]]],[11,R[21],E,E,204,[[],[R[3]]]],[11,R[45],E,E,204,[[["self"]],[T]]],[11,R[22],E,E,204,[[["self"]],[T]]],[11,R[26],E,E,204,[[["self"]],[R[46]]]],[11,"into",E,E,205,[[],[U]]],[11,"from",E,E,205,[[[T]],[T]]],[11,R[211],E,E,205,[[],["i"]]],[11,R[24],E,E,205,[[["self"]],[T]]],[11,R[25],E,E,205,[[["self"],[T]]]],[11,R[20],E,E,205,[[[U]],[R[3]]]],[11,R[21],E,E,205,[[],[R[3]]]],[11,R[45],E,E,205,[[["self"]],[T]]],[11,R[22],E,E,205,[[["self"]],[T]]],[11,R[26],E,E,205,[[["self"]],[R[46]]]],[11,"into",E,E,206,[[],[U]]],[11,"from",E,E,206,[[[T]],[T]]],[11,R[211],E,E,206,[[],["i"]]],[11,R[24],E,E,206,[[["self"]],[T]]],[11,R[25],E,E,206,[[["self"],[T]]]],[11,R[20],E,E,206,[[[U]],[R[3]]]],[11,R[21],E,E,206,[[],[R[3]]]],[11,R[45],E,E,206,[[["self"]],[T]]],[11,R[22],E,E,206,[[["self"]],[T]]],[11,R[26],E,E,206,[[["self"]],[R[46]]]],[11,"into",E,E,207,[[],[U]]],[11,"from",E,E,207,[[[T]],[T]]],[11,R[211],E,E,207,[[],["i"]]],[11,R[24],E,E,207,[[["self"]],[T]]],[11,R[25],E,E,207,[[["self"],[T]]]],[11,R[20],E,E,207,[[[U]],[R[3]]]],[11,R[21],E,E,207,[[],[R[3]]]],[11,R[45],E,E,207,[[["self"]],[T]]],[11,R[22],E,E,207,[[["self"]],[T]]],[11,R[26],E,E,207,[[["self"]],[R[46]]]],[11,"into",E,E,208,[[],[U]]],[11,"from",E,E,208,[[[T]],[T]]],[11,R[211],E,E,208,[[],["i"]]],[11,R[24],E,E,208,[[["self"]],[T]]],[11,R[25],E,E,208,[[["self"],[T]]]],[11,R[20],E,E,208,[[[U]],[R[3]]]],[11,R[21],E,E,208,[[],[R[3]]]],[11,R[45],E,E,208,[[["self"]],[T]]],[11,R[22],E,E,208,[[["self"]],[T]]],[11,R[26],E,E,208,[[["self"]],[R[46]]]],[11,"into",E,E,209,[[],[U]]],[11,"from",E,E,209,[[[T]],[T]]],[11,R[211],E,E,209,[[],["i"]]],[11,R[24],E,E,209,[[["self"]],[T]]],[11,R[25],E,E,209,[[["self"],[T]]]],[11,R[20],E,E,209,[[[U]],[R[3]]]],[11,R[21],E,E,209,[[],[R[3]]]],[11,R[45],E,E,209,[[["self"]],[T]]],[11,R[22],E,E,209,[[["self"]],[T]]],[11,R[26],E,E,209,[[["self"]],[R[46]]]],[11,"into",E,E,210,[[],[U]]],[11,"from",E,E,210,[[[T]],[T]]],[11,R[211],E,E,210,[[],["i"]]],[11,R[24],E,E,210,[[["self"]],[T]]],[11,R[25],E,E,210,[[["self"],[T]]]],[11,R[20],E,E,210,[[[U]],[R[3]]]],[11,R[21],E,E,210,[[],[R[3]]]],[11,R[45],E,E,210,[[["self"]],[T]]],[11,R[22],E,E,210,[[["self"]],[T]]],[11,R[26],E,E,210,[[["self"]],[R[46]]]],[11,"into",E,E,211,[[],[U]]],[11,"from",E,E,211,[[[T]],[T]]],[11,R[211],E,E,211,[[],["i"]]],[11,R[24],E,E,211,[[["self"]],[T]]],[11,R[25],E,E,211,[[["self"],[T]]]],[11,R[20],E,E,211,[[[U]],[R[3]]]],[11,R[21],E,E,211,[[],[R[3]]]],[11,R[45],E,E,211,[[["self"]],[T]]],[11,R[22],E,E,211,[[["self"]],[T]]],[11,R[26],E,E,211,[[["self"]],[R[46]]]],[11,"into",E,E,212,[[],[U]]],[11,"from",E,E,212,[[[T]],[T]]],[11,R[211],E,E,212,[[],["i"]]],[11,R[24],E,E,212,[[["self"]],[T]]],[11,R[25],E,E,212,[[["self"],[T]]]],[11,R[20],E,E,212,[[[U]],[R[3]]]],[11,R[21],E,E,212,[[],[R[3]]]],[11,R[45],E,E,212,[[["self"]],[T]]],[11,R[22],E,E,212,[[["self"]],[T]]],[11,R[26],E,E,212,[[["self"]],[R[46]]]],[11,"into",E,E,213,[[],[U]]],[11,"from",E,E,213,[[[T]],[T]]],[11,R[24],E,E,213,[[["self"]],[T]]],[11,R[25],E,E,213,[[["self"],[T]]]],[11,R[78],E,E,213,[[["self"]],["string"]]],[11,R[20],E,E,213,[[[U]],[R[3]]]],[11,R[21],E,E,213,[[],[R[3]]]],[11,R[45],E,E,213,[[["self"]],[T]]],[11,R[22],E,E,213,[[["self"]],[T]]],[11,R[26],E,E,213,[[["self"]],[R[46]]]],[11,"into",E,E,214,[[],[U]]],[11,"from",E,E,214,[[[T]],[T]]],[11,R[211],E,E,214,[[],["i"]]],[11,R[24],E,E,214,[[["self"]],[T]]],[11,R[25],E,E,214,[[["self"],[T]]]],[11,R[20],E,E,214,[[[U]],[R[3]]]],[11,R[21],E,E,214,[[],[R[3]]]],[11,R[45],E,E,214,[[["self"]],[T]]],[11,R[22],E,E,214,[[["self"]],[T]]],[11,R[26],E,E,214,[[["self"]],[R[46]]]],[11,"into",R[410],E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[24],E,E,92,[[["self"]],[T]]],[11,R[25],E,E,92,[[["self"],[T]]]],[11,R[20],E,E,92,[[[U]],[R[3]]]],[11,R[21],E,E,92,[[],[R[3]]]],[11,R[45],E,E,92,[[["self"]],[T]]],[11,R[22],E,E,92,[[["self"]],[T]]],[11,R[26],E,E,92,[[["self"]],[R[46]]]],[11,"into",E,E,215,[[],[U]]],[11,"from",E,E,215,[[[T]],[T]]],[11,R[24],E,E,215,[[["self"]],[T]]],[11,R[25],E,E,215,[[["self"],[T]]]],[11,R[20],E,E,215,[[[U]],[R[3]]]],[11,R[21],E,E,215,[[],[R[3]]]],[11,R[45],E,E,215,[[["self"]],[T]]],[11,R[22],E,E,215,[[["self"]],[T]]],[11,R[26],E,E,215,[[["self"]],[R[46]]]],[11,"into",E,E,216,[[],[U]]],[11,"from",E,E,216,[[[T]],[T]]],[11,R[24],E,E,216,[[["self"]],[T]]],[11,R[25],E,E,216,[[["self"],[T]]]],[11,R[20],E,E,216,[[[U]],[R[3]]]],[11,R[21],E,E,216,[[],[R[3]]]],[11,R[45],E,E,216,[[["self"]],[T]]],[11,R[22],E,E,216,[[["self"]],[T]]],[11,R[26],E,E,216,[[["self"]],[R[46]]]],[11,"into",E,E,217,[[],[U]]],[11,"from",E,E,217,[[[T]],[T]]],[11,R[24],E,E,217,[[["self"]],[T]]],[11,R[25],E,E,217,[[["self"],[T]]]],[11,R[20],E,E,217,[[[U]],[R[3]]]],[11,R[21],E,E,217,[[],[R[3]]]],[11,R[45],E,E,217,[[["self"]],[T]]],[11,R[22],E,E,217,[[["self"]],[T]]],[11,R[26],E,E,217,[[["self"]],[R[46]]]],[11,"into",E,E,218,[[],[U]]],[11,"from",E,E,218,[[[T]],[T]]],[11,R[24],E,E,218,[[["self"]],[T]]],[11,R[25],E,E,218,[[["self"],[T]]]],[11,R[20],E,E,218,[[[U]],[R[3]]]],[11,R[21],E,E,218,[[],[R[3]]]],[11,R[45],E,E,218,[[["self"]],[T]]],[11,R[22],E,E,218,[[["self"]],[T]]],[11,R[26],E,E,218,[[["self"]],[R[46]]]],[11,"into",R[370],E,219,[[],[U]]],[11,"from",E,E,219,[[[T]],[T]]],[11,R[211],E,E,219,[[],["i"]]],[11,R[24],E,E,219,[[["self"]],[T]]],[11,R[25],E,E,219,[[["self"],[T]]]],[11,R[20],E,E,219,[[[U]],[R[3]]]],[11,R[21],E,E,219,[[],[R[3]]]],[11,R[45],E,E,219,[[["self"]],[T]]],[11,R[22],E,E,219,[[["self"]],[T]]],[11,R[26],E,E,219,[[["self"]],[R[46]]]],[11,"into",E,E,220,[[],[U]]],[11,"from",E,E,220,[[[T]],[T]]],[11,R[211],E,E,220,[[],["i"]]],[11,R[24],E,E,220,[[["self"]],[T]]],[11,R[25],E,E,220,[[["self"],[T]]]],[11,R[20],E,E,220,[[[U]],[R[3]]]],[11,R[21],E,E,220,[[],[R[3]]]],[11,R[45],E,E,220,[[["self"]],[T]]],[11,R[22],E,E,220,[[["self"]],[T]]],[11,R[26],E,E,220,[[["self"]],[R[46]]]],[11,"into",E,E,221,[[],[U]]],[11,"from",E,E,221,[[[T]],[T]]],[11,R[211],E,E,221,[[],["i"]]],[11,R[24],E,E,221,[[["self"]],[T]]],[11,R[25],E,E,221,[[["self"],[T]]]],[11,R[78],E,E,221,[[["self"]],["string"]]],[11,R[20],E,E,221,[[[U]],[R[3]]]],[11,R[21],E,E,221,[[],[R[3]]]],[11,R[45],E,E,221,[[["self"]],[T]]],[11,R[22],E,E,221,[[["self"]],[T]]],[11,R[26],E,E,221,[[["self"]],[R[46]]]],[11,"into",E,E,222,[[],[U]]],[11,"from",E,E,222,[[[T]],[T]]],[11,R[211],E,E,222,[[],["i"]]],[11,R[24],E,E,222,[[["self"]],[T]]],[11,R[25],E,E,222,[[["self"],[T]]]],[11,R[78],E,E,222,[[["self"]],["string"]]],[11,R[20],E,E,222,[[[U]],[R[3]]]],[11,R[21],E,E,222,[[],[R[3]]]],[11,R[45],E,E,222,[[["self"]],[T]]],[11,R[22],E,E,222,[[["self"]],[T]]],[11,R[26],E,E,222,[[["self"]],[R[46]]]],[11,"into",E,E,223,[[],[U]]],[11,"from",E,E,223,[[[T]],[T]]],[11,R[211],E,E,223,[[],["i"]]],[11,R[24],E,E,223,[[["self"]],[T]]],[11,R[25],E,E,223,[[["self"],[T]]]],[11,R[78],E,E,223,[[["self"]],["string"]]],[11,R[20],E,E,223,[[[U]],[R[3]]]],[11,R[21],E,E,223,[[],[R[3]]]],[11,R[45],E,E,223,[[["self"]],[T]]],[11,R[22],E,E,223,[[["self"]],[T]]],[11,R[26],E,E,223,[[["self"]],[R[46]]]],[11,"into",R[391],E,224,[[],[U]]],[11,"from",E,E,224,[[[T]],[T]]],[11,R[211],E,E,224,[[],["i"]]],[11,R[24],E,E,224,[[["self"]],[T]]],[11,R[25],E,E,224,[[["self"],[T]]]],[11,R[20],E,E,224,[[[U]],[R[3]]]],[11,R[21],E,E,224,[[],[R[3]]]],[11,R[45],E,E,224,[[["self"]],[T]]],[11,R[22],E,E,224,[[["self"]],[T]]],[11,R[26],E,E,224,[[["self"]],[R[46]]]],[11,"into",R[411],E,225,[[],[U]]],[11,"from",E,E,225,[[[T]],[T]]],[11,R[211],E,E,225,[[],["i"]]],[11,R[24],E,E,225,[[["self"]],[T]]],[11,R[25],E,E,225,[[["self"],[T]]]],[11,R[20],E,E,225,[[[U]],[R[3]]]],[11,R[21],E,E,225,[[],[R[3]]]],[11,R[45],E,E,225,[[["self"]],[T]]],[11,R[22],E,E,225,[[["self"]],[T]]],[11,R[26],E,E,225,[[["self"]],[R[46]]]],[11,"into",E,E,226,[[],[U]]],[11,"from",E,E,226,[[[T]],[T]]],[11,R[211],E,E,226,[[],["i"]]],[11,R[20],E,E,226,[[[U]],[R[3]]]],[11,R[21],E,E,226,[[],[R[3]]]],[11,R[45],E,E,226,[[["self"]],[T]]],[11,R[22],E,E,226,[[["self"]],[T]]],[11,R[26],E,E,226,[[["self"]],[R[46]]]],[11,"into",E,E,227,[[],[U]]],[11,"from",E,E,227,[[[T]],[T]]],[11,R[211],E,E,227,[[],["i"]]],[11,R[20],E,E,227,[[[U]],[R[3]]]],[11,R[21],E,E,227,[[],[R[3]]]],[11,R[45],E,E,227,[[["self"]],[T]]],[11,R[22],E,E,227,[[["self"]],[T]]],[11,R[26],E,E,227,[[["self"]],[R[46]]]],[11,"into",E,E,228,[[],[U]]],[11,"from",E,E,228,[[[T]],[T]]],[11,R[211],E,E,228,[[],["i"]]],[11,R[20],E,E,228,[[[U]],[R[3]]]],[11,R[21],E,E,228,[[],[R[3]]]],[11,R[45],E,E,228,[[["self"]],[T]]],[11,R[22],E,E,228,[[["self"]],[T]]],[11,R[26],E,E,228,[[["self"]],[R[46]]]],[11,"into",R[412],E,229,[[],[U]]],[11,"from",E,E,229,[[[T]],[T]]],[11,R[211],E,E,229,[[],["i"]]],[11,R[24],E,E,229,[[["self"]],[T]]],[11,R[25],E,E,229,[[["self"],[T]]]],[11,R[20],E,E,229,[[[U]],[R[3]]]],[11,R[21],E,E,229,[[],[R[3]]]],[11,R[45],E,E,229,[[["self"]],[T]]],[11,R[22],E,E,229,[[["self"]],[T]]],[11,R[26],E,E,229,[[["self"]],[R[46]]]],[11,"into",E,E,230,[[],[U]]],[11,"from",E,E,230,[[[T]],[T]]],[11,R[211],E,E,230,[[],["i"]]],[11,R[24],E,E,230,[[["self"]],[T]]],[11,R[25],E,E,230,[[["self"],[T]]]],[11,R[20],E,E,230,[[[U]],[R[3]]]],[11,R[21],E,E,230,[[],[R[3]]]],[11,R[45],E,E,230,[[["self"]],[T]]],[11,R[22],E,E,230,[[["self"]],[T]]],[11,R[26],E,E,230,[[["self"]],[R[46]]]],[11,"into",E,E,231,[[],[U]]],[11,"from",E,E,231,[[[T]],[T]]],[11,R[211],E,E,231,[[],["i"]]],[11,R[24],E,E,231,[[["self"]],[T]]],[11,R[25],E,E,231,[[["self"],[T]]]],[11,R[20],E,E,231,[[[U]],[R[3]]]],[11,R[21],E,E,231,[[],[R[3]]]],[11,R[45],E,E,231,[[["self"]],[T]]],[11,R[22],E,E,231,[[["self"]],[T]]],[11,R[26],E,E,231,[[["self"]],[R[46]]]],[11,"into",E,E,232,[[],[U]]],[11,"from",E,E,232,[[[T]],[T]]],[11,R[211],E,E,232,[[],["i"]]],[11,R[20],E,E,232,[[[U]],[R[3]]]],[11,R[21],E,E,232,[[],[R[3]]]],[11,R[45],E,E,232,[[["self"]],[T]]],[11,R[22],E,E,232,[[["self"]],[T]]],[11,R[26],E,E,232,[[["self"]],[R[46]]]],[11,"into",E,E,233,[[],[U]]],[11,"from",E,E,233,[[[T]],[T]]],[11,R[211],E,E,233,[[],["i"]]],[11,R[24],E,E,233,[[["self"]],[T]]],[11,R[25],E,E,233,[[["self"],[T]]]],[11,R[20],E,E,233,[[[U]],[R[3]]]],[11,R[21],E,E,233,[[],[R[3]]]],[11,R[45],E,E,233,[[["self"]],[T]]],[11,R[22],E,E,233,[[["self"]],[T]]],[11,R[26],E,E,233,[[["self"]],[R[46]]]],[11,"into",E,E,234,[[],[U]]],[11,"from",E,E,234,[[[T]],[T]]],[11,R[211],E,E,234,[[],["i"]]],[11,R[24],E,E,234,[[["self"]],[T]]],[11,R[25],E,E,234,[[["self"],[T]]]],[11,R[20],E,E,234,[[[U]],[R[3]]]],[11,R[21],E,E,234,[[],[R[3]]]],[11,R[45],E,E,234,[[["self"]],[T]]],[11,R[22],E,E,234,[[["self"]],[T]]],[11,R[26],E,E,234,[[["self"]],[R[46]]]],[11,"into",E,E,235,[[],[U]]],[11,"from",E,E,235,[[[T]],[T]]],[11,R[211],E,E,235,[[],["i"]]],[11,R[20],E,E,235,[[[U]],[R[3]]]],[11,R[21],E,E,235,[[],[R[3]]]],[11,R[45],E,E,235,[[["self"]],[T]]],[11,R[22],E,E,235,[[["self"]],[T]]],[11,R[26],E,E,235,[[["self"]],[R[46]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[20],E,E,95,[[[U]],[R[3]]]],[11,R[21],E,E,95,[[],[R[3]]]],[11,R[45],E,E,95,[[["self"]],[T]]],[11,R[22],E,E,95,[[["self"]],[T]]],[11,R[26],E,E,95,[[["self"]],[R[46]]]],[11,"into",E,E,236,[[],[U]]],[11,"from",E,E,236,[[[T]],[T]]],[11,R[20],E,E,236,[[[U]],[R[3]]]],[11,R[21],E,E,236,[[],[R[3]]]],[11,R[45],E,E,236,[[["self"]],[T]]],[11,R[22],E,E,236,[[["self"]],[T]]],[11,R[26],E,E,236,[[["self"]],[R[46]]]],[11,"into",E,E,237,[[],[U]]],[11,"from",E,E,237,[[[T]],[T]]],[11,R[20],E,E,237,[[[U]],[R[3]]]],[11,R[21],E,E,237,[[],[R[3]]]],[11,R[45],E,E,237,[[["self"]],[T]]],[11,R[22],E,E,237,[[["self"]],[T]]],[11,R[26],E,E,237,[[["self"]],[R[46]]]],[11,"into",E,E,238,[[],[U]]],[11,"from",E,E,238,[[[T]],[T]]],[11,R[211],E,E,238,[[],["i"]]],[11,R[20],E,E,238,[[[U]],[R[3]]]],[11,R[21],E,E,238,[[],[R[3]]]],[11,R[45],E,E,238,[[["self"]],[T]]],[11,R[22],E,E,238,[[["self"]],[T]]],[11,R[26],E,E,238,[[["self"]],[R[46]]]],[11,"into",E,E,239,[[],[U]]],[11,"from",E,E,239,[[[T]],[T]]],[11,R[211],E,E,239,[[],["i"]]],[11,R[20],E,E,239,[[[U]],[R[3]]]],[11,R[21],E,E,239,[[],[R[3]]]],[11,R[45],E,E,239,[[["self"]],[T]]],[11,R[22],E,E,239,[[["self"]],[T]]],[11,R[26],E,E,239,[[["self"]],[R[46]]]],[11,"into",R[413],E,240,[[],[U]]],[11,"from",E,E,240,[[[T]],[T]]],[11,R[211],E,E,240,[[],["i"]]],[11,R[24],E,E,240,[[["self"]],[T]]],[11,R[25],E,E,240,[[["self"],[T]]]],[11,R[20],E,E,240,[[[U]],[R[3]]]],[11,R[21],E,E,240,[[],[R[3]]]],[11,R[45],E,E,240,[[["self"]],[T]]],[11,R[22],E,E,240,[[["self"]],[T]]],[11,R[26],E,E,240,[[["self"]],[R[46]]]],[11,"into",E,E,241,[[],[U]]],[11,"from",E,E,241,[[[T]],[T]]],[11,R[211],E,E,241,[[],["i"]]],[11,R[24],E,E,241,[[["self"]],[T]]],[11,R[25],E,E,241,[[["self"],[T]]]],[11,R[20],E,E,241,[[[U]],[R[3]]]],[11,R[21],E,E,241,[[],[R[3]]]],[11,R[45],E,E,241,[[["self"]],[T]]],[11,R[22],E,E,241,[[["self"]],[T]]],[11,R[26],E,E,241,[[["self"]],[R[46]]]],[11,"into",E,E,242,[[],[U]]],[11,"from",E,E,242,[[[T]],[T]]],[11,R[211],E,E,242,[[],["i"]]],[11,R[24],E,E,242,[[["self"]],[T]]],[11,R[25],E,E,242,[[["self"],[T]]]],[11,R[20],E,E,242,[[[U]],[R[3]]]],[11,R[21],E,E,242,[[],[R[3]]]],[11,R[45],E,E,242,[[["self"]],[T]]],[11,R[22],E,E,242,[[["self"]],[T]]],[11,R[26],E,E,242,[[["self"]],[R[46]]]],[11,"into",E,E,243,[[],[U]]],[11,"from",E,E,243,[[[T]],[T]]],[11,R[211],E,E,243,[[],["i"]]],[11,R[24],E,E,243,[[["self"]],[T]]],[11,R[25],E,E,243,[[["self"],[T]]]],[11,R[20],E,E,243,[[[U]],[R[3]]]],[11,R[21],E,E,243,[[],[R[3]]]],[11,R[45],E,E,243,[[["self"]],[T]]],[11,R[22],E,E,243,[[["self"]],[T]]],[11,R[26],E,E,243,[[["self"]],[R[46]]]],[11,"into",E,E,244,[[],[U]]],[11,"from",E,E,244,[[[T]],[T]]],[11,R[211],E,E,244,[[],["i"]]],[11,R[24],E,E,244,[[["self"]],[T]]],[11,R[25],E,E,244,[[["self"],[T]]]],[11,R[20],E,E,244,[[[U]],[R[3]]]],[11,R[21],E,E,244,[[],[R[3]]]],[11,R[45],E,E,244,[[["self"]],[T]]],[11,R[22],E,E,244,[[["self"]],[T]]],[11,R[26],E,E,244,[[["self"]],[R[46]]]],[11,"into",E,E,245,[[],[U]]],[11,"from",E,E,245,[[[T]],[T]]],[11,R[211],E,E,245,[[],["i"]]],[11,R[24],E,E,245,[[["self"]],[T]]],[11,R[25],E,E,245,[[["self"],[T]]]],[11,R[20],E,E,245,[[[U]],[R[3]]]],[11,R[21],E,E,245,[[],[R[3]]]],[11,R[45],E,E,245,[[["self"]],[T]]],[11,R[22],E,E,245,[[["self"]],[T]]],[11,R[26],E,E,245,[[["self"]],[R[46]]]],[11,"into",E,E,246,[[],[U]]],[11,"from",E,E,246,[[[T]],[T]]],[11,R[211],E,E,246,[[],["i"]]],[11,R[20],E,E,246,[[[U]],[R[3]]]],[11,R[21],E,E,246,[[],[R[3]]]],[11,R[45],E,E,246,[[["self"]],[T]]],[11,R[22],E,E,246,[[["self"]],[T]]],[11,R[26],E,E,246,[[["self"]],[R[46]]]],[11,"into",E,E,247,[[],[U]]],[11,"from",E,E,247,[[[T]],[T]]],[11,R[211],E,E,247,[[],["i"]]],[11,R[24],E,E,247,[[["self"]],[T]]],[11,R[25],E,E,247,[[["self"],[T]]]],[11,R[20],E,E,247,[[[U]],[R[3]]]],[11,R[21],E,E,247,[[],[R[3]]]],[11,R[45],E,E,247,[[["self"]],[T]]],[11,R[22],E,E,247,[[["self"]],[T]]],[11,R[26],E,E,247,[[["self"]],[R[46]]]],[11,"into",R[414],E,248,[[],[U]]],[11,"from",E,E,248,[[[T]],[T]]],[11,R[211],E,E,248,[[],["i"]]],[11,R[24],E,E,248,[[["self"]],[T]]],[11,R[25],E,E,248,[[["self"],[T]]]],[11,R[20],E,E,248,[[[U]],[R[3]]]],[11,R[21],E,E,248,[[],[R[3]]]],[11,R[45],E,E,248,[[["self"]],[T]]],[11,R[22],E,E,248,[[["self"]],[T]]],[11,R[26],E,E,248,[[["self"]],[R[46]]]],[11,"into",E,E,249,[[],[U]]],[11,"from",E,E,249,[[[T]],[T]]],[11,R[211],E,E,249,[[],["i"]]],[11,R[24],E,E,249,[[["self"]],[T]]],[11,R[25],E,E,249,[[["self"],[T]]]],[11,R[20],E,E,249,[[[U]],[R[3]]]],[11,R[21],E,E,249,[[],[R[3]]]],[11,R[45],E,E,249,[[["self"]],[T]]],[11,R[22],E,E,249,[[["self"]],[T]]],[11,R[26],E,E,249,[[["self"]],[R[46]]]],[11,"into",E,E,250,[[],[U]]],[11,"from",E,E,250,[[[T]],[T]]],[11,R[211],E,E,250,[[],["i"]]],[11,R[20],E,E,250,[[[U]],[R[3]]]],[11,R[21],E,E,250,[[],[R[3]]]],[11,R[45],E,E,250,[[["self"]],[T]]],[11,R[22],E,E,250,[[["self"]],[T]]],[11,R[26],E,E,250,[[["self"]],[R[46]]]],[11,"into",E,E,251,[[],[U]]],[11,"from",E,E,251,[[[T]],[T]]],[11,R[211],E,E,251,[[],["i"]]],[11,R[24],E,E,251,[[["self"]],[T]]],[11,R[25],E,E,251,[[["self"],[T]]]],[11,R[20],E,E,251,[[[U]],[R[3]]]],[11,R[21],E,E,251,[[],[R[3]]]],[11,R[45],E,E,251,[[["self"]],[T]]],[11,R[22],E,E,251,[[["self"]],[T]]],[11,R[26],E,E,251,[[["self"]],[R[46]]]],[11,"into",E,E,252,[[],[U]]],[11,"from",E,E,252,[[[T]],[T]]],[11,R[211],E,E,252,[[],["i"]]],[11,R[20],E,E,252,[[[U]],[R[3]]]],[11,R[21],E,E,252,[[],[R[3]]]],[11,R[45],E,E,252,[[["self"]],[T]]],[11,R[22],E,E,252,[[["self"]],[T]]],[11,R[26],E,E,252,[[["self"]],[R[46]]]],[11,"as_ref",R[390],E,5,[[["self"]],["path"]]],[11,"write",R[391],E,224,[[["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,R[415],E,E,224,[[["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,R[416],E,E,224,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"flush",E,E,224,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"write",E,E,103,[[["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,R[415],E,E,103,[[["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,"flush",E,E,103,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[416],E,E,103,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[417],E,E,103,[[["self"],[R[325]]],[[R[3],["error"]],["error"]]]],[11,"from",E,"Converts a type of [`Error`] + [`Send`] + [`Sync`] into a…",103,[[["e"]],[["error"],["box",["error"]]]]],[11,"from",E,"Converts a [`OsString`] into a [`Box`]`<OsStr>` without…",103,[[[R[418]]],[["osstr"],["box",["osstr"]]]]],[11,"from",E,E,103,[[["osstr"]],[["osstr"],["box",["osstr"]]]]],[11,"from",R[390],E,5,[[[R[418]]],[["osstr"],["cow",["osstr"]]]]],[11,"from",E,E,5,[[[R[420]]],[["cow",["path"]],["path"]]]],[11,"from",R[391],"Converts a [`String`] into a box of dyn [`Error`] +…",103,[[["string"]],[["box",["error"]],["error"]]]],[11,"from",E,"Converts a type of [`Error`] into a box of dyn [`Error`].",103,[[["e"]],[["error"],["box",["error"]]]]],[11,"from",E,"Converts a [`CString`] into a [`Box`]`<CStr>` without…",103,[[["cstring"]],[["box",["cstr"]],["cstr"]]]],[11,"from",E,"Converts a [`String`] into a box of dyn [`Error`].",103,[[["string"]],[["error"],["box",["error"]]]]],[11,"from",E,E,103,[[["path"]],[["box",["path"]],["path"]]]],[11,"from",R[390],E,5,[[["path"]],[["cow",["path"]],["path"]]]],[11,"from",E,E,5,[[["cstr"]],[["cstr"],["cow",["cstr"]]]]],[11,"from",R[407],"Converts a `Path` into an `Rc` by copying the `Path` data…",173,[[["path"]],[["rc",["path"]],["path"]]]],[11,"from",E,"Converts a `PathBuf` into an `Rc` by moving the `PathBuf`…",173,[[[R[420]]],[["rc",["path"]],["path"]]]],[11,"from",E,"Converts a [`CString`] into a [`Rc`]`<CStr>` without…",173,[[["cstring"]],[["rc",["cstr"]],["cstr"]]]],[11,"from",R[391],"Converts a [`Cow`] into a box of dyn [`Error`] + [`Send`]…",103,[[["cow",["str"]],["str"]],[["error"],["box",["error"]]]]],[11,"from",R[407],E,173,[[["cstr"]],[["rc",["cstr"]],["cstr"]]]],[11,"from",E,E,173,[[["osstr"]],[["rc",["osstr"]],["osstr"]]]],[11,"from",R[391],E,103,[[["cstr"]],[["box",["cstr"]],["cstr"]]]],[11,"from",R[390],E,5,[[["cstring"]],[["cstr"],["cow",["cstr"]]]]],[11,"from",R[391],"Converts a [`Cow`] into a box of dyn [`Error`].",103,[[["str"],["cow",["str"]]],[["error"],["box",["error"]]]]],[11,"from",E,"Converts a [`str`] into a box of dyn [`Error`].",103,[[["str"]],[["error"],["box",["error"]]]]],[11,"from",E,"Converts a [`str`] into a box of dyn [`Error`] + [`Send`]…",103,[[["str"]],[["error"],["box",["error"]]]]],[11,"from",R[390],E,5,[[["osstr"]],[["osstr"],["cow",["osstr"]]]]],[11,"from",E,E,5,[[[R[418]]],[["osstr"],["cow",["osstr"]]]]],[11,"from",E,E,5,[[["cstring"]],[["cstr"],["cow",["cstr"]]]]],[11,"from",R[391],"Converts a `PathBuf` into a `Box<Path>`",103,[[[R[420]]],[["box",["path"]],["path"]]]],[11,"from",R[407],"Converts a [`OsString`] into a [`Rc`]`<OsStr>` without…",173,[[[R[418]]],[["rc",["osstr"]],["osstr"]]]],[11,"from",R[390],E,5,[[[R[420]]],[["cow",["path"]],["path"]]]],[11,"from",R[391],R[4696],224,[[["cstring"]],[["vec",["u8"]],["u8"]]]],[11,"alloc",R[388],E,96,[[["layout"],["self"]],[[R[314]],[R[3],[R[315],R[314]]],[R[315],["u8"]]]]],[11,R[313],E,E,96,[[["layout"],["self"]],[[R[314]],[R[3],[R[315],R[314]]],[R[315],["u8"]]]]],[11,R[498],E,E,96,[[["u8"],["layout"],["self"],[R[315],["u8"]]]]],[11,R[499],E,E,96,[[["u8"],["usize"],["layout"],["self"],[R[315],["u8"]]],[[R[314]],[R[3],[R[315],R[314]]],[R[315],["u8"]]]]],[11,"read",R[391],E,103,[[["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,"read_vectored",E,E,103,[[["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,R[419],E,E,103,[[["self"]],[R[419]]]],[11,"read_to_end",E,E,103,[[["self"],["vec"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,"read_to_string",E,E,103,[[["string"],["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,"read_exact",E,E,103,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"eq",R[390],E,5,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["osstr"],["self"]],["bool"]]],[11,"eq",E,E,5,[[[R[420]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["path"]],["bool"]]],[11,"eq",E,E,5,[[["osstr"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[418]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[418]]],["bool"]]],[11,"eq",E,E,5,[[[R[420]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["osstr"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["osstr"]],["bool"]]],[11,R[106],E,E,5,[[["self"],["osstr"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[[R[420]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[["self"],[R[418]]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[["path"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[["path"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[["self"],[R[418]]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[["self"],["path"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[["osstr"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[["self"],["osstr"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[["osstr"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[[R[420]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,5,[[["path"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",R[388],E,96,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[90],E,E,96,[[],["system"]]],[11,R[90],R[391],E,103,[[],[["osstr"],["box",["osstr"]]]]],[11,R[90],E,E,103,[[],[["box",["cstr"]],["cstr"]]]],[11,"alloc",R[388],E,96,[[["layout"],["self"]]]],[11,R[313],E,E,96,[[["layout"],["self"]]]],[11,R[498],E,E,96,[[["layout"],["self"]]]],[11,R[499],E,E,96,[[["usize"],["layout"],["self"]]]],[11,R[38],R[404],E,157,[[["self"]],["str"]]],[11,R[38],R[396],E,107,[[["self"]],["str"]]],[11,R[38],R[404],E,155,[[["self"]],["str"]]],[11,R[38],E,E,156,[[["self"]],["str"]]],[11,R[38],R[388],E,99,[[["self"]],["str"]]],[11,R[38],R[398],E,111,[[["self"]],["str"]]],[11,R[38],R[399],E,113,[[["self"]],["str"]]],[11,R[38],R[388],E,97,[[["self"]],["str"]]],[11,R[38],R[391],E,103,[[["self"]],["str"]]],[11,"cause",E,E,103,[[["self"]],[["option",["error"]],["error"]]]],[11,"source",E,E,103,[[["self"]],[["error"],["option",["error"]]]]],[11,R[38],R[370],E,197,[[["self"]],["str"]]],[11,R[38],E,E,213,[[["self"]],["str"]]],[11,R[38],R[396],E,106,[[["self"]],["str"]]],[11,R[38],R[388],E,98,[[["self"]],["str"]]],[11,"fill_buf",R[391],E,103,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"consume",E,E,103,[[["self"],["usize"]]]],[11,"read_until",E,E,103,[[["self"],["vec"],["u8"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,"read_line",E,E,103,[[["string"],["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,"seek",E,E,103,[[["self"],["seekfrom"]],[["error"],[R[3],["u64","error"]],["u64"]]]],[11,"clone",E,E,103,[[["self"]],[["box",["cstr"]],["cstr"]]]],[11,"clone",E,E,103,[[["self"]],[["osstr"],["box",["osstr"]]]]],[11,"clone",E,E,103,[[["self"]],[["box",["path"]],["path"]]]],[11,"clone",R[388],E,96,[[["self"]],["system"]]],[11,"report",R[408],E,86,[[],["i32"]]],[11,"report",E,E,86,[[],["i32"]]],[11,"write",R[400],E,121,[[["self"]]]],[11,"finish",E,E,121,[[["self"]],["u64"]]],[11,R[421],R[404],E,45,[[["self"],[R[422]]]]],[11,R[421],E,E,45,[[["self"],[R[422]]]]],[11,R[421],E,E,45,[[["self"],[R[422]]]]],[11,R[421],E,E,45,[[["self"],[R[422],["u8"]],["u8"]]]],[11,R[421],E,E,45,[[[R[422],["i128"]],["self"],["i128"]]]],[11,R[421],E,E,45,[[[R[422]],["self"]]]],[11,R[421],E,E,45,[[[R[422]],["self"]]]],[11,R[421],E,E,45,[[[R[422]],["self"]]]],[11,R[421],E,E,45,[[["self"],["i8"],[R[422],["i8"]]]]],[11,R[421],E,E,45,[[["self"],[R[422]]]]],[11,R[421],E,E,45,[[["self"],[R[422]]]]],[11,R[421],E,E,45,[[["isize"],["self"],[R[422],["isize"]]]]],[11,R[421],E,E,45,[[[R[422]],["self"]]]],[11,R[421],E,E,45,[[["self"],[R[422]]]]],[11,R[421],E,E,45,[[["self"],["u32"],[R[422],["u32"]]]]],[11,R[421],E,E,45,[[["i64"],["self"],[R[422],["i64"]]]]],[11,R[421],E,E,45,[[["self"],[R[422],["u128"]],["u128"]]]],[11,R[421],E,E,45,[[["self"],[R[422]]]]],[11,R[421],E,E,45,[[["self"],[R[422],["usize"]],["usize"]]]],[11,R[421],E,E,45,[[["self"],[R[422]]]]],[11,R[421],E,E,45,[[["self"],[R[422],["i16"]],["i16"]]]],[11,R[421],E,E,45,[[[R[422],["u64"]],["self"],["u64"]]]],[11,R[421],E,E,45,[[[R[422],["i32"]],["self"],["i32"]]]],[11,R[421],E,E,45,[[["u16"],["self"],[R[422],["u16"]]]]],[11,R[423],E,E,45,[[[R[422]],["self"]]]],[11,R[423],E,E,45,[[["self"],[R[422],["u8"]],["u8"]]]],[11,R[423],E,E,45,[[["self"],[R[422]]]]],[11,R[423],E,E,45,[[["self"],[R[422]]]]],[11,R[423],E,E,45,[[["self"],[R[422]]]]],[11,R[423],E,E,45,[[["i64"],["self"],[R[422],["i64"]]]]],[11,R[423],E,E,45,[[[R[422]],["self"]]]],[11,R[423],E,E,45,[[["self"],[R[422]]]]],[11,R[423],E,E,45,[[["self"],[R[422]]]]],[11,R[423],E,E,45,[[["self"],[R[422]]]]],[11,R[423],E,E,45,[[[R[422]],["self"]]]],[11,R[423],E,E,45,[[["self"],[R[422],["usize"]],["usize"]]]],[11,R[423],E,E,45,[[["self"],["i8"],[R[422],["i8"]]]]],[11,R[423],E,E,45,[[["u16"],["self"],[R[422],["u16"]]]]],[11,R[423],E,E,45,[[[R[422]],["self"]]]],[11,R[423],E,E,45,[[["self"],[R[422],["i16"]],["i16"]]]],[11,R[423],E,E,45,[[["self"],[R[422]]]]],[11,R[423],E,E,45,[[[R[422],["i32"]],["self"],["i32"]]]],[11,R[423],E,E,45,[[["self"],[R[422],["u128"]],["u128"]]]],[11,R[423],E,E,45,[[["self"],["u32"],[R[422],["u32"]]]]],[11,R[423],E,E,45,[[["isize"],["self"],[R[422],["isize"]]]]],[11,R[423],E,E,45,[[[R[422],["u64"]],["self"],["u64"]]]],[11,R[423],E,E,45,[[["self"],[R[422]]]]],[11,R[423],E,E,45,[[[R[422],["i128"]],["self"],["i128"]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,"rem",E,E,45,[[["i8"],[R[422],["i8"]]],[["i8"],[R[422],["i8"]]]]],[11,"rem",E,E,45,[[["u16"],[R[422],["u16"]]],[["u16"],[R[422],["u16"]]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,"rem",E,E,45,[[["isize"],[R[422],["isize"]]],[["isize"],[R[422],["isize"]]]]],[11,"rem",E,E,45,[[["u32"],[R[422],["u32"]]],[["u32"],[R[422],["u32"]]]]],[11,"rem",E,E,45,[[[R[422],["u128"]],["u128"]],[[R[422],["u128"]],["u128"]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,"rem",E,E,45,[[[R[422],["i32"]],["i32"]],[["i32"],[R[422],["i32"]]]]],[11,"rem",E,E,45,[[[R[422],["usize"]],["usize"]],[[R[422],["usize"]],["usize"]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,"rem",E,E,45,[[[R[422],["u64"]],["u64"]],[[R[422],["u64"]],["u64"]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,"rem",E,E,45,[[[R[422],["u8"]],["u8"]],[[R[422],["u8"]],["u8"]]]],[11,"rem",E,E,45,[[[R[422],["i16"]],["i16"]],[[R[422],["i16"]],["i16"]]]],[11,"rem",E,E,45,[[[R[422],["i128"]],["i128"]],[[R[422],["i128"]],["i128"]]]],[11,"rem",E,E,45,[[["i64"],[R[422],["i64"]]],[["i64"],[R[422],["i64"]]]]],[11,"rem",E,E,45,[[[R[422]]]]],[11,R[424],E,E,45,[[["i"]],[["u16"],[R[422],["u16"]]]]],[11,R[424],E,E,45,[[["i"]],[["i64"],[R[422],["i64"]]]]],[11,R[424],E,E,45,[[["i"]],[["isize"],[R[422],["isize"]]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["usize"]],["usize"]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["u128"]],["u128"]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["i128"]],["i128"]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["u8"]],["u8"]]]],[11,R[424],E,E,45,[[["i"]],[["u32"],[R[422],["u32"]]]]],[11,R[424],E,E,45,[[["i"]],[["isize"],[R[422],["isize"]]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["i128"]],["i128"]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["usize"]],["usize"]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["i16"]],["i16"]]]],[11,R[424],E,E,45,[[["i"]],[["i32"],[R[422],["i32"]]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["u8"]],["u8"]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["i16"]],["i16"]]]],[11,R[424],E,E,45,[[["i"]],[["i64"],[R[422],["i64"]]]]],[11,R[424],E,E,45,[[["i"]],[["i32"],[R[422],["i32"]]]]],[11,R[424],E,E,45,[[["i"]],[["i8"],[R[422],["i8"]]]]],[11,R[424],E,E,45,[[["i"]],[["u32"],[R[422],["u32"]]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["u64"]],["u64"]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["u64"]],["u64"]]]],[11,R[424],E,E,45,[[["i"]],[["i8"],[R[422],["i8"]]]]],[11,R[424],E,E,45,[[["i"]],[[R[422],["u128"]],["u128"]]]],[11,R[424],E,E,45,[[["i"]],[["u16"],[R[422],["u16"]]]]],[11,R[424],R[408],R[472],86,[[["i"]],[R[3]]]],[11,R[295],R[370],E,211,[[["self"]],["option"]]],[11,R[295],R[409],E,194,[[["self"]],["option"]]],[11,R[425],E,E,194,[[["self"],["usize"]],["option"]]],[11,R[295],E,E,184,[[["self"]],["option"]]],[11,R[295],R[370],E,214,[[["self"]],[["option",["str"]],["str"]]]],[11,R[295],E,E,207,[[["self"]],[["option",["str"]],["str"]]]],[11,R[295],R[401],E,136,[[["self"]],["option"]]],[11,R[425],E,E,136,[[["self"],["usize"]],["option"]]],[11,R[426],E,E,136,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold",E,E,136,[[["acc"],["fold"]],["acc"]]],[11,R[295],R[409],E,182,[[["self"]],["option"]]],[11,R[295],E,E,193,[[["self"]],["option"]]],[11,R[425],E,E,193,[[["self"],["usize"]],["option"]]],[11,R[295],R[401],E,146,[[["self"]],["option"]]],[11,R[426],E,E,146,[[["self"],["b"],["f"]],["r"]]],[11,"rfold",E,E,146,[[["acc"],["f"]],["acc"]]],[11,R[295],R[405],E,171,[[["self"]],["option"]]],[11,R[425],E,E,171,[[["self"],["usize"]],["option"]]],[11,R[426],E,E,171,[[["self"],["b"],["f"]],["r"]]],[11,R[295],R[401],E,125,[[["self"]],["option"]]],[11,R[295],E,E,148,[[["self"]],["option"]]],[11,R[426],E,E,148,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold",E,E,148,[[["acc"],["fold"]],["acc"]]],[11,R[295],R[409],E,192,[[["self"]],["option"]]],[11,R[425],E,E,192,[[["self"],["usize"]],["option"]]],[11,R[295],E,E,180,[[["self"]],[["option"],[T]]]],[11,R[425],E,E,180,[[["self"],["usize"]],[["option"],[T]]]],[11,R[295],R[408],E,176,[[["self"]],[["option"],[T]]]],[11,R[295],R[370],E,210,[[["self"]],[["option",["char"]],["char"]]]],[11,R[295],R[405],E,77,[[["self"]],["option"]]],[11,R[425],E,E,77,[[["self"],["usize"]],["option"]]],[11,R[295],R[401],E,137,[[["self"]],["option"]]],[11,R[426],E,E,137,[[["self"],["b"],["f"]],["r"]]],[11,"rfold",E,E,137,[[["acc"],["fold"]],["acc"]]],[11,R[295],E,E,129,[[["self"]],["option"]]],[11,R[425],E,E,129,[[["self"],["usize"]],["option"]]],[11,R[426],E,E,129,[[["self"],["b"],["f"]],["r"]]],[11,"rfold",E,E,129,[[["acc"],["f"]],["acc"]]],[11,"rfind",E,E,129,[[["self"],["p"]],["option"]]],[11,R[295],R[370],E,212,[[["self"]],[["option",["u8"]],["u8"]]]],[11,R[425],E,E,212,[[["self"],["usize"]],["option"]]],[11,"rfind",E,E,212,[[["self"],["p"]],["option"]]],[11,R[295],R[401],E,122,[[["self"]],["option"]]],[11,R[295],E,E,126,[[["self"]],["option"]]],[11,R[295],E,E,149,[[["self"]],["option"]]],[11,R[426],E,E,149,[[["self"],["b"],["f"]],["r"]]],[11,"rfold",E,E,149,[[["acc"],["f"]],["acc"]]],[11,R[295],R[408],E,175,[[["self"]],[["option"],[T]]]],[11,R[295],E,E,177,[[["self"]],["option"]]],[11,R[295],R[401],E,132,[[["self"]],["option"]]],[11,R[295],E,E,141,[[["self"]],["option"]]],[11,R[425],E,E,141,[[["self"],["usize"]],["option"]]],[11,R[426],E,E,141,[[["self"],["acc"],["fold"]],["r"]]],[11,R[295],E,E,144,[[["self"]],["option"]]],[11,R[425],E,E,144,[[["self"],["usize"]],["option"]]],[11,R[426],E,E,144,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold",E,E,144,[[["acc"],["fold"]],["acc"]]],[11,R[295],R[409],E,181,[[["self"]],[["option"],[T]]]],[11,R[425],E,E,181,[[["self"],["usize"]],[["option"],[T]]]],[11,R[295],E,E,190,[[["self"]],["option"]]],[11,R[295],R[401],E,124,[[["self"]],["option"]]],[11,R[295],R[409],E,189,[[["self"]],["option"]]],[11,R[295],R[370],E,204,[[["self"]],[["option",["str"]],["str"]]]],[11,R[295],R[401],E,140,[[["self"]],["option"]]],[11,R[425],E,E,140,[[["self"],["usize"]],["option"]]],[11,R[426],E,E,140,[[["self"],["acc"],["fold"]],["r"]]],[11,R[295],E,E,145,[[["self"]],["option"]]],[11,R[426],E,E,145,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold",E,E,145,[[["acc"],["fold"]],["acc"]]],[11,R[295],R[370],E,208,[[["self"]],["option"]]],[11,R[295],E,E,198,[[["self"]],[["option",["str"]],["str"]]]],[11,R[295],E,E,209,[[["self"]],["option"]]],[11,R[295],R[401],E,133,[[["self"]],["option"]]],[11,R[426],E,E,133,[[["self"],["acc"],["g"]],["r"]]],[11,"rfold",E,E,133,[[["acc"],["g"]],["acc"]]],[11,R[295],R[370],E,220,[[["self"]],[["option",["str"]],["str"]]]],[11,R[295],R[401],E,147,[[["self"]],["option"]]],[11,R[425],E,E,147,[[["self"],["usize"]],["option"]]],[11,R[426],E,E,147,[[["self"],["acc"],["f"]],["r"]]],[11,R[295],R[409],E,195,[[["self"]],["option"]]],[11,R[425],E,E,195,[[["self"],["usize"]],["option"]]],[11,R[295],E,E,196,[[["self"]],["option"]]],[11,R[425],E,E,196,[[["self"],["usize"]],["option"]]],[11,R[295],E,E,179,[[["self"]],["option"]]],[11,R[425],E,E,179,[[["self"],["usize"]],["option"]]],[11,R[295],R[370],E,206,[[["self"]],[["option",["str"]],["str"]]]],[11,R[295],R[409],E,183,[[["self"]],["option"]]],[11,R[425],E,E,183,[[["self"],["usize"]],["option"]]],[11,R[295],E,E,178,[[["self"]],["option"]]],[11,R[425],E,E,178,[[["self"],["usize"]],["option"]]],[11,R[295],E,E,191,[[["self"]],["option"]]],[11,R[425],E,E,191,[[["self"],["usize"]],["option"]]],[11,R[295],R[401],E,144,[[["self"]],["option"]]],[11,R[425],E,E,144,[[["self"],["usize"]],["option"]]],[11,R[426],E,E,144,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold",E,E,144,[[["acc"],["fold"]],["acc"]]],[11,R[295],R[370],E,201,[[["self"]],[["option",["str"]],["str"]]]],[11,R[295],E,E,199,[[["self"]],[["option",["str"]],["str"]]]],[11,R[295],R[401],E,134,[[["self"]],["option"]]],[11,R[426],E,E,134,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold",E,E,134,[[["acc"],["fold"]],["acc"]]],[11,R[295],R[370],E,200,[[["self"]],[["option",["str"]],["str"]]]],[11,R[295],R[401],E,143,[[["self"]],["option"]]],[11,R[426],E,E,143,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold",E,E,143,[[["acc"],["fold"]],["acc"]]],[11,R[295],E,E,135,[[["self"]],["option"]]],[11,R[426],E,E,135,[[["self"],["acc"],["fold"]],["r"]]],[11,"rfold",E,E,135,[[["acc"],["fold"]],["acc"]]],[11,R[295],R[370],E,205,[[["self"]],[["option",["str"]],["str"]]]],[11,R[295],R[401],E,131,[[["self"]],["option"]]],[11,R[425],E,E,131,[[["self"],["usize"]],["option"]]],[11,R[426],E,E,131,[[["self"],["acc"],["f"]],["r"]]],[11,"rfold",E,E,131,[[["acc"],["f"]],["acc"]]],[11,R[427],R[400],E,120,[[["self"]],["h"]]],[11,R[99],R[403],E,153,[[["self"]],[T]]],[11,R[99],R[396],E,109,[[["self"]],[T]]],[11,"fmt",R[404],E,158,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,160,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,166,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,161,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,167,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,169,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,163,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,165,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,162,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,168,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,159,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,45,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,164,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[428],R[408],E,86,[[],[R[3]]]],[11,"from_ok",E,E,86,[[[T]],[R[3]]]],[11,R[429],E,E,86,[[["e"]],[R[3]]]],[11,R[431],R[410],E,218,[[["self"]],["str"]]],[11,"next",E,E,218,[[["self"]],[R[369]]]],[11,R[430],E,E,218,[[["self"]],["option"]]],[11,R[431],E,E,216,[[["self"]],["str"]]],[11,"next",E,E,216,[[["self"]],[R[369]]]],[11,R[430],E,E,216,[[["self"]],["option"]]],[11,R[432],E,E,216,[[["self"]],["option"]]],[11,R[431],E,E,215,[[["self"]],["str"]]],[11,"next",E,E,215,[[["self"]],[R[369]]]],[11,R[430],E,E,215,[[["self"]],["option"]]],[11,R[431],E,E,217,[[["self"]],["str"]]],[11,"next",E,E,217,[[["self"]],[R[369]]]],[11,R[430],E,E,217,[[["self"]],["option"]]],[11,R[432],E,E,217,[[["self"]],["option"]]],[11,"from",R[396],E,105,[[[T]],[R[491]]]],[11,"from",R[404],E,157,[[[R[433]]],[R[434]]]],[11,"from",R[406],E,172,[[["unique"]],[R[315]]]],[11,"from",E,E,172,[[[T]],[R[315]]]],[11,"from",R[396],E,110,[[[T]],[R[461]]]],[11,"from",R[406],E,172,[[[T]],[R[315]]]],[11,"from",R[396],E,104,[[[T]],["cell"]]],[11,"from",R[398],E,111,[[],[R[433]]]],[11,"from",R[404],E,157,[[],[R[434]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,R[435],E,E,45,[[["self"],["usize"]]]],[11,"eq",R[370],E,197,[[[R[367]],["self"]],["bool"]]],[11,"ne",E,E,197,[[[R[367]],["self"]],["bool"]]],[11,"eq",R[404],E,164,[[[R[436]],["self"]],["bool"]]],[11,"ne",E,E,164,[[[R[436]],["self"]],["bool"]]],[11,"eq",E,E,44,[[[R[486]],["self"]],["bool"]]],[11,"eq",R[389],E,102,[[[R[46]],["self"]],["bool"]]],[11,"ne",E,E,102,[[[R[46]],["self"]],["bool"]]],[11,"eq",R[405],E,79,[[[R[800]],["self"]],["bool"]]],[11,"ne",E,E,79,[[[R[800]],["self"]],["bool"]]],[11,"eq",R[388],E,98,[[["self"],[R[437]]],["bool"]]],[11,"ne",E,E,98,[[["self"],[R[437]]],["bool"]]],[11,"eq",R[404],E,160,[[["self"],[R[438]]],["bool"]]],[11,"ne",E,E,160,[[["self"],[R[438]]],["bool"]]],[11,"eq",E,E,168,[[["self"],[R[439]]],["bool"]]],[11,"ne",E,E,168,[[["self"],[R[439]]],["bool"]]],[11,"eq",R[405],E,82,[[["self"],["bound"]],["bool"]]],[11,"ne",E,E,82,[[["self"],["bound"]],["bool"]]],[11,"eq",R[397],E,10,[[[R[105]],["self"]],["bool"]]],[11,"eq",R[404],E,169,[[["self"],[R[440]]],["bool"]]],[11,"ne",E,E,169,[[["self"],[R[440]]],["bool"]]],[11,"eq",R[403],E,153,[[[R[441]],["self"]],["bool"]]],[11,"ne",E,E,153,[[[R[441]],["self"]],["bool"]]],[11,"eq",R[396],E,104,[[["cell"],["self"]],["bool"]]],[11,"eq",R[388],E,100,[[["self"],["layout"]],["bool"]]],[11,"ne",E,E,100,[[["self"],["layout"]],["bool"]]],[11,"eq",R[404],E,45,[[["self"],[R[422]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[422]]],["bool"]]],[11,"eq",E,E,163,[[[R[442]],["self"]],["bool"]]],[11,"ne",E,E,163,[[[R[442]],["self"]],["bool"]]],[11,"eq",R[405],E,171,[[["self"],[R[484]]],["bool"]]],[11,"eq",R[402],E,151,[[[R[464]],["self"]],["bool"]]],[11,"eq",R[405],E,78,[[["self"],[R[443]]],["bool"]]],[11,"ne",E,E,78,[[["self"],[R[443]]],["bool"]]],[11,"eq",R[399],E,113,[[["self"],["error"]],["bool"]]],[11,"eq",R[388],E,99,[[["self"],[R[317]]],["bool"]]],[11,"eq",R[398],E,111,[[[R[433]],["self"]],["bool"]]],[11,"eq",R[404],E,46,[[[R[487]],["self"]],["bool"]]],[11,"eq",E,E,167,[[[R[444]],["self"]],["bool"]]],[11,"ne",E,E,167,[[[R[444]],["self"]],["bool"]]],[11,"eq",E,E,166,[[["self"],[R[445]]],["bool"]]],[11,"ne",E,E,166,[[["self"],[R[445]]],["bool"]]],[11,"eq",R[370],E,213,[[[R[446]],["self"]],["bool"]]],[11,"ne",E,E,213,[[[R[446]],["self"]],["bool"]]],[11,"eq",R[404],E,158,[[["self"],[R[447]]],["bool"]]],[11,"ne",E,E,158,[[["self"],[R[447]]],["bool"]]],[11,"eq",R[408],E,86,[[[R[3]],["self"]],["bool"]]],[11,"ne",E,E,86,[[[R[3]],["self"]],["bool"]]],[11,"eq",R[391],E,11,[[["self"],[R[490]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[490]]],["bool"]]],[11,"eq",R[402],E,150,[[["self"],[R[459]]],["bool"]]],[11,"eq",R[404],E,161,[[[R[448]],["self"]],["bool"]]],[11,"ne",E,E,161,[[[R[448]],["self"]],["bool"]]],[11,"eq",E,E,156,[[["self"],[R[449]]],["bool"]]],[11,"ne",E,E,156,[[["self"],[R[449]]],["bool"]]],[11,"eq",R[405],E,170,[[["self"],[R[488]]],["bool"]]],[11,"eq",R[396],"Panics",105,[[[R[491]],["self"]],["bool"]]],[11,"eq",R[405],E,85,[[["self"],[R[450]]],["bool"]]],[11,"ne",E,E,85,[[["self"],[R[450]]],["bool"]]],[11,"eq",R[403],E,152,[[["self"],[R[345]]],["bool"]]],[11,"eq",R[404],E,162,[[["self"],[R[451]]],["bool"]]],[11,"ne",E,E,162,[[["self"],[R[451]]],["bool"]]],[11,"eq",E,E,159,[[[R[452]],["self"]],["bool"]]],[11,"ne",E,E,159,[[[R[452]],["self"]],["bool"]]],[11,"eq",R[405],E,80,[[[R[453]],["self"]],["bool"]]],[11,"ne",E,E,80,[[[R[453]],["self"]],["bool"]]],[11,"eq",R[404],E,165,[[["self"],[R[454]]],["bool"]]],[11,"ne",E,E,165,[[["self"],[R[454]]],["bool"]]],[11,"eq",R[406],E,172,[[["self"],[R[315]]],["bool"]]],[11,"eq",R[400],E,120,[[[R[460]],["self"]],["bool"]]],[11,"eq",R[404],E,157,[[[R[434]],["self"]],["bool"]]],[11,"ne",E,E,157,[[[R[434]],["self"]],["bool"]]],[11,"eq",R[410],E,92,[[[R[369]],["self"]],["bool"]]],[11,"ne",E,E,92,[[[R[369]],["self"]],["bool"]]],[11,"eq",R[405],E,77,[[["range"],["self"]],["bool"]]],[11,"ne",E,E,77,[[["range"],["self"]],["bool"]]],[11,"eq",R[404],E,155,[[[R[455]],["self"]],["bool"]]],[11,"ne",E,E,155,[[[R[455]],["self"]],["bool"]]],[11,"eq",R[388],E,97,[[[R[314]],["self"]],["bool"]]],[11,"not",R[404],E,45,[[],[["i64"],[R[422],["i64"]]]]],[11,"not",E,E,45,[[],[["u32"],[R[422],["u32"]]]]],[11,"not",E,E,45,[[],[["i32"],[R[422],["i32"]]]]],[11,"not",E,E,45,[[],[["u16"],[R[422],["u16"]]]]],[11,"not",E,E,45,[[],[[R[422],["u8"]],["u8"]]]],[11,"not",E,E,45,[[],[[R[422],["usize"]],["usize"]]]],[11,"not",E,E,45,[[],[[R[422],["i128"]],["i128"]]]],[11,"not",E,E,45,[[],[[R[422],["i16"]],["i16"]]]],[11,"not",E,E,45,[[],[[R[422],["u64"]],["u64"]]]],[11,"not",E,E,45,[[],[[R[422],["u128"]],["u128"]]]],[11,"not",E,E,45,[[],[["isize"],[R[422],["isize"]]]]],[11,"not",E,E,45,[[],[["i8"],[R[422],["i8"]]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,R[456],E,E,45,[[["self"],["usize"]]]],[11,"fmt",E,E,166,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,168,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,167,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,162,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,163,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,164,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,165,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,161,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,160,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,159,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,45,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,169,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,158,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[457],E,E,164,[[["str"]],[[R[3],[R[436]]],[R[436]]]]],[11,R[457],E,E,163,[[["str"]],[[R[442]],[R[3],[R[442]]]]]],[11,R[457],E,E,165,[[["str"]],[[R[3],[R[454]]],[R[454]]]]],[11,R[457],E,E,160,[[["str"]],[[R[438]],[R[3],[R[438]]]]]],[11,R[457],E,E,161,[[["str"]],[[R[448]],[R[3],[R[448]]]]]],[11,R[457],E,E,166,[[["str"]],[[R[445]],[R[3],[R[445]]]]]],[11,R[457],E,E,169,[[["str"]],[[R[3],[R[440]]],[R[440]]]]],[11,R[457],E,E,162,[[["str"]],[[R[451]],[R[3],[R[451]]]]]],[11,R[457],E,E,167,[[["str"]],[[R[444]],[R[3],[R[444]]]]]],[11,R[457],E,E,168,[[["str"]],[[R[439]],[R[3],[R[439]]]]]],[11,R[457],E,E,158,[[["str"]],[[R[3],[R[447]]],[R[447]]]]],[11,R[457],E,E,159,[[["str"]],[[R[452]],[R[3],[R[452]]]]]],[11,R[458],E,E,45,[[[R[422]],["self"]]]],[11,R[458],E,E,45,[[["self"],[R[422]]]]],[11,R[458],E,E,45,[[[R[422],["i128"]],["self"],["i128"]]]],[11,R[458],E,E,45,[[[R[422]],["self"]]]],[11,R[458],E,E,45,[[["self"],[R[422]]]]],[11,R[458],E,E,45,[[[R[422],["u64"]],["self"],["u64"]]]],[11,R[458],E,E,45,[[["self"],["i8"],[R[422],["i8"]]]]],[11,R[458],E,E,45,[[["self"],[R[422]]]]],[11,R[458],E,E,45,[[["i64"],["self"],[R[422],["i64"]]]]],[11,R[458],E,E,45,[[["self"],[R[422]]]]],[11,R[458],E,E,45,[[["self"],[R[422]]]]],[11,R[458],E,E,45,[[[R[422]],["self"]]]],[11,R[458],E,E,45,[[[R[422]],["self"]]]],[11,R[458],E,E,45,[[["self"],[R[422],["i16"]],["i16"]]]],[11,R[458],E,E,45,[[["self"],[R[422]]]]],[11,R[458],E,E,45,[[["self"],["u32"],[R[422],["u32"]]]]],[11,R[458],E,E,45,[[["self"],[R[422],["u8"]],["u8"]]]],[11,R[458],E,E,45,[[["isize"],["self"],[R[422],["isize"]]]]],[11,R[458],E,E,45,[[["self"],[R[422]]]]],[11,R[458],E,E,45,[[["self"],[R[422]]]]],[11,R[458],E,E,45,[[["self"],[R[422],["usize"]],["usize"]]]],[11,R[458],E,E,45,[[["self"],[R[422],["u128"]],["u128"]]]],[11,R[458],E,E,45,[[["u16"],["self"],[R[422],["u16"]]]]],[11,R[458],E,E,45,[[[R[422],["i32"]],["self"],["i32"]]]],[11,R[90],R[396],"Creates a `Cell<T>`, with the `Default` value for T.",104,[[],["cell"]]],[11,R[90],R[400],E,121,[[],[R[478]]]],[11,R[90],R[396],"Creates a `RefCell<T>`, with the `Default` value for T.",105,[[],[R[491]]]],[11,R[90],R[402],E,150,[[],[R[459]]]],[11,R[90],R[403],E,153,[[],[R[441]]]],[11,R[90],R[401],E,124,[[],["empty"]]],[11,R[90],R[391],E,11,[[],[R[490]]]],[11,R[90],R[399],E,113,[[],["error"]]],[11,R[90],R[400],E,120,[[],[R[460]]]],[11,R[90],R[404],E,45,[[],[R[422]]]],[11,R[90],R[396],"Creates an `UnsafeCell`, with the `Default` value for T.",110,[[],[R[461]]]],[11,"shl",R[404],E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]],[[R[422],["u128"]],["u128"]]]],[11,"shl",E,E,45,[[["usize"]],[["u32"],[R[422],["u32"]]]]],[11,"shl",E,E,45,[[["usize"]],[["isize"],[R[422],["isize"]]]]],[11,"shl",E,E,45,[[["usize"]],[[R[422],["i16"]],["i16"]]]],[11,"shl",E,E,45,[[["usize"]],[["i32"],[R[422],["i32"]]]]],[11,"shl",E,E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]],[[R[422],["usize"]],["usize"]]]],[11,"shl",E,E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]]]],[11,"shl",E,E,45,[[["usize"]],[["u16"],[R[422],["u16"]]]]],[11,"shl",E,E,45,[[["usize"]],[[R[422],["i128"]],["i128"]]]],[11,"shl",E,E,45,[[["usize"]],[["i8"],[R[422],["i8"]]]]],[11,"shl",E,E,45,[[["usize"]],[["i64"],[R[422],["i64"]]]]],[11,"shl",E,E,45,[[["usize"]],[[R[422],["u64"]],["u64"]]]],[11,"shl",E,E,45,[[["usize"]],[[R[422],["u8"]],["u8"]]]],[11,R[462],E,E,45,[[["self"],[R[422],["u8"]],["u8"]]]],[11,R[462],E,E,45,[[["isize"],["self"],[R[422],["isize"]]]]],[11,R[462],E,E,45,[[[R[422]],["self"]]]],[11,R[462],E,E,45,[[["self"],["u32"],[R[422],["u32"]]]]],[11,R[462],E,E,45,[[["self"],["i8"],[R[422],["i8"]]]]],[11,R[462],E,E,45,[[["self"],[R[422],["usize"]],["usize"]]]],[11,R[462],E,E,45,[[["i64"],["self"],[R[422],["i64"]]]]],[11,R[462],E,E,45,[[["self"],[R[422]]]]],[11,R[462],E,E,45,[[[R[422],["i128"]],["self"],["i128"]]]],[11,R[462],E,E,45,[[["self"],[R[422],["i16"]],["i16"]]]],[11,R[462],E,E,45,[[[R[422],["i32"]],["self"],["i32"]]]],[11,R[462],E,E,45,[[["u16"],["self"],[R[422],["u16"]]]]],[11,R[462],E,E,45,[[["self"],[R[422]]]]],[11,R[462],E,E,45,[[[R[422]],["self"]]]],[11,R[462],E,E,45,[[["self"],[R[422]]]]],[11,R[462],E,E,45,[[["self"],[R[422]]]]],[11,R[462],E,E,45,[[["self"],[R[422]]]]],[11,R[462],E,E,45,[[["self"],[R[422],["u128"]],["u128"]]]],[11,R[462],E,E,45,[[["self"],[R[422]]]]],[11,R[462],E,E,45,[[["self"],[R[422]]]]],[11,R[462],E,E,45,[[[R[422]],["self"]]]],[11,R[462],E,E,45,[[[R[422]],["self"]]]],[11,R[462],E,E,45,[[["self"],[R[422]]]]],[11,R[462],E,E,45,[[[R[422],["u64"]],["self"],["u64"]]]],[11,"hash",R[405],E,77,[[["self"],["__h"]]]],[11,"hash",E,E,171,[[["self"],["h"]]]],[11,"hash",R[404],E,45,[[["self"],["__h"]]]],[11,"hash",E,E,158,[[["self"],["__h"]]]],[11,"hash",R[405],E,170,[[["self"],["__h"]]]],[11,"hash",R[404],E,162,[[["self"],["__h"]]]],[11,"hash",E,E,164,[[["self"],["__h"]]]],[11,"hash",R[405],E,78,[[["self"],["__h"]]]],[11,"hash",R[403],E,153,[[["self"],["__h"]]]],[11,"hash",R[399],E,113,[[["self"],["__h"]]]],[11,"hash",R[408],E,86,[[["self"],["__h"]]]],[11,"hash",R[404],E,160,[[["self"],["__h"]]]],[11,"hash",R[405],E,80,[[["self"],["__h"]]]],[11,"hash",R[404],E,159,[[["self"],["__h"]]]],[11,"hash",R[403],E,152,[[["self"],["h"]]]],[11,"hash",R[405],E,82,[[["self"],["__h"]]]],[11,"hash",R[404],E,163,[[["self"],["__h"]]]],[11,"hash",E,E,161,[[["self"],["__h"]]]],[11,"hash",E,E,166,[[["self"],["__h"]]]],[11,"hash",R[405],E,85,[[["self"],["__h"]]]],[11,"hash",R[406],E,172,[[["self"],["h"]]]],[11,"hash",R[402],E,150,[[["self"],["h"]]]],[11,"hash",R[397],E,10,[[["self"],["__h"]]]],[11,"hash",R[391],E,11,[[["self"],["__h"]]]],[11,"hash",R[389],E,102,[[["self"],["__h"]]]],[11,"hash",R[404],E,169,[[["self"],["__h"]]]],[11,"hash",E,E,165,[[["self"],["__h"]]]],[11,"hash",E,E,167,[[["self"],["__h"]]]],[11,"hash",R[402],E,151,[[["self"],["__h"]]]],[11,"hash",R[404],E,168,[[["self"],["__h"]]]],[11,"hash",R[405],E,79,[[["self"],["__h"]]]],[11,R[463],R[404],E,45,[[[R[422],["i32"]],["self"],["i32"]]]],[11,R[463],E,E,45,[[[R[422]],["self"]]]],[11,R[463],E,E,45,[[[R[422]],["self"]]]],[11,R[463],E,E,45,[[["u16"],["self"],[R[422],["u16"]]]]],[11,R[463],E,E,45,[[["self"],[R[422]]]]],[11,R[463],E,E,45,[[[R[422],["u64"]],["self"],["u64"]]]],[11,R[463],E,E,45,[[["self"],[R[422]]]]],[11,R[463],E,E,45,[[["isize"],["self"],[R[422],["isize"]]]]],[11,R[463],E,E,45,[[[R[422],["i128"]],["self"],["i128"]]]],[11,R[463],E,E,45,[[["self"],[R[422]]]]],[11,R[463],E,E,45,[[["self"],[R[422],["usize"]],["usize"]]]],[11,R[463],E,E,45,[[["self"],[R[422]]]]],[11,R[463],E,E,45,[[["self"],["u32"],[R[422],["u32"]]]]],[11,R[463],E,E,45,[[[R[422]],["self"]]]],[11,R[463],E,E,45,[[["self"],[R[422]]]]],[11,R[463],E,E,45,[[["self"],[R[422]]]]],[11,R[463],E,E,45,[[["self"],[R[422],["u8"]],["u8"]]]],[11,R[463],E,E,45,[[["self"],[R[422],["u128"]],["u128"]]]],[11,R[463],E,E,45,[[["self"],[R[422]]]]],[11,R[463],E,E,45,[[["self"],["i8"],[R[422],["i8"]]]]],[11,R[463],E,E,45,[[["self"],[R[422]]]]],[11,R[463],E,E,45,[[["self"],[R[422],["i16"]],["i16"]]]],[11,R[463],E,E,45,[[["i64"],["self"],[R[422],["i64"]]]]],[11,R[463],E,E,45,[[[R[422]],["self"]]]],[11,"cmp",E,E,164,[[[R[436]],["self"]],[R[105]]]],[11,"cmp",R[396],"Panics",105,[[[R[491]],["self"]],[R[105]]]],[11,"cmp",R[404],E,165,[[["self"],[R[454]]],[R[105]]]],[11,"cmp",R[403],E,153,[[[R[441]],["self"]],[R[105]]]],[11,"cmp",R[398],E,111,[[[R[433]],["self"]],[R[105]]]],[11,"cmp",R[408],E,86,[[[R[3]],["self"]],[R[105]]]],[11,"cmp",R[404],E,159,[[[R[452]],["self"]],[R[105]]]],[11,"cmp",E,E,167,[[[R[444]],["self"]],[R[105]]]],[11,"cmp",E,E,169,[[["self"],[R[440]]],[R[105]]]],[11,"cmp",R[402],E,150,[[["self"],[R[459]]],[R[105]]]],[11,"cmp",R[405],E,85,[[["self"],[R[450]]],[R[105]]]],[11,"cmp",R[396],E,104,[[["cell"],["self"]],[R[105]]]],[11,"cmp",R[389],E,102,[[[R[46]],["self"]],[R[105]]]],[11,"cmp",R[404],E,160,[[["self"],[R[438]]],[R[105]]]],[11,"cmp",R[399],E,113,[[["self"],["error"]],[R[105]]]],[11,"cmp",R[391],E,11,[[["self"],[R[490]]],[R[105]]]],[11,"cmp",R[404],E,168,[[["self"],[R[439]]],[R[105]]]],[11,"cmp",E,E,166,[[["self"],[R[445]]],[R[105]]]],[11,"cmp",R[406],E,172,[[["self"],[R[315]]],[R[105]]]],[11,"cmp",R[404],E,158,[[["self"],[R[447]]],[R[105]]]],[11,"cmp",E,E,161,[[[R[448]],["self"]],[R[105]]]],[11,"cmp",E,E,163,[[[R[442]],["self"]],[R[105]]]],[11,"cmp",E,E,45,[[["self"],[R[422]]],[R[105]]]],[11,"cmp",E,E,162,[[["self"],[R[451]]],[R[105]]]],[11,"cmp",R[402],E,151,[[[R[464]],["self"]],[R[105]]]],[11,"cmp",R[397],E,10,[[[R[105]],["self"]],[R[105]]]],[11,"bitxor",R[404],E,45,[[[R[422]]]]],[11,"bitxor",E,E,45,[[["u32"],[R[422],["u32"]]],[["u32"],[R[422],["u32"]]]]],[11,"bitxor",E,E,45,[[["i64"],[R[422],["i64"]]],[["i64"],[R[422],["i64"]]]]],[11,"bitxor",E,E,45,[[[R[422],["u64"]],["u64"]],[[R[422],["u64"]],["u64"]]]],[11,"bitxor",E,E,45,[[[R[422]]]]],[11,"bitxor",E,E,45,[[[R[422],["u128"]],["u128"]],[[R[422],["u128"]],["u128"]]]],[11,"bitxor",E,E,45,[[[R[422],["u8"]],["u8"]],[[R[422],["u8"]],["u8"]]]],[11,"bitxor",E,E,45,[[[R[422]]]]],[11,"bitxor",E,E,45,[[[R[422],["i32"]],["i32"]],[["i32"],[R[422],["i32"]]]]],[11,"bitxor",E,E,45,[[[R[422]]]]],[11,"bitxor",E,E,45,[[[R[422]]]]],[11,"bitxor",E,E,45,[[[R[422],["i16"]],["i16"]],[[R[422],["i16"]],["i16"]]]],[11,"bitxor",E,E,45,[[[R[422]]]]],[11,"bitxor",E,E,45,[[["isize"],[R[422],["isize"]]],[["isize"],[R[422],["isize"]]]]],[11,"bitxor",E,E,45,[[[R[422]]]]],[11,"bitxor",E,E,45,[[[R[422]]]]],[11,"bitxor",E,E,45,[[[R[422],["i128"]],["i128"]],[[R[422],["i128"]],["i128"]]]],[11,"bitxor",E,E,45,[[[R[422]]]]],[11,"bitxor",E,E,45,[[[R[422]]]]],[11,"bitxor",E,E,45,[[["i8"],[R[422],["i8"]]],[["i8"],[R[422],["i8"]]]]],[11,"bitxor",E,E,45,[[["u16"],[R[422],["u16"]]],[["u16"],[R[422],["u16"]]]]],[11,"bitxor",E,E,45,[[[R[422],["usize"]],["usize"]],[[R[422],["usize"]],["usize"]]]],[11,"bitxor",E,E,45,[[[R[422]]]]],[11,"bitxor",E,E,45,[[[R[422]]]]],[11,"fmt",R[406],E,172,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"next",R[370],E,199,[[["self"]],[["option",["str"]],["str"]]]],[11,R[292],E,E,199,[[["self"]]]],[11,"next",R[405],E,171,[[["self"]],["option"]]],[11,R[292],E,E,171,[[["self"]]]],[11,"nth",E,E,171,[[["self"],["usize"]],["option"]]],[11,R[465],E,E,171,[[["self"],["b"],["f"]],["r"]]],[11,"last",E,E,171,[[],["option"]]],[11,"min",E,E,171,[[],["option"]]],[11,"max",E,E,171,[[],["option"]]],[11,"next",R[401],E,132,[[["self"]],["option"]]],[11,R[292],E,E,132,[[["self"]]]],[11,"nth",E,E,132,[[["self"],["usize"]],["option"]]],[11,"next",R[370],E,210,[[["self"]],[["option",["char"]],["char"]]]],[11,"count",E,E,210,[[],["usize"]]],[11,R[292],E,E,210,[[["self"]]]],[11,"last",E,E,210,[[],[["option",["char"]],["char"]]]],[11,"next",R[401],E,144,[[["self"]],["option"]]],[11,"nth",E,E,144,[[["self"],["usize"]],["option"]]],[11,"last",E,E,144,[[],["option"]]],[11,"count",E,E,144,[[],["usize"]]],[11,R[292],E,E,144,[[["self"]]]],[11,R[465],E,E,144,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,144,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,144,[[["self"]],["option"]]],[11,"nth",E,E,144,[[["self"],["usize"]],["option"]]],[11,"last",E,E,144,[[],["option"]]],[11,"count",E,E,144,[[],["usize"]]],[11,R[292],E,E,144,[[["self"]]]],[11,R[465],E,E,144,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,144,[[["acc"],["fold"]],["acc"]]],[11,"next",R[370],E,222,[[["self"]],[["option",["char"]],["char"]]]],[11,R[292],E,E,222,[[["self"]]]],[11,R[465],E,E,222,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,222,[[["acc"],["fold"]],["acc"]]],[11,"next",R[405],E,78,[[["self"]],["option"]]],[11,R[292],E,E,78,[[["self"]]]],[11,"nth",E,E,78,[[["self"],["usize"]],["option"]]],[11,"next",R[409],E,190,[[["self"]],["option"]]],[11,R[292],E,E,190,[[["self"]]]],[11,"next",R[401],E,147,[[["self"]],["option"]]],[11,R[292],E,E,147,[[["self"]]]],[11,"nth",E,E,147,[[["self"],["usize"]],["option"]]],[11,R[465],E,E,147,[[["self"],["acc"],["f"]],["r"]]],[11,"next",R[409],E,181,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,181,[[["self"]]]],[11,"count",E,E,181,[[],["usize"]]],[11,"nth",E,E,181,[[["self"],["usize"]],[["option"],[T]]]],[11,"last",E,E,181,[[],[["option"],[T]]]],[11,R[467],E,E,181,[[["self"],["p"]],[["option",["usize"]],["usize"]]]],[11,R[466],E,E,181,[[["self"],["p"]],[["option",["usize"]],["usize"]]]],[11,"next",E,E,184,[[["self"]],["option"]]],[11,R[292],E,E,184,[[["self"]]]],[11,"next",E,E,188,[[["self"]],["option"]]],[11,R[292],E,E,188,[[["self"]]]],[11,"next",R[401],E,134,[[["self"]],["option"]]],[11,R[292],E,E,134,[[["self"]]]],[11,"count",E,E,134,[[],["usize"]]],[11,R[465],E,E,134,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,134,[[["acc"],["fold"]],["acc"]]],[11,"next",R[370],E,200,[[["self"]],[["option",["str"]],["str"]]]],[11,"next",E,E,198,[[["self"]],[["option",["str"]],["str"]]]],[11,R[292],E,E,198,[[["self"]]]],[11,"last",E,E,198,[[],[["option",["str"]],["str"]]]],[11,"next",E,E,209,[[["self"]],["option"]]],[11,"next",E,E,204,[[["self"]],[["option",["str"]],["str"]]]],[11,"next",R[401],E,128,[[["self"]],["option"]]],[11,R[292],E,E,128,[[["self"]]]],[11,"next",R[370],E,219,[[["self"]],[["option",["u16"]],["u16"]]]],[11,R[292],E,E,219,[[["self"]]]],[11,"next",R[409],E,182,[[["self"]],["option"]]],[11,R[292],E,E,182,[[["self"]]]],[11,"next",R[401],E,122,[[["self"]],["option"]]],[11,R[292],E,E,122,[[["self"]]]],[11,"next",E,E,140,[[["self"]],["option"]]],[11,"nth",E,E,140,[[["self"],["usize"]],["option"]]],[11,"count",E,E,140,[[],["usize"]]],[11,"last",E,E,140,[[],["option"]]],[11,R[292],E,E,140,[[["self"]]]],[11,R[465],E,E,140,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,140,[[["acc"],["fold"]],["acc"]]],[11,"next",R[370],E,220,[[["self"]],[["option",["str"]],["str"]]]],[11,R[292],E,E,220,[[["self"]]]],[11,"last",E,E,220,[[],[["option",["str"]],["str"]]]],[11,"next",R[401],E,137,[[["self"]],["option"]]],[11,"count",E,E,137,[[],["usize"]]],[11,"nth",E,E,137,[[["self"],["usize"]],["option"]]],[11,"last",E,E,137,[[],["option"]]],[11,R[292],E,E,137,[[["self"]]]],[11,R[465],E,E,137,[[["self"],["b"],["f"]],["r"]]],[11,"fold",E,E,137,[[["acc"],["fold"]],["acc"]]],[11,"next",R[409],E,195,[[["self"]],["option"]]],[11,R[292],E,E,195,[[["self"]]]],[11,"count",E,E,195,[[],["usize"]]],[11,"nth",E,E,195,[[["self"],["usize"]],["option"]]],[11,"last",E,E,195,[[],["option"]]],[11,"next",E,E,186,[[["self"]],["option"]]],[11,R[292],E,E,186,[[["self"]]]],[11,"next",R[401],E,135,[[["self"]],["option"]]],[11,R[292],E,E,135,[[["self"]]]],[11,R[465],E,E,135,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,135,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,143,[[["self"]],["option"]]],[11,R[292],E,E,143,[[["self"]]]],[11,R[465],E,E,143,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,143,[[["acc"],["fold"]],["acc"]]],[11,"next",R[370],E,208,[[["self"]],["option"]]],[11,"next",R[401],E,131,[[["self"]],["option"]]],[11,"count",E,E,131,[[],["usize"]]],[11,R[465],E,E,131,[[["self"],["acc"],["f"]],["r"]]],[11,"fold",E,E,131,[[["acc"],["f"]],["acc"]]],[11,"nth",E,E,131,[[["self"],["usize"]],["option"]]],[11,"find",E,E,131,[[["self"],["p"]],["option"]]],[11,"last",E,E,131,[[],["option"]]],[11,R[292],E,E,131,[[["self"]]]],[11,"next",E,E,133,[[["self"]],["option"]]],[11,R[292],E,E,133,[[["self"]]]],[11,R[465],E,E,133,[[["self"],["acc"],["g"]],["r"]]],[11,"fold",E,E,133,[[["acc"],["g"]],["acc"]]],[11,"next",R[409],E,196,[[["self"]],["option"]]],[11,R[292],E,E,196,[[["self"]]]],[11,"count",E,E,196,[[],["usize"]]],[11,"nth",E,E,196,[[["self"],["usize"]],["option"]]],[11,"last",E,E,196,[[],["option"]]],[11,"next",R[401],"Overflow Behavior",136,[[["self"]],["option"]]],[11,R[292],E,E,136,[[["self"]]]],[11,"nth",E,E,136,[[["self"],["usize"]],["option"]]],[11,"count",E,E,136,[[],["usize"]]],[11,R[465],E,E,136,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,136,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,130,[[["self"]],["option"]]],[11,R[292],E,E,130,[[["self"]]]],[11,R[465],E,E,130,[[["self"],["acc"],["f"]],["r"]]],[11,"next",R[409],E,179,[[["self"]],["option"]]],[11,R[292],E,E,179,[[["self"]]]],[11,"count",E,E,179,[[],["usize"]]],[11,"nth",E,E,179,[[["self"],["usize"]],["option"]]],[11,"last",E,E,179,[[],["option"]]],[11,"next",E,E,187,[[["self"]],["option"]]],[11,R[292],E,E,187,[[["self"]]]],[11,"next",E,E,193,[[["self"]],["option"]]],[11,R[292],E,E,193,[[["self"]]]],[11,"count",E,E,193,[[],["usize"]]],[11,"nth",E,E,193,[[["self"],["usize"]],["option"]]],[11,"last",E,E,193,[[],["option"]]],[11,"next",R[370],E,207,[[["self"]],[["option",["str"]],["str"]]]],[11,"next",R[401],E,145,[[["self"]],["option"]]],[11,R[292],E,E,145,[[["self"]]]],[11,R[465],E,E,145,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,145,[[["acc"],["fold"]],["acc"]]],[11,"next",R[408],E,177,[[["self"]],["option"]]],[11,R[292],E,E,177,[[["self"]]]],[11,"next",R[370],E,203,[[["self"]],[["option",["str"]],["str"]]]],[11,"next",R[408],E,176,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,176,[[["self"]]]],[11,"next",R[370],E,214,[[["self"]],[["option",["str"]],["str"]]]],[11,R[292],E,E,214,[[["self"]]]],[11,"last",E,E,214,[[],[["option",["str"]],["str"]]]],[11,"next",R[409],E,178,[[["self"]],["option"]]],[11,R[292],E,E,178,[[["self"]]]],[11,"count",E,E,178,[[],["usize"]]],[11,"nth",E,E,178,[[["self"],["usize"]],["option"]]],[11,"last",E,E,178,[[],["option"]]],[11,"next",R[401],E,149,[[["self"]],["option"]]],[11,R[292],E,E,149,[[["self"]]]],[11,R[465],E,E,149,[[["self"],["b"],["f"]],["r"]]],[11,"fold",E,E,149,[[["acc"],["f"]],["acc"]]],[11,"next",R[370],E,212,[[["self"]],[["option",["u8"]],["u8"]]]],[11,R[292],E,E,212,[[["self"]]]],[11,"count",E,E,212,[[],["usize"]]],[11,"last",E,E,212,[[],["option"]]],[11,"nth",E,E,212,[[["self"],["usize"]],["option"]]],[11,"all",E,E,212,[[["self"],["f"]],["bool"]]],[11,"any",E,E,212,[[["self"],["f"]],["bool"]]],[11,"find",E,E,212,[[["self"],["p"]],["option"]]],[11,R[467],E,E,212,[[["self"],["p"]],[["option",["usize"]],["usize"]]]],[11,R[466],E,E,212,[[["self"],["p"]],[["option",["usize"]],["usize"]]]],[11,"next",R[401],E,129,[[["self"]],["option"]]],[11,R[292],E,E,129,[[["self"]]]],[11,"nth",E,E,129,[[["self"],["usize"]],["option"]]],[11,R[465],E,E,129,[[["self"],["b"],["f"]],["r"]]],[11,"fold",E,E,129,[[["acc"],["f"]],["acc"]]],[11,"find",E,E,129,[[["self"],["p"]],["option"]]],[11,"next",E,E,125,[[["self"]],["option"]]],[11,R[292],E,E,125,[[["self"]]]],[11,"next",R[409],E,180,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,180,[[["self"]]]],[11,"count",E,E,180,[[],["usize"]]],[11,"nth",E,E,180,[[["self"],["usize"]],[["option"],[T]]]],[11,"last",E,E,180,[[],[["option"],[T]]]],[11,R[467],E,E,180,[[["self"],["p"]],[["option",["usize"]],["usize"]]]],[11,R[466],E,E,180,[[["self"],["p"]],[["option",["usize"]],["usize"]]]],[11,R[468],E,E,180,[[["f"]],["bool"]]],[11,"next",R[401],E,142,[[["self"]],["option"]]],[11,R[292],E,E,142,[[["self"]]]],[11,R[465],E,E,142,[[["self"],["acc"],["fold"]],["r"]]],[11,"next",E,E,138,[[["self"]],["option"]]],[11,R[292],E,E,138,[[["self"]]]],[11,R[465],E,E,138,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,138,[[["acc"],["fold"]],["acc"]]],[11,"next",R[405],E,77,[[["self"]],["option"]]],[11,R[292],E,E,77,[[["self"]]]],[11,"nth",E,E,77,[[["self"],["usize"]],["option"]]],[11,"last",E,E,77,[[],["option"]]],[11,"min",E,E,77,[[],["option"]]],[11,"max",E,E,77,[[],["option"]]],[11,"next",R[370],E,205,[[["self"]],[["option",["str"]],["str"]]]],[11,"next",R[401],E,124,[[["self"]],["option"]]],[11,R[292],E,E,124,[[["self"]]]],[11,"next",E,E,148,[[["self"]],["option"]]],[11,R[292],E,E,148,[[["self"]]]],[11,R[465],E,E,148,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,148,[[["acc"],["fold"]],["acc"]]],[11,"next",R[370],E,211,[[["self"]],["option"]]],[11,"count",E,E,211,[[],["usize"]]],[11,R[292],E,E,211,[[["self"]]]],[11,"last",E,E,211,[[],["option"]]],[11,"next",R[409],E,183,[[["self"]],["option"]]],[11,R[292],E,E,183,[[["self"]]]],[11,"count",E,E,183,[[],["usize"]]],[11,"nth",E,E,183,[[["self"],["usize"]],["option"]]],[11,"last",E,E,183,[[],["option"]]],[11,"next",R[370],E,201,[[["self"]],[["option",["str"]],["str"]]]],[11,"next",R[409],E,192,[[["self"]],["option"]]],[11,R[292],E,E,192,[[["self"]]]],[11,"count",E,E,192,[[],["usize"]]],[11,"nth",E,E,192,[[["self"],["usize"]],["option"]]],[11,"last",E,E,192,[[],["option"]]],[11,"next",R[401],E,139,[[["self"]],["option"]]],[11,R[292],E,E,139,[[["self"]]]],[11,R[465],E,E,139,[[["self"],["acc"],["fold"]],["r"]]],[11,"next",R[370],E,221,[[["self"]],[["option",["char"]],["char"]]]],[11,R[292],E,E,221,[[["self"]]]],[11,R[465],E,E,221,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,221,[[["acc"],["fold"]],["acc"]]],[11,"next",R[401],E,127,[[["self"]],["option"]]],[11,"next",R[370],E,206,[[["self"]],[["option",["str"]],["str"]]]],[11,"next",E,E,223,[[["self"]],[["option",["char"]],["char"]]]],[11,R[292],E,E,223,[[["self"]]]],[11,R[465],E,E,223,[[["self"],["acc"],["fold"]],["r"]]],[11,"fold",E,E,223,[[["acc"],["fold"]],["acc"]]],[11,"next",R[409],E,194,[[["self"]],["option"]]],[11,R[292],E,E,194,[[["self"]]]],[11,"count",E,E,194,[[],["usize"]]],[11,"nth",E,E,194,[[["self"],["usize"]],["option"]]],[11,"last",E,E,194,[[],["option"]]],[11,"next",R[401],E,123,[[["self"]],["option"]]],[11,R[292],E,E,123,[[["self"]]]],[11,"next",R[408],E,175,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,175,[[["self"]]]],[11,"next",R[401],E,141,[[["self"]],["option"]]],[11,"nth",E,E,141,[[["self"],["usize"]],["option"]]],[11,R[292],E,E,141,[[["self"]]]],[11,R[465],E,E,141,[[["self"],["acc"],["fold"]],["r"]]],[11,"next",R[409],E,191,[[["self"]],["option"]]],[11,R[292],E,E,191,[[["self"]]]],[11,"count",E,E,191,[[],["usize"]]],[11,"nth",E,E,191,[[["self"],["usize"]],["option"]]],[11,"last",E,E,191,[[],["option"]]],[11,"next",R[401],E,126,[[["self"]],["option"]]],[11,R[292],E,E,126,[[["self"]]]],[11,"next",E,E,146,[[["self"]],["option"]]],[11,R[292],E,E,146,[[["self"]]]],[11,R[465],E,E,146,[[["self"],["b"],["f"]],["r"]]],[11,"fold",E,E,146,[[["acc"],["f"]],["acc"]]],[11,"next",R[409],E,185,[[["self"]],["option"]]],[11,R[292],E,E,185,[[["self"]]]],[11,"next",E,E,189,[[["self"]],["option"]]],[11,R[292],E,E,189,[[["self"]]]],[11,"next",R[370],E,202,[[["self"]],[["option",["str"]],["str"]]]],[11,"bitor",R[404],E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[["isize"],[R[422],["isize"]]],[["isize"],[R[422],["isize"]]]]],[11,"bitor",E,E,45,[[["i64"],[R[422],["i64"]]],[["i64"],[R[422],["i64"]]]]],[11,"bitor",E,E,45,[[["i8"],[R[422],["i8"]]],[["i8"],[R[422],["i8"]]]]],[11,"bitor",E,E,45,[[["u16"],[R[422],["u16"]]],[["u16"],[R[422],["u16"]]]]],[11,"bitor",E,E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[[R[422],["i16"]],["i16"]],[[R[422],["i16"]],["i16"]]]],[11,"bitor",E,E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[[R[422],["usize"]],["usize"]],[[R[422],["usize"]],["usize"]]]],[11,"bitor",E,E,45,[[[R[422],["u64"]],["u64"]],[[R[422],["u64"]],["u64"]]]],[11,"bitor",E,E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[["u32"],[R[422],["u32"]]],[["u32"],[R[422],["u32"]]]]],[11,"bitor",E,E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[[R[422],["u128"]],["u128"]],[[R[422],["u128"]],["u128"]]]],[11,"bitor",E,E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[[R[422],["i128"]],["i128"]],[[R[422],["i128"]],["i128"]]]],[11,"bitor",E,E,45,[[[R[422]]]]],[11,"bitor",E,E,45,[[[R[422],["u8"]],["u8"]],[[R[422],["u8"]],["u8"]]]],[11,"bitor",E,E,45,[[[R[422],["i32"]],["i32"]],[["i32"],[R[422],["i32"]]]]],[11,"neg",E,E,45,[[],[[R[422],["i128"]],["i128"]]]],[11,"neg",E,E,45,[[],[[R[422],["u128"]],["u128"]]]],[11,"neg",E,E,45,[[],[[R[422],["u64"]],["u64"]]]],[11,"neg",E,E,45,[[],[["i64"],[R[422],["i64"]]]]],[11,"neg",E,E,45,[[],[[R[422],["usize"]],["usize"]]]],[11,"neg",E,E,45,[[],[["i8"],[R[422],["i8"]]]]],[11,"neg",E,E,45,[[],[[R[422],["u8"]],["u8"]]]],[11,"neg",E,E,45,[[],[["isize"],[R[422],["isize"]]]]],[11,"neg",E,E,45,[[],[["u32"],[R[422],["u32"]]]]],[11,"neg",E,E,45,[[],[["u16"],[R[422],["u16"]]]]],[11,"neg",E,E,45,[[],[[R[422],["i16"]],["i16"]]]],[11,"neg",E,E,45,[[],[["i32"],[R[422],["i32"]]]]],[11,"div",E,E,45,[[["u32"],[R[422],["u32"]]],[["u32"],[R[422],["u32"]]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[["i8"],[R[422],["i8"]]],[["i8"],[R[422],["i8"]]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[[R[422],["i32"]],["i32"]],[["i32"],[R[422],["i32"]]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[[R[422],["i16"]],["i16"]],[[R[422],["i16"]],["i16"]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[[R[422],["i128"]],["i128"]],[[R[422],["i128"]],["i128"]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[[R[422],["u8"]],["u8"]],[[R[422],["u8"]],["u8"]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[["u16"],[R[422],["u16"]]],[["u16"],[R[422],["u16"]]]]],[11,"div",E,E,45,[[[R[422],["u128"]],["u128"]],[[R[422],["u128"]],["u128"]]]],[11,"div",E,E,45,[[[R[422]]]]],[11,"div",E,E,45,[[["i64"],[R[422],["i64"]]],[["i64"],[R[422],["i64"]]]]],[11,"div",E,E,45,[[[R[422],["u64"]],["u64"]],[[R[422],["u64"]],["u64"]]]],[11,"div",E,E,45,[[["isize"],[R[422],["isize"]]],[["isize"],[R[422],["isize"]]]]],[11,"div",E,E,45,[[[R[422],["usize"]],["usize"]],[[R[422],["usize"]],["usize"]]]],[11,"get",R[405],E,77,[[],["option"]]],[11,R[471],E,E,77,[[],["option"]]],[11,R[469],E,E,77,[[]]],[11,R[470],E,E,77,[[]]],[11,"index",E,E,77,[[]]],[11,R[350],E,E,77,[[]]],[11,"get",E,E,80,[[],["option"]]],[11,R[471],E,E,80,[[],["option"]]],[11,R[469],E,E,80,[[]]],[11,R[470],E,E,80,[[]]],[11,"index",E,E,80,[[]]],[11,R[350],E,E,80,[[]]],[11,"get",E,E,79,[[["str"]],["option"]]],[11,R[471],E,E,79,[[["str"]],["option"]]],[11,R[469],E,E,79,[[["str"]]]],[11,R[470],E,E,79,[[["str"]]]],[11,"index",E,E,79,[[["str"]]]],[11,R[350],E,E,79,[[["str"]]]],[11,"get",E,E,78,[[["str"]],["option"]]],[11,R[471],E,E,78,[[["str"]],["option"]]],[11,R[469],E,E,78,[[["str"]]]],[11,R[470],E,E,78,[[["str"]]]],[11,"index",E,E,78,[[["str"]]]],[11,R[350],E,E,78,[[["str"]]]],[11,"get",E,E,80,[[["str"]],["option"]]],[11,R[471],E,E,80,[[["str"]],["option"]]],[11,R[469],E,E,80,[[["str"]]]],[11,R[470],E,E,80,[[["str"]]]],[11,"index",E,E,80,[[["str"]]]],[11,R[350],E,E,80,[[["str"]]]],[11,"get",E,E,79,[[],["option"]]],[11,R[471],E,E,79,[[],["option"]]],[11,R[469],E,E,79,[[]]],[11,R[470],E,E,79,[[]]],[11,"index",E,E,79,[[]]],[11,R[350],E,E,79,[[]]],[11,"get",E,E,170,[[],["option"]]],[11,R[471],E,E,170,[[],["option"]]],[11,R[469],E,E,170,[[]]],[11,R[470],E,E,170,[[]]],[11,"index",E,E,170,[[]]],[11,R[350],E,E,170,[[]]],[11,"get",E,E,170,[[["str"]],["option"]]],[11,R[471],E,E,170,[[["str"]],["option"]]],[11,R[469],E,E,170,[[["str"]]]],[11,R[470],E,E,170,[[["str"]]]],[11,"index",E,E,170,[[["str"]]]],[11,R[350],E,E,170,[[["str"]]]],[11,"get",E,E,171,[[],["option"]]],[11,R[471],E,E,171,[[],["option"]]],[11,R[469],E,E,171,[[]]],[11,R[470],E,E,171,[[]]],[11,"index",E,E,171,[[]]],[11,R[350],E,E,171,[[]]],[11,"get",E,E,171,[[["str"]],["option"]]],[11,R[471],E,E,171,[[["str"]],["option"]]],[11,R[469],E,E,171,[[["str"]]]],[11,R[470],E,E,171,[[["str"]]]],[11,"index",E,E,171,[[["str"]]]],[11,R[350],E,E,171,[[["str"]]]],[11,"get",E,E,77,[[["str"]],["option"]]],[11,R[471],E,E,77,[[["str"]],["option"]]],[11,R[469],E,E,77,[[["str"]]]],[11,R[470],E,E,77,[[["str"]]]],[11,"index",E,E,77,[[["str"]]]],[11,R[350],E,E,77,[[["str"]]]],[11,"get",E,E,78,[[],["option"]]],[11,R[471],E,E,78,[[],["option"]]],[11,R[469],E,E,78,[[]]],[11,R[470],E,E,78,[[]]],[11,"index",E,E,78,[[]]],[11,R[350],E,E,78,[[]]],[11,"bitand",R[404],E,45,[[[R[422],["u64"]],["u64"]],[[R[422],["u64"]],["u64"]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[[R[422],["usize"]],["usize"]],[[R[422],["usize"]],["usize"]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[["u32"],[R[422],["u32"]]],[["u32"],[R[422],["u32"]]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[[R[422],["i32"]],["i32"]],[["i32"],[R[422],["i32"]]]]],[11,"bitand",E,E,45,[[[R[422],["u128"]],["u128"]],[[R[422],["u128"]],["u128"]]]],[11,"bitand",E,E,45,[[["i64"],[R[422],["i64"]]],[["i64"],[R[422],["i64"]]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[["isize"],[R[422],["isize"]]],[["isize"],[R[422],["isize"]]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[[R[422],["i16"]],["i16"]],[[R[422],["i16"]],["i16"]]]],[11,"bitand",E,E,45,[[["i8"],[R[422],["i8"]]],[["i8"],[R[422],["i8"]]]]],[11,"bitand",E,E,45,[[[R[422]]]]],[11,"bitand",E,E,45,[[[R[422],["i128"]],["i128"]],[[R[422],["i128"]],["i128"]]]],[11,"bitand",E,E,45,[[["u16"],[R[422],["u16"]]],[["u16"],[R[422],["u16"]]]]],[11,"bitand",E,E,45,[[[R[422],["u8"]],["u8"]],[[R[422],["u8"]],["u8"]]]],[11,R[293],R[408],R[472],86,[[["i"]],[R[3]]]],[11,R[473],R[404],E,45,[[[R[422],["u64"]],["self"],["u64"]]]],[11,R[473],E,E,45,[[["i64"],["self"],[R[422],["i64"]]]]],[11,R[473],E,E,45,[[["self"],[R[422]]]]],[11,R[473],E,E,45,[[[R[422]],["self"]]]],[11,R[473],E,E,45,[[["self"],[R[422],["i16"]],["i16"]]]],[11,R[473],E,E,45,[[["self"],["i8"],[R[422],["i8"]]]]],[11,R[473],E,E,45,[[[R[422]],["self"]]]],[11,R[473],E,E,45,[[["self"],[R[422]]]]],[11,R[473],E,E,45,[[["self"],[R[422],["usize"]],["usize"]]]],[11,R[473],E,E,45,[[[R[422]],["self"]]]],[11,R[473],E,E,45,[[["self"],[R[422]]]]],[11,R[473],E,E,45,[[[R[422],["i128"]],["self"],["i128"]]]],[11,R[473],E,E,45,[[[R[422],["i32"]],["self"],["i32"]]]],[11,R[473],E,E,45,[[[R[422]],["self"]]]],[11,R[473],E,E,45,[[["self"],["u32"],[R[422],["u32"]]]]],[11,R[473],E,E,45,[[["self"],[R[422]]]]],[11,R[473],E,E,45,[[["self"],[R[422]]]]],[11,R[473],E,E,45,[[["self"],[R[422]]]]],[11,R[473],E,E,45,[[["self"],[R[422],["u8"]],["u8"]]]],[11,R[473],E,E,45,[[["isize"],["self"],[R[422],["isize"]]]]],[11,R[473],E,E,45,[[["self"],[R[422]]]]],[11,R[473],E,E,45,[[["u16"],["self"],[R[422],["u16"]]]]],[11,R[473],E,E,45,[[["self"],[R[422]]]]],[11,R[473],E,E,45,[[["self"],[R[422],["u128"]],["u128"]]]],[11,"fmt",E,E,159,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,197,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[399],E,113,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[388],E,98,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,164,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,45,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,168,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,222,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,223,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,167,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,161,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[388],E,97,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[399],E,114,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[396],E,107,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,109,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,156,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,165,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,166,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,155,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[396],E,106,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,221,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,157,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,213,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[398],E,111,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,160,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,158,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,169,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[396],E,108,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,162,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[388],E,99,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,163,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"mul",E,E,45,[[[R[422],["u128"]],["u128"]],[[R[422],["u128"]],["u128"]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,"mul",E,E,45,[[["i8"],[R[422],["i8"]]],[["i8"],[R[422],["i8"]]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,"mul",E,E,45,[[["u16"],[R[422],["u16"]]],[["u16"],[R[422],["u16"]]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,"mul",E,E,45,[[["u32"],[R[422],["u32"]]],[["u32"],[R[422],["u32"]]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,"mul",E,E,45,[[[R[422],["i32"]],["i32"]],[["i32"],[R[422],["i32"]]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,"mul",E,E,45,[[["i64"],[R[422],["i64"]]],[["i64"],[R[422],["i64"]]]]],[11,"mul",E,E,45,[[["isize"],[R[422],["isize"]]],[["isize"],[R[422],["isize"]]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,"mul",E,E,45,[[[R[422],["u8"]],["u8"]],[[R[422],["u8"]],["u8"]]]],[11,"mul",E,E,45,[[[R[422],["usize"]],["usize"]],[[R[422],["usize"]],["usize"]]]],[11,"mul",E,E,45,[[[R[422],["u64"]],["u64"]],[[R[422],["u64"]],["u64"]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,"mul",E,E,45,[[[R[422],["i16"]],["i16"]],[[R[422],["i16"]],["i16"]]]],[11,"mul",E,E,45,[[[R[422],["i128"]],["i128"]],[[R[422],["i128"]],["i128"]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,"mul",E,E,45,[[[R[422]]]]],[11,R[295],R[410],E,215,[[["self"]],[R[369]]]],[11,R[474],E,E,215,[[["self"]],["option"]]],[11,R[295],E,E,216,[[["self"]],[R[369]]]],[11,R[474],E,E,216,[[["self"]],["option"]]],[11,R[475],E,E,216,[[["self"]],["option"]]],[11,R[295],E,E,218,[[["self"]],[R[369]]]],[11,R[474],E,E,218,[[["self"]],["option"]]],[11,R[295],E,E,217,[[["self"]],[R[369]]]],[11,R[474],E,E,217,[[["self"]],["option"]]],[11,R[475],E,E,217,[[["self"]],["option"]]],[11,"deref",R[396],E,108,[[["self"]],[T]]],[11,"deref",R[403],E,153,[[["self"]],[T]]],[11,"deref",R[396],E,109,[[["self"]],[T]]],[11,R[476],R[404],E,45,[[[R[422]],["self"]]]],[11,R[476],E,E,45,[[["self"],["u32"],[R[422],["u32"]]]]],[11,R[476],E,E,45,[[[R[422]],["self"]]]],[11,R[476],E,E,45,[[["self"],[R[422],["u8"]],["u8"]]]],[11,R[476],E,E,45,[[[R[422],["u64"]],["self"],["u64"]]]],[11,R[476],E,E,45,[[["self"],[R[422]]]]],[11,R[476],E,E,45,[[[R[422]],["self"]]]],[11,R[476],E,E,45,[[["self"],[R[422]]]]],[11,R[476],E,E,45,[[["u16"],["self"],[R[422],["u16"]]]]],[11,R[476],E,E,45,[[[R[422]],["self"]]]],[11,R[476],E,E,45,[[["self"],[R[422]]]]],[11,R[476],E,E,45,[[["self"],[R[422],["i16"]],["i16"]]]],[11,R[476],E,E,45,[[[R[422],["i32"]],["self"],["i32"]]]],[11,R[476],E,E,45,[[["self"],[R[422]]]]],[11,R[476],E,E,45,[[["self"],[R[422],["usize"]],["usize"]]]],[11,R[476],E,E,45,[[["self"],[R[422]]]]],[11,R[476],E,E,45,[[["isize"],["self"],[R[422],["isize"]]]]],[11,R[476],E,E,45,[[["i64"],["self"],[R[422],["i64"]]]]],[11,R[476],E,E,45,[[["self"],[R[422]]]]],[11,R[476],E,E,45,[[["self"],[R[422]]]]],[11,R[476],E,E,45,[[[R[422],["i128"]],["self"],["i128"]]]],[11,R[476],E,E,45,[[["self"],[R[422],["u128"]],["u128"]]]],[11,R[476],E,E,45,[[["self"],[R[422]]]]],[11,R[476],E,E,45,[[["self"],["i8"],[R[422],["i8"]]]]],[11,"fmt",R[370],E,212,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,222,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[402],E,150,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,126,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,220,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,140,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[402],E,151,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,181,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[399],E,113,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,201,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,133,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,191,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,162,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,134,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[396],E,110,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,148,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,131,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[388],E,97,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,127,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[405],E,171,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,138,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,193,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,146,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,221,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,166,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,122,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[405],E,78,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[408],E,176,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,175,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,160,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[399],E,114,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,129,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,200,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[406],E,172,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[405],E,82,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[400],E,121,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,199,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,44,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,182,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[396],E,109,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,135,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,203,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,178,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[396],E,108,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,205,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[410],E,215,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,169,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[389],E,102,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,185,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[410],E,92,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[389],E,3,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[408],E,86,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[410],E,216,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,183,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,192,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,144,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[405],E,170,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,130,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,45,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,194,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,168,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[389],E,3,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,189,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,141,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,147,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[388],E,99,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,211,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,125,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[396],E,105,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[403],E,152,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[405],E,80,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[397],E,10,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,184,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[410],E,217,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,143,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[388],E,1,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,139,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,196,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,204,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,155,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,128,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,214,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[396],E,104,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[388],E,98,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,167,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,124,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,46,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,137,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,207,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[405],E,77,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[398],E,111,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,132,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,209,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,149,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[405],E,85,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[408],E,177,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[405],E,79,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,158,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,210,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,202,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,161,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,190,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,156,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,197,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,208,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[396],E,107,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,188,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,180,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[400],E,120,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[403],E,153,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,142,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[399],E,31,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[410],E,218,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,145,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,179,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,123,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,206,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,213,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,165,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[388],E,100,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,164,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[389],E,3,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[391],E,11,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,223,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,163,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,159,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,195,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,186,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,219,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[409],E,187,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[404],E,157,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[396],E,106,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[401],E,136,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[370],E,198,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"sum",R[404],E,45,[[["i"]],[[R[422],["i128"]],["i128"]]]],[11,"sum",E,E,45,[[["i"]],[[R[422],["usize"]],["usize"]]]],[11,"sum",E,E,45,[[["i"]],[["i32"],[R[422],["i32"]]]]],[11,"sum",E,E,45,[[["i"]],[["i64"],[R[422],["i64"]]]]],[11,"sum",E,E,45,[[["i"]],[[R[422],["i128"]],["i128"]]]],[11,"sum",E,E,45,[[["i"]],[["u16"],[R[422],["u16"]]]]],[11,"sum",E,E,45,[[["i"]],[[R[422],["u8"]],["u8"]]]],[11,"sum",E,E,45,[[["i"]],[["i8"],[R[422],["i8"]]]]],[11,"sum",E,E,45,[[["i"]],[["u32"],[R[422],["u32"]]]]],[11,"sum",E,E,45,[[["i"]],[[R[422],["usize"]],["usize"]]]],[11,"sum",E,E,45,[[["i"]],[[R[422],["u8"]],["u8"]]]],[11,"sum",E,E,45,[[["i"]],[["u32"],[R[422],["u32"]]]]],[11,"sum",E,E,45,[[["i"]],[["i64"],[R[422],["i64"]]]]],[11,"sum",E,E,45,[[["i"]],[[R[422],["u64"]],["u64"]]]],[11,"sum",E,E,45,[[["i"]],[[R[422],["u64"]],["u64"]]]],[11,"sum",R[408],R[472],86,[[["i"]],[R[3]]]],[11,"sum",R[404],E,45,[[["i"]],[[R[422],["u128"]],["u128"]]]],[11,"sum",E,E,45,[[["i"]],[["isize"],[R[422],["isize"]]]]],[11,"sum",E,E,45,[[["i"]],[["isize"],[R[422],["isize"]]]]],[11,"sum",E,E,45,[[["i"]],[[R[422],["i16"]],["i16"]]]],[11,"sum",E,E,45,[[["i"]],[["i8"],[R[422],["i8"]]]]],[11,"sum",E,E,45,[[["i"]],[[R[422],["i16"]],["i16"]]]],[11,"sum",E,E,45,[[["i"]],[[R[422],["u128"]],["u128"]]]],[11,"sum",E,E,45,[[["i"]],[["u16"],[R[422],["u16"]]]]],[11,"sum",E,E,45,[[["i"]],[["i32"],[R[422],["i32"]]]]],[11,"sub",E,E,45,[[[R[422],["u64"]],["u64"]],[[R[422],["u64"]],["u64"]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"sub",E,E,45,[[[R[422],["i128"]],["i128"]],[[R[422],["i128"]],["i128"]]]],[11,"sub",E,E,45,[[[R[422],["u8"]],["u8"]],[[R[422],["u8"]],["u8"]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"sub",E,E,45,[[["i64"],[R[422],["i64"]]],[["i64"],[R[422],["i64"]]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"sub",E,E,45,[[["isize"],[R[422],["isize"]]],[["isize"],[R[422],["isize"]]]]],[11,"sub",E,E,45,[[[R[422],["u128"]],["u128"]],[[R[422],["u128"]],["u128"]]]],[11,"sub",E,E,45,[[["u16"],[R[422],["u16"]]],[["u16"],[R[422],["u16"]]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"sub",E,E,45,[[[R[422],["i16"]],["i16"]],[[R[422],["i16"]],["i16"]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"sub",E,E,45,[[[R[422],["usize"]],["usize"]],[[R[422],["usize"]],["usize"]]]],[11,"sub",E,E,45,[[["i8"],[R[422],["i8"]]],[["i8"],[R[422],["i8"]]]]],[11,"sub",E,E,45,[[["u32"],[R[422],["u32"]]],[["u32"],[R[422],["u32"]]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"sub",E,E,45,[[[R[422],["i32"]],["i32"]],[["i32"],[R[422],["i32"]]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"sub",E,E,45,[[[R[422]]]]],[11,"clone",R[370],E,199,[[["self"]],["linesany"]]],[11,"clone",R[401],E,137,[[["self"]],[R[477]]]],[11,"clone",R[370],E,202,[[["self"]],["splitn"]]],[11,"clone",R[400],E,121,[[["self"]],[R[478]]]],[11,"clone",R[401],E,130,[[["self"]],["cycle"]]],[11,"clone",R[404],E,162,[[["self"]],[R[451]]]],[11,"clone",R[405],E,85,[[["self"]],[R[450]]]],[11,"clone",R[410],E,218,[[["self"]],["strsearcher"]]],[11,"clone",E,E,217,[[["self"]],[R[479]]]],[11,"clone",R[405],E,79,[[["self"]],[R[800]]]],[11,"clone",R[401],E,123,[[["self"]],[R[480]]]],[11,"clone",E,E,125,[[["self"]],["once"]]],[11,"clone",R[409],E,180,[[["self"]],["iter"]]],[11,"clone",R[388],E,97,[[["self"]],[R[314]]]],[11,"clone",R[401],E,124,[[["self"]],["empty"]]],[11,"clone",E,E,129,[[["self"]],["rev"]]],[11,"clone",E,E,147,[[["self"]],["stepby"]]],[11,"clone",E,E,138,[[["self"]],[R[481]]]],[11,"clone",R[410],E,215,[[["self"]],["charsearcher"]]],[11,"clone",R[408],E,86,[[["self"]],[R[3]]]],[11,R[385],E,E,86,[[[R[3]],["self"]]]],[11,"clone",R[404],E,157,[[["self"]],[R[434]]]],[11,"clone",R[370],E,204,[[["self"]],["splitterminator"]]],[11,"clone",R[401],E,142,[[["self"]],["scan"]]],[11,"clone",R[389],E,102,[[["self"]],[R[46]]]],[11,"clone",R[401],E,128,[[["self"]],[R[337]]]],[11,"clone",R[404],E,167,[[["self"]],[R[444]]]],[11,"clone",R[401],E,140,[[["self"]],["skip"]]],[11,"clone",E,E,133,[[["self"]],["map"]]],[11,"clone",E,E,146,[[["self"]],["cloned"]]],[11,"clone",E,E,148,[[["self"]],["flatten"]]],[11,"clone",R[402],E,150,[[["self"]],[R[459]]]],[11,"clone",R[401],E,136,[[["self"]],[R[328]]]],[11,"clone",R[404],E,155,[[["self"]],[R[455]]]],[11,"clone",R[401],E,139,[[["self"]],[R[482]]]],[11,"clone",R[370],E,200,[[["self"]],["split"]]],[11,"clone",E,E,197,[[["self"]],[R[367]]]],[11,"clone",E,E,212,[[["self"]],["bytes"]]],[11,"clone",R[388],E,99,[[["self"]],[R[317]]]],[11,"clone",R[401],E,126,[[["self"]],["oncewith"]]],[11,"clone",R[409],E,191,[[["self"]],[R[795]]]],[11,"clone",R[405],E,78,[[["self"]],[R[443]]]],[11,"clone",R[370],E,207,[[["self"]],["rmatches"]]],[11,"clone",R[410],E,216,[[["self"]],["charslicesearcher"]]],[11,"clone",R[370],E,208,[[["self"]],["matchindices"]]],[11,"clone",E,E,221,[[["self"]],["escapedebug"]]],[11,"clone",R[403],E,153,[[["self"]],[R[441]]]],[11,"clone",R[404],E,163,[[["self"]],[R[442]]]],[11,"clone",R[409],E,189,[[["self"]],["rsplit"]]],[11,"clone",R[401],E,141,[[["self"]],["take"]]],[11,"clone",E,E,131,[[["self"]],["chain"]]],[11,"clone",R[400],E,120,[[["self"]],[R[460]]]],[11,"clone",R[409],E,179,[[["self"]],["windows"]]],[11,"clone",E,E,178,[[["self"]],["chunks"]]],[11,"clone",R[403],E,154,[[["self"]],[R[483]]]],[11,"clone",R[370],E,211,[[["self"]],["charindices"]]],[11,"clone",E,E,206,[[["self"]],["matches"]]],[11,"clone",R[388],E,98,[[["self"]],[R[437]]]],[11,"clone",R[404],E,160,[[["self"]],[R[438]]]],[11,"clone",R[405],E,80,[[["self"]],[R[453]]]],[11,"clone",E,E,77,[[["self"]],["range"]]],[11,"clone",R[410],E,92,[[["self"]],[R[369]]]],[11,"clone",R[370],E,209,[[["self"]],["rmatchindices"]]],[11,"clone",R[405],E,171,[[["self"]],[R[484]]]],[11,"clone",R[370],E,203,[[["self"]],["rsplitn"]]],[11,"clone",E,E,210,[[["self"]],["chars"]]],[11,"clone",R[401],E,144,[[["self"]],["fuse"]]],[11,"clone",E,E,143,[[["self"]],["flatmap"]]],[11,"clone",R[396],E,104,[[["self"]],["cell"]]],[11,"clone",R[408],E,177,[[["self"]],[R[485]]]],[11,"clone",R[399],E,113,[[["self"]],["error"]]],[11,"clone",R[404],E,161,[[["self"]],[R[448]]]],[11,"clone",E,E,164,[[["self"]],[R[436]]]],[11,"clone",R[397],E,10,[[["self"]],[R[105]]]],[11,"clone",R[409],E,193,[[["self"]],["rchunks"]]],[11,"clone",R[404],E,169,[[["self"]],[R[440]]]],[11,"clone",R[399],E,114,[[["self"]],[R[325]]]],[11,"clone",R[370],E,222,[[["self"]],["escapedefault"]]],[11,"clone",R[404],E,159,[[["self"]],[R[452]]]],[11,"clone",R[403],E,152,[[["self"]],[R[345]]]],[11,"clone",R[404],E,44,[[["self"]],[R[486]]]],[11,"clone",R[401],E,127,[[["self"]],["fromfn"]]],[11,"clone",R[404],E,165,[[["self"]],[R[454]]]],[11,"clone",R[370],E,219,[[["self"]],["encodeutf16"]]],[11,"clone",E,E,198,[[["self"]],["lines"]]],[11,"clone",R[401],E,149,[[["self"]],["copied"]]],[11,"clone",R[404],E,168,[[["self"]],[R[439]]]],[11,"clone",E,E,45,[[["self"]],[R[422]]]],[11,"clone",E,E,156,[[["self"]],[R[449]]]],[11,"clone",R[402],E,151,[[["self"]],[R[464]]]],[11,"clone",R[405],E,82,[[["self"]],["bound"]]],[11,"clone",R[370],E,213,[[["self"]],[R[446]]]],[11,"clone",E,E,220,[[["self"]],["splitasciiwhitespace"]]],[11,"clone",R[408],E,175,[[["self"]],["iter"]]],[11,"clone",R[388],E,100,[[["self"]],["layout"]]],[11,"clone",R[370],E,201,[[["self"]],["rsplit"]]],[11,"clone",E,E,205,[[["self"]],["rsplitterminator"]]],[11,"clone",R[404],E,46,[[["self"]],[R[487]]]],[11,"clone",R[401],E,122,[[["self"]],["repeat"]]],[11,"clone",R[405],E,170,[[["self"]],[R[488]]]],[11,"clone",R[396],"Panics",105,[[["self"]],[R[491]]]],[11,"clone",R[406],E,172,[[["self"]],[R[315]]]],[11,"clone",R[391],E,11,[[["self"]],[R[490]]]],[11,"clone",R[401],E,135,[[["self"]],[R[489]]]],[11,"clone",R[404],E,166,[[["self"]],[R[445]]]],[11,"clone",R[370],E,223,[[["self"]],["escapeunicode"]]],[11,"clone",R[398],E,111,[[["self"]],[R[433]]]],[11,"clone",R[370],E,214,[[["self"]],["splitwhitespace"]]],[11,"clone",R[404],E,158,[[["self"]],[R[447]]]],[11,"clone",R[401],E,134,[[["self"]],["filter"]]],[11,"clone",R[409],E,195,[[["self"]],[R[796]]]],[11,"clone",R[401],E,145,[[["self"]],["inspect"]]],[11,"clone",R[409],E,184,[[["self"]],["split"]]],[11,"clone",R[401],E,132,[[["self"]],["zip"]]],[11,R[106],R[404],E,159,[[[R[452]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,159,[[[R[452]],["self"]],["bool"]]],[11,"le",E,E,159,[[[R[452]],["self"]],["bool"]]],[11,"gt",E,E,159,[[[R[452]],["self"]],["bool"]]],[11,"ge",E,E,159,[[[R[452]],["self"]],["bool"]]],[11,R[106],E,E,166,[[["self"],[R[445]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,166,[[["self"],[R[445]]],["bool"]]],[11,"le",E,E,166,[[["self"],[R[445]]],["bool"]]],[11,"gt",E,E,166,[[["self"],[R[445]]],["bool"]]],[11,"ge",E,E,166,[[["self"],[R[445]]],["bool"]]],[11,R[106],R[391],E,11,[[["self"],[R[490]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,11,[[["self"],[R[490]]],["bool"]]],[11,"le",E,E,11,[[["self"],[R[490]]],["bool"]]],[11,"ge",E,E,11,[[["self"],[R[490]]],["bool"]]],[11,"gt",E,E,11,[[["self"],[R[490]]],["bool"]]],[11,R[106],R[406],E,172,[[["self"],[R[315]]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[403],E,153,[[[R[441]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,153,[[[R[441]],["self"]],["bool"]]],[11,"le",E,E,153,[[[R[441]],["self"]],["bool"]]],[11,"gt",E,E,153,[[[R[441]],["self"]],["bool"]]],[11,"ge",E,E,153,[[[R[441]],["self"]],["bool"]]],[11,R[106],R[408],E,86,[[[R[3]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,86,[[[R[3]],["self"]],["bool"]]],[11,"le",E,E,86,[[[R[3]],["self"]],["bool"]]],[11,"gt",E,E,86,[[[R[3]],["self"]],["bool"]]],[11,"ge",E,E,86,[[[R[3]],["self"]],["bool"]]],[11,R[106],R[404],E,168,[[["self"],[R[439]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,168,[[["self"],[R[439]]],["bool"]]],[11,"le",E,E,168,[[["self"],[R[439]]],["bool"]]],[11,"gt",E,E,168,[[["self"],[R[439]]],["bool"]]],[11,"ge",E,E,168,[[["self"],[R[439]]],["bool"]]],[11,R[106],R[402],E,150,[[["self"],[R[459]]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[398],E,111,[[[R[433]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[389],E,102,[[[R[46]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,102,[[[R[46]],["self"]],["bool"]]],[11,"le",E,E,102,[[[R[46]],["self"]],["bool"]]],[11,"gt",E,E,102,[[[R[46]],["self"]],["bool"]]],[11,"ge",E,E,102,[[[R[46]],["self"]],["bool"]]],[11,R[106],R[404],E,165,[[["self"],[R[454]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,165,[[["self"],[R[454]]],["bool"]]],[11,"le",E,E,165,[[["self"],[R[454]]],["bool"]]],[11,"gt",E,E,165,[[["self"],[R[454]]],["bool"]]],[11,"ge",E,E,165,[[["self"],[R[454]]],["bool"]]],[11,R[106],E,E,167,[[[R[444]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,167,[[[R[444]],["self"]],["bool"]]],[11,"le",E,E,167,[[[R[444]],["self"]],["bool"]]],[11,"gt",E,E,167,[[[R[444]],["self"]],["bool"]]],[11,"ge",E,E,167,[[[R[444]],["self"]],["bool"]]],[11,R[106],R[399],E,113,[[["self"],["error"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[404],E,160,[[["self"],[R[438]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,160,[[["self"],[R[438]]],["bool"]]],[11,"le",E,E,160,[[["self"],[R[438]]],["bool"]]],[11,"gt",E,E,160,[[["self"],[R[438]]],["bool"]]],[11,"ge",E,E,160,[[["self"],[R[438]]],["bool"]]],[11,R[106],R[396],"Panics",105,[[[R[491]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,"Panics",105,[[[R[491]],["self"]],["bool"]]],[11,"le",E,"Panics",105,[[[R[491]],["self"]],["bool"]]],[11,"gt",E,"Panics",105,[[[R[491]],["self"]],["bool"]]],[11,"ge",E,"Panics",105,[[[R[491]],["self"]],["bool"]]],[11,R[106],R[404],E,162,[[["self"],[R[451]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,162,[[["self"],[R[451]]],["bool"]]],[11,"le",E,E,162,[[["self"],[R[451]]],["bool"]]],[11,"gt",E,E,162,[[["self"],[R[451]]],["bool"]]],[11,"ge",E,E,162,[[["self"],[R[451]]],["bool"]]],[11,R[106],R[405],E,85,[[["self"],[R[450]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,85,[[["self"],[R[450]]],["bool"]]],[11,"le",E,E,85,[[["self"],[R[450]]],["bool"]]],[11,"gt",E,E,85,[[["self"],[R[450]]],["bool"]]],[11,"ge",E,E,85,[[["self"],[R[450]]],["bool"]]],[11,R[106],R[402],E,151,[[[R[464]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[404],E,169,[[["self"],[R[440]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,169,[[["self"],[R[440]]],["bool"]]],[11,"le",E,E,169,[[["self"],[R[440]]],["bool"]]],[11,"gt",E,E,169,[[["self"],[R[440]]],["bool"]]],[11,"ge",E,E,169,[[["self"],[R[440]]],["bool"]]],[11,R[106],E,E,164,[[[R[436]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,164,[[[R[436]],["self"]],["bool"]]],[11,"le",E,E,164,[[[R[436]],["self"]],["bool"]]],[11,"gt",E,E,164,[[[R[436]],["self"]],["bool"]]],[11,"ge",E,E,164,[[[R[436]],["self"]],["bool"]]],[11,R[106],E,E,158,[[["self"],[R[447]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,158,[[["self"],[R[447]]],["bool"]]],[11,"le",E,E,158,[[["self"],[R[447]]],["bool"]]],[11,"gt",E,E,158,[[["self"],[R[447]]],["bool"]]],[11,"ge",E,E,158,[[["self"],[R[447]]],["bool"]]],[11,R[106],R[396],E,104,[[["cell"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,104,[[["cell"],["self"]],["bool"]]],[11,"le",E,E,104,[[["cell"],["self"]],["bool"]]],[11,"gt",E,E,104,[[["cell"],["self"]],["bool"]]],[11,"ge",E,E,104,[[["cell"],["self"]],["bool"]]],[11,R[106],R[404],E,45,[[["self"],[R[422]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,45,[[["self"],[R[422]]],["bool"]]],[11,"le",E,E,45,[[["self"],[R[422]]],["bool"]]],[11,"gt",E,E,45,[[["self"],[R[422]]],["bool"]]],[11,"ge",E,E,45,[[["self"],[R[422]]],["bool"]]],[11,R[106],E,E,163,[[[R[442]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,163,[[[R[442]],["self"]],["bool"]]],[11,"le",E,E,163,[[[R[442]],["self"]],["bool"]]],[11,"gt",E,E,163,[[[R[442]],["self"]],["bool"]]],[11,"ge",E,E,163,[[[R[442]],["self"]],["bool"]]],[11,R[106],R[397],E,10,[[[R[105]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[404],E,161,[[[R[448]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,161,[[[R[448]],["self"]],["bool"]]],[11,"le",E,E,161,[[[R[448]],["self"]],["bool"]]],[11,"gt",E,E,161,[[[R[448]],["self"]],["bool"]]],[11,"ge",E,E,161,[[[R[448]],["self"]],["bool"]]],[11,"fmt",E,E,161,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,162,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,45,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,167,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,159,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,165,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,166,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,160,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,163,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,169,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,168,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,158,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,164,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"shr",E,E,45,[[["usize"]],[[R[422],["u64"]],["u64"]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]],[[R[422],["i16"]],["i16"]]]],[11,"shr",E,E,45,[[["usize"]],[["u16"],[R[422],["u16"]]]]],[11,"shr",E,E,45,[[["usize"]],[[R[422],["usize"]],["usize"]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]],[["i32"],[R[422],["i32"]]]]],[11,"shr",E,E,45,[[["usize"]],[["isize"],[R[422],["isize"]]]]],[11,"shr",E,E,45,[[["usize"]],[["i64"],[R[422],["i64"]]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]],[["i8"],[R[422],["i8"]]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]],[["u32"],[R[422],["u32"]]]]],[11,"shr",E,E,45,[[["usize"]],[[R[422],["u8"]],["u8"]]]],[11,"shr",E,E,45,[[["usize"]],[[R[422],["i128"]],["i128"]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]]]],[11,"shr",E,E,45,[[["usize"]],[[R[422],["u128"]],["u128"]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,"add",E,E,45,[[["u16"],[R[422],["u16"]]],[["u16"],[R[422],["u16"]]]]],[11,"add",E,E,45,[[[R[422],["u64"]],["u64"]],[[R[422],["u64"]],["u64"]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,"add",E,E,45,[[[R[422],["u128"]],["u128"]],[[R[422],["u128"]],["u128"]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,"add",E,E,45,[[["u32"],[R[422],["u32"]]],[["u32"],[R[422],["u32"]]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,"add",E,E,45,[[[R[422],["u8"]],["u8"]],[[R[422],["u8"]],["u8"]]]],[11,"add",E,E,45,[[["i8"],[R[422],["i8"]]],[["i8"],[R[422],["i8"]]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,"add",E,E,45,[[["i64"],[R[422],["i64"]]],[["i64"],[R[422],["i64"]]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,"add",E,E,45,[[[R[422],["i128"]],["i128"]],[[R[422],["i128"]],["i128"]]]],[11,"add",E,E,45,[[["isize"],[R[422],["isize"]]],[["isize"],[R[422],["isize"]]]]],[11,"add",E,E,45,[[[R[422],["i16"]],["i16"]],[[R[422],["i16"]],["i16"]]]],[11,"add",E,E,45,[[[R[422],["usize"]],["usize"]],[[R[422],["usize"]],["usize"]]]],[11,"add",E,E,45,[[[R[422],["i32"]],["i32"]],[["i32"],[R[422],["i32"]]]]],[11,"add",E,E,45,[[[R[422]]]]],[11,R[492],R[399],E,112,[[["str"],["self"]],[["error"],[R[3],["error"]]]]],[11,R[493],E,E,112,[[["self"],["char"]],[["error"],[R[3],["error"]]]]],[11,R[417],E,E,112,[[["self"],[R[325]]],[["error"],[R[3],["error"]]]]],[11,R[494],R[405],E,171,[[["self"]],[["bound"],[T]]]],[11,R[495],E,E,171,[[["self"]],[["bound"],[T]]]],[11,R[494],E,E,77,[[["self"]],[["bound"],[T]]]],[11,R[495],E,E,77,[[["self"]],[["bound"],[T]]]],[11,R[494],E,E,78,[[["self"]],[["bound"],[T]]]],[11,R[495],E,E,78,[[["self"]],[["bound"],[T]]]],[11,R[494],E,E,79,[[["self"]],[["bound"],[T]]]],[11,R[495],E,E,79,[[["self"]],[["bound"],[T]]]],[11,R[494],E,E,77,[[["self"]],[["bound"],[T]]]],[11,R[495],E,E,77,[[["self"]],[["bound"],[T]]]],[11,R[494],E,E,80,[[["self"]],[["bound"],[T]]]],[11,R[495],E,E,80,[[["self"]],[["bound"],[T]]]],[11,R[494],E,E,171,[[["self"]],[["bound"],[T]]]],[11,R[495],E,E,171,[[["self"]],[["bound"],[T]]]],[11,R[494],E,E,78,[[["self"]],[["bound"],[T]]]],[11,R[495],E,E,78,[[["self"]],[["bound"],[T]]]],[11,R[494],E,E,79,[[["self"]],[["bound"],[T]]]],[11,R[495],E,E,79,[[["self"]],[["bound"],[T]]]],[11,R[494],E,E,80,[[["self"]],[["bound"],[T]]]],[11,R[495],E,E,80,[[["self"]],[["bound"],[T]]]],[11,R[494],E,E,170,[[["self"]],[["bound"],[T]]]],[11,R[495],E,E,170,[[["self"]],[["bound"],[T]]]],[11,R[211],R[408],R[4697],86,[[],[R[485]]]],[11,R[340],R[409],E,195,[[["self"]],["bool"]]],[11,"len",R[401],E,124,[[["self"]],["usize"]]],[11,"len",E,E,144,[[["self"]],["usize"]]],[11,R[340],E,E,144,[[["self"]],["bool"]]],[11,"len",E,E,149,[[["self"]],["usize"]]],[11,R[340],E,E,149,[[["self"]],["bool"]]],[11,"len",E,E,129,[[["self"]],["usize"]]],[11,R[340],E,E,129,[[["self"]],["bool"]]],[11,"len",E,E,145,[[["self"]],["usize"]]],[11,R[340],E,E,145,[[["self"]],["bool"]]],[11,"len",R[409],E,180,[[["self"]],["usize"]]],[11,R[340],E,E,180,[[["self"]],["bool"]]],[11,"len",R[401],E,125,[[["self"]],["usize"]]],[11,"len",E,E,126,[[["self"]],["usize"]]],[11,R[340],R[409],E,192,[[["self"]],["bool"]]],[11,"len",R[370],E,212,[[["self"]],["usize"]]],[11,R[340],E,E,212,[[["self"]],["bool"]]],[11,"len",R[401],E,133,[[["self"]],["usize"]]],[11,R[340],E,E,133,[[["self"]],["bool"]]],[11,"len",E,E,146,[[["self"]],["usize"]]],[11,R[340],E,E,146,[[["self"]],["bool"]]],[11,"len",R[409],E,181,[[["self"]],["usize"]]],[11,R[340],E,E,181,[[["self"]],["bool"]]],[11,R[340],E,E,196,[[["self"]],["bool"]]],[11,R[340],E,E,191,[[["self"]],["bool"]]],[11,"len",R[401],E,136,[[["self"]],["usize"]]],[11,R[340],E,E,136,[[["self"]],["bool"]]],[11,"as_ref",R[409],E,180,[[["self"]]]],[11,R[496],R[404],E,45,[[["self"],[R[422]]]]],[11,R[496],E,E,45,[[["self"],[R[422],["u8"]],["u8"]]]],[11,R[496],E,E,45,[[["self"],[R[422],["u128"]],["u128"]]]],[11,R[496],E,E,45,[[[R[422]],["self"]]]],[11,R[496],E,E,45,[[["self"],[R[422]]]]],[11,R[496],E,E,45,[[["self"],["u32"],[R[422],["u32"]]]]],[11,R[496],E,E,45,[[["self"],[R[422]]]]],[11,R[496],E,E,45,[[["self"],[R[422]]]]],[11,R[496],E,E,45,[[["self"],[R[422]]]]],[11,R[496],E,E,45,[[["self"],[R[422],["i16"]],["i16"]]]],[11,R[496],E,E,45,[[[R[422],["u64"]],["self"],["u64"]]]],[11,R[496],E,E,45,[[[R[422]],["self"]]]],[11,R[496],E,E,45,[[["self"],[R[422]]]]],[11,R[496],E,E,45,[[["self"],["i8"],[R[422],["i8"]]]]],[11,R[496],E,E,45,[[["isize"],["self"],[R[422],["isize"]]]]],[11,R[496],E,E,45,[[["i64"],["self"],[R[422],["i64"]]]]],[11,R[496],E,E,45,[[["self"],[R[422]]]]],[11,R[496],E,E,45,[[[R[422]],["self"]]]],[11,R[496],E,E,45,[[["self"],[R[422],["usize"]],["usize"]]]],[11,R[496],E,E,45,[[["self"],[R[422]]]]],[11,R[496],E,E,45,[[["u16"],["self"],[R[422],["u16"]]]]],[11,R[496],E,E,45,[[[R[422],["i128"]],["self"],["i128"]]]],[11,R[496],E,E,45,[[[R[422],["i32"]],["self"],["i32"]]]],[11,R[496],E,E,45,[[[R[422]],["self"]]]],[11,"fmt",E,E,164,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,166,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,169,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,168,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,165,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,163,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,159,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,162,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,161,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,45,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,167,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,160,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,158,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"as_ref",R[391],E,224,[[["self"]]]],[11,"as_ref",E,E,224,[[["self"]],["vec"]]],[11,"as_ref",E,E,103,[[["self"]],[T]]],[11,"as_ref",R[407],E,173,[[["self"]],[T]]],[11,"as_ref",R[390],E,5,[[["self"]],[T]]],[11,"cmp",E,E,5,[[["cow"],["self"]],[R[105]]]],[11,"cmp",R[391],E,103,[[["self"],["box"]],[R[105]]]],[11,"cmp",E,E,224,[[["vec"],["self"]],[R[105]]]],[11,"cmp",R[414],E,248,[[["self"],[R[497]]],[R[105]]]],[11,"cmp",R[413],E,245,[[["self"],[R[500]]],[R[105]]]],[11,"cmp",R[412],E,229,[[[R[501]],["self"]],[R[105]]]],[11,"cmp",R[407],"Comparison for two `Rc`s.",173,[[["rc"],["self"]],[R[105]]]],[11,R[45],E,E,173,[[["self"]],[T]]],[11,R[45],R[391],E,224,[[["self"]]]],[11,R[45],E,E,103,[[["self"]],[T]]],[11,R[45],R[390],E,5,[[["self"]],["b"]]],[11,"from",R[391],"Converts a generic type `T` into a `Box<T>`",103,[[[T]],["box"]]],[11,"from",E,E,224,[[["cow"]],["vec"]]],[11,"from",E,E,224,[[["binaryheap"]],["vec"]]],[11,"from",E,E,224,[[],["vec"]]],[11,"from",R[390],E,5,[[["string"]],[["str"],["cow",["str"]]]]],[11,"from",R[407],E,173,[[["str"]],[["str"],["rc",["str"]]]]],[11,"from",R[414],"Turn a [`Vec<T>`] into a [`VecDeque<T>`].",248,[[["vec"]],[R[497]]]],[11,"from",R[391],"Converts a `Box<str>>` into a `Box<[u8]>`",103,[[["str"],["box",["str"]]],["box"]]],[11,"from",R[390],E,5,[[["vec"]],["cow"]]],[11,"from",R[407],E,173,[[],["rc"]]],[11,"from",R[391],"Converts a `&str` into a `Box<str>`",103,[[["str"]],[["str"],["box",["str"]]]]],[11,"from",R[407],E,173,[[[T]],["rc"]]],[11,"from",E,E,173,[[["box"]],["rc"]]],[11,"from",R[390],E,5,[[],["cow"]]],[11,"from",R[407],E,173,[[["string"]],[["str"],["rc",["str"]]]]],[11,"from",R[391],E,224,[[],["vec"]]],[11,"from",E,E,224,[[["box"]],["vec"]]],[11,"from",R[390],E,5,[[["string"]],[["str"],["cow",["str"]]]]],[11,"from",E,E,5,[[["str"]],[["str"],["cow",["str"]]]]],[11,"from",R[391],R[4698],224,[[[R[497]]],["vec"]]],[11,"from",E,"Converts the given `String` to a boxed `str` slice that is…",103,[[["string"]],[["str"],["box",["str"]]]]],[11,"from",E,E,224,[[["str"]],[["vec",["u8"]],["u8"]]]],[11,"from",E,E,103,[[["vec"]],["box"]]],[11,"from",R[407],E,173,[[["vec"]],["rc"]]],[11,"from",R[391],R[4699],224,[[["string"]],[["vec",["u8"]],["u8"]]]],[11,"from",E,"Converts a `&[T]` into a `Box<[T]>`",103,[[],["box"]]],[11,"from",R[390],E,5,[[["vec"]],["cow"]]],[11,"alloc",R[388],E,101,[[["layout"],["self"]],[[R[314]],[R[3],[R[315],R[314]]],[R[315],["u8"]]]]],[11,R[498],E,E,101,[[["u8"],["layout"],["self"],[R[315],["u8"]]]]],[11,R[499],E,E,101,[[["u8"],["usize"],["layout"],["self"],[R[315],["u8"]]],[[R[314]],[R[3],[R[315],R[314]]],[R[315],["u8"]]]]],[11,R[313],E,E,101,[[["layout"],["self"]],[[R[314]],[R[3],[R[315],R[314]]],[R[315],["u8"]]]]],[11,"as_mut",R[391],E,224,[[["self"]]]],[11,"as_mut",E,E,224,[[["self"]],["vec"]]],[11,"as_mut",E,E,103,[[["self"]],[T]]],[11,"deref",R[407],E,173,[[["self"]],[T]]],[11,"deref",R[391],E,224,[[["self"]]]],[11,"deref",R[390],E,5,[[["self"]],["b"]]],[11,"deref",R[391],E,103,[[["self"]],[T]]],[11,"next",R[413],E,241,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,241,[[["self"]]]],[11,"next",R[411],E,227,[[["self"]],["option"]]],[11,R[292],E,E,227,[[["self"]]]],[11,"next",R[413],E,247,[[["self"]],[["option"],[T]]]],[11,"last",E,E,247,[[],[["option"],[T]]]],[11,"next",E,E,243,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,243,[[["self"]]]],[11,"next",R[414],E,251,[[["self"]],["option"]]],[11,R[292],E,E,251,[[["self"]]]],[11,"next",R[411],E,225,[[["self"]],["option"]]],[11,R[292],E,E,225,[[["self"]]]],[11,"count",E,E,225,[[],["usize"]]],[11,"next",R[412],E,239,[[["self"]],[["option"],["v"]]]],[11,R[292],E,E,239,[[["self"]]]],[11,"last",E,E,239,[[],[["option"],["v"]]]],[11,"next",E,E,234,[[["self"]],["option"]]],[11,"last",E,E,234,[[],["option"]]],[11,"next",R[413],E,242,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,242,[[["self"]]]],[11,"next",E,E,240,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,240,[[["self"]]]],[11,"last",E,E,240,[[],[["option"],[T]]]],[11,"next",E,E,244,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,244,[[["self"]]]],[11,"next",R[414],E,252,[[["self"]],["option"]]],[11,R[292],E,E,252,[[["self"]]]],[11,"next",E,E,250,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,250,[[["self"]]]],[11,"fold",E,E,250,[[["acc"],["f"]],["acc"]]],[11,"nth",E,E,250,[[["self"],["usize"]],["option"]]],[11,"last",E,E,250,[[],[["option"],[T]]]],[11,"next",R[413],E,246,[[["self"]],["option"]]],[11,R[292],E,E,246,[[["self"]]]],[11,"next",R[412],E,235,[[["self"]],["option"]]],[11,"last",E,E,235,[[],["option"]]],[11,"next",E,E,238,[[["self"]],["option"]]],[11,R[292],E,E,238,[[["self"]]]],[11,"last",E,E,238,[[],["option"]]],[11,"next",R[411],E,228,[[["self"]],["option"]]],[11,R[292],E,E,228,[[["self"]]]],[11,"next",E,E,226,[[["self"]],["option"]]],[11,R[292],E,E,226,[[["self"]]]],[11,"next",R[412],E,230,[[["self"]],[["k"],["option"]]]],[11,R[292],E,E,230,[[["self"]]]],[11,"last",E,E,230,[[],[["k"],["option"]]]],[11,"next",E,E,233,[[["self"]],[["option"],["v"]]]],[11,R[292],E,E,233,[[["self"]]]],[11,"last",E,E,233,[[],[["option"],["v"]]]],[11,"next",E,E,232,[[["self"]],["option"]]],[11,R[292],E,E,232,[[["self"]]]],[11,"next",E,E,231,[[["self"]],["option"]]],[11,R[292],E,E,231,[[["self"]]]],[11,"last",E,E,231,[[],["option"]]],[11,"next",R[414],E,249,[[["self"]],[["option"],[T]]]],[11,R[292],E,E,249,[[["self"]]]],[11,"fold",E,E,249,[[["acc"],["f"]],["acc"]]],[11,R[465],E,E,249,[[["self"],["b"],["f"]],["r"]]],[11,"nth",E,E,249,[[["self"],["usize"]],["option"]]],[11,"last",E,E,249,[[],[["option"],[T]]]],[11,"next",R[391],E,103,[[["self"]],["option"]]],[11,R[292],E,E,103,[[["self"]]]],[11,"nth",E,E,103,[[["self"],["usize"]],["option"]]],[11,"last",E,E,103,[[],["option"]]],[11,"extend",R[414],E,248,[[["self"],["i"]]]],[11,"extend",R[412],E,229,[[["self"],[T]]]],[11,"extend",E,E,229,[[["self"],["i"]]]],[11,"extend",R[413],E,245,[[["self"],["i"]]]],[11,"extend",R[391],E,224,[[["self"],["i"]]]],[11,"extend",E,E,224,[[["self"],["i"]]]],[11,"extend",R[413],E,245,[[["self"],["iter"]]]],[11,"extend",R[414],E,248,[[["self"],[T]]]],[11,"drop",R[407],"Drops the `Rc`.",173,[[["self"]]]],[11,"drop",R[411],E,225,[[["self"]]]],[11,"drop",E,E,227,[[["self"]]]],[11,"drop",E,E,228,[[["self"]]]],[11,"drop",E,E,226,[[["self"]]]],[11,"drop",R[414],E,248,[[["self"]]]],[11,"drop",R[391],E,224,[[["self"]]]],[11,"drop",R[407],"Drops the `Weak` pointer.",174,[[["self"]]]],[11,"drop",R[391],E,103,[[["self"]]]],[11,"drop",R[412],E,229,[[["self"]]]],[11,"drop",E,E,232,[[["self"]]]],[11,"drop",R[414],E,252,[[["self"]]]],[11,"call_mut",R[391],E,103,[[["a"],["self"]]]],[11,R[350],R[414],E,248,[[["self"],["usize"]],["a"]]],[11,R[350],R[391],E,224,[[["self"],["i"]]]],[11,"eq",E,E,224,[[["self"],["vec"]],["bool"]]],[11,"ne",E,E,224,[[["self"],["vec"]],["bool"]]],[11,"eq",R[407],"Equality for two `Rc`s.",173,[[["rc"],["self"]],["bool"]]],[11,"ne",E,"Inequality for two `Rc`s.",173,[[["rc"],["self"]],["bool"]]],[11,"eq",R[391],E,224,[[["self"]],["bool"]]],[11,"ne",E,E,224,[[["self"]],["bool"]]],[11,"eq",R[390],E,5,[[["self"]],["bool"]]],[11,"ne",E,E,5,[[["self"]],["bool"]]],[11,"eq",R[412],E,229,[[[R[501]],["self"]],["bool"]]],[11,"eq",R[391],E,224,[[["self"]],["bool"]]],[11,"ne",E,E,224,[[["self"]],["bool"]]],[11,"eq",R[414],E,248,[[["self"]],["bool"]]],[11,"eq",E,E,248,[[["self"]],["bool"]]],[11,"eq",R[390],E,5,[[["self"]],["bool"]]],[11,"ne",E,E,5,[[["self"]],["bool"]]],[11,"eq",R[413],E,245,[[["self"],[R[500]]],["bool"]]],[11,"ne",E,E,245,[[["self"],[R[500]]],["bool"]]],[11,"eq",R[391],E,224,[[["self"]],["bool"]]],[11,"ne",E,E,224,[[["self"]],["bool"]]],[11,"eq",R[414],E,248,[[["self"]],["bool"]]],[11,"eq",E,E,248,[[["self"]],["bool"]]],[11,"eq",E,E,248,[[["self"]],["bool"]]],[11,"eq",E,E,248,[[["self"],[R[497]]],["bool"]]],[11,"eq",R[390],E,5,[[["str"],["self"]],["bool"]]],[11,"ne",E,E,5,[[["str"],["self"]],["bool"]]],[11,"eq",R[414],E,248,[[["self"],["vec"]],["bool"]]],[11,"eq",R[390],E,5,[[["str"],["self"]],["bool"]]],[11,"ne",E,E,5,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["cow"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["vec"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["vec"]],["bool"]]],[11,"eq",R[391],E,224,[[["self"]],["bool"]]],[11,"ne",E,E,224,[[["self"]],["bool"]]],[11,"eq",E,E,103,[[["self"],["box"]],["bool"]]],[11,"ne",E,E,103,[[["self"],["box"]],["bool"]]],[11,"eq",R[390],E,5,[[["self"],["string"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["string"]],["bool"]]],[11,"len",R[412],E,232,[[["self"]],["usize"]]],[11,R[340],R[414],E,250,[[["self"]],["bool"]]],[11,"len",R[412],E,230,[[["self"]],["usize"]]],[11,"len",E,E,239,[[["self"]],["usize"]]],[11,R[340],R[411],E,225,[[["self"]],["bool"]]],[11,"len",R[412],E,233,[[["self"]],["usize"]]],[11,R[340],R[411],E,226,[[["self"]],["bool"]]],[11,"len",R[413],E,240,[[["self"]],["usize"]]],[11,"len",E,E,246,[[["self"]],["usize"]]],[11,R[340],R[414],E,249,[[["self"]],["bool"]]],[11,R[340],E,E,251,[[["self"]],["bool"]]],[11,"len",R[391],E,103,[[["self"]],["usize"]]],[11,R[340],E,E,103,[[["self"]],["bool"]]],[11,"len",R[412],E,238,[[["self"]],["usize"]]],[11,"len",E,E,231,[[["self"]],["usize"]]],[11,"fmt",R[391],E,103,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[407],E,173,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[106],R[413],E,245,[[["self"],[R[500]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,245,[[["self"],[R[500]]],["bool"]]],[11,"le",E,E,245,[[["self"],[R[500]]],["bool"]]],[11,"gt",E,E,245,[[["self"],[R[500]]],["bool"]]],[11,"ge",E,E,245,[[["self"],[R[500]]],["bool"]]],[11,R[106],R[412],E,229,[[[R[501]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[391],E,103,[[["self"],["box"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,103,[[["self"],["box"]],["bool"]]],[11,"le",E,E,103,[[["self"],["box"]],["bool"]]],[11,"ge",E,E,103,[[["self"],["box"]],["bool"]]],[11,"gt",E,E,103,[[["self"],["box"]],["bool"]]],[11,R[106],R[390],E,5,[[["cow"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[407],"Partial comparison for two `Rc`s.",173,[[["rc"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,"Less-than comparison for two `Rc`s.",173,[[["rc"],["self"]],["bool"]]],[11,"le",E,"'Less than or equal to' comparison for two `Rc`s.",173,[[["rc"],["self"]],["bool"]]],[11,"gt",E,"Greater-than comparison for two `Rc`s.",173,[[["rc"],["self"]],["bool"]]],[11,"ge",E,"'Greater than or equal to' comparison for two `Rc`s.",173,[[["rc"],["self"]],["bool"]]],[11,R[106],R[414],E,248,[[["self"],[R[497]]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[391],E,224,[[["vec"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",E,E,103,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[411],E,225,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[391],E,224,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[413],E,243,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[412],E,239,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,231,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[414],E,249,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[413],E,246,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,244,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,242,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[411],E,226,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[407],E,174,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[412],E,235,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[414],E,252,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[413],E,240,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[411],E,228,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[412],E,238,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[413],E,247,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[412],E,237,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[388],E,101,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[412],E,236,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[407],E,173,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[412],E,229,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,95,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,234,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,230,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[413],E,241,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[414],E,248,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[412],E,233,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[390],E,5,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[413],E,245,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[411],E,227,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[414],E,251,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[412],E,232,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[414],E,250,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[90],R[413],"Makes an empty `BTreeSet<T>` with a reasonable choice of B.",245,[[],[R[500]]]],[11,R[90],R[407],"Constructs a new `Weak<T>`, allocating memory for `T`…",174,[[],["weak"]]],[11,R[90],R[412],"Creates an empty `BTreeMap<K, V>`.",229,[[],[R[501]]]],[11,R[90],R[388],E,101,[[],["global"]]],[11,R[90],R[391],R[4700],224,[[],["vec"]]],[11,R[90],R[390],"Creates an owned Cow<'a, B> with the default value for the…",5,[[],["cow"]]],[11,R[90],R[414],"Creates an empty `VecDeque<T>`.",248,[[],[R[497]]]],[11,R[90],R[391],E,103,[[],[["str"],["box",["str"]]]]],[11,R[90],E,"Creates a `Box<T>`, with the `Default` value for T.",103,[[],["box"]]],[11,R[90],R[407],"Creates a new `Rc<T>`, with the `Default` value for `T`.",173,[[],["rc"]]],[11,R[90],R[391],E,103,[[],["box"]]],[11,R[295],R[412],E,231,[[["self"]],["option"]]],[11,R[295],R[414],E,250,[[["self"]],[["option"],[T]]]],[11,"rfold",E,E,250,[[["acc"],["f"]],["acc"]]],[11,R[295],E,E,249,[[["self"]],[["option"],[T]]]],[11,"rfold",E,E,249,[[["acc"],["f"]],["acc"]]],[11,R[426],E,E,249,[[["self"],["b"],["f"]],["r"]]],[11,R[295],R[413],E,246,[[["self"]],["option"]]],[11,R[295],R[412],E,230,[[["self"]],[["k"],["option"]]]],[11,R[295],R[413],E,247,[[["self"]],[["option"],[T]]]],[11,R[295],R[411],E,226,[[["self"]],["option"]]],[11,R[295],R[414],E,252,[[["self"]],["option"]]],[11,R[295],R[412],E,234,[[["self"]],["option"]]],[11,R[295],E,E,238,[[["self"]],["option"]]],[11,R[295],R[391],E,103,[[["self"]],["option"]]],[11,R[425],E,E,103,[[["self"],["usize"]],["option"]]],[11,R[295],R[412],E,232,[[["self"]],["option"]]],[11,R[295],R[411],E,227,[[["self"]],["option"]]],[11,R[295],R[413],E,240,[[["self"]],[["option"],[T]]]],[11,R[295],R[412],E,239,[[["self"]],[["option"],["v"]]]],[11,R[295],E,E,235,[[["self"]],["option"]]],[11,R[295],E,E,233,[[["self"]],[["option"],["v"]]]],[11,R[295],R[411],E,225,[[["self"]],["option"]]],[11,R[295],R[414],E,251,[[["self"]],["option"]]],[11,"resume",R[391],E,103,[[["pin",["box"]],["box"]],[R[450]]]],[11,R[78],R[390],E,5,[[["self"]],["string"]]],[11,"add",E,E,5,[[["str"],["cow",["str"]]]]],[11,"add",E,E,5,[[["str"]]]],[11,"poll",R[391],E,103,[[["pin",["box"]],["box"],["context"]],["poll"]]],[11,R[211],R[412],E,229,[[],[R[485]]]],[11,R[211],R[414],"Consumes the `VecDeque` into a front-to-back iterator…",248,[[],[R[485]]]],[11,R[211],R[391],R[1523],224,[[],[R[485]]]],[11,R[211],R[413],"Gets an iterator for moving out the `BTreeSet`'s contents.",245,[[],[R[485]]]],[11,R[22],R[391],E,103,[[["self"]],[T]]],[11,R[22],E,E,224,[[["self"]]]],[11,"index",R[412],R[1549],229,[[["self"],["q"]],["v"]]],[11,"index",R[391],E,224,[[["i"],["self"]]]],[11,"index",R[414],E,248,[[["self"],["usize"]],["a"]]],[11,R[20],R[391],E,103,[[["box"]],[["box"],[R[3],["box"]]]]],[11,R[20],R[407],E,173,[[["rc"]],[["rc"],[R[3],["rc"]]]]],[11,"call",R[391],E,103,[[["a"],["self"]]]],[11,"clone",R[413],E,240,[[["self"]],["iter"]]],[11,"clone",R[412],E,231,[[["self"]],["iter"]]],[11,"clone",R[407],"Makes a clone of the `Weak` pointer that points to the…",174,[[["self"]],["weak"]]],[11,"clone",R[413],E,245,[[["self"]],[R[500]]]],[11,"clone",R[412],E,234,[[["self"]],["range"]]],[11,"clone",R[414],E,248,[[["self"]],[R[497]]]],[11,R[385],E,E,248,[[[R[497]],["self"]]]],[11,"clone",R[413],E,244,[[["self"]],["union"]]],[11,"clone",R[414],E,251,[[["self"]],[R[485]]]],[11,"clone",R[413],E,242,[[["self"]],[R[615]]]],[11,"clone",R[391],"Returns a new box with a `clone()` of this box's contents.",103,[[["self"]],["box"]]],[11,R[385],E,"Copies `source`'s contents into `self` without creating a…",103,[[["self"],["box"]]]],[11,"clone",R[390],E,5,[[["self"]],["cow"]]],[11,R[385],E,E,5,[[["cow"],["self"]]]],[11,"clone",R[411],E,225,[[["self"]],[R[485]]]],[11,"clone",R[413],E,247,[[["self"]],["range"]]],[11,"clone",R[391],E,224,[[["self"]],["vec"]]],[11,R[385],E,E,224,[[["self"],["vec"]]]],[11,"clone",R[414],E,249,[[["self"]],["iter"]]],[11,"clone",R[412],E,229,[[["self"]],[R[501]]]],[11,"clone",R[391],E,103,[[["self"]],["box"]]],[11,"clone",R[413],E,243,[[["self"]],[R[616]]]],[11,"clone",R[412],E,233,[[["self"]],["values"]]],[11,"clone",E,E,230,[[["self"]],["keys"]]],[11,"clone",R[407],"Makes a clone of the `Rc` pointer.",173,[[["self"]],["rc"]]],[11,"clone",R[391],E,103,[[["self"]],[["str"],["box",["str"]]]]],[11,"clone",R[413],E,241,[[["self"]],[R[614]]]],[11,"clone",R[388],E,101,[[["self"]],["global"]]],[11,R[502],R[391],E,103,[[["a"]]]],[11,"finish",E,E,103,[[["self"]],["u64"]]],[11,"write",E,E,103,[[["self"]]]],[11,"write_u8",E,E,103,[[["self"],["u8"]]]],[11,R[503],E,E,103,[[["u16"],["self"]]]],[11,R[504],E,E,103,[[["self"],["u32"]]]],[11,R[505],E,E,103,[[["self"],["u64"]]]],[11,R[506],E,E,103,[[["self"],["u128"]]]],[11,R[507],E,E,103,[[["self"],["usize"]]]],[11,"write_i8",E,E,103,[[["self"],["i8"]]]],[11,R[508],E,E,103,[[["self"],["i16"]]]],[11,R[509],E,E,103,[[["self"],["i32"]]]],[11,R[510],E,E,103,[[["i64"],["self"]]]],[11,R[511],E,E,103,[[["self"],["i128"]]]],[11,R[512],E,E,103,[[["isize"],["self"]]]],[11,R[423],R[390],E,5,[[["str"],["self"],["cow",["str"]]]]],[11,R[423],E,E,5,[[["self"],["str"]]]],[11,"hash",R[412],E,229,[[["self"],["h"]]]],[11,"hash",R[414],E,248,[[["self"],["h"]]]],[11,"hash",R[390],E,5,[[["self"],["h"]]]],[11,"hash",R[407],E,173,[[["self"],["h"]]]],[11,"hash",R[391],E,103,[[["self"],["h"]]]],[11,"hash",R[413],E,245,[[["self"],["__h"]]]],[11,"hash",R[391],E,224,[[["self"],["h"]]]],[11,"fmt",R[407],E,173,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[390],E,5,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[391],E,103,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[99],E,E,224,[[["self"]]]],[11,R[99],E,E,103,[[["self"]],[T]]],[11,R[293],R[407],"Takes each element in the `Iterator` and collects it into…",173,[[["i"]],["rc"]]],[11,R[293],R[412],E,229,[[[T]],[R[501]]]],[11,R[293],R[390],E,5,[[["i"]],[["str"],["cow",["str"]]]]],[11,R[293],R[391],E,103,[[[T]],["box"]]],[11,R[293],R[390],E,5,[[["i"]],["cow"]]],[11,R[293],R[414],E,248,[[[T]],[R[497]]]],[11,R[293],R[390],E,5,[[["i"]],[["str"],["cow",["str"]]]]],[11,R[293],R[391],E,224,[[["i"]],["vec"]]],[11,R[293],R[390],E,5,[[["i"]],[["str"],["cow",["str"]]]]],[11,R[293],R[413],E,245,[[["i"]],[R[500]]]],[11,R[38],R[388],E,99,[[["self"]],["str"]]],[11,"from_size_align",E,"Constructs a `Layout` from a given `size` and `align`, or…",100,[[["usize"]],[[R[3],["layout",R[437]]],["layout"],[R[437]]]]],[11,"from_size_align_unchecked",E,"Creates a layout, bypassing all checks.",100,[[["usize"]],["layout"]]],[11,"size",E,"The minimum size in bytes for a memory block of this layout.",100,[[["self"]],["usize"]]],[11,"align",E,"The minimum byte alignment for a memory block of this…",100,[[["self"]],["usize"]]],[11,"new",E,"Constructs a `Layout` suitable for holding a value of type…",100,[[],["layout"]]],[11,"for_value",E,"Produces layout describing a record that could be used to…",100,[[[T]],["layout"]]],[11,"align_to",E,"Creates a layout describing the record that can hold a…",100,[[["self"],["usize"]],[[R[3],["layout",R[437]]],["layout"],[R[437]]]]],[11,"padding_needed_for",E,"Returns the amount of padding we must insert after `self`…",100,[[["self"],["usize"]],["usize"]]],[11,"pad_to_align",E,"Creates a layout by rounding the size of this layout up to…",100,[[["self"]],[[R[3],["layout",R[437]]],["layout"],[R[437]]]]],[11,"repeat",E,R[513],100,[[["self"],["usize"]],[[R[437]],[R[3],[R[437]]]]]],[11,"extend",E,R[514],100,[[["layout"],["self"]],[[R[437]],[R[3],[R[437]]]]]],[11,"repeat_packed",E,R[513],100,[[["self"],["usize"]],[[R[3],["layout",R[437]]],["layout"],[R[437]]]]],[11,"extend_packed",E,R[514],100,[[["layout"],["self"]],[[R[3],["layout",R[437]]],["layout"],[R[437]]]]],[11,"array",E,"Creates a layout describing the record for a `[T; n]`.",100,[[["usize"]],[[R[3],["layout",R[437]]],["layout"],[R[437]]]]],[11,"is",R[389],"Returns `true` if the boxed type is the same as `T`.",3,[[["self"]],["bool"]]],[11,R[515],E,"Returns some reference to the boxed value if it is of type…",3,[[["self"]],[[T],["option"]]]],[11,R[517],E,"Returns some mutable reference to the boxed value if it is…",3,[[["self"]],[[T],["option"]]]],[11,"is",E,R[516],3,[[["self"]],["bool"]]],[11,R[515],E,R[516],3,[[["self"]],[[T],["option"]]]],[11,R[517],E,R[516],3,[[["self"]],[[T],["option"]]]],[11,"is",E,R[516],3,[[["self"]],["bool"]]],[11,R[515],E,R[516],3,[[["self"]],[[T],["option"]]]],[11,R[517],E,R[516],3,[[["self"]],[[T],["option"]]]],[11,"of",E,"Returns the `TypeId` of the type this generic function has…",102,[[],[R[46]]]],[11,"is_borrowed",R[390],"Returns true if the data is borrowed, i.e. if `to_mut`…",5,[[["self"]],["bool"]]],[11,"is_owned",E,"Returns true if the data is owned, i.e. if `to_mut` would…",5,[[["self"]],["bool"]]],[11,"to_mut",E,"Acquires a mutable reference to the owned form of the data.",5,[[["self"]]]],[11,"into_owned",E,"Extracts the owned data.",5,[[]]],[11,"new",R[391],"Allocates memory on the heap and then places `x` into it.",103,[[[T]],["box"]]],[11,R[577],E,"Constructs a new box with uninitialized contents.",103,[[],[[R[483]],["box",[R[483]]]]]],[11,"pin",E,"Constructs a new `Pin<Box<T>>`. If `T` does not implement…",103,[[[T]],[["pin",["box"]],["box"]]]],[11,R[578],E,"Constructs a new boxed slice with uninitialized contents.",103,[[["usize"]],["box"]]],[11,R[518],E,"Converts to `Box<T>`.",103,[[],["box"]]],[11,R[518],E,"Converts to `Box<[T]>`.",103,[[],["box"]]],[11,R[582],E,"Constructs a box from a raw pointer.",103,[[],["box"]]],[11,R[581],E,"Consumes the `Box`, returning a wrapped raw pointer.",103,[[["box"]]]],[11,R[579],E,"Consumes the `Box`, returning the wrapped pointer as…",103,[[["box"]],[R[315]]]],[11,"leak",E,"Consumes and leaks the `Box`, returning a mutable…",103,[[["box"]],[T]]],[11,"into_pin",E,"Converts a `Box<T>` into a `Pin<Box<T>>`",103,[[["box"]],[["pin",["box"]],["box"]]]],[11,R[580],E,R[519],103,[[],[[R[3],["box","box"]],["box"],["box",["any"]]]]],[11,R[580],E,R[519],103,[[],[[R[3],["box","box"]],["box",["any"]],["box"]]]],[11,"new",R[396],"Creates a new `Cell` containing the given value.",104,[[[T]],["cell"]]],[11,"set",E,"Sets the contained value.",104,[[["self"],[T]]]],[11,"swap",E,"Swaps the values of two Cells. Difference with…",104,[[["cell"],["self"]]]],[11,"replace",E,"Replaces the contained value, and returns it.",104,[[["self"],[T]],[T]]],[11,R[109],E,R[526],104,[[],[T]]],[11,"get",E,"Returns a copy of the contained value.",104,[[["self"]],[T]]],[11,"update",E,"Updates the contained value using a function and returns…",104,[[["self"],["f"]],[T]]],[11,"as_ptr",E,R[522],104,[[["self"]]]],[11,R[471],E,R[523],104,[[["self"]],[T]]],[11,R[3780],E,"Returns a `&Cell<T>` from a `&mut T`",104,[[[T]],["cell"]]],[11,"take",E,"Takes the value of the cell, leaving `Default::default()`…",104,[[["self"]],[T]]],[11,"as_slice_of_cells",E,"Returns a `&[Cell<T>]` from a `&Cell<[T]>`",104,[[["self"]]]],[11,"new",E,"Creates a new `RefCell` containing `value`.",105,[[[T]],[R[491]]]],[11,R[109],E,"Consumes the `RefCell`, returning the wrapped value.",105,[[],[T]]],[11,"replace",E,"Replaces the wrapped value with a new one, returning the…",105,[[["self"],[T]],[T]]],[11,"replace_with",E,"Replaces the wrapped value with a new one computed from…",105,[[["self"],["f"]],[T]]],[11,"swap",E,"Swaps the wrapped value of `self` with the wrapped value…",105,[[[R[491]],["self"]]]],[11,R[45],E,"Immutably borrows the wrapped value.",105,[[["self"]],["ref"]]],[11,"try_borrow",E,R[524],105,[[["self"]],[[R[520]],["ref"],[R[3],["ref",R[520]]]]]],[11,R[22],E,"Mutably borrows the wrapped value.",105,[[["self"]],["refmut"]]],[11,"try_borrow_mut",E,"Mutably borrows the wrapped value, returning an error if…",105,[[["self"]],[["refmut"],[R[521]],[R[3],["refmut",R[521]]]]]],[11,"as_ptr",E,R[522],105,[[["self"]]]],[11,R[471],E,R[523],105,[[["self"]],[T]]],[11,"try_borrow_unguarded",E,R[524],105,[[["self"]],[[R[520]],[T],[R[3],[R[520]]]]]],[11,"clone",E,"Copies a `Ref`.",108,[[["ref"]],["ref"]]],[11,"map",E,"Makes a new `Ref` for a component of the borrowed data.",108,[[["ref"],["f"]],["ref"]]],[11,R[525],E,"Splits a `Ref` into multiple `Ref`s for different…",108,[[["ref"],["f"]]]],[11,"map",E,"Makes a new `RefMut` for a component of the borrowed data,…",109,[[["f"],["refmut"]],["refmut"]]],[11,R[525],E,"Splits a `RefMut` into multiple `RefMut`s for different…",109,[[["f"],["refmut"]]]],[11,"new",E,"Constructs a new instance of `UnsafeCell` which will wrap…",110,[[[T]],[R[461]]]],[11,R[109],E,R[526],110,[[],[T]]],[11,"get",E,"Gets a mutable pointer to the wrapped value.",110,[[["self"]]]],[11,R[490],R[397],"Reverses the `Ordering`.",10,[[],[R[105]]]],[11,"then",E,"Chains two orderings.",10,[[[R[105]]],[R[105]]]],[11,"then_with",E,"Chains the ordering with the given function.",10,[[["f"]],[R[105]]]],[11,R[4701],R[399],R[4702],112,[[["str"],["self"],["bool"]],[["error"],[R[3],["error"]]]]],[11,"pad",E,R[4703],112,[[["str"],["self"]],[["error"],[R[3],["error"]]]]],[11,R[492],E,R[4704],112,[[["str"],["self"]],[["error"],[R[3],["error"]]]]],[11,R[417],E,R[4705],112,[[["self"],[R[325]]],[["error"],[R[3],["error"]]]]],[11,"flags",E,R[4706],112,[[["self"]],["u32"]]],[11,"fill",E,R[4707],112,[[["self"]],["char"]]],[11,"align",E,R[4708],112,[[["self"]],[[R[527]],["option",[R[527]]]]]],[11,"width",E,R[4709],112,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"precision",E,R[4710],112,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"sign_plus",E,R[4711],112,[[["self"]],["bool"]]],[11,"sign_minus",E,R[4712],112,[[["self"]],["bool"]]],[11,"alternate",E,R[4713],112,[[["self"]],["bool"]]],[11,R[4714],E,R[4715],112,[[["self"]],["bool"]]],[11,R[4716],E,R[4717],112,[[["self"],["str"]],[R[532]]]],[11,R[4718],E,R[4719],112,[[["self"],["str"]],[R[533]]]],[11,"debug_list",E,R[4720],112,[[["self"]],[R[528]]]],[11,"debug_set",E,R[4721],112,[[["self"]],[R[531]]]],[11,"debug_map",E,R[4722],112,[[["self"]],[R[529]]]],[11,"entry",E,R[4723],115,[[["self"],["debug"]],[R[528]]]],[11,R[153],E,R[4724],115,[[["self"],["i"]],[R[528]]]],[11,"finish",E,R[530],115,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"entry",E,R[4725],116,[[["self"],["debug"]],[R[529]]]],[11,"key",E,R[4726],116,[[["self"],["debug"]],[R[529]]]],[11,"value",E,R[4727],116,[[["self"],["debug"]],[R[529]]]],[11,R[153],E,R[4728],116,[[["self"],["i"]],[R[529]]]],[11,"finish",E,R[530],116,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"entry",E,R[4729],117,[[["self"],["debug"]],[R[531]]]],[11,R[153],E,R[4730],117,[[["self"],["i"]],[R[531]]]],[11,"finish",E,R[530],117,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"field",E,R[4731],118,[[["str"],["self"],["debug"]],[R[532]]]],[11,"finish",E,R[530],118,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"field",E,R[4732],119,[[["self"],["debug"]],[R[533]]]],[11,"finish",E,R[530],119,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"new",R[400],"Creates a new `SipHasher` with the two initial keys set to…",121,[[],[R[478]]]],[11,R[3122],E,"Creates a `SipHasher` that is keyed off the provided keys.",121,[[["u64"]],[R[478]]]],[11,"peek",R[401],"Returns a reference to the next() value without advancing…",137,[[["self"]],["option"]]],[11,"new",R[403],"Wrap a value to be manually dropped.",153,[[[T]],[R[441]]]],[11,R[109],E,"Extracts the value from the `ManuallyDrop` container.",153,[[[R[441]]],[T]]],[11,"take",E,"Takes the contained value out.",153,[[[R[441]]],[T]]],[11,"drop",E,"Manually drops the contained value.",153,[[[R[441]]]]],[11,"new",E,R[905],154,[[[T]],[R[483]]]],[11,"uninit",E,R[906],154,[[],[R[483]]]],[18,"UNINIT",E,R[907],154,N],[11,"zeroed",E,R[908],154,[[],[R[483]]]],[11,"write",E,R[909],154,[[["self"],[T]],[T]]],[11,"as_ptr",E,R[910],154,[[["self"]]]],[11,R[600],E,R[911],154,[[["self"]]]],[11,R[518],E,R[912],154,[[],[T]]],[11,"read",E,R[913],154,[[["self"]],[T]]],[11,"get_ref",E,R[914],154,[[["self"]],[T]]],[11,R[471],E,R[915],154,[[["self"]],[T]]],[11,R[916],E,R[917],154,[[]]],[11,R[918],E,R[919],154,[[]]],[11,"kind",R[404],"Outputs the detailed cause of parsing an integer failing.",155,[[["self"]],[R[487]]]],[11,R[534],E,R[535],45,[[],[[R[422],["usize"]],["usize"]]]],[11,R[536],E,R[537],45,[[],[[R[422],["usize"]],["usize"]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[[R[422],["usize"]],["usize"]]]],[11,R[546],E,R[547],45,[[["u32"]],[[R[422],["usize"]],["usize"]]]],[11,R[548],E,R[549],45,[[],[[R[422],["usize"]],["usize"]]]],[11,R[550],E,R[551],45,[[],[[R[422],["usize"]],["usize"]]]],[11,R[557],E,R[552],45,[[[R[422],["usize"]],["usize"]],[[R[422],["usize"]],["usize"]]]],[11,R[558],E,R[553],45,[[[R[422],["usize"]],["usize"]],[[R[422],["usize"]],["usize"]]]],[11,"to_be",E,R[554],45,[[],[[R[422],["usize"]],["usize"]]]],[11,"to_le",E,R[555],45,[[],[[R[422],["usize"]],["usize"]]]],[11,"pow",E,R[556],45,[[["u32"]],[[R[422],["usize"]],["usize"]]]],[11,R[534],E,R[535],45,[[],[[R[422],["u8"]],["u8"]]]],[11,R[536],E,R[537],45,[[],[[R[422],["u8"]],["u8"]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[[R[422],["u8"]],["u8"]]]],[11,R[546],E,R[547],45,[[["u32"]],[[R[422],["u8"]],["u8"]]]],[11,R[548],E,R[549],45,[[],[[R[422],["u8"]],["u8"]]]],[11,R[550],E,R[551],45,[[],[[R[422],["u8"]],["u8"]]]],[11,R[557],E,R[552],45,[[[R[422],["u8"]],["u8"]],[[R[422],["u8"]],["u8"]]]],[11,R[558],E,R[553],45,[[[R[422],["u8"]],["u8"]],[[R[422],["u8"]],["u8"]]]],[11,"to_be",E,R[554],45,[[],[[R[422],["u8"]],["u8"]]]],[11,"to_le",E,R[555],45,[[],[[R[422],["u8"]],["u8"]]]],[11,"pow",E,R[556],45,[[["u32"]],[[R[422],["u8"]],["u8"]]]],[11,R[534],E,R[535],45,[[],[["u16"],[R[422],["u16"]]]]],[11,R[536],E,R[537],45,[[],[["u16"],[R[422],["u16"]]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[["u16"],[R[422],["u16"]]]]],[11,R[546],E,R[547],45,[[["u32"]],[["u16"],[R[422],["u16"]]]]],[11,R[548],E,R[549],45,[[],[["u16"],[R[422],["u16"]]]]],[11,R[550],E,R[551],45,[[],[["u16"],[R[422],["u16"]]]]],[11,R[557],E,R[552],45,[[["u16"],[R[422],["u16"]]],[["u16"],[R[422],["u16"]]]]],[11,R[558],E,R[553],45,[[["u16"],[R[422],["u16"]]],[["u16"],[R[422],["u16"]]]]],[11,"to_be",E,R[554],45,[[],[["u16"],[R[422],["u16"]]]]],[11,"to_le",E,R[555],45,[[],[["u16"],[R[422],["u16"]]]]],[11,"pow",E,R[556],45,[[["u32"]],[["u16"],[R[422],["u16"]]]]],[11,R[534],E,R[535],45,[[],[["u32"],[R[422],["u32"]]]]],[11,R[536],E,R[537],45,[[],[["u32"],[R[422],["u32"]]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[["u32"],[R[422],["u32"]]]]],[11,R[546],E,R[547],45,[[["u32"]],[["u32"],[R[422],["u32"]]]]],[11,R[548],E,R[549],45,[[],[["u32"],[R[422],["u32"]]]]],[11,R[550],E,R[551],45,[[],[["u32"],[R[422],["u32"]]]]],[11,R[557],E,R[552],45,[[["u32"],[R[422],["u32"]]],[["u32"],[R[422],["u32"]]]]],[11,R[558],E,R[553],45,[[["u32"],[R[422],["u32"]]],[["u32"],[R[422],["u32"]]]]],[11,"to_be",E,R[554],45,[[],[["u32"],[R[422],["u32"]]]]],[11,"to_le",E,R[555],45,[[],[["u32"],[R[422],["u32"]]]]],[11,"pow",E,R[556],45,[[["u32"]],[["u32"],[R[422],["u32"]]]]],[11,R[534],E,R[535],45,[[],[[R[422],["u64"]],["u64"]]]],[11,R[536],E,R[537],45,[[],[[R[422],["u64"]],["u64"]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[[R[422],["u64"]],["u64"]]]],[11,R[546],E,R[547],45,[[["u32"]],[[R[422],["u64"]],["u64"]]]],[11,R[548],E,R[549],45,[[],[[R[422],["u64"]],["u64"]]]],[11,R[550],E,R[551],45,[[],[[R[422],["u64"]],["u64"]]]],[11,R[557],E,R[552],45,[[[R[422],["u64"]],["u64"]],[[R[422],["u64"]],["u64"]]]],[11,R[558],E,R[553],45,[[[R[422],["u64"]],["u64"]],[[R[422],["u64"]],["u64"]]]],[11,"to_be",E,R[554],45,[[],[[R[422],["u64"]],["u64"]]]],[11,"to_le",E,R[555],45,[[],[[R[422],["u64"]],["u64"]]]],[11,"pow",E,R[556],45,[[["u32"]],[[R[422],["u64"]],["u64"]]]],[11,R[534],E,R[535],45,[[],[[R[422],["u128"]],["u128"]]]],[11,R[536],E,R[537],45,[[],[[R[422],["u128"]],["u128"]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[[R[422],["u128"]],["u128"]]]],[11,R[546],E,R[547],45,[[["u32"]],[[R[422],["u128"]],["u128"]]]],[11,R[548],E,R[549],45,[[],[[R[422],["u128"]],["u128"]]]],[11,R[550],E,R[551],45,[[],[[R[422],["u128"]],["u128"]]]],[11,R[557],E,R[552],45,[[[R[422],["u128"]],["u128"]],[[R[422],["u128"]],["u128"]]]],[11,R[558],E,R[553],45,[[[R[422],["u128"]],["u128"]],[[R[422],["u128"]],["u128"]]]],[11,"to_be",E,R[554],45,[[],[[R[422],["u128"]],["u128"]]]],[11,"to_le",E,R[555],45,[[],[[R[422],["u128"]],["u128"]]]],[11,"pow",E,R[556],45,[[["u32"]],[[R[422],["u128"]],["u128"]]]],[11,R[534],E,R[535],45,[[],[["isize"],[R[422],["isize"]]]]],[11,R[536],E,R[537],45,[[],[["isize"],[R[422],["isize"]]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[["isize"],[R[422],["isize"]]]]],[11,R[546],E,R[547],45,[[["u32"]],[["isize"],[R[422],["isize"]]]]],[11,R[548],E,R[549],45,[[],[["isize"],[R[422],["isize"]]]]],[11,R[550],E,R[551],45,[[],[["isize"],[R[422],["isize"]]]]],[11,R[557],E,R[552],45,[[["isize"],[R[422],["isize"]]],[["isize"],[R[422],["isize"]]]]],[11,R[558],E,R[553],45,[[["isize"],[R[422],["isize"]]],[["isize"],[R[422],["isize"]]]]],[11,"to_be",E,R[554],45,[[],[["isize"],[R[422],["isize"]]]]],[11,"to_le",E,R[555],45,[[],[["isize"],[R[422],["isize"]]]]],[11,"pow",E,R[556],45,[[["u32"]],[["isize"],[R[422],["isize"]]]]],[11,R[534],E,R[535],45,[[],[["i8"],[R[422],["i8"]]]]],[11,R[536],E,R[537],45,[[],[["i8"],[R[422],["i8"]]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[["i8"],[R[422],["i8"]]]]],[11,R[546],E,R[547],45,[[["u32"]],[["i8"],[R[422],["i8"]]]]],[11,R[548],E,R[549],45,[[],[["i8"],[R[422],["i8"]]]]],[11,R[550],E,R[551],45,[[],[["i8"],[R[422],["i8"]]]]],[11,R[557],E,R[552],45,[[["i8"],[R[422],["i8"]]],[["i8"],[R[422],["i8"]]]]],[11,R[558],E,R[553],45,[[["i8"],[R[422],["i8"]]],[["i8"],[R[422],["i8"]]]]],[11,"to_be",E,R[554],45,[[],[["i8"],[R[422],["i8"]]]]],[11,"to_le",E,R[555],45,[[],[["i8"],[R[422],["i8"]]]]],[11,"pow",E,R[556],45,[[["u32"]],[["i8"],[R[422],["i8"]]]]],[11,R[534],E,R[535],45,[[],[[R[422],["i16"]],["i16"]]]],[11,R[536],E,R[537],45,[[],[[R[422],["i16"]],["i16"]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[[R[422],["i16"]],["i16"]]]],[11,R[546],E,R[547],45,[[["u32"]],[[R[422],["i16"]],["i16"]]]],[11,R[548],E,R[549],45,[[],[[R[422],["i16"]],["i16"]]]],[11,R[550],E,R[551],45,[[],[[R[422],["i16"]],["i16"]]]],[11,R[557],E,R[552],45,[[[R[422],["i16"]],["i16"]],[[R[422],["i16"]],["i16"]]]],[11,R[558],E,R[553],45,[[[R[422],["i16"]],["i16"]],[[R[422],["i16"]],["i16"]]]],[11,"to_be",E,R[554],45,[[],[[R[422],["i16"]],["i16"]]]],[11,"to_le",E,R[555],45,[[],[[R[422],["i16"]],["i16"]]]],[11,"pow",E,R[556],45,[[["u32"]],[[R[422],["i16"]],["i16"]]]],[11,R[534],E,R[535],45,[[],[["i32"],[R[422],["i32"]]]]],[11,R[536],E,R[537],45,[[],[["i32"],[R[422],["i32"]]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[["i32"],[R[422],["i32"]]]]],[11,R[546],E,R[547],45,[[["u32"]],[["i32"],[R[422],["i32"]]]]],[11,R[548],E,R[549],45,[[],[["i32"],[R[422],["i32"]]]]],[11,R[550],E,R[551],45,[[],[["i32"],[R[422],["i32"]]]]],[11,R[557],E,R[552],45,[[[R[422],["i32"]],["i32"]],[["i32"],[R[422],["i32"]]]]],[11,R[558],E,R[553],45,[[[R[422],["i32"]],["i32"]],[["i32"],[R[422],["i32"]]]]],[11,"to_be",E,R[554],45,[[],[["i32"],[R[422],["i32"]]]]],[11,"to_le",E,R[555],45,[[],[["i32"],[R[422],["i32"]]]]],[11,"pow",E,R[556],45,[[["u32"]],[["i32"],[R[422],["i32"]]]]],[11,R[534],E,R[535],45,[[],[["i64"],[R[422],["i64"]]]]],[11,R[536],E,R[537],45,[[],[["i64"],[R[422],["i64"]]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[["i64"],[R[422],["i64"]]]]],[11,R[546],E,R[547],45,[[["u32"]],[["i64"],[R[422],["i64"]]]]],[11,R[548],E,R[549],45,[[],[["i64"],[R[422],["i64"]]]]],[11,R[550],E,R[551],45,[[],[["i64"],[R[422],["i64"]]]]],[11,R[557],E,R[552],45,[[["i64"],[R[422],["i64"]]],[["i64"],[R[422],["i64"]]]]],[11,R[558],E,R[553],45,[[["i64"],[R[422],["i64"]]],[["i64"],[R[422],["i64"]]]]],[11,"to_be",E,R[554],45,[[],[["i64"],[R[422],["i64"]]]]],[11,"to_le",E,R[555],45,[[],[["i64"],[R[422],["i64"]]]]],[11,"pow",E,R[556],45,[[["u32"]],[["i64"],[R[422],["i64"]]]]],[11,R[534],E,R[535],45,[[],[[R[422],["i128"]],["i128"]]]],[11,R[536],E,R[537],45,[[],[[R[422],["i128"]],["i128"]]]],[11,R[538],E,R[539],45,[[],["u32"]]],[11,R[540],E,R[541],45,[[],["u32"]]],[11,R[542],E,R[543],45,[[],["u32"]]],[11,R[544],E,R[545],45,[[["u32"]],[[R[422],["i128"]],["i128"]]]],[11,R[546],E,R[547],45,[[["u32"]],[[R[422],["i128"]],["i128"]]]],[11,R[548],E,R[549],45,[[],[[R[422],["i128"]],["i128"]]]],[11,R[550],E,R[551],45,[[],[[R[422],["i128"]],["i128"]]]],[11,R[557],E,R[552],45,[[[R[422],["i128"]],["i128"]],[[R[422],["i128"]],["i128"]]]],[11,R[558],E,R[553],45,[[[R[422],["i128"]],["i128"]],[[R[422],["i128"]],["i128"]]]],[11,"to_be",E,R[554],45,[[],[[R[422],["i128"]],["i128"]]]],[11,"to_le",E,R[555],45,[[],[[R[422],["i128"]],["i128"]]]],[11,"pow",E,R[556],45,[[["u32"]],[[R[422],["i128"]],["i128"]]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,"abs",E,R[561],45,[[],[["isize"],[R[422],["isize"]]]]],[11,"signum",E,R[562],45,[[],[["isize"],[R[422],["isize"]]]]],[11,R[563],E,R[564],45,[[],["bool"]]],[11,R[565],E,R[566],45,[[],["bool"]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,"abs",E,R[561],45,[[],[["i8"],[R[422],["i8"]]]]],[11,"signum",E,R[562],45,[[],[["i8"],[R[422],["i8"]]]]],[11,R[563],E,R[564],45,[[],["bool"]]],[11,R[565],E,R[566],45,[[],["bool"]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,"abs",E,R[561],45,[[],[[R[422],["i16"]],["i16"]]]],[11,"signum",E,R[562],45,[[],[[R[422],["i16"]],["i16"]]]],[11,R[563],E,R[564],45,[[],["bool"]]],[11,R[565],E,R[566],45,[[],["bool"]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,"abs",E,R[561],45,[[],[["i32"],[R[422],["i32"]]]]],[11,"signum",E,R[562],45,[[],[["i32"],[R[422],["i32"]]]]],[11,R[563],E,R[564],45,[[],["bool"]]],[11,R[565],E,R[566],45,[[],["bool"]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,"abs",E,R[561],45,[[],[["i64"],[R[422],["i64"]]]]],[11,"signum",E,R[562],45,[[],[["i64"],[R[422],["i64"]]]]],[11,R[563],E,R[564],45,[[],["bool"]]],[11,R[565],E,R[566],45,[[],["bool"]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,"abs",E,R[561],45,[[],[[R[422],["i128"]],["i128"]]]],[11,"signum",E,R[562],45,[[],[[R[422],["i128"]],["i128"]]]],[11,R[563],E,R[564],45,[[],["bool"]]],[11,R[565],E,R[566],45,[[],["bool"]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,R[567],E,R[568],45,[[],["bool"]]],[11,R[569],E,R[570],45,[[],[[R[422],["usize"]],["usize"]]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,R[567],E,R[568],45,[[],["bool"]]],[11,R[569],E,R[570],45,[[],[[R[422],["u8"]],["u8"]]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,R[567],E,R[568],45,[[],["bool"]]],[11,R[569],E,R[570],45,[[],[["u16"],[R[422],["u16"]]]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,R[567],E,R[568],45,[[],["bool"]]],[11,R[569],E,R[570],45,[[],[["u32"],[R[422],["u32"]]]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,R[567],E,R[568],45,[[],["bool"]]],[11,R[569],E,R[570],45,[[],[[R[422],["u64"]],["u64"]]]],[11,R[559],E,R[560],45,[[],["u32"]]],[11,R[567],E,R[568],45,[[],["bool"]]],[11,R[569],E,R[570],45,[[],[[R[422],["u128"]],["u128"]]]],[11,R[571],E,R[572],158,[[["u8"]],[R[447]]]],[11,"new",E,R[573],158,[[["u8"]],[["option",[R[447]]],[R[447]]]]],[11,"get",E,R[574],158,[[],["u8"]]],[11,R[571],E,R[572],159,[[["u16"]],[R[452]]]],[11,"new",E,R[573],159,[[["u16"]],[["option",[R[452]]],[R[452]]]]],[11,"get",E,R[574],159,[[],["u16"]]],[11,R[571],E,R[572],160,[[["u32"]],[R[438]]]],[11,"new",E,R[573],160,[[["u32"]],[[R[438]],["option",[R[438]]]]]],[11,"get",E,R[574],160,[[],["u32"]]],[11,R[571],E,R[572],161,[[["u64"]],[R[448]]]],[11,"new",E,R[573],161,[[["u64"]],[["option",[R[448]]],[R[448]]]]],[11,"get",E,R[574],161,[[],["u64"]]],[11,R[571],E,R[572],162,[[["u128"]],[R[451]]]],[11,"new",E,R[573],162,[[["u128"]],[["option",[R[451]]],[R[451]]]]],[11,"get",E,R[574],162,[[],["u128"]]],[11,R[571],E,R[572],163,[[["usize"]],[R[442]]]],[11,"new",E,R[573],163,[[["usize"]],[[R[442]],["option",[R[442]]]]]],[11,"get",E,R[574],163,[[],["usize"]]],[11,R[571],E,R[572],164,[[["i8"]],[R[436]]]],[11,"new",E,R[573],164,[[["i8"]],[["option",[R[436]]],[R[436]]]]],[11,"get",E,R[574],164,[[],["i8"]]],[11,R[571],E,R[572],165,[[["i16"]],[R[454]]]],[11,"new",E,R[573],165,[[["i16"]],[["option",[R[454]]],[R[454]]]]],[11,"get",E,R[574],165,[[],["i16"]]],[11,R[571],E,R[572],166,[[["i32"]],[R[445]]]],[11,"new",E,R[573],166,[[["i32"]],[["option",[R[445]]],[R[445]]]]],[11,"get",E,R[574],166,[[],["i32"]]],[11,R[571],E,R[572],167,[[["i64"]],[R[444]]]],[11,"new",E,R[573],167,[[["i64"]],[[R[444]],["option",[R[444]]]]]],[11,"get",E,R[574],167,[[],["i64"]]],[11,R[571],E,R[572],168,[[["i128"]],[R[439]]]],[11,"new",E,R[573],168,[[["i128"]],[[R[439]],["option",[R[439]]]]]],[11,"get",E,R[574],168,[[],["i128"]]],[11,R[571],E,R[572],169,[[["isize"]],[R[440]]]],[11,"new",E,R[573],169,[[["isize"]],[["option",[R[440]]],[R[440]]]]],[11,"get",E,R[574],169,[[],["isize"]]],[11,R[114],R[405],R[575],77,[[["self"],[U]],["bool"]]],[11,R[340],E,R[576],77,[[["self"]],["bool"]]],[11,R[114],E,R[575],78,[[["self"],[U]],["bool"]]],[11,R[114],E,R[575],79,[[["self"],[U]],["bool"]]],[11,"new",E,"Creates a new inclusive range. Equivalent to writing…",171,[[["idx"]],[R[484]]]],[11,"start",E,"Returns the lower bound of the range (inclusive).",171,[[["self"]],["idx"]]],[11,"end",E,"Returns the upper bound of the range (inclusive).",171,[[["self"]],["idx"]]],[11,R[109],E,"Destructures the `RangeInclusive` into (lower bound, upper…",171,[[]]],[11,R[114],E,R[575],171,[[["self"],[U]],["bool"]]],[11,R[340],E,R[576],171,[[["self"]],["bool"]]],[11,R[114],E,R[575],80,[[["self"],[U]],["bool"]]],[11,"cloned",E,"Map a `Bound<&T>` to a `Bound<T>` by cloning the contents…",82,[[],["bound"]]],[11,"dangling",R[406],"Creates a new `NonNull` that is dangling, but well-aligned.",172,[[],[R[315]]]],[11,R[571],E,"Creates a new `NonNull`.",172,[[],[R[315]]]],[11,"new",E,"Creates a new `NonNull` if `ptr` is non-null.",172,[[],[[R[315]],["option",[R[315]]]]]],[11,"as_ptr",E,"Acquires the underlying `*mut` pointer.",172,[[]]],[11,"as_ref",E,"Dereferences the content.",172,[[["self"]],[T]]],[11,"as_mut",E,"Mutably dereferences the content.",172,[[["self"]],[T]]],[11,"cast",E,"Casts to a pointer of another type.",172,[[],[R[315]]]],[11,"new",R[407],"Constructs a new `Rc<T>`.",173,[[[T]],["rc"]]],[11,R[577],E,"Constructs a new `Rc` with uninitialized contents.",173,[[],[["rc",[R[483]]],[R[483]]]]],[11,"pin",E,"Constructs a new `Pin<Rc<T>>`. If `T` does not implement…",173,[[[T]],[["pin",["rc"]],["rc"]]]],[11,"try_unwrap",E,"Returns the inner value, if the `Rc` has exactly one…",173,[[["rc"]],[[R[3],["rc"]],["rc"]]]],[11,R[578],E,"Constructs a new reference-counted slice with…",173,[[["usize"]],["rc"]]],[11,R[518],E,"Converts to `Rc<T>`.",173,[[],["rc"]]],[11,R[518],E,"Converts to `Rc<[T]>`.",173,[[],["rc"]]],[11,R[581],E,"Consumes the `Rc`, returning the wrapped pointer.",173,[[["rc"]]]],[11,R[582],E,"Constructs an `Rc` from a raw pointer.",173,[[],["rc"]]],[11,R[579],E,"Consumes the `Rc`, returning the wrapped pointer as…",173,[[["rc"]],[R[315]]]],[11,R[847],E,"Creates a new [`Weak`][weak] pointer to this allocation.",173,[[["rc"]],["weak"]]],[11,R[584],E,"Gets the number of [`Weak`][weak] pointers to this…",173,[[["rc"]],["usize"]]],[11,R[583],E,"Gets the number of strong (`Rc`) pointers to this…",173,[[["rc"]],["usize"]]],[11,R[471],E,"Returns a mutable reference into the given `Rc`, if there…",173,[[["rc"]],[[T],["option"]]]],[11,"get_mut_unchecked",E,"Returns a mutable reference into the given `Rc`, without…",173,[[["rc"]],[T]]],[11,"ptr_eq",E,"Returns `true` if the two `Rc`s point to the same…",173,[[["rc"]],["bool"]]],[11,"make_mut",E,"Makes a mutable reference into the given `Rc`.",173,[[["rc"]],[T]]],[11,R[580],E,"Attempt to downcast the `Rc<dyn Any>` to a concrete type.",173,[[],[["rc"],["rc",["any"]],[R[3],["rc","rc"]]]]],[11,"new",E,"Constructs a new `Weak<T>`, without allocating any memory.…",174,[[],["weak"]]],[11,"as_raw",E,"Returns a raw pointer to the object `T` pointed to by this…",174,[[["self"]]]],[11,R[581],E,"Consumes the `Weak<T>` and turns it into a raw pointer.",174,[[]]],[11,R[582],E,"Converts a raw pointer previously created by [`into_raw`]…",174,[[],["weak"]]],[11,"upgrade",E,"Attempts to upgrade the `Weak` pointer to an [`Rc`],…",174,[[["self"]],[["option",["rc"]],["rc"]]]],[11,R[583],E,"Gets the number of strong (`Rc`) pointers pointing to this…",174,[[["self"]],["usize"]]],[11,R[584],E,"Gets the number of `Weak` pointers pointing to this…",174,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"ptr_eq",E,"Returns `true` if the two `Weak`s point to the same…",174,[[["self"],["weak"]],["bool"]]],[11,"is_ok",R[408],R[4733],86,[[["self"]],["bool"]]],[11,"is_err",E,R[4734],86,[[["self"]],["bool"]]],[11,R[114],E,R[4735],86,[[["self"],[U]],["bool"]]],[11,R[4736],E,R[4737],86,[[["f"],["self"]],["bool"]]],[11,"ok",E,R[4738],86,[[],["option"]]],[11,"err",E,R[4739],86,[[],["option"]]],[11,"as_ref",E,R[4740],86,[[["self"]],[[R[3]],[T],["e"]]]],[11,"as_mut",E,R[4741],86,[[["self"]],[["e"],[T],[R[3]]]]],[11,"map",E,R[4742],86,[[["f"]],[R[3]]]],[11,R[4743],E,R[4744],86,[[["m"],["f"]],[U]]],[11,"map_err",E,R[4745],86,[[["o"]],[R[3]]]],[11,"iter",E,R[4746],86,[[["self"]],["iter"]]],[11,R[628],E,R[4747],86,[[["self"]],["itermut"]]],[11,"and",E,R[4748],86,[[[R[3]]],[R[3]]]],[11,"and_then",E,R[4749],86,[[["f"]],[R[3]]]],[11,"or",E,R[4750],86,[[[R[3]]],[R[3]]]],[11,"or_else",E,R[4751],86,[[["o"]],[R[3]]]],[11,R[737],E,R[4752],86,[[[T]],[T]]],[11,R[738],E,R[4753],86,[[["f"]],[T]]],[11,"copied",E,R[4754],86,[[],[R[3]]]],[11,"copied",E,R[4755],86,[[],[R[3]]]],[11,"cloned",E,R[4756],86,[[],[R[3]]]],[11,"cloned",E,R[4757],86,[[],[R[3]]]],[11,"unwrap",E,R[585],86,[[],[T]]],[11,"expect",E,R[585],86,[[["str"]],[T]]],[11,"unwrap_err",E,R[586],86,[[],["e"]]],[11,"expect_err",E,R[586],86,[[["str"]],["e"]]],[11,R[4758],E,R[4759],86,[[],[T]]],[11,R[4760],E,R[587],86,[[["self"]],[[R[3]],["e"]]]],[11,R[4761],E,R[587],86,[[["self"]],[[T],[R[3]]]]],[11,"as_deref",E,R[587],86,[[["self"]],[R[3]]]],[11,R[4762],E,R[588],86,[[["self"]],[[R[3]],["e"]]]],[11,R[4763],E,R[588],86,[[["self"]],[[R[3]],[T]]]],[11,R[4764],E,R[588],86,[[["self"]],[R[3]]]],[11,"transpose",E,R[4765],86,[[],[["option",[R[3]]],[R[3]]]]],[11,R[589],R[409],R[590],180,[[["self"]]]],[11,"into_slice",E,R[590],181,[[]]],[11,R[589],E,R[590],181,[[["self"]]]],[11,R[592],E,R[591],191,[[["self"]]]],[11,R[593],E,R[591],192,[[]]],[11,R[592],E,R[591],195,[[["self"]]]],[11,R[593],E,R[591],196,[[]]],[11,"valid_up_to",R[370],"Returns the index in the given string up to which valid…",197,[[["self"]],["usize"]]],[11,"error_len",E,"Provides more information about the failure:",197,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"as_str",E,R[590],210,[[["self"]],["str"]]],[11,"as_str",E,R[590],211,[[["self"]],["str"]]],[11,"new",R[391],R[4766],224,[[],["vec"]]],[11,R[287],E,R[4767],224,[[["usize"]],["vec"]]],[11,R[4768],E,R[4769],224,[[]]],[11,R[359],E,R[4770],224,[[["usize"]],["vec"]]],[11,R[619],E,R[4771],224,[[["self"]],["usize"]]],[11,"reserve",E,R[621],224,[[["self"],["usize"]]]],[11,R[594],E,R[620],224,[[["self"],["usize"]]]],[11,R[624],E,R[625],224,[[["self"],["usize"]],[[R[3],[R[595]]],[R[595]]]]],[11,R[622],E,R[623],224,[[["self"],["usize"]],[[R[3],[R[595]]],[R[595]]]]],[11,R[596],E,R[803],224,[[["self"]]]],[11,R[626],E,R[4772],224,[[["self"],["usize"]]]],[11,R[597],E,R[4773],224,[[],["box"]]],[11,R[627],E,R[751],224,[[["self"],["usize"]]]],[11,R[589],E,R[598],224,[[["self"]]]],[11,R[291],E,R[599],224,[[["self"]]]],[11,"as_ptr",E,R[4774],224,[[["self"]]]],[11,R[600],E,R[4775],224,[[["self"]]]],[11,"set_len",E,R[4776],224,[[["self"],["usize"]]]],[11,R[601],E,R[4777],224,[[["self"],["usize"]],[T]]],[11,"insert",E,R[4778],224,[[["self"],["usize"],[T]]]],[11,"remove",E,R[4779],224,[[["self"],["usize"]],[T]]],[11,"retain",E,R[602],224,[[["self"],["f"]]]],[11,R[603],E,R[604],224,[[["self"],["f"]]]],[11,"dedup_by",E,R[604],224,[[["self"],["f"]]]],[11,"push",E,R[4780],224,[[["self"],[T]]]],[11,"pop",E,R[4781],224,[[["self"]],["option"]]],[11,"append",E,R[4782],224,[[["self"],["vec"]]]],[11,"drain",E,R[605],224,[[["self"],["r"]],["drain"]]],[11,"clear",E,R[804],224,[[["self"]]]],[11,"len",E,R[4783],224,[[["self"]],["usize"]]],[11,R[340],E,R[4784],224,[[["self"]],["bool"]]],[11,R[611],E,R[805],224,[[["self"],["usize"]],["vec"]]],[11,R[631],E,R[606],224,[[["self"],["usize"],["f"]]]],[11,"leak",E,R[4785],224,[[["vec"]]]],[11,"resize",E,R[606],224,[[["self"],["usize"],[T]]]],[11,R[290],E,R[4786],224,[[["self"]]]],[11,R[4787],E,R[606],224,[[["self"],["usize"]]]],[11,"dedup",E,R[4788],224,[[["self"]]]],[11,R[4789],E,R[4790],224,[[["self"],[T]],["option"]]],[11,"splice",E,R[4791],224,[[["self"],["i"],["r"]],["splice"]]],[11,R[4792],E,R[607],224,[[["self"],["f"]],[R[4793]]]],[11,R[589],R[411],R[608],225,[[["self"]]]],[11,R[291],E,R[609],225,[[["self"]]]],[11,R[589],E,R[608],226,[[["self"]]]],[11,"new",R[412],"Makes a new empty BTreeMap with a reasonable choice for B.",229,[[],[R[501]]]],[11,"clear",E,R[3243],229,[[["self"]]]],[11,"get",E,R[1550],229,[[["self"],["q"]],[["option"],["v"]]]],[11,R[1526],E,R[1551],229,[[["self"],["q"]],["option"]]],[11,R[610],E,R[3277],229,[[["self"],["q"]],["bool"]]],[11,R[471],E,R[1552],229,[[["self"],["q"]],[["option"],["v"]]]],[11,"insert",E,R[1553],229,[[["self"],["k"],["v"]],["option"]]],[11,"remove",E,R[1554],229,[[["self"],["q"]],["option"]]],[11,"append",E,R[617],229,[[["self"],[R[501]]]]],[11,"range",E,R[613],229,[[["self"],["r"]],["range"]]],[11,"range_mut",E,"Constructs a mutable double-ended iterator over a…",229,[[["self"],["r"]],["rangemut"]]],[11,"entry",E,R[1555],229,[[["self"],["k"]],["entry"]]],[11,R[611],E,R[618],229,[[["self"],["q"]],[R[501]]]],[11,"iter",E,"Gets an iterator over the entries of the map, sorted by key.",229,[[["self"]],["iter"]]],[11,R[628],E,"Gets a mutable iterator over the entries of the map,…",229,[[["self"]],["itermut"]]],[11,"keys",E,"Gets an iterator over the keys of the map, in sorted order.",229,[[["self"]],["keys"]]],[11,"values",E,"Gets an iterator over the values of the map, in order by…",229,[[["self"]],["values"]]],[11,"values_mut",E,"Gets a mutable iterator over the values of the map, in…",229,[[["self"]],["valuesmut"]]],[11,"len",E,R[1556],229,[[["self"]],["usize"]]],[11,R[340],E,R[3278],229,[[["self"]],["bool"]]],[11,R[3246],E,R[612],95,[[["v"]],["v"]]],[11,R[1531],E,R[1532],95,[[["f"]],["v"]]],[11,"key",E,R[1557],95,[[["self"]],["k"]]],[11,R[1558],E,R[1533],95,[[["f"]],["entry"]]],[11,"or_default",E,R[612],95,[[],["v"]]],[11,"key",E,R[1559],236,[[["self"]],["k"]]],[11,"into_key",E,R[1560],236,[[],["k"]]],[11,"insert",E,"Sets the value of the entry with the `VacantEntry`'s key,…",236,[[["v"]],["v"]]],[11,"key",E,R[1534],237,[[["self"]],["k"]]],[11,R[1529],E,"Take ownership of the key and value from the map.",237,[[]]],[11,"get",E,R[1536],237,[[["self"]],["v"]]],[11,R[471],E,R[1537],237,[[["self"]],["v"]]],[11,"into_mut",E,R[3247],237,[[],["v"]]],[11,"insert",E,R[3248],237,[[["self"],["v"]],["v"]]],[11,"remove",E,R[3249],237,[[],["v"]]],[11,"new",R[413],"Makes a new `BTreeSet` with a reasonable choice of B.",245,[[],[R[500]]]],[11,"range",E,R[613],245,[[["self"],["r"]],["range"]]],[11,R[614],E,R[1561],245,[[[R[500]],["self"]],[R[614]]]],[11,R[1057],E,R[1562],245,[[[R[500]],["self"]],[R[615]]]],[11,R[616],E,R[1563],245,[[[R[500]],["self"]],[R[616]]]],[11,"union",E,R[1564],245,[[[R[500]],["self"]],["union"]]],[11,"clear",E,R[1565],245,[[["self"]]]],[11,R[114],E,R[1566],245,[[["self"],["q"]],["bool"]]],[11,"get",E,R[1567],245,[[["self"],["q"]],[[T],["option"]]]],[11,R[1568],E,R[1569],245,[[["self"],[R[500]]],["bool"]]],[11,"is_subset",E,R[1570],245,[[["self"],[R[500]]],["bool"]]],[11,R[1571],E,R[1572],245,[[["self"],[R[500]]],["bool"]]],[11,"insert",E,R[1573],245,[[["self"],[T]],["bool"]]],[11,"replace",E,R[1574],245,[[["self"],[T]],["option"]]],[11,"remove",E,R[3279],245,[[["self"],["q"]],["bool"]]],[11,"take",E,R[1575],245,[[["self"],["q"]],["option"]]],[11,"append",E,R[617],245,[[["self"],[R[500]]]]],[11,R[611],E,R[618],245,[[["self"],["q"]],[R[500]]]],[11,"iter",E,"Gets an iterator that visits the values in the `BTreeSet`…",245,[[["self"]],["iter"]]],[11,"len",E,R[1576],245,[[["self"]],["usize"]]],[11,R[340],E,R[3280],245,[[["self"]],["bool"]]],[11,"new",R[414],"Creates an empty `VecDeque`.",248,[[],[R[497]]]],[11,R[287],E,"Creates an empty `VecDeque` with space for at least…",248,[[["usize"]],[R[497]]]],[11,"get",E,"Retrieves an element in the `VecDeque` by index.",248,[[["self"],["usize"]],[[T],["option"]]]],[11,R[471],E,"Retrieves an element in the `VecDeque` mutably by index.",248,[[["self"],["usize"]],[[T],["option"]]]],[11,"swap",E,"Swaps elements at indices `i` and `j`.",248,[[["self"],["usize"]]]],[11,R[619],E,"Returns the number of elements the `VecDeque` can hold…",248,[[["self"]],["usize"]]],[11,R[594],E,R[620],248,[[["self"],["usize"]]]],[11,"reserve",E,R[621],248,[[["self"],["usize"]]]],[11,R[622],E,R[623],248,[[["self"],["usize"]],[[R[3],[R[595]]],[R[595]]]]],[11,R[624],E,R[625],248,[[["self"],["usize"]],[[R[3],[R[595]]],[R[595]]]]],[11,R[596],E,"Shrinks the capacity of the `VecDeque` as much as possible.",248,[[["self"]]]],[11,R[626],E,"Shrinks the capacity of the `VecDeque` with a lower bound.",248,[[["self"],["usize"]]]],[11,R[627],E,"Shortens the `VecDeque`, dropping excess elements from the…",248,[[["self"],["usize"]]]],[11,"iter",E,"Returns a front-to-back iterator.",248,[[["self"]],["iter"]]],[11,R[628],E,"Returns a front-to-back iterator that returns mutable…",248,[[["self"]],["itermut"]]],[11,"as_slices",E,R[629],248,[[["self"]]]],[11,"as_mut_slices",E,R[629],248,[[["self"]]]],[11,"len",E,"Returns the number of elements in the `VecDeque`.",248,[[["self"]],["usize"]]],[11,R[340],E,"Returns `true` if the `VecDeque` is empty.",248,[[["self"]],["bool"]]],[11,"drain",E,R[605],248,[[["self"],["r"]],["drain"]]],[11,"clear",E,"Clears the `VecDeque`, removing all values.",248,[[["self"]]]],[11,R[114],E,"Returns `true` if the `VecDeque` contains an element equal…",248,[[[T],["self"]],["bool"]]],[11,"front",E,"Provides a reference to the front element, or `None` if…",248,[[["self"]],[[T],["option"]]]],[11,"front_mut",E,"Provides a mutable reference to the front element, or…",248,[[["self"]],[[T],["option"]]]],[11,"back",E,"Provides a reference to the back element, or `None` if the…",248,[[["self"]],[[T],["option"]]]],[11,"back_mut",E,"Provides a mutable reference to the back element, or…",248,[[["self"]],[[T],["option"]]]],[11,"pop_front",E,"Removes the first element and returns it, or `None` if the…",248,[[["self"]],["option"]]],[11,"pop_back",E,"Removes the last element from the `VecDeque` and returns…",248,[[["self"]],["option"]]],[11,"push_front",E,"Prepends an element to the `VecDeque`.",248,[[["self"],[T]]]],[11,"push_back",E,"Appends an element to the back of the `VecDeque`.",248,[[["self"],[T]]]],[11,"swap_remove_front",E,R[630],248,[[["self"],["usize"]],["option"]]],[11,"swap_remove_back",E,R[630],248,[[["self"],["usize"]],["option"]]],[11,"insert",E,"Inserts an element at `index` within the `VecDeque`,…",248,[[["self"],["usize"],[T]]]],[11,"remove",E,"Removes and returns the element at `index` from the…",248,[[["self"],["usize"]],["option"]]],[11,R[611],E,"Splits the `VecDeque` into two at the given index.",248,[[["self"],["usize"]],[R[497]]]],[11,"append",E,R[806],248,[[[R[497]],["self"]]]],[11,"retain",E,R[602],248,[[["self"],["f"]]]],[11,R[631],E,R[632],248,[[["self"],["usize"]]]],[11,R[544],E,"Rotates the double-ended queue `mid` places to the left.",248,[[["self"],["usize"]]]],[11,R[546],E,"Rotates the double-ended queue `k` places to the right.",248,[[["self"],["usize"]]]],[11,"resize",E,R[632],248,[[["self"],["usize"],[T]]]]],"p":[[8,R[633]],[3,"Excess"],[8,"Alloc"],[8,"Any"],[8,"ToOwned"],[4,"Cow"],[8,"Borrow"],[8,R[634]],[8,"Clone"],[8,R[321]],[4,"Ordering"],[3,"Reverse"],[8,"Ord"],[8,R[322]],[8,"AsRef"],[8,"AsMut"],[8,"Into"],[8,"From"],[8,"TryInto"],[8,"TryFrom"],[8,"Default"],[8,"Write"],[8,"Binary"],[8,"Octal"],[8,"Debug"],[8,"Display"],[8,"LowerHex"],[8,"Pointer"],[8,"UpperHex"],[8,"LowerExp"],[8,"UpperExp"],[4,R[635]],[8,"Hash"],[8,"Hasher"],[8,R[636]],[8,"Iterator"],[8,"Step"],[8,R[637]],[8,R[638]],[8,R[639]],[8,"Extend"],[8,R[640]],[8,"Sum"],[8,"Product"],[4,R[641]],[3,"Wrapping"],[4,R[642]],[8,"Add"],[8,"Sub"],[8,"Mul"],[8,"Div"],[8,"Rem"],[8,"Neg"],[8,R[643]],[8,R[644]],[8,R[645]],[8,R[646]],[8,R[647]],[8,"Not"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Shl"],[8,"Shr"],[8,R[648]],[8,R[649]],[8,R[650]],[8,R[651]],[8,R[652]],[8,"Deref"],[8,"DerefMut"],[8,"Drop"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[8,"Index"],[8,"IndexMut"],[3,"Range"],[3,R[653]],[3,"RangeTo"],[3,R[654]],[8,R[655]],[4,"Bound"],[8,"Try"],[8,R[656]],[4,R[657]],[4,"Result"],[8,"Concat"],[8,"Join"],[8,R[658]],[8,"FromStr"],[8,"Pattern"],[4,R[659]],[8,R[660]],[8,R[661]],[4,"Entry"],[3,"System"],[3,"AllocErr"],[3,R[662]],[3,R[663]],[3,"Layout"],[3,"Global"],[3,"TypeId"],[3,"Box"],[3,"Cell"],[3,"RefCell"],[3,R[664]],[3,R[665]],[3,"Ref"],[3,"RefMut"],[3,R[666]],[4,R[667]],[3,R[668]],[3,"Error"],[3,R[669]],[3,R[670]],[3,"DebugMap"],[3,"DebugSet"],[3,R[671]],[3,R[672]],[3,R[673]],[3,R[674]],[3,"Repeat"],[3,R[675]],[3,"Empty"],[3,"Once"],[3,"OnceWith"],[3,"FromFn"],[3,R[676]],[3,"Rev"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,R[677]],[3,R[678]],[3,"Peekable"],[3,R[679]],[3,R[680]],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Cloned"],[3,"StepBy"],[3,"Flatten"],[3,"Copied"],[3,R[681]],[3,R[682]],[3,R[683]],[3,R[684]],[19,R[685]],[3,R[686]],[3,R[687]],[3,R[688]],[3,R[689]],[3,R[690]],[3,R[691]],[3,R[692]],[3,R[693]],[3,R[694]],[3,R[695]],[3,R[696]],[3,R[697]],[3,R[698]],[3,R[699]],[3,R[700]],[3,R[701]],[3,R[702]],[3,"NonNull"],[3,"Rc"],[3,"Weak"],[3,"Iter"],[3,R[703]],[3,R[339]],[3,"Chunks"],[3,"Windows"],[3,"Iter"],[3,R[703]],[3,"SplitMut"],[3,R[704]],[3,"Split"],[3,"SplitN"],[3,"RSplitN"],[3,R[705]],[3,R[706]],[3,"RSplit"],[3,R[707]],[3,R[708]],[3,R[709]],[3,"RChunks"],[3,R[710]],[3,R[711]],[3,R[712]],[3,R[713]],[3,"Lines"],[3,"LinesAny"],[3,"Split"],[3,"RSplit"],[3,"SplitN"],[3,"RSplitN"],[3,R[714]],[3,R[715]],[3,"Matches"],[3,"RMatches"],[3,R[716]],[3,R[717]],[3,"Chars"],[3,R[718]],[3,"Bytes"],[3,R[719]],[3,R[720]],[3,R[721]],[3,R[722]],[3,R[723]],[3,R[724]],[3,R[725]],[3,R[726]],[3,R[727]],[3,R[728]],[3,R[729]],[3,"Vec"],[3,R[339]],[3,"Drain"],[3,"Splice"],[3,R[730]],[3,"BTreeMap"],[3,"Keys"],[3,"Iter"],[3,R[339]],[3,"Values"],[3,"Range"],[3,"RangeMut"],[3,R[731]],[3,R[732]],[3,R[703]],[3,R[733]],[3,"Iter"],[3,R[734]],[3,R[735]],[3,R[736]],[3,"Union"],[3,"BTreeSet"],[3,R[339]],[3,"Range"],[3,"VecDeque"],[3,"Iter"],[3,R[703]],[3,R[339]],[3,"Drain"]]};
searchIndex["sp_storage"]={"doc":"Primitive types for storage related stuff.","i":[[3,"StorageKey","sp_storage","Storage key.",N,N],[12,"0",E,E,0,N],[3,R[3409],E,"Storage data associated to a [`StorageKey`].",N,N],[12,"0",E,E,1,N],[3,R[3410],E,R[4434],N,N],[12,"data",E,R[4435],2,N],[12,R[4436],E,R[4437],2,N],[3,"Storage",E,R[4438],N,N],[12,"top",E,R[4439],3,N],[12,"children",E,R[4440],3,N],[3,R[3411],E,"Storage change set",N,N],[12,"block",E,"Block hash",4,N],[12,"changes",E,"A list of changes",4,N],[3,R[3413],E,"A wrapper around a child storage key.",N,N],[3,"ChildTrie",E,"A child trie of default type. Default is the same…",N,N],[3,R[3414],E,"Owned version of default child trie `ChildTrie`.",N,N],[4,R[4801],E,R[4794],N,N],[13,"Default",E,E,5,N],[4,R[3412],E,"Owned version of `ChildInfo`. To be use in persistence…",N,N],[13,"Default",E,E,6,N],[4,"ChildType",E,"Type of child. It does not strictly define different child…",N,N],[13,"CryptoUniqueId",E,"Default, it uses a cryptographic strong unique id as input.",7,N],[0,"well_known_keys",E,"List of all well known keys and prefixes in storage.",N,N],[5,"is_child_storage_key","sp_storage::well_known_keys","Whether a key is a child storage key.",N,[[],["bool"]]],[5,"is_child_trie_key_valid",E,"Determine whether a child trie key is valid.",N,[[],["bool"]]],[17,"CODE",E,"Wasm code of the runtime.",N,N],[17,"HEAP_PAGES",E,"Number of wasm linear memory pages required for execution…",N,N],[17,"EXTRINSIC_INDEX",E,"Current extrinsic index (u32) is stored under this key.",N,N],[17,"CHANGES_TRIE_CONFIG",E,"Changes trie configuration is stored under this key.",N,N],[17,"CHILD_STORAGE_KEY_PREFIX",E,"Prefix of child storage keys.",N,N],[6,R[4578],"sp_storage","Map of data to use in a storage, it is a collection of…",N,N],[11,"from_vec",E,"Create a new `ChildStorageKey` from a vector.",8,[[["vec",["u8"]],["u8"]],["option"]]],[11,R[768],E,"Create a new `ChildStorageKey` from a slice.",8,[[],["option"]]],[11,"as_ref",E,"Get access to the byte representation of the storage key.",8,[[["self"]]]],[11,"into_owned",E,"Destruct this instance into an owned vector that…",8,[[],[["vec",["u8"]],["u8"]]]],[11,R[3402],E,R[4795],5,[[],["self"]]],[11,R[24],E,R[4796],5,[[["self"]],[R[3403]]]],[11,R[4797],E,R[4798],5,[[["u32"]],["option"]]],[11,"info",E,R[4799],5,[[["self"]]]],[11,"keyspace",E,R[4800],5,[[["self"]]]],[11,R[3402],E,"Instantiates info for a default child trie.",6,[[["vec",["u8"]],["u8"]],["self"]]],[11,"try_update",E,"Try to update with another instance, return false if both…",6,[[["self"],[R[3487]]],["bool"]]],[11,"as_ref",E,"Get `ChildInfo` reference to this owned child info.",6,[[["self"]],[R[3487]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"clone",E,E,0,[[["self"]],[R[3406]]]],[11,"clone",E,E,1,[[["self"]],[R[3404]]]],[11,"clone",E,E,2,[[["self"]],[R[3407]]]],[11,"clone",E,E,3,[[["self"]],["storage"]]],[11,"clone",E,E,5,[[["self"]],[R[3487]]]],[11,"clone",E,E,6,[[["self"]],[R[3403]]]],[11,"clone",E,E,9,[[["self"]],["childtrie"]]],[11,"clone",E,E,10,[[["self"]],[R[3405]]]],[11,R[90],E,E,3,[[],["storage"]]],[11,"cmp",E,E,0,[[["self"],[R[3406]]],[R[105]]]],[11,"cmp",E,E,1,[[["self"],[R[3404]]],[R[105]]]],[11,"cmp",E,E,6,[[[R[3403]],["self"]],[R[105]]]],[11,"cmp",E,E,10,[[["self"],[R[3405]]],[R[105]]]],[11,"eq",E,E,0,[[["self"],[R[3406]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[3406]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[3404]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[3404]]],["bool"]]],[11,"eq",E,E,2,[[[R[3407]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[3407]],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[3408]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[3408]],["self"]],["bool"]]],[11,"eq",E,E,6,[[[R[3403]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[3403]],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[3405]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[3405]]],["bool"]]],[11,R[106],E,E,0,[[["self"],[R[3406]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,0,[[["self"],[R[3406]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[3406]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[3406]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[3406]]],["bool"]]],[11,R[106],E,E,1,[[["self"],[R[3404]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,1,[[["self"],[R[3404]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[3404]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[3404]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[3404]]],["bool"]]],[11,R[106],E,E,6,[[[R[3403]],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,6,[[[R[3403]],["self"]],["bool"]]],[11,"le",E,E,6,[[[R[3403]],["self"]],["bool"]]],[11,"gt",E,E,6,[[[R[3403]],["self"]],["bool"]]],[11,"ge",E,E,6,[[[R[3403]],["self"]],["bool"]]],[11,R[106],E,E,10,[[["self"],[R[3405]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,10,[[["self"],[R[3405]]],["bool"]]],[11,"le",E,E,10,[[["self"],[R[3405]]],["bool"]]],[11,"gt",E,E,10,[[["self"],[R[3405]]],["bool"]]],[11,"ge",E,E,10,[[["self"],[R[3405]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[37]]],[R[3]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,R[132],E,E,0,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,1,[[["self"],["__s"]],[R[3]]]],[11,R[132],E,E,4,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,0,[[["__d"]],[R[3]]]],[11,R[173],E,E,1,[[["__d"]],[R[3]]]],[11,R[173],E,E,4,[[["__d"]],[R[3]]]]],"p":[[3,"StorageKey"],[3,R[3409]],[3,R[3410]],[3,"Storage"],[3,R[3411]],[4,R[4801]],[4,R[3412]],[4,"ChildType"],[3,R[3413]],[3,"ChildTrie"],[3,R[3414]]]};
searchIndex["sp_trie"]={"doc":"Utility functions to interact with Substrate's Base-16…","i":[[8,"Trie","sp_trie",R[3955],N,N],[10,"root",E,R[3445],0,[[["self"]]]],[11,R[340],E,R[3446],0,[[["self"]],["bool"]]],[11,R[114],E,R[3447],0,[[["self"]],[["box",[R[3954]]],[R[3],["bool","box"]],["bool"]]]],[11,"get",E,R[3448],0,[[["self"]],[["option",["vec"]],["box",[R[3954]]],[R[3],["option","box"]]]]],[10,"get_with",E,R[4009],0,[[["self"],["q"]],[[R[3],["option","box"]],["option"],["box",[R[3954]]]]]],[10,"iter",E,R[4010],0,[[["self"]],[[R[3],["box","box"]],["box",[R[3454]]],["box",[R[3954]]]]]],[8,"TrieMut",E,R[3955],N,N],[10,"root",E,R[3445],1,[[["self"]]]],[10,R[340],E,R[3446],1,[[["self"]],["bool"]]],[11,R[114],E,R[3447],1,[[["self"]],[["box",[R[3954]]],[R[3],["bool","box"]],["bool"]]]],[10,"get",E,R[3448],1,[[["self"]],[["option",["vec"]],["box",[R[3954]]],[R[3],["option","box"]]]]],[10,"insert",E,R[4011],1,[[["self"]],[["option",["vec"]],["box",[R[3954]]],[R[3],["option","box"]]]]],[10,"remove",E,R[4012],1,[[["self"]],[["option",["vec"]],["box",[R[3954]]],[R[3],["option","box"]]]]],[6,"DBValue",E,"Various re-exports from the `trie-db` crate. Database value",N,N],[3,"Recorder",E,"Various re-exports from the `trie-db` crate. Records trie…",N,N],[6,"CError",E,"Various re-exports from the `trie-db` crate. Alias…",N,N],[8,"Query",E,"Various re-exports from the `trie-db` crate. Description…",N,N],[16,"Item",E,R[4006],2,N],[10,"decode",E,R[4007],2,[[]]],[11,"record",E,R[4008],2,[[["u32"],["self"]]]],[8,R[4013],E,"Various re-exports from the `trie-db` crate. Trait with…",N,N],[18,R[4014],E,R[4015],3,N],[16,"Hash",E,R[4016],3,N],[16,"Codec",E,R[4017],3,N],[8,R[3475],E,"Various re-exports from the `trie-db` crate. This trait…",N,N],[11,"trie_build",E,R[4018],4,[[["db"],["i"]]]],[11,R[4028],E,R[4019],4,[[["i"]]]],[11,R[3965],E,R[4020],4,[[["i"]],[["vec",["u8"]],["u8"]]]],[11,R[3966],E,R[4021],4,[[["u32"]],[["vec",["u8"]],["u8"]]]],[11,R[4022],E,R[4023],4,[[["i"]]]],[0,"nibble_ops",E,"Various re-exports from the `trie-db` crate. Utility…",N,N],[17,R[3988],"sp_trie::nibble_ops",R[3989],N,N],[17,R[3990],E,R[3991],N,N],[17,R[3992],E,R[3993],N,N],[17,R[3994],E,R[3995],N,N],[17,R[3996],E,R[3997],N,N],[5,"pad_left",E,R[3973],N,[[["u8"]],["u8"]]],[5,"pad_right",E,R[3974],N,[[["u8"]],["u8"]]],[5,"at_left",E,R[3975],N,[[["u8"]],["u8"]]],[5,R[3976],E,R[3977],N,[[["usize"]],["u8"]]],[5,"at",E,R[3978],N,[[["usize"],[R[3439]]],["u8"]]],[5,R[3979],E,R[3980],N,[[["u8"]],["u8"]]],[5,R[3981],E,R[3982],N,[[["usize"]],["usize"]]],[17,R[3998],E,R[3999],N,N],[5,R[3983],E,R[3984],N,[[],["usize"]]],[5,R[3985],E,R[3986],N,[[["u8"]],["usize"]]],[5,"shift_key",E,R[3987],N,[[["usize"]],["bool"]]],[8,R[3481],"sp_trie","Various re-exports from the `memory-db` crate.",N,N],[16,"Key",E,E,5,N],[10,"key",E,E,5,[[]]],[5,R[3956],E,R[3957],N,[[],[["vec",["u8"]],["u8"]]]],[8,"HashDBT",E,"Various re-exports from the `hash-db` crate. Trait…",N,N],[10,"get",E,R[112],6,[[["self"]],["option"]]],[10,R[114],E,R[113],6,[[["self"]],["bool"]]],[10,"insert",E,R[3416],6,[[["self"]]]],[10,"emplace",E,R[3417],6,[[["self"],[T]]]],[10,"remove",E,R[115],6,[[["self"]]]],[7,R[3958],E,"Various re-exports from the `hash-db` crate. An empty…",N,N],[3,R[4029],E,"Codec-flavored TrieStream.",N,N],[3,R[4027],E,"Concrete implementation of a `NodeCodec` with Parity Codec…",N,N],[3,"Layout",E,"substrate trie layout",N,N],[3,R[3967],E,"`HashDB` implementation that append a encoded prefix…",N,N],[3,R[3968],E,"`HashDBMut` implementation that append a encoded prefix…",N,N],[4,"Error",E,"Error for trie node decoding.",N,N],[13,"BadFormat",E,"Bad format.",7,N],[13,"Decode",E,"Decoding error.",7,N],[5,"delta_trie_root",E,"Determine a trie root given a hash DB and delta values.",N,[[["trieconfiguration"],["db"],[R[3426]],["i"]],[[R[3426]],[R[3],[R[3426],"box"]],["box",[R[3954]]]]]],[5,"read_trie_value",E,"Read a value from the trie.",N,[[["db"],[R[3426]]],[["option",["vec"]],["box",[R[3954]]],[R[3],["option","box"]]]]],[5,"read_trie_value_with",E,"Read a value from the trie with given Query.",N,[[["db"],[R[3426]],["query"]],[["option",["vec"]],["box",[R[3954]]],[R[3],["option","box"]]]]],[5,"default_child_trie_root",E,"Determine the default child trie root.",N,[[]]],[5,"child_trie_root",E,"Determine a child trie root given its ordered contents,…",N,[[["i"]]]],[5,"child_delta_trie_root",E,"Determine a child trie root given a hash DB and delta…",N,[[["db"],["i"],["rd"]],[["box",[R[3954]]],[R[3],["box"]]]]],[5,"for_keys_in_child_trie",E,"Call `f` for all keys in a child trie.",N,[[["db"],["fnmut"]],[["box",[R[3954]]],[R[3],["box"]]]]],[5,R[4138],E,"Record all keys for a given root.",N,[[["db"],[R[3426]],["recorder"]],[["box",[R[3954]]],[R[3],["box"]]]]],[5,"read_child_trie_value",E,"Read a value from the child trie.",N,[[["db"]],[["option",["vec"]],["box",[R[3954]]],[R[3],["option","box"]]]]],[5,"read_child_trie_value_with",E,"Read a value from the child trie with given query.",N,[[["db"],["query"]],[["option",["vec"]],["box",[R[3954]]],[R[3],["option","box"]]]]],[11,"as_raw",E,E,8,[[["self"]]]],[0,"trie_types",E,"This module is for non generic definition of trie type.…",N,N],[6,"Layout","sp_trie::trie_types",E,N,N],[6,"TrieDB",E,R[3960],N,N],[6,R[4026],E,R[3961],N,N],[6,"Lookup",E,R[3962],N,N],[6,R[4025],E,"As in `trie_db`, but less generic, error type for the crate.",N,N],[6,R[4025],"sp_trie","TrieDB error over `TrieConfiguration` trait.",N,N],[6,"HashDB",E,R[3959],N,N],[6,"PlainDB",E,"Reexport from `hash_db`, with genericity set for key only.",N,N],[6,"PrefixedMemoryDB",E,R[3959],N,N],[6,"MemoryDB",E,R[3959],N,N],[6,"GenericMemoryDB",E,R[3959],N,N],[6,"TrieDB",E,R[3960],N,N],[6,R[4026],E,R[3961],N,N],[6,"Lookup",E,R[3962],N,N],[6,"TrieHash",E,"Hash type for a trie layout.",N,N],[8,"AsHashDB",E,R[3959],N,N],[11,"new",E,R[3963],9,[[["db"]],["self"]]],[11,"new",E,R[3963],10,[[["db"]],["self"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,R[3774],E,E,11,[[],[T]]],[11,R[3779],E,R[3776],11,[[["outer"]],[T]]],[11,R[3780],E,R[3777],11,[[["outer"]],[T]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"clear",E,E,11,[[["self"]]]],[11,R[2628],E,E,11,[[]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,R[3774],E,E,8,[[],[T]]],[11,R[3779],E,R[3776],8,[[["outer"]],[T]]],[11,R[3780],E,R[3777],8,[[["outer"]],[T]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"clear",E,E,8,[[["self"]]]],[11,R[2628],E,E,8,[[]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,R[3774],E,E,12,[[],[T]]],[11,R[3779],E,R[3776],12,[[["outer"]],[T]]],[11,R[3780],E,R[3777],12,[[["outer"]],[T]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"clear",E,E,12,[[["self"]]]],[11,R[2628],E,E,12,[[]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,R[3774],E,E,13,[[],[T]]],[11,R[3779],E,R[3776],13,[[["outer"]],[T]]],[11,R[3780],E,R[3777],13,[[["outer"]],[T]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"clear",E,E,13,[[["self"]]]],[11,R[2628],E,E,13,[[]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,R[3774],E,E,9,[[],[T]]],[11,R[3779],E,R[3776],9,[[["outer"]],[T]]],[11,R[3780],E,R[3777],9,[[["outer"]],[T]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,R[3774],E,E,10,[[],[T]]],[11,R[3779],E,R[3776],10,[[["outer"]],[T]]],[11,R[3780],E,R[3777],10,[[["outer"]],[T]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[78],E,E,7,[[["self"]],["string"]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,R[3774],E,E,7,[[],[T]]],[11,R[3779],E,R[3776],7,[[["outer"]],[T]]],[11,R[3780],E,R[3777],7,[[["outer"]],[T]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"as_fail",E,E,7,[[["self"]],["fail"]]],[11,"fmt",E,E,11,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[90],E,E,11,[[],["recorder"]]],[11,"from",E,E,7,[[["error"]],["self"]]],[11,"clone",E,E,7,[[["self"]],["error"]]],[11,"clone",E,E,12,[[["self"]],["nodecodec"]]],[11,"clone",E,E,8,[[["self"]],["triestream"]]],[11,R[90],E,E,12,[[],["nodecodec"]]],[11,R[90],E,E,8,[[],["triestream"]]],[11,R[90],E,E,13,[[],["layout"]]],[11,"eq",E,E,7,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["error"]],["bool"]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,R[38],E,E,7,[[["self"]],["str"]]],[11,"get",E,E,10,[[["self"],["prefix"]],["option"]]],[11,R[114],E,E,10,[[["self"],["prefix"]],["bool"]]],[11,"insert",E,E,10,[[["self"],["prefix"]]]],[11,"emplace",E,E,10,[[[T],["self"],["prefix"]]]],[11,"remove",E,E,10,[[["self"],["prefix"]]]],[11,"get",E,E,9,[[["self"],["prefix"]],["option"]]],[11,R[114],E,E,9,[[["self"],["prefix"]],["bool"]]],[11,R[3964],E,E,10,[[["self"]],["hashdb"]]],[11,R[3478],E,E,10,[[["self"]],["hashdb"]]],[11,R[4000],E,E,12,[[]]],[11,R[4001],E,E,12,[[],[[R[3],[R[4024]]],[R[4024]]]]],[11,R[4002],E,E,12,[[],["bool"]]],[11,"empty_node",E,E,12,[[]]],[11,"leaf_node",E,E,12,[[["partial"]],[["vec",["u8"]],["u8"]]]],[11,R[4003],E,E,12,[[["usize"],[R[3443]]],[["vec",["u8"]],["u8"]]]],[11,R[4004],E,E,12,[[["option"]],[["vec",["u8"]],["u8"]]]],[11,R[4005],E,E,12,[[["usize"],["option"]],[["vec",["u8"]],["u8"]]]],[11,R[4028],E,E,13,[[["i"]]]],[11,R[3965],E,E,13,[[["i"]],[["vec",["u8"]],["u8"]]]],[11,R[3966],E,E,13,[[["u32"]],[["vec",["u8"]],["u8"]]]],[11,"new",E,E,8,[[],["self"]]],[11,R[4030],E,E,8,[[["self"]]]],[11,R[4032],E,E,8,[[["self"]]]],[11,R[4031],E,E,8,[[["option"],["self"]]]],[11,R[4033],E,E,8,[[["self"]]]],[11,R[4034],E,E,8,[[["self"]]]],[11,"out",E,E,8,[[],[["vec",["u8"]],["u8"]]]],[11,"new",E,R[3969],11,[[],["recorder"]]],[11,"with_depth",E,R[3970],11,[[["u32"]],["recorder"]]],[11,"record",E,R[3971],11,[[["u32"],["self"],["ho"]]]],[11,"drain",E,R[3972],11,[[["self"]],[["vec",["record"]],["record"]]]]],"p":[[8,"Trie"],[8,"TrieMut"],[8,"Query"],[8,R[4013]],[8,R[3475]],[8,R[3481]],[8,"HashDBT"],[4,"Error"],[3,R[4029]],[3,R[3967]],[3,R[3968]],[3,"Recorder"],[3,R[4027]],[3,"Layout"]]};
searchIndex["sp_version"]={"doc":"Version module for the Substrate runtime; Provides a…","i":[[14,R[4441],"sp_version",R[4442],N,N],[3,R[4446],E,"Runtime version. This should not be thought of as classic…",N,N],[12,"spec_name",E,"Identifies the different Substrate runtimes. There'll be…",0,N],[12,"impl_name",E,"Name of the implementation of the spec. This is of little…",0,N],[12,"authoring_version",E,"`authoring_version` is the version of the authorship…",0,N],[12,"spec_version",E,"Version of the runtime specification. A full-node will not…",0,N],[12,"impl_version",E,"Version of the implementation of the specification. Nodes…",0,N],[12,"apis",E,"List of supported API \"features\" along with their versions.",0,N],[3,R[4447],E,E,N,N],[12,R[4443],E,"Basic runtime version info.",1,N],[12,R[4445],E,"Authoring runtimes that this native runtime supports.",1,N],[6,"ApiId",E,"The identity of a particular API interface that the…",N,N],[6,"ApisVec",E,"A vector of pairs of `ApiId` and a `u32` for version. For…",N,N],[8,R[4448],E,"Something that can provide the runtime version at a given…",N,N],[10,"native_version",E,"Returns the version of the native runtime.",2,[[["self"]],["nativeversion"]]],[10,R[4443],E,"Returns the version of runtime at the given block.",2,[[["blockid"],["self"]],[["string"],[R[3],[R[4444],"string"]],[R[4444]]]]],[11,"can_call_with",E,"Check if this version matches other version for calling…",0,[[["self"],[R[4444]]],["bool"]]],[11,"has_api",E,"Check if this version supports a particular API.",0,[[["self"]],["bool"]]],[11,"has_api_with",E,"Check if the given api is implemented and the version…",0,[[["self"],["fn"]],["bool"]]],[11,R[4445],E,"Check if this version matches other version for authoring…",1,[[["self"],[R[4444]]],[[R[3],["string"]],["string"]]]],[14,"create_apis_vec",E,"Create a vector of Api declarations.",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"decode",E,E,0,[[["i"]],[["error"],[R[3],["error"]]]]],[11,R[292],E,E,0,[[["self"]],["usize"]]],[11,R[3525],E,E,0,[[["self"],["f"]],["r"]]],[11,"encode",E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3603],E,E,0,[[["w"],["self"]]]],[11,R[4308],E,E,0,[[["self"]],["bool"]]],[11,"clear",E,E,0,[[],[T]]],[11,R[3604],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[3605],E,E,0,[[],[["error"],[R[3],["error"]]]]],[11,R[3774],E,E,0,[[],[T]]],[11,R[3779],E,R[3776],0,[[["outer"]],[T]]],[11,R[3780],E,R[3777],0,[[["outer"]],[T]]],[11,R[3601],E,E,0,[[],[T]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[2628],E,E,0,[[]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[3774],E,E,1,[[],[T]]],[11,R[3779],E,R[3776],1,[[["outer"]],[T]]],[11,R[3780],E,R[3777],1,[[["outer"]],[T]]],[11,R[3601],E,E,1,[[],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"clone",E,E,0,[[["self"]],[R[4444]]]],[11,R[90],E,E,0,[[],[R[4444]]]],[11,"eq",E,E,0,[[["self"],[R[4444]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[4444]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,R[132],E,E,0,[[["self"],["__s"]],[R[3]]]],[11,R[173],E,E,0,[[["__d"]],[R[3]]]],[11,"decode",E,E,0,[[["decin"]],[["error"],[R[3],["error"]]]]],[11,R[3603],E,E,0,[[["self"],["encout"]]]]],"p":[[3,R[4446]],[3,R[4447]],[8,R[4448]]]};
searchIndex["sp_wasm_interface"]={"doc":"Types and traits for interfacing between the host and the…","i":[[3,"Pointer","sp_wasm_interface","Type to represent a pointer in wasm at the host.",N,N],[3,R[2884],E,"The Signature of a function",N,N],[12,"args",E,"The arguments of a function.",0,N],[12,"return_value",E,"The optional return value of a function.",0,N],[4,R[230],E,"Value types supported by Substrate on the boundary between…",N,N],[13,"I32",E,"An `i32` value type.",1,N],[13,"I64",E,"An `i64` value type.",1,N],[13,"F32",E,"An `f32` value type.",1,N],[13,"F64",E,"An `f64` value type.",1,N],[4,"Value",E,"Values supported by Substrate on the boundary between…",N,N],[13,"I32",E,"An `i32` value.",2,N],[13,"I64",E,"An `i64` value.",2,N],[13,"F32",E,"An nan-preserving `f32` value.",2,N],[13,"F64",E,"An nan-preserving `f64` value.",2,N],[6,"Result",E,"Result type used by traits in this crate.",N,N],[6,"WordSize",E,"The word size used in wasm. Normally known as `usize` in…",N,N],[6,"MemoryId",E,"Sandbox memory identifier.",N,N],[8,R[3395],E,"Something that can be wrapped in a wasm `Pointer`.",N,N],[18,"SIZE",E,"The size of the type in wasm.",3,N],[8,R[122],E,"Something that provides a function implementation on the…",N,N],[10,"name",E,R[3393],4,[[["self"]],["str"]]],[10,R[188],E,"Returns the signature of this function.",4,[[["self"]],[R[188]]]],[10,"execute",E,"Execute this function with the given arguments.",4,[[[R[3807]],["self"],[R[3703]]],[["option",["value"]],[R[3],["option"]]]]],[8,R[3396],E,"Context used by `Function` to interact with the allocator…",N,N],[11,"read_memory",E,"Read memory from `address` into a vector.",5,[[["pointer",["u8"]],["wordsize"],["self"],["u8"]],[["vec",["u8"]],[R[3],["vec"]]]]],[10,"read_memory_into",E,"Read memory into the given `dest` buffer from `address`.",5,[[["pointer",["u8"]],["self"],["u8"]],[R[3]]]],[10,"write_memory",E,"Write the given data at `address` into the memory.",5,[[["pointer",["u8"]],["self"],["u8"]],[R[3]]]],[10,"allocate_memory",E,"Allocate a memory instance of `size` bytes.",5,[[["self"],["wordsize"]],[["pointer",["u8"]],[R[3],["pointer"]]]]],[10,"deallocate_memory",E,"Deallocate a given memory instance.",5,[[["self"],["pointer",["u8"]],["u8"]],[R[3]]]],[10,"sandbox",E,"Provides access to the sandbox.",5,[[["self"]],["sandbox"]]],[8,"Sandbox",E,"Something that provides access to the sandbox.",N,N],[10,"memory_get",E,"Get sandbox memory from the `memory_id` instance at…",6,[[["u8"],["wordsize"],["pointer",["u8"]],["self"],["memoryid"]],[["u32"],[R[3],["u32"]]]]],[10,"memory_set",E,"Set sandbox memory from the given value.",6,[[["u8"],["wordsize"],["pointer",["u8"]],["self"],["memoryid"]],[["u32"],[R[3],["u32"]]]]],[10,"memory_teardown",E,"Delete a memory instance.",6,[[["self"],["memoryid"]],[R[3]]]],[10,"memory_new",E,"Create a new memory instance with the given `initial` size…",6,[[["self"],["u32"]],[[R[3],["memoryid"]],["memoryid"]]]],[10,"invoke",E,"Invoke an exported function by a name.",6,[[["u32"],["pointer",["u8"]],["str"],["wordsize"],["self"],["u8"]],[["u32"],[R[3],["u32"]]]]],[10,"instance_teardown",E,"Delete a sandbox instance.",6,[[["self"],["u32"]],[R[3]]]],[10,"instance_new",E,"Create a new sandbox instance.",6,[[["u32"],["self"]],[["u32"],[R[3],["u32"]]]]],[8,R[3397],E,"Something that provides implementations for host functions.",N,N],[10,R[4168],E,"Returns the host functions `Self` provides.",7,[[],[["vec",[R[4169]]],[R[4169]]]]],[8,"IntoValue",E,"Something that can be converted into a wasm compatible…",N,N],[18,"VALUE_TYPE",E,"The type of the value in wasm.",8,N],[10,R[3401],E,"Convert `self` into a wasm `Value`.",8,[[],["value"]]],[8,R[3398],E,"Something that can may be created from a wasm `Value`.",N,N],[10,R[3394],E,"Try to convert the given `Value` into `Self`.",9,[[["value"]],["option"]]],[8,R[3399],E,"Something that can write a primitive to wasm memory…",N,N],[10,"write_primitive",E,"Write the given value `t` to the given memory location…",10,[[["pointer"],["self"],[T]],[R[3]]]],[8,R[3400],E,"Something that can read a primitive from a wasm memory…",N,N],[10,"read_primitive",E,"Read a primitive from the given memory location `ptr`.",11,[[["pointer"],["self"]],[R[3]]]],[11,R[206],E,"Returns the type of this value.",2,[[["self"]],[R[158]]]],[11,"new",E,R[3484],12,[[["u32"]],["self"]]],[11,"offset",E,"Calculate the offset from this pointer.",12,[[["u32"]],["option"]]],[11,"null",E,"Create a null pointer.",12,[[],["self"]]],[11,"cast",E,"Cast this pointer of type `T` to a pointer of type `R`.",12,[[],[["pointer"],["pointertype"]]]],[11,"new",E,"Create a new instance of `Signature`.",0,[[["option",[R[158]]],["into",["cow"]],["cow"],[R[158]]],["self"]]],[11,"new_with_args",E,"Create a new instance of `Signature` with the given `args`…",0,[[["into",["cow"]],["cow"]],["self"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[3401],E,E,12,[[],["value"]]],[11,R[3394],E,E,12,[[["value"]],["option"]]],[11,"from",E,E,2,[[[R[2827]]],["self"]]],[11,"from",E,E,1,[[[R[158]]],["self"]]],[11,"from",E,E,0,[[[R[188]]],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[158]]]],[11,"clone",E,E,2,[[["self"]],["value"]]],[11,"clone",E,E,12,[[["self"]],["pointer"]]],[11,"clone",E,E,0,[[["self"]],[R[188]]]],[11,"eq",E,E,1,[[[R[158]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["pointer"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["pointer"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[188]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[188]]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]]],"p":[[3,R[2884]],[4,R[230]],[4,"Value"],[8,R[3395]],[8,R[122]],[8,R[3396]],[8,"Sandbox"],[8,R[3397]],[8,"IntoValue"],[8,R[3398]],[8,R[3399]],[8,R[3400]],[3,"Pointer"]]};
searchIndex["static_assertions"]={"doc":"Banner","i":[[14,"assert_cfg","static_assertions","Asserts that a given configuration is set.",N,N],[14,"assert_eq_align",E,"Asserts that types are equal in alignment.",N,N],[14,"assert_eq_size",E,"Asserts that types are equal in size.",N,N],[14,"assert_eq_size_ptr",E,"Asserts that values pointed to are equal in size.",N,N],[14,"assert_eq_size_val",E,"Asserts that values are equal in size.",N,N],[14,"assert_fields",E,"Asserts that the type has the given fields.",N,N],[14,"assert_impl_one",E,"Asserts that the type implements exactly one in a set of…",N,N],[14,"assert_impl_all",E,"Asserts that the type implements all of the given traits.",N,N],[14,"assert_impl_any",E,"Asserts that the type implements any of the given traits.",N,N],[14,"assert_not_impl_all",E,"Asserts that the type does not implement all of the given…",N,N],[14,"assert_not_impl_any",E,"Asserts that the type does not implement any of the given…",N,N],[14,"assert_obj_safe",E,"Asserts that the traits support dynamic dispatch…",N,N],[14,"assert_trait_sub_all",E,"Asserts that the trait is a child of all of the other…",N,N],[14,"assert_trait_super_all",E,"Asserts that the trait is a parent of all of the other…",N,N],[14,"assert_type_eq_all",E,"Asserts that all types in a list are equal to each other.",N,N],[14,"assert_type_ne_all",E,"Asserts that all types are not equal to each other.",N,N],[14,"const_assert",E,"Asserts that constant expressions evaluate to `true`.",N,N],[14,"const_assert_eq",E,"Asserts that constants are equal in value.",N,N],[14,"const_assert_ne",E,"Asserts that constants are not equal in value.",N,N]],"p":[]};
searchIndex["substrate_bip39"]={"doc":E,"i":[[4,"Error","substrate_bip39",E,N,N],[13,"InvalidEntropy",E,E,0,N],[5,"mini_secret_from_entropy",E,"`entropy` should be a byte array from a correctly…",N,[[["str"]],[[R[3],[R[3293],"error"]],[R[3293]],["error"]]]],[5,"seed_from_entropy",E,"Similar to `mini_secret_from_entropy`, except that it…",N,[[["str"]],[[R[3],["error"]],["error"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"clone",E,E,0,[[["self"]],["error"]]],[11,"eq",E,E,0,[[["error"],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]]],"p":[[4,"Error"]]};
searchIndex["subtle"]={"doc":R[2652],"i":[[3,R[9],"subtle","The `Choice` struct represents a choice for use in…",N,N],[3,R[60],E,"The `CtOption<T>` type represents an optional value…",N,N],[8,R[4],E,"An `Eq`-like trait that produces a `Choice` instead of a…",N,N],[10,"ct_eq",E,"Determine if two items are equal.",0,[[["self"]],[R[2]]]],[8,R[5],E,"A type which can be conditionally selected in constant time.",N,N],[10,R[59],E,"Select `a` or `b` according to `choice`.",1,[[["self"],[R[2]]],["self"]]],[11,"conditional_assign",E,"Conditionally assign `other` to `self`, according to…",1,[[["self"],["self"],[R[2]]]]],[11,"conditional_swap",E,"Conditionally swap `self` and `other` if `choice == 1`;…",1,[[["self"],[R[2]]]]],[8,R[6],E,"A type which can be conditionally negated in constant time.",N,N],[10,R[2631],E,"Negate `self` if `choice == Choice(1)`; otherwise, leave…",2,[[["self"],[R[2]]]]],[11,"unwrap_u8",E,"Unwrap the `Choice` wrapper to reveal the underlying `u8`.",3,[[["self"]],["u8"]]],[11,"new",E,"This method is used to construct a new `CtOption<T>` and…",4,[[[T],[R[2]]],[R[57]]]],[11,"unwrap",E,"This returns the underlying value but panics if it is not…",4,[[],[T]]],[11,R[737],E,R[56],4,[[[T]],[T]]],[11,R[738],E,R[56],4,[[["f"]],[T]]],[11,"is_some",E,"Returns a true `Choice` if this value is `Some`.",4,[[["self"]],[R[2]]]],[11,"is_none",E,"Returns a true `Choice` if this value is `None`.",4,[[["self"]],[R[2]]]],[11,"map",E,R[58],4,[[["f"]],[R[57]]]],[11,"and_then",E,R[58],4,[[["f"]],[R[57]]]],[11,"or_else",E,"Returns `self` if it contains a value, and otherwise…",4,[[["f"]],[R[57]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,"ct_eq",E,"Two `CtOption<T>`s are equal if they are both `Some` and…",4,[[[R[57]],["self"]],[R[2]]]],[11,R[59],E,E,3,[[["self"],[R[2]]],["self"]]],[11,R[59],E,E,4,[[["self"],[R[2]]],["self"]]],[11,"from",E,E,3,[[["u8"]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"not",E,E,3,[[],[R[2]]]],[11,"bitand",E,E,3,[[[R[2]]],[R[2]]]],[11,"bitor",E,E,3,[[[R[2]]],[R[2]]]],[11,"bitxor",E,E,3,[[[R[2]]],[R[2]]]],[11,R[458],E,E,3,[[["self"],[R[2]]]]],[11,R[473],E,E,3,[[["self"],[R[2]]]]],[11,R[496],E,E,3,[[["self"],[R[2]]]]],[11,"clone",E,E,3,[[["self"]],[R[2]]]],[11,"clone",E,E,4,[[["self"]],[R[57]]]]],"p":[[8,R[4]],[8,R[5]],[8,R[6]],[3,R[9]],[3,R[60]]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn",R[1844],N,N],[3,"Attribute",E,"An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token",E,E,0,N],[12,"style",E,E,0,N],[12,R[1848],E,E,0,N],[12,"path",E,E,0,N],[12,"tokens",E,E,0,N],[3,"MetaList",E,R[1870],N,N],[12,"path",E,E,1,N],[12,R[1845],E,E,1,N],[12,"nested",E,E,1,N],[3,R[2524],E,R[1871],N,N],[12,"path",E,E,2,N],[12,R[1853],E,E,2,N],[12,"lit",E,E,2,N],[3,"Field",E,"A field of a struct or enum variant.",N,N],[12,"attrs",E,R[1846],3,N],[12,"vis",E,"Visibility of the field.",3,N],[12,"ident",E,"Name of the field, if any.",3,N],[12,R[1847],E,E,3,N],[12,"ty",E,"Type of the field.",3,N],[3,R[2525],E,R[1872],N,N],[12,R[1849],E,E,4,N],[12,"named",E,E,4,N],[3,R[2526],E,R[1873],N,N],[12,R[1845],E,E,5,N],[12,"unnamed",E,E,5,N],[3,"Variant",E,"An enum variant.",N,N],[12,"attrs",E,"Attributes tagged on the variant.",6,N],[12,"ident",E,"Name of the variant.",6,N],[12,"fields",E,"Content stored in the variant.",6,N],[12,R[345],E,"Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate",E,R[1875],N,N],[12,R[1855],E,E,7,N],[3,"VisPublic",E,R[1874],N,N],[12,"pub_token",E,E,8,N],[3,R[2527],E,R[1876],N,N],[12,"pub_token",E,E,9,N],[12,R[1845],E,E,9,N],[12,"in_token",E,E,9,N],[12,"path",E,E,9,N],[3,"Arm",E,"One arm of a `match` expression: `0...10 => { return true;…",N,N],[12,"attrs",E,E,10,N],[12,"pat",E,E,10,N],[12,"guard",E,E,10,N],[12,"fat_arrow_token",E,E,10,N],[12,"body",E,E,10,N],[12,"comma",E,E,10,N],[3,"FieldValue",E,"A field-value pair in a struct literal.",N,N],[12,"attrs",E,R[1846],11,N],[12,"member",E,"Name or index of the field.",11,N],[12,R[1847],E,"The colon in `Struct { x: x }`. If written in shorthand…",11,N],[12,"expr",E,"Value of the field.",11,N],[3,"Label",E,"A lifetime labeling a `for`, `while`, or `loop`.",N,N],[12,"name",E,E,12,N],[12,R[1847],E,E,12,N],[3,R[2528],E,"The `::<>` explicit type parameters passed to a method…",N,N],[12,R[1861],E,E,13,N],[12,"lt_token",E,E,13,N],[12,"args",E,E,13,N],[12,"gt_token",E,E,13,N],[3,"ExprArray",E,R[1877],N,N],[12,"attrs",E,E,14,N],[12,R[1848],E,E,14,N],[12,"elems",E,E,14,N],[3,"ExprAssign",E,R[1878],N,N],[12,"attrs",E,E,15,N],[12,"left",E,E,15,N],[12,R[1853],E,E,15,N],[12,"right",E,E,15,N],[3,R[2529],E,R[1879],N,N],[12,"attrs",E,E,16,N],[12,"left",E,E,16,N],[12,"op",E,E,16,N],[12,"right",E,E,16,N],[3,"ExprAsync",E,R[1880],N,N],[12,"attrs",E,E,17,N],[12,"async_token",E,E,17,N],[12,"capture",E,E,17,N],[12,"block",E,E,17,N],[3,"ExprAwait",E,R[1881],N,N],[12,"attrs",E,E,18,N],[12,"base",E,E,18,N],[12,"dot_token",E,E,18,N],[12,"await_token",E,E,18,N],[3,"ExprBinary",E,R[1882],N,N],[12,"attrs",E,E,19,N],[12,"left",E,E,19,N],[12,"op",E,E,19,N],[12,"right",E,E,19,N],[3,"ExprBlock",E,R[1883],N,N],[12,"attrs",E,E,20,N],[12,"label",E,E,20,N],[12,"block",E,E,20,N],[3,"ExprBox",E,R[1884],N,N],[12,"attrs",E,E,21,N],[12,"box_token",E,E,21,N],[12,"expr",E,E,21,N],[3,"ExprBreak",E,R[1885],N,N],[12,"attrs",E,E,22,N],[12,"break_token",E,E,22,N],[12,"label",E,E,22,N],[12,"expr",E,E,22,N],[3,"ExprCall",E,R[1886],N,N],[12,"attrs",E,E,23,N],[12,"func",E,E,23,N],[12,R[1845],E,E,23,N],[12,"args",E,E,23,N],[3,"ExprCast",E,R[1887],N,N],[12,"attrs",E,E,24,N],[12,"expr",E,E,24,N],[12,"as_token",E,E,24,N],[12,"ty",E,E,24,N],[3,R[2530],E,R[1888],N,N],[12,"attrs",E,E,25,N],[12,"asyncness",E,E,25,N],[12,"movability",E,E,25,N],[12,"capture",E,E,25,N],[12,"or1_token",E,E,25,N],[12,"inputs",E,E,25,N],[12,"or2_token",E,E,25,N],[12,"output",E,E,25,N],[12,"body",E,E,25,N],[3,R[2531],E,R[1889],N,N],[12,"attrs",E,E,26,N],[12,"continue_token",E,E,26,N],[12,"label",E,E,26,N],[3,"ExprField",E,R[1890],N,N],[12,"attrs",E,E,27,N],[12,"base",E,E,27,N],[12,"dot_token",E,E,27,N],[12,"member",E,E,27,N],[3,R[2532],E,R[1891],N,N],[12,"attrs",E,E,28,N],[12,"label",E,E,28,N],[12,"for_token",E,E,28,N],[12,"pat",E,E,28,N],[12,"in_token",E,E,28,N],[12,"expr",E,E,28,N],[12,"body",E,E,28,N],[3,"ExprGroup",E,R[1892],N,N],[12,"attrs",E,E,29,N],[12,R[1866],E,E,29,N],[12,"expr",E,E,29,N],[3,"ExprIf",E,R[1893],N,N],[12,"attrs",E,E,30,N],[12,"if_token",E,E,30,N],[12,"cond",E,E,30,N],[12,"then_branch",E,E,30,N],[12,"else_branch",E,E,30,N],[3,"ExprIndex",E,R[1894],N,N],[12,"attrs",E,E,31,N],[12,"expr",E,E,31,N],[12,R[1848],E,E,31,N],[12,"index",E,E,31,N],[3,"ExprLet",E,R[1895],N,N],[12,"attrs",E,E,32,N],[12,"let_token",E,E,32,N],[12,"pat",E,E,32,N],[12,R[1853],E,E,32,N],[12,"expr",E,E,32,N],[3,"ExprLit",E,R[1896],N,N],[12,"attrs",E,E,33,N],[12,"lit",E,E,33,N],[3,"ExprLoop",E,R[1897],N,N],[12,"attrs",E,E,34,N],[12,"label",E,E,34,N],[12,"loop_token",E,E,34,N],[12,"body",E,E,34,N],[3,"ExprMacro",E,R[1898],N,N],[12,"attrs",E,E,35,N],[12,"mac",E,E,35,N],[3,"ExprMatch",E,R[1899],N,N],[12,"attrs",E,E,36,N],[12,"match_token",E,E,36,N],[12,"expr",E,E,36,N],[12,R[1849],E,E,36,N],[12,"arms",E,E,36,N],[3,R[2533],E,R[1900],N,N],[12,"attrs",E,E,37,N],[12,R[2422],E,E,37,N],[12,"dot_token",E,E,37,N],[12,"method",E,E,37,N],[12,R[2500],E,E,37,N],[12,R[1845],E,E,37,N],[12,"args",E,E,37,N],[3,"ExprParen",E,R[1901],N,N],[12,"attrs",E,E,38,N],[12,R[1845],E,E,38,N],[12,"expr",E,E,38,N],[3,"ExprPath",E,R[1902],N,N],[12,"attrs",E,E,39,N],[12,"qself",E,E,39,N],[12,"path",E,E,39,N],[3,"ExprRange",E,R[1903],N,N],[12,"attrs",E,E,40,N],[12,"from",E,E,40,N],[12,"limits",E,E,40,N],[12,"to",E,E,40,N],[3,R[2534],E,R[1904],N,N],[12,"attrs",E,E,41,N],[12,"and_token",E,E,41,N],[12,"raw",E,E,41,N],[12,R[1857],E,E,41,N],[12,"expr",E,E,41,N],[3,"ExprRepeat",E,R[1905],N,N],[12,"attrs",E,E,42,N],[12,R[1848],E,E,42,N],[12,"expr",E,E,42,N],[12,R[1851],E,E,42,N],[12,"len",E,E,42,N],[3,"ExprReturn",E,R[1906],N,N],[12,"attrs",E,E,43,N],[12,"return_token",E,E,43,N],[12,"expr",E,E,43,N],[3,"ExprStruct",E,R[1907],N,N],[12,"attrs",E,E,44,N],[12,"path",E,E,44,N],[12,R[1849],E,E,44,N],[12,"fields",E,E,44,N],[12,R[1867],E,E,44,N],[12,"rest",E,E,44,N],[3,"ExprTry",E,R[1908],N,N],[12,"attrs",E,E,45,N],[12,"expr",E,E,45,N],[12,"question_token",E,E,45,N],[3,R[2535],E,R[1909],N,N],[12,"attrs",E,E,46,N],[12,"try_token",E,E,46,N],[12,"block",E,E,46,N],[3,"ExprTuple",E,R[1910],N,N],[12,"attrs",E,E,47,N],[12,R[1845],E,E,47,N],[12,"elems",E,E,47,N],[3,"ExprType",E,R[1911],N,N],[12,"attrs",E,E,48,N],[12,"expr",E,E,48,N],[12,R[1847],E,E,48,N],[12,"ty",E,E,48,N],[3,"ExprUnary",E,R[1912],N,N],[12,"attrs",E,E,49,N],[12,"op",E,E,49,N],[12,"expr",E,E,49,N],[3,"ExprUnsafe",E,R[1913],N,N],[12,"attrs",E,E,50,N],[12,"unsafe_token",E,E,50,N],[12,"block",E,E,50,N],[3,"ExprWhile",E,R[1914],N,N],[12,"attrs",E,E,51,N],[12,"label",E,E,51,N],[12,"while_token",E,E,51,N],[12,"cond",E,E,51,N],[12,"body",E,E,51,N],[3,"ExprYield",E,R[1915],N,N],[12,"attrs",E,E,52,N],[12,"yield_token",E,E,52,N],[12,"expr",E,E,52,N],[3,"Index",E,"The index of an unnamed tuple struct field.",N,N],[12,"index",E,E,53,N],[12,"span",E,E,53,N],[3,R[2536],E,"A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token",E,E,54,N],[12,"lt_token",E,E,54,N],[12,R[1865],E,E,54,N],[12,"gt_token",E,E,54,N],[3,"ConstParam",E,R[1918],N,N],[12,"attrs",E,E,55,N],[12,R[1852],E,E,55,N],[12,"ident",E,E,55,N],[12,R[1847],E,E,55,N],[12,"ty",E,E,55,N],[12,R[1853],E,E,55,N],[12,R[90],E,E,55,N],[3,"Generics",E,"Lifetimes and type parameters attached to a declaration of…",N,N],[12,"lt_token",E,E,56,N],[12,"params",E,E,56,N],[12,"gt_token",E,E,56,N],[12,"where_clause",E,E,56,N],[3,R[2537],E,R[1917],N,N],[12,"attrs",E,E,57,N],[12,R[2000],E,E,57,N],[12,R[1847],E,E,57,N],[12,"bounds",E,E,57,N],[3,R[2538],E,R[1921],N,N],[12,"lhs_ty",E,E,58,N],[12,R[1853],E,E,58,N],[12,"rhs_ty",E,E,58,N],[3,R[2539],E,R[1920],N,N],[12,R[2000],E,E,59,N],[12,R[1847],E,E,59,N],[12,"bounds",E,E,59,N],[3,R[2540],E,R[1919],N,N],[12,R[1865],E,"Any lifetimes from a `for` binding",60,N],[12,"bounded_ty",E,"The type being bounded",60,N],[12,R[1847],E,E,60,N],[12,"bounds",E,"Trait and lifetime bounds (`Clone+Send+'static`)",60,N],[3,"TraitBound",E,"A trait used as a bound on a type parameter.",N,N],[12,R[1845],E,E,61,N],[12,"modifier",E,E,61,N],[12,R[1865],E,"The `for<'a>` in `for<'a> Foo<&'a T>`",61,N],[12,"path",E,"The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",61,N],[3,"TypeParam",E,R[1916],N,N],[12,"attrs",E,E,62,N],[12,"ident",E,E,62,N],[12,R[1847],E,E,62,N],[12,"bounds",E,E,62,N],[12,R[1853],E,E,62,N],[12,R[90],E,E,62,N],[3,R[2541],E,"A `where` clause in a definition: `where T:…",N,N],[12,"where_token",E,E,63,N],[12,"predicates",E,E,63,N],[3,R[2582],E,R[1850],N,N],[3,"Turbofish",E,"Returned by `TypeGenerics::as_turbofish`.",N,N],[3,R[2577],E,R[1850],N,N],[3,R[2542],E,R[1923],N,N],[12,"attrs",E,E,64,N],[12,"vis",E,E,64,N],[12,"sig",E,E,64,N],[12,R[1851],E,E,64,N],[3,R[2543],E,R[1926],N,N],[12,"attrs",E,E,65,N],[12,"mac",E,E,65,N],[12,R[1851],E,E,65,N],[3,R[2544],E,R[1924],N,N],[12,"attrs",E,E,66,N],[12,"vis",E,E,66,N],[12,R[1856],E,E,66,N],[12,R[1857],E,E,66,N],[12,"ident",E,E,66,N],[12,R[1847],E,E,66,N],[12,"ty",E,E,66,N],[12,R[1851],E,E,66,N],[3,R[2545],E,R[1925],N,N],[12,"attrs",E,E,67,N],[12,"vis",E,E,67,N],[12,R[1859],E,E,67,N],[12,"ident",E,E,67,N],[12,R[1851],E,E,67,N],[3,R[2546],E,R[1927],N,N],[12,"attrs",E,E,68,N],[12,"vis",E,E,68,N],[12,R[1854],E,E,68,N],[12,R[1852],E,E,68,N],[12,"ident",E,E,68,N],[12,R[1847],E,E,68,N],[12,"ty",E,E,68,N],[12,R[1853],E,E,68,N],[12,"expr",E,E,68,N],[12,R[1851],E,E,68,N],[3,R[2547],E,R[1930],N,N],[12,"attrs",E,E,69,N],[12,"mac",E,E,69,N],[12,R[1851],E,E,69,N],[3,R[2548],E,R[1928],N,N],[12,"attrs",E,E,70,N],[12,"vis",E,E,70,N],[12,R[1854],E,E,70,N],[12,"sig",E,E,70,N],[12,"block",E,E,70,N],[3,R[2549],E,R[1929],N,N],[12,"attrs",E,E,71,N],[12,"vis",E,E,71,N],[12,R[1854],E,E,71,N],[12,R[1859],E,E,71,N],[12,"ident",E,E,71,N],[12,R[1860],E,E,71,N],[12,R[1853],E,E,71,N],[12,"ty",E,E,71,N],[12,R[1851],E,E,71,N],[3,"ItemConst",E,R[1931],N,N],[12,"attrs",E,E,72,N],[12,"vis",E,E,72,N],[12,R[1852],E,E,72,N],[12,"ident",E,E,72,N],[12,R[1847],E,E,72,N],[12,"ty",E,E,72,N],[12,R[1853],E,E,72,N],[12,"expr",E,E,72,N],[12,R[1851],E,E,72,N],[3,"ItemEnum",E,R[1932],N,N],[12,"attrs",E,E,73,N],[12,"vis",E,E,73,N],[12,"enum_token",E,E,73,N],[12,"ident",E,E,73,N],[12,R[1860],E,E,73,N],[12,R[1849],E,E,73,N],[12,"variants",E,E,73,N],[3,R[2550],E,R[1933],N,N],[12,"attrs",E,E,74,N],[12,"vis",E,E,74,N],[12,R[1864],E,E,74,N],[12,R[1855],E,E,74,N],[12,"ident",E,E,74,N],[12,"rename",E,E,74,N],[12,R[1851],E,E,74,N],[3,"ItemFn",E,R[1934],N,N],[12,"attrs",E,E,75,N],[12,"vis",E,E,75,N],[12,"sig",E,E,75,N],[12,"block",E,E,75,N],[3,R[2551],E,R[1935],N,N],[12,"attrs",E,E,76,N],[12,"abi",E,E,76,N],[12,R[1849],E,E,76,N],[12,"items",E,E,76,N],[3,"ItemImpl",E,R[1936],N,N],[12,"attrs",E,E,77,N],[12,R[1854],E,E,77,N],[12,"unsafety",E,E,77,N],[12,"impl_token",E,E,77,N],[12,R[1860],E,E,77,N],[12,"trait_",E,"Trait this impl implements.",77,N],[12,"self_ty",E,"The Self type of the impl.",77,N],[12,R[1849],E,E,77,N],[12,"items",E,E,77,N],[3,"ItemMacro",E,R[1937],N,N],[12,"attrs",E,E,78,N],[12,"ident",E,"The `example` in `macro_rules! example { ... }`.",78,N],[12,"mac",E,E,78,N],[12,R[1851],E,E,78,N],[3,"ItemMacro2",E,R[1938],N,N],[12,"attrs",E,E,79,N],[12,"vis",E,E,79,N],[12,"macro_token",E,E,79,N],[12,"ident",E,E,79,N],[12,"rules",E,E,79,N],[3,"ItemMod",E,R[1939],N,N],[12,"attrs",E,E,80,N],[12,"vis",E,E,80,N],[12,"mod_token",E,E,80,N],[12,"ident",E,E,80,N],[12,"content",E,E,80,N],[12,"semi",E,E,80,N],[3,"ItemStatic",E,R[1940],N,N],[12,"attrs",E,E,81,N],[12,"vis",E,E,81,N],[12,R[1856],E,E,81,N],[12,R[1857],E,E,81,N],[12,"ident",E,E,81,N],[12,R[1847],E,E,81,N],[12,"ty",E,E,81,N],[12,R[1853],E,E,81,N],[12,"expr",E,E,81,N],[12,R[1851],E,E,81,N],[3,"ItemStruct",E,R[1941],N,N],[12,"attrs",E,E,82,N],[12,"vis",E,E,82,N],[12,R[1862],E,E,82,N],[12,"ident",E,E,82,N],[12,R[1860],E,E,82,N],[12,"fields",E,E,82,N],[12,R[1851],E,E,82,N],[3,"ItemTrait",E,R[1942],N,N],[12,"attrs",E,E,83,N],[12,"vis",E,E,83,N],[12,"unsafety",E,E,83,N],[12,"auto_token",E,E,83,N],[12,R[1858],E,E,83,N],[12,"ident",E,E,83,N],[12,R[1860],E,E,83,N],[12,R[1847],E,E,83,N],[12,"supertraits",E,E,83,N],[12,R[1849],E,E,83,N],[12,"items",E,E,83,N],[3,R[2552],E,R[1943],N,N],[12,"attrs",E,E,84,N],[12,"vis",E,E,84,N],[12,R[1858],E,E,84,N],[12,"ident",E,E,84,N],[12,R[1860],E,E,84,N],[12,R[1853],E,E,84,N],[12,"bounds",E,E,84,N],[12,R[1851],E,E,84,N],[3,"ItemType",E,R[1944],N,N],[12,"attrs",E,E,85,N],[12,"vis",E,E,85,N],[12,R[1859],E,E,85,N],[12,"ident",E,E,85,N],[12,R[1860],E,E,85,N],[12,R[1853],E,E,85,N],[12,"ty",E,E,85,N],[12,R[1851],E,E,85,N],[3,"ItemUnion",E,R[1945],N,N],[12,"attrs",E,E,86,N],[12,"vis",E,E,86,N],[12,R[1863],E,E,86,N],[12,"ident",E,E,86,N],[12,R[1860],E,E,86,N],[12,"fields",E,E,86,N],[3,"ItemUse",E,R[1946],N,N],[12,"attrs",E,E,87,N],[12,"vis",E,E,87,N],[12,"use_token",E,E,87,N],[12,R[1869],E,E,87,N],[12,"tree",E,E,87,N],[12,R[1851],E,E,87,N],[3,"Receiver",E,R[1922],N,N],[12,"attrs",E,E,88,N],[12,"reference",E,E,88,N],[12,R[1857],E,E,88,N],[12,"self_token",E,E,88,N],[3,R[2884],E,"A function signature in a trait or implementation: `unsafe…",N,N],[12,"constness",E,E,89,N],[12,"asyncness",E,E,89,N],[12,"unsafety",E,E,89,N],[12,"abi",E,E,89,N],[12,"fn_token",E,E,89,N],[12,"ident",E,E,89,N],[12,R[1860],E,E,89,N],[12,R[1845],E,E,89,N],[12,"inputs",E,E,89,N],[12,R[2455],E,E,89,N],[12,"output",E,E,89,N],[3,R[2553],E,R[1947],N,N],[12,"attrs",E,E,90,N],[12,R[1852],E,E,90,N],[12,"ident",E,E,90,N],[12,R[1847],E,E,90,N],[12,"ty",E,E,90,N],[12,R[90],E,E,90,N],[12,R[1851],E,E,90,N],[3,R[2554],E,R[1950],N,N],[12,"attrs",E,E,91,N],[12,"mac",E,E,91,N],[12,R[1851],E,E,91,N],[3,R[2555],E,R[1948],N,N],[12,"attrs",E,E,92,N],[12,"sig",E,E,92,N],[12,R[90],E,E,92,N],[12,R[1851],E,E,92,N],[3,R[2556],E,R[1949],N,N],[12,"attrs",E,E,93,N],[12,R[1859],E,E,93,N],[12,"ident",E,E,93,N],[12,R[1860],E,E,93,N],[12,R[1847],E,E,93,N],[12,"bounds",E,E,93,N],[12,R[90],E,E,93,N],[12,R[1851],E,E,93,N],[3,"UseGlob",E,R[1954],N,N],[12,"star_token",E,E,94,N],[3,"UseGroup",E,R[1955],N,N],[12,R[1849],E,E,95,N],[12,"items",E,E,95,N],[3,"UseName",E,R[1952],N,N],[12,"ident",E,E,96,N],[3,"UsePath",E,R[1951],N,N],[12,"ident",E,E,97,N],[12,R[1861],E,E,97,N],[12,"tree",E,E,97,N],[3,"UseRename",E,R[1953],N,N],[12,"ident",E,E,98,N],[12,"as_token",E,E,98,N],[12,"rename",E,E,98,N],[3,"File",E,"A complete file of Rust source code.",N,N],[12,"shebang",E,E,99,N],[12,"attrs",E,E,99,N],[12,"items",E,E,99,N],[3,"Lifetime",E,"A Rust lifetime: `'a`.",N,N],[12,"apostrophe",E,E,100,N],[12,"ident",E,E,100,N],[3,"LitBool",E,R[1962],N,N],[12,"value",E,E,101,N],[12,"span",E,E,101,N],[3,"LitByte",E,R[1958],N,N],[3,"LitByteStr",E,R[1957],N,N],[3,"LitChar",E,R[1959],N,N],[3,"LitFloat",E,R[1961],N,N],[3,"LitInt",E,R[1960],N,N],[3,"LitStr",E,R[1956],N,N],[3,"Macro",E,"A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path",E,E,102,N],[12,"bang_token",E,E,102,N],[12,R[1159],E,E,102,N],[12,"tokens",E,E,102,N],[3,"DataEnum",E,R[1965],N,N],[12,"enum_token",E,E,103,N],[12,R[1849],E,E,103,N],[12,"variants",E,E,103,N],[3,"DataStruct",E,R[1964],N,N],[12,R[1862],E,E,104,N],[12,"fields",E,E,104,N],[12,R[1851],E,E,104,N],[3,"DataUnion",E,R[1966],N,N],[12,R[1863],E,E,105,N],[12,"fields",E,E,105,N],[3,R[2557],E,"Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs",E,"Attributes tagged on the whole struct or enum.",106,N],[12,"vis",E,"Visibility of the struct or enum.",106,N],[12,"ident",E,"Name of the struct or enum.",106,N],[12,R[1860],E,"Generics required to complete the definition.",106,N],[12,"data",E,"Data within the struct or enum.",106,N],[3,"Block",E,"A braced block containing Rust statements.",N,N],[12,R[1849],E,E,107,N],[12,"stmts",E,"Statements in a block",107,N],[3,"Local",E,"A local `let` binding: `let x: u64 = s.parse()?`.",N,N],[12,"attrs",E,E,108,N],[12,"let_token",E,E,108,N],[12,"pat",E,E,108,N],[12,"init",E,E,108,N],[12,R[1851],E,E,108,N],[3,"Abi",E,"The binary interface of a function: `extern \"C\"`.",N,N],[12,R[1864],E,E,109,N],[12,"name",E,E,109,N],[3,"BareFnArg",E,"An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"attrs",E,E,110,N],[12,"name",E,E,110,N],[12,"ty",E,E,110,N],[3,"TypeArray",E,R[1967],N,N],[12,R[1848],E,E,111,N],[12,"elem",E,E,111,N],[12,R[1851],E,E,111,N],[12,"len",E,E,111,N],[3,"TypeBareFn",E,R[1968],N,N],[12,R[1865],E,E,112,N],[12,"unsafety",E,E,112,N],[12,"abi",E,E,112,N],[12,"fn_token",E,E,112,N],[12,R[1845],E,E,112,N],[12,"inputs",E,E,112,N],[12,R[2455],E,E,112,N],[12,"output",E,E,112,N],[3,"TypeGroup",E,R[1969],N,N],[12,R[1866],E,E,113,N],[12,"elem",E,E,113,N],[3,R[2558],E,R[1970],N,N],[12,"impl_token",E,E,114,N],[12,"bounds",E,E,114,N],[3,"TypeInfer",E,R[1971],N,N],[12,R[1868],E,E,115,N],[3,"TypeMacro",E,R[1972],N,N],[12,"mac",E,E,116,N],[3,"TypeNever",E,R[1973],N,N],[12,"bang_token",E,E,117,N],[3,"TypeParen",E,R[1974],N,N],[12,R[1845],E,E,118,N],[12,"elem",E,E,118,N],[3,"TypePath",E,R[1975],N,N],[12,"qself",E,E,119,N],[12,"path",E,E,119,N],[3,"TypePtr",E,R[1976],N,N],[12,"star_token",E,E,120,N],[12,R[1852],E,E,120,N],[12,R[1857],E,E,120,N],[12,"elem",E,E,120,N],[3,R[2559],E,R[1977],N,N],[12,"and_token",E,E,121,N],[12,R[2000],E,E,121,N],[12,R[1857],E,E,121,N],[12,"elem",E,E,121,N],[3,"TypeSlice",E,R[1978],N,N],[12,R[1848],E,E,122,N],[12,"elem",E,E,122,N],[3,R[2560],E,R[1979],N,N],[12,"dyn_token",E,E,123,N],[12,"bounds",E,E,123,N],[3,"TypeTuple",E,R[1980],N,N],[12,R[1845],E,E,124,N],[12,"elems",E,E,124,N],[3,"Variadic",E,"The variadic argument of a foreign function.",N,N],[12,"attrs",E,E,125,N],[12,"dots",E,E,125,N],[3,"FieldPat",E,"A single field in a struct pattern.",N,N],[12,"attrs",E,E,126,N],[12,"member",E,E,126,N],[12,R[1847],E,E,126,N],[12,"pat",E,E,126,N],[3,"PatBox",E,R[1981],N,N],[12,"attrs",E,E,127,N],[12,"box_token",E,E,127,N],[12,"pat",E,E,127,N],[3,"PatIdent",E,R[1982],N,N],[12,"attrs",E,E,128,N],[12,"by_ref",E,E,128,N],[12,R[1857],E,E,128,N],[12,"ident",E,E,128,N],[12,"subpat",E,E,128,N],[3,"PatLit",E,R[1983],N,N],[12,"attrs",E,E,129,N],[12,"expr",E,E,129,N],[3,"PatMacro",E,R[1984],N,N],[12,"attrs",E,E,130,N],[12,"mac",E,E,130,N],[3,"PatOr",E,R[1985],N,N],[12,"attrs",E,E,131,N],[12,"leading_vert",E,E,131,N],[12,"cases",E,E,131,N],[3,"PatPath",E,R[1986],N,N],[12,"attrs",E,E,132,N],[12,"qself",E,E,132,N],[12,"path",E,E,132,N],[3,"PatRange",E,R[1987],N,N],[12,"attrs",E,E,133,N],[12,"lo",E,E,133,N],[12,"limits",E,E,133,N],[12,"hi",E,E,133,N],[3,R[2561],E,R[1988],N,N],[12,"attrs",E,E,134,N],[12,"and_token",E,E,134,N],[12,R[1857],E,E,134,N],[12,"pat",E,E,134,N],[3,"PatRest",E,R[1989],N,N],[12,"attrs",E,E,135,N],[12,R[1867],E,E,135,N],[3,"PatSlice",E,R[1990],N,N],[12,"attrs",E,E,136,N],[12,R[1848],E,E,136,N],[12,"elems",E,E,136,N],[3,"PatStruct",E,R[1991],N,N],[12,"attrs",E,E,137,N],[12,"path",E,E,137,N],[12,R[1849],E,E,137,N],[12,"fields",E,E,137,N],[12,R[1867],E,E,137,N],[3,"PatTuple",E,R[1992],N,N],[12,"attrs",E,E,138,N],[12,R[1845],E,E,138,N],[12,"elems",E,E,138,N],[3,R[2562],E,R[1993],N,N],[12,"attrs",E,E,139,N],[12,"path",E,E,139,N],[12,"pat",E,E,139,N],[3,"PatType",E,R[1994],N,N],[12,"attrs",E,E,140,N],[12,"pat",E,E,140,N],[12,R[1847],E,E,140,N],[12,"ty",E,E,140,N],[3,"PatWild",E,R[1995],N,N],[12,"attrs",E,E,141,N],[12,R[1868],E,E,141,N],[3,R[2563],E,"Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,R[1861],E,E,142,N],[12,"lt_token",E,E,142,N],[12,"args",E,E,142,N],[12,"gt_token",E,E,142,N],[3,"Binding",E,"A binding (equality constraint) on an associated type:…",N,N],[12,"ident",E,E,143,N],[12,R[1853],E,E,143,N],[12,"ty",E,E,143,N],[3,R[2564],E,R[1997],N,N],[12,"ident",E,E,144,N],[12,R[1847],E,E,144,N],[12,"bounds",E,E,144,N],[3,R[2565],E,"Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,R[1845],E,E,145,N],[12,"inputs",E,"`(A, B)`",145,N],[12,"output",E,"`C`",145,N],[3,"Path",E,"A path at which a named item is exported:…",N,N],[12,R[1869],E,E,146,N],[12,"segments",E,E,146,N],[3,R[2566],E,"A segment of a path together with any path arguments on…",N,N],[12,"ident",E,E,147,N],[12,R[325],E,E,147,N],[3,"QSelf",E,"The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,"lt_token",E,E,148,N],[12,"ty",E,E,148,N],[12,R[467],E,E,148,N],[12,"as_token",E,E,148,N],[12,"gt_token",E,E,148,N],[3,"Error",E,R[2463],N,N],[4,"AttrStyle",E,"Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer",E,E,149,N],[13,"Inner",E,E,149,N],[4,"Meta",E,"Content of a compile-time structured attribute.",N,N],[13,"Path",E,E,150,N],[13,"List",E,R[1870],150,N],[13,"NameValue",E,R[1871],150,N],[4,"NestedMeta",E,"Element of a compile-time attribute list.",N,N],[13,"Meta",E,"A structured meta item, like the `Copy` in…",151,N],[13,"Lit",E,"A Rust literal, like the `\"new_name\"` in…",151,N],[4,"Fields",E,"Data stored within an enum variant or struct.",N,N],[13,"Named",E,R[1872],152,N],[13,"Unnamed",E,R[1873],152,N],[13,"Unit",E,"Unit struct or unit variant such as `None`.",152,N],[4,"Visibility",E,"The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public",E,R[1874],153,N],[13,"Crate",E,R[1875],153,N],[13,"Restricted",E,R[1876],153,N],[13,"Inherited",E,"An inherited visibility, which usually means private.",153,N],[4,R[2567],E,"An individual generic argument to a method, like `T`.",N,N],[13,"Type",E,R[1996],154,N],[13,"Const",E,R[1998],154,N],[4,R[2568],E,"Limit types of a range, inclusive or exclusive.",N,N],[13,"HalfOpen",E,"Inclusive at the beginning, exclusive at the end.",155,N],[13,"Closed",E,"Inclusive at the beginning and end.",155,N],[4,"Expr",E,"A Rust expression.",N,N],[13,"Array",E,R[1877],156,N],[13,"Assign",E,R[1878],156,N],[13,"AssignOp",E,R[1879],156,N],[13,"Async",E,R[1880],156,N],[13,"Await",E,R[1881],156,N],[13,"Binary",E,R[1882],156,N],[13,"Block",E,R[1883],156,N],[13,"Box",E,R[1884],156,N],[13,"Break",E,R[1885],156,N],[13,"Call",E,R[1886],156,N],[13,"Cast",E,R[1887],156,N],[13,"Closure",E,R[1888],156,N],[13,"Continue",E,R[1889],156,N],[13,"Field",E,R[1890],156,N],[13,"ForLoop",E,R[1891],156,N],[13,"Group",E,R[1892],156,N],[13,"If",E,R[1893],156,N],[13,"Index",E,R[1894],156,N],[13,"Let",E,R[1895],156,N],[13,"Lit",E,R[1896],156,N],[13,"Loop",E,R[1897],156,N],[13,"Macro",E,R[1898],156,N],[13,"Match",E,R[1899],156,N],[13,"MethodCall",E,R[1900],156,N],[13,"Paren",E,R[1901],156,N],[13,"Path",E,R[1902],156,N],[13,"Range",E,R[1903],156,N],[13,"Reference",E,R[1904],156,N],[13,"Repeat",E,R[1905],156,N],[13,"Return",E,R[1906],156,N],[13,"Struct",E,R[1907],156,N],[13,"Try",E,R[1908],156,N],[13,"TryBlock",E,R[1909],156,N],[13,"Tuple",E,R[1910],156,N],[13,"Type",E,R[1911],156,N],[13,"Unary",E,R[1912],156,N],[13,"Unsafe",E,R[1913],156,N],[13,R[1963],E,"Tokens in expression position not interpreted by Syn.",156,N],[13,"While",E,R[1914],156,N],[13,"Yield",E,R[1915],156,N],[4,"Member",E,"A struct or tuple struct field accessed in a struct…",N,N],[13,"Named",E,"A named field like `self.x`.",157,N],[13,"Unnamed",E,"An unnamed field like `self.0`.",157,N],[4,R[2569],E,"A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type",E,R[1916],158,N],[13,"Lifetime",E,R[1917],158,N],[13,"Const",E,R[1918],158,N],[4,R[2570],E,"A modifier on a trait bound, currently only used for the…",N,N],[13,"None",E,E,159,N],[13,"Maybe",E,E,159,N],[4,R[2571],E,"A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait",E,E,160,N],[13,"Lifetime",E,E,160,N],[4,R[2572],E,"A single predicate in a `where` clause: `T:…",N,N],[13,"Type",E,R[1919],161,N],[13,"Lifetime",E,R[1920],161,N],[13,"Eq",E,R[1921],161,N],[4,"FnArg",E,"An argument in a function signature: the `n: usize` in `fn…",N,N],[13,"Receiver",E,R[1922],162,N],[13,"Typed",E,"A function argument accepted by pattern and type.",162,N],[4,R[2573],E,"An item within an `extern` block.",N,N],[13,"Fn",E,R[1923],163,N],[13,"Static",E,R[1924],163,N],[13,"Type",E,R[1925],163,N],[13,"Macro",E,R[1926],163,N],[13,R[1963],E,"Tokens in an `extern` block not interpreted by Syn.",163,N],[4,"ImplItem",E,"An item within an impl block.",N,N],[13,"Const",E,R[1927],164,N],[13,"Method",E,R[1928],164,N],[13,"Type",E,R[1929],164,N],[13,"Macro",E,R[1930],164,N],[13,R[1963],E,"Tokens within an impl block not interpreted by Syn.",164,N],[4,"Item",E,"Things that can appear directly inside of a module or scope.",N,N],[13,"Const",E,R[1931],165,N],[13,"Enum",E,R[1932],165,N],[13,"ExternCrate",E,R[1933],165,N],[13,"Fn",E,R[1934],165,N],[13,"ForeignMod",E,R[1935],165,N],[13,"Impl",E,R[1936],165,N],[13,"Macro",E,R[1937],165,N],[13,"Macro2",E,R[1938],165,N],[13,"Mod",E,R[1939],165,N],[13,"Static",E,R[1940],165,N],[13,"Struct",E,R[1941],165,N],[13,"Trait",E,R[1942],165,N],[13,"TraitAlias",E,R[1943],165,N],[13,"Type",E,R[1944],165,N],[13,"Union",E,R[1945],165,N],[13,"Use",E,R[1946],165,N],[13,R[1963],E,"Tokens forming an item not interpreted by Syn.",165,N],[4,"TraitItem",E,"An item declaration within the definition of a trait.",N,N],[13,"Const",E,R[1947],166,N],[13,"Method",E,R[1948],166,N],[13,"Type",E,R[1949],166,N],[13,"Macro",E,R[1950],166,N],[13,R[1963],E,"Tokens within the definition of a trait not interpreted by…",166,N],[4,"UseTree",E,"A suffix of an import tree in a `use` item: `Type as…",N,N],[13,"Path",E,R[1951],167,N],[13,"Name",E,R[1952],167,N],[13,"Rename",E,R[1953],167,N],[13,"Glob",E,R[1954],167,N],[13,"Group",E,R[1955],167,N],[4,"Lit",E,"A Rust literal such as a string or integer or boolean.",N,N],[13,"Str",E,R[1956],168,N],[13,"ByteStr",E,R[1957],168,N],[13,"Byte",E,R[1958],168,N],[13,"Char",E,R[1959],168,N],[13,"Int",E,R[1960],168,N],[13,"Float",E,R[1961],168,N],[13,"Bool",E,R[1962],168,N],[13,R[1963],E,"A raw token literal not interpreted by Syn.",168,N],[4,"StrStyle",E,"The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked",E,"An ordinary string like `\"data\"`.",169,N],[13,"Raw",E,"A raw string like `r##\"data\"##`.",169,N],[4,R[2574],E,"A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren",E,E,170,N],[13,"Brace",E,E,170,N],[13,"Bracket",E,E,170,N],[4,"Data",E,"The storage of a struct, enum or union data structure.",N,N],[13,"Struct",E,R[1964],171,N],[13,"Enum",E,R[1965],171,N],[13,"Union",E,R[1966],171,N],[4,"BinOp",E,"A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add",E,"The `+` operator (addition)",172,N],[13,"Sub",E,"The `-` operator (subtraction)",172,N],[13,"Mul",E,"The `*` operator (multiplication)",172,N],[13,"Div",E,"The `/` operator (division)",172,N],[13,"Rem",E,"The `%` operator (modulus)",172,N],[13,"And",E,"The `&&` operator (logical and)",172,N],[13,"Or",E,"The `||` operator (logical or)",172,N],[13,"BitXor",E,"The `^` operator (bitwise xor)",172,N],[13,"BitAnd",E,"The `&` operator (bitwise and)",172,N],[13,"BitOr",E,"The `|` operator (bitwise or)",172,N],[13,"Shl",E,"The `<<` operator (shift left)",172,N],[13,"Shr",E,"The `>>` operator (shift right)",172,N],[13,"Eq",E,"The `==` operator (equality)",172,N],[13,"Lt",E,"The `<` operator (less than)",172,N],[13,"Le",E,"The `<=` operator (less than or equal to)",172,N],[13,"Ne",E,"The `!=` operator (not equal to)",172,N],[13,"Ge",E,"The `>=` operator (greater than or equal to)",172,N],[13,"Gt",E,"The `>` operator (greater than)",172,N],[13,"AddEq",E,"The `+=` operator",172,N],[13,"SubEq",E,"The `-=` operator",172,N],[13,"MulEq",E,"The `*=` operator",172,N],[13,"DivEq",E,"The `/=` operator",172,N],[13,"RemEq",E,"The `%=` operator",172,N],[13,"BitXorEq",E,"The `^=` operator",172,N],[13,"BitAndEq",E,"The `&=` operator",172,N],[13,"BitOrEq",E,"The `|=` operator",172,N],[13,"ShlEq",E,"The `<<=` operator",172,N],[13,"ShrEq",E,"The `>>=` operator",172,N],[4,"UnOp",E,"A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref",E,"The `*` operator for dereferencing",173,N],[13,"Not",E,"The `!` operator for logical inversion",173,N],[13,"Neg",E,"The `-` operator for negation",173,N],[4,"Stmt",E,"A statement, usually ending in a semicolon.",N,N],[13,"Local",E,"A local (let) binding.",174,N],[13,"Item",E,"An item definition.",174,N],[13,"Expr",E,"Expr without trailing semicolon.",174,N],[13,"Semi",E,"Expression with trailing semicolon.",174,N],[4,"ReturnType",E,"Return type of a function signature.",N,N],[13,"Default",E,"Return type is not specified.",175,N],[13,"Type",E,"A particular type is returned.",175,N],[4,"Type",E,"The possible types that a Rust value could have.",N,N],[13,"Array",E,R[1967],176,N],[13,"BareFn",E,R[1968],176,N],[13,"Group",E,R[1969],176,N],[13,"ImplTrait",E,R[1970],176,N],[13,"Infer",E,R[1971],176,N],[13,"Macro",E,R[1972],176,N],[13,"Never",E,R[1973],176,N],[13,"Paren",E,R[1974],176,N],[13,"Path",E,R[1975],176,N],[13,"Ptr",E,R[1976],176,N],[13,"Reference",E,R[1977],176,N],[13,"Slice",E,R[1978],176,N],[13,"TraitObject",E,R[1979],176,N],[13,"Tuple",E,R[1980],176,N],[13,R[1963],E,"Tokens in type position not interpreted by Syn.",176,N],[4,"Pat",E,"A pattern in a local binding, function signature, match…",N,N],[13,"Box",E,R[1981],177,N],[13,"Ident",E,R[1982],177,N],[13,"Lit",E,R[1983],177,N],[13,"Macro",E,R[1984],177,N],[13,"Or",E,R[1985],177,N],[13,"Path",E,R[1986],177,N],[13,"Range",E,R[1987],177,N],[13,"Reference",E,R[1988],177,N],[13,"Rest",E,R[1989],177,N],[13,"Slice",E,R[1990],177,N],[13,"Struct",E,R[1991],177,N],[13,"Tuple",E,R[1992],177,N],[13,"TupleStruct",E,R[1993],177,N],[13,"Type",E,R[1994],177,N],[13,R[1963],E,"Tokens in pattern position not interpreted by Syn.",177,N],[13,"Wild",E,R[1995],177,N],[4,R[2575],E,"An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,"Lifetime",E,"A lifetime argument.",178,N],[13,"Type",E,R[1996],178,N],[13,"Binding",E,"A binding (equality constraint) on an associated type: the…",178,N],[13,R[2564],E,R[1997],178,N],[13,"Const",E,R[1998],178,N],[4,R[2576],E,"Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None",E,E,179,N],[13,"AngleBracketed",E,"The `<'a, T>` in `std::slice::iter<'a, T>`.",179,N],[13,"Parenthesized",E,"The `(A, B) -> C` in `Fn(A, B) -> C`.",179,N],[5,"parse",E,R[2465],N,[[[R[1152]]],[[R[3]],["parse"]]]],[5,"parse2",E,R[2464],N,[[[R[1152]]],[[R[3]],["parse"]]]],[5,"parse_str",E,R[2466],N,[[["str"]],[[R[3]],["parse"]]]],[5,"parse_file",E,"Parse the content of a file of Rust code.",N,[[["str"]],[[R[3],["file"]],["file"]]]],[0,"token",E,"Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore",R[2475],"`_`",N,N],[12,"spans",E,E,180,N],[3,"Abstract",E,"`abstract`",N,N],[12,"span",E,E,181,N],[3,"As",E,"`as`",N,N],[12,"span",E,E,182,N],[3,"Async",E,"`async`",N,N],[12,"span",E,E,183,N],[3,"Auto",E,"`auto`",N,N],[12,"span",E,E,184,N],[3,"Await",E,"`await`",N,N],[12,"span",E,E,185,N],[3,"Become",E,"`become`",N,N],[12,"span",E,E,186,N],[3,"Box",E,"`box`",N,N],[12,"span",E,E,187,N],[3,"Break",E,"`break`",N,N],[12,"span",E,E,188,N],[3,"Const",E,"`const`",N,N],[12,"span",E,E,189,N],[3,"Continue",E,"`continue`",N,N],[12,"span",E,E,190,N],[3,"Crate",E,"`crate`",N,N],[12,"span",E,E,191,N],[3,"Default",E,"`default`",N,N],[12,"span",E,E,192,N],[3,"Do",E,"`do`",N,N],[12,"span",E,E,193,N],[3,"Dyn",E,"`dyn`",N,N],[12,"span",E,E,194,N],[3,"Else",E,"`else`",N,N],[12,"span",E,E,195,N],[3,"Enum",E,"`enum`",N,N],[12,"span",E,E,196,N],[3,"Extern",E,"`extern`",N,N],[12,"span",E,E,197,N],[3,"Final",E,"`final`",N,N],[12,"span",E,E,198,N],[3,"Fn",E,"`fn`",N,N],[12,"span",E,E,199,N],[3,"For",E,"`for`",N,N],[12,"span",E,E,200,N],[3,"If",E,"`if`",N,N],[12,"span",E,E,201,N],[3,"Impl",E,"`impl`",N,N],[12,"span",E,E,202,N],[3,"In",E,"`in`",N,N],[12,"span",E,E,203,N],[3,"Let",E,"`let`",N,N],[12,"span",E,E,204,N],[3,"Loop",E,"`loop`",N,N],[12,"span",E,E,205,N],[3,"Macro",E,"`macro`",N,N],[12,"span",E,E,206,N],[3,"Match",E,"`match`",N,N],[12,"span",E,E,207,N],[3,"Mod",E,"`mod`",N,N],[12,"span",E,E,208,N],[3,"Move",E,"`move`",N,N],[12,"span",E,E,209,N],[3,"Mut",E,"`mut`",N,N],[12,"span",E,E,210,N],[3,"Override",E,"`override`",N,N],[12,"span",E,E,211,N],[3,"Priv",E,"`priv`",N,N],[12,"span",E,E,212,N],[3,"Pub",E,"`pub`",N,N],[12,"span",E,E,213,N],[3,"Ref",E,"`ref`",N,N],[12,"span",E,E,214,N],[3,"Return",E,"`return`",N,N],[12,"span",E,E,215,N],[3,"SelfType",E,"`Self`",N,N],[12,"span",E,E,216,N],[3,"SelfValue",E,"`self`",N,N],[12,"span",E,E,217,N],[3,"Static",E,"`static`",N,N],[12,"span",E,E,218,N],[3,"Struct",E,"`struct`",N,N],[12,"span",E,E,219,N],[3,"Super",E,"`super`",N,N],[12,"span",E,E,220,N],[3,"Trait",E,"`trait`",N,N],[12,"span",E,E,221,N],[3,"Try",E,"`try`",N,N],[12,"span",E,E,222,N],[3,"Type",E,"`type`",N,N],[12,"span",E,E,223,N],[3,"Typeof",E,"`typeof`",N,N],[12,"span",E,E,224,N],[3,"Union",E,"`union`",N,N],[12,"span",E,E,225,N],[3,"Unsafe",E,"`unsafe`",N,N],[12,"span",E,E,226,N],[3,"Unsized",E,"`unsized`",N,N],[12,"span",E,E,227,N],[3,"Use",E,"`use`",N,N],[12,"span",E,E,228,N],[3,"Virtual",E,"`virtual`",N,N],[12,"span",E,E,229,N],[3,"Where",E,"`where`",N,N],[12,"span",E,E,230,N],[3,"While",E,"`while`",N,N],[12,"span",E,E,231,N],[3,"Yield",E,"`yield`",N,N],[12,"span",E,E,232,N],[3,"Add",E,"`+`",N,N],[12,"spans",E,E,233,N],[3,"AddEq",E,"`+=`",N,N],[12,"spans",E,E,234,N],[3,"And",E,"`&`",N,N],[12,"spans",E,E,235,N],[3,"AndAnd",E,"`&&`",N,N],[12,"spans",E,E,236,N],[3,"AndEq",E,"`&=`",N,N],[12,"spans",E,E,237,N],[3,"At",E,"`@`",N,N],[12,"spans",E,E,238,N],[3,"Bang",E,"`!`",N,N],[12,"spans",E,E,239,N],[3,"Caret",E,"`^`",N,N],[12,"spans",E,E,240,N],[3,"CaretEq",E,"`^=`",N,N],[12,"spans",E,E,241,N],[3,"Colon",E,"`:`",N,N],[12,"spans",E,E,242,N],[3,"Colon2",E,"`::`",N,N],[12,"spans",E,E,243,N],[3,"Comma",E,"`,`",N,N],[12,"spans",E,E,244,N],[3,"Div",E,"`/`",N,N],[12,"spans",E,E,245,N],[3,"DivEq",E,"`/=`",N,N],[12,"spans",E,E,246,N],[3,"Dollar",E,"`$`",N,N],[12,"spans",E,E,247,N],[3,"Dot",E,"`.`",N,N],[12,"spans",E,E,248,N],[3,"Dot2",E,"`..`",N,N],[12,"spans",E,E,249,N],[3,"Dot3",E,"`...`",N,N],[12,"spans",E,E,250,N],[3,"DotDotEq",E,"`..=`",N,N],[12,"spans",E,E,251,N],[3,"Eq",E,"`=`",N,N],[12,"spans",E,E,252,N],[3,"EqEq",E,"`==`",N,N],[12,"spans",E,E,253,N],[3,"Ge",E,"`>=`",N,N],[12,"spans",E,E,254,N],[3,"Gt",E,"`>`",N,N],[12,"spans",E,E,255,N],[3,"Le",E,"`<=`",N,N],[12,"spans",E,E,256,N],[3,"Lt",E,"`<`",N,N],[12,"spans",E,E,257,N],[3,"MulEq",E,"`*=`",N,N],[12,"spans",E,E,258,N],[3,"Ne",E,"`!=`",N,N],[12,"spans",E,E,259,N],[3,"Or",E,"`|`",N,N],[12,"spans",E,E,260,N],[3,"OrEq",E,"`|=`",N,N],[12,"spans",E,E,261,N],[3,"OrOr",E,"`||`",N,N],[12,"spans",E,E,262,N],[3,"Pound",E,"`#`",N,N],[12,"spans",E,E,263,N],[3,"Question",E,"`?`",N,N],[12,"spans",E,E,264,N],[3,"RArrow",E,"`->`",N,N],[12,"spans",E,E,265,N],[3,"LArrow",E,"`<-`",N,N],[12,"spans",E,E,266,N],[3,"Rem",E,"`%`",N,N],[12,"spans",E,E,267,N],[3,"RemEq",E,"`%=`",N,N],[12,"spans",E,E,268,N],[3,"FatArrow",E,"`=>`",N,N],[12,"spans",E,E,269,N],[3,"Semi",E,"`;`",N,N],[12,"spans",E,E,270,N],[3,"Shl",E,"`<<`",N,N],[12,"spans",E,E,271,N],[3,"ShlEq",E,"`<<=`",N,N],[12,"spans",E,E,272,N],[3,"Shr",E,"`>>`",N,N],[12,"spans",E,E,273,N],[3,"ShrEq",E,"`>>=`",N,N],[12,"spans",E,E,274,N],[3,"Star",E,"`*`",N,N],[12,"spans",E,E,275,N],[3,"Sub",E,"`-`",N,N],[12,"spans",E,E,276,N],[3,"SubEq",E,"`-=`",N,N],[12,"spans",E,E,277,N],[3,"Tilde",E,"`~`",N,N],[12,"spans",E,E,278,N],[3,"Brace",E,"`{...}`",N,N],[12,"span",E,E,279,N],[3,"Bracket",E,"`[...]`",N,N],[12,"span",E,E,280,N],[3,"Paren",E,"`(...)`",N,N],[12,"span",E,E,281,N],[3,"Group",E,"None-delimited group",N,N],[12,"span",E,E,282,N],[8,"Token",E,"Marker trait for types that represent single tokens.",N,N],[11,"surround",E,E,279,[[["f"],["self"],[R[1152]]]]],[11,"surround",E,E,280,[[["f"],["self"],[R[1152]]]]],[11,"surround",E,E,281,[[["f"],["self"],[R[1152]]]]],[11,"surround",E,E,282,[[["f"],["self"],[R[1152]]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[[R[3],["meta"]],["meta"]]]],[11,"parse_args",E,"Parse the arguments to the attribute as a syntax tree.",0,[[["self"]],[["parse"],[R[3]]]]],[11,"parse_args_with",E,"Parse the arguments to the attribute using the given parser.",0,[[["self"],["parser"]],[R[3]]]],[11,"parse_outer",E,"Parses zero or more outer attributes from the stream.",0,[[[R[1999]]],[["vec"],[R[3],["vec"]]]]],[11,"parse_inner",E,"Parses zero or more inner attributes from the stream.",0,[[[R[1999]]],[["vec"],[R[3],["vec"]]]]],[11,"path",E,"Returns the identifier that begins this structured meta…",150,[[["self"]],["path"]]],[11,"parse_named",E,"Parses a named (braced struct) field.",3,[[[R[1999]]],[R[3]]]],[11,"parse_unnamed",E,"Parses an unnamed (tuple struct) field.",3,[[[R[1999]]],[R[3]]]],[11,"iter",E,"Get an iterator over the borrowed [`Field`] items in this…",152,[[["self"]],[["iter",["field"]],["field"]]]],[11,R[628],E,"Get an iterator over the mutably borrowed [`Field`] items…",152,[[["self"]],[["field"],["itermut",["field"]]]]],[11,"len",E,"Returns the number of fields.",152,[[["self"]],["usize"]]],[11,R[340],E,"Returns `true` if there are zero fields.",152,[[["self"]],["bool"]]],[11,"type_params",E,"Returns an Iterator<Item = &TypeParam> over the type…",56,[[["self"]],["typeparams"]]],[11,"type_params_mut",E,"Returns an Iterator<Item = &mut TypeParam> over the type…",56,[[["self"]],["typeparamsmut"]]],[11,R[1865],E,"Returns an Iterator<Item = &LifetimeDef> over the lifetime…",56,[[["self"]],[R[1865]]]],[11,"lifetimes_mut",E,"Returns an Iterator<Item = &mut LifetimeDef> over the…",56,[[["self"]],["lifetimesmut"]]],[11,"const_params",E,"Returns an Iterator<Item = &ConstParam> over the constant…",56,[[["self"]],["constparams"]]],[11,"const_params_mut",E,"Returns an Iterator<Item = &mut ConstParam> over the…",56,[[["self"]],["constparamsmut"]]],[11,"make_where_clause",E,"Initializes an empty `where`-clause if there is not one…",56,[[["self"]],[R[2012]]]],[11,"split_for_impl",E,"Split a type's generics into the pieces required for…",56,[[["self"]]]],[11,"as_turbofish",E,"Turn a type's generics like `<X, Y>` into a turbofish like…",283,[[["self"]],[R[2500]]]],[11,"new",E,E,57,[[[R[2000]]],["self"]]],[11,R[2422],E,"A method's `self` receiver, such as `&self` or `self:…",89,[[["self"]],[["option",["fnarg"]],["fnarg"]]]],[11,R[2000],E,E,88,[[["self"]],[[R[2000]],["option",[R[2000]]]]]],[11,"new",E,"Panics",100,[[["str"],["span"]],["self"]]],[11,"new",E,"Interpret a Syn literal from a proc-macro2 literal.",168,[[["literal"]],["self"]]],[11,"new",E,E,284,[[["str"],["span"]],["self"]]],[11,"value",E,E,284,[[["self"]],["string"]]],[11,"parse",E,"Parse a syntax tree node from the content of this string…",284,[[["self"]],[["parse"],[R[3]]]]],[11,"parse_with",E,"Invoke parser on the content of this string literal.",284,[[["self"],["parser"]],[R[3]]]],[11,"span",E,E,284,[[["self"]],["span"]]],[11,R[2001],E,E,284,[[["span"],["self"]]]],[11,"suffix",E,E,284,[[["self"]],["str"]]],[11,"new",E,E,285,[[["span"]],["self"]]],[11,"value",E,E,285,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"span",E,E,285,[[["self"]],["span"]]],[11,R[2001],E,E,285,[[["span"],["self"]]]],[11,"new",E,E,286,[[["span"],["u8"]],["self"]]],[11,"value",E,E,286,[[["self"]],["u8"]]],[11,"span",E,E,286,[[["self"]],["span"]]],[11,R[2001],E,E,286,[[["span"],["self"]]]],[11,"new",E,E,287,[[["span"],["char"]],["self"]]],[11,"value",E,E,287,[[["self"]],["char"]]],[11,"span",E,E,287,[[["self"]],["span"]]],[11,R[2001],E,E,287,[[["span"],["self"]]]],[11,"new",E,E,288,[[["str"],["span"]],["self"]]],[11,R[2002],E,E,288,[[["self"]],["str"]]],[11,R[2003],E,"Parses the literal into a selected number type.",288,[[["self"]],[R[3]]]],[11,"suffix",E,E,288,[[["self"]],["str"]]],[11,"span",E,E,288,[[["self"]],["span"]]],[11,R[2001],E,E,288,[[["span"],["self"]]]],[11,"new",E,E,289,[[["str"],["span"]],["self"]]],[11,R[2002],E,E,289,[[["self"]],["str"]]],[11,R[2003],E,E,289,[[["self"]],[R[3]]]],[11,"suffix",E,E,289,[[["self"]],["str"]]],[11,"span",E,E,289,[[["self"]],["span"]]],[11,R[2001],E,E,289,[[["span"],["self"]]]],[11,"parse_body",E,R[2004],102,[[["self"]],[["parse"],[R[3]]]]],[11,"parse_body_with",E,R[2004],102,[[["self"],["parser"]],[R[3]]]],[11,"parse_within",E,"Parse the body of a block as zero or more statements,…",107,[[[R[1999]]],[["vec",["stmt"]],[R[3],["vec"]]]]],[11,R[2005],E,"In some positions, types may not contain the `+`…",176,[[[R[1999]]],[R[3]]]],[11,R[2005],E,E,175,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,175,[[[R[1999]],["bool"]],[R[3]]]],[11,R[2005],E,E,123,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,123,[[[R[1999]],["bool"]],[R[3]]]],[11,"parse_mod_style",E,"Parse a `Path` containing no path arguments on any of its…",146,[[[R[1999]]],[R[3]]]],[11,"is_ident",E,"Determines whether this is a path of length 1 equal to the…",146,[[["i"],["self"]],["bool"]]],[11,"get_ident",E,"If this path consists of a single ident, returns the ident.",146,[[["self"]],[["ident"],["option",["ident"]]]]],[11,R[340],E,E,179,[[["self"]],["bool"]]],[0,"buffer",E,"A stably addressed token buffer supporting efficient…",N,N],[3,R[2578],R[2472],"A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor",E,"A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new",E,R[2006],290,[[[R[1152]]],[R[2007]]]],[11,"new2",E,R[2006],290,[[[R[1152]]],[R[2007]]]],[11,"begin",E,"Creates a cursor referencing the first token in the buffer…",290,[[["self"]],["cursor"]]],[11,"empty",E,"Creates a cursor referencing a static empty TokenStream.",291,[[],["self"]]],[11,"eof",E,"Checks whether the cursor is currently pointing at the end…",291,[[],["bool"]]],[11,"group",E,"If the cursor is pointing at a `Group` with the given…",291,[[[R[1159]]],["option"]]],[11,"ident",E,"If the cursor is pointing at a `Ident`, returns it along…",291,[[],["option"]]],[11,"punct",E,"If the cursor is pointing at an `Punct`, returns it along…",291,[[],["option"]]],[11,"literal",E,"If the cursor is pointing at a `Literal`, return it along…",291,[[],["option"]]],[11,R[2000],E,"If the cursor is pointing at a `Lifetime`, returns it…",291,[[],["option"]]],[11,R[2008],E,"Copies all remaining tokens visible from this cursor into…",291,[[],[R[1152]]]],[11,"token_tree",E,"If the cursor is pointing at a `TokenTree`, returns it…",291,[[],["option"]]],[11,"span",E,"Returns the `Span` of the current token, or…",291,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",N,N],[10,"parse_any",E,"Parses any identifier including keywords.",292,[[[R[1999]]],[R[3]]]],[18,"peek_any",E,"Peeks any identifier including keywords. Usage:…",292,N],[10,"unraw",E,"Strips the raw marker `r#`, if any, from the beginning of…",292,[[["self"]],["ident"]]],[0,R[2469],"syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,R[2579],R[2473],"A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs",E,"An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut",E,"An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs",E,"An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,R[339],E,"An iterator over owned values of type `T`.",N,N],[3,"Iter",E,"An iterator over borrowed values of type `&T`.",N,N],[3,R[703],E,"An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair",E,"A single syntax tree node of type `T` followed by its…",N,N],[13,R[2579],E,E,293,N],[13,"End",E,E,293,N],[11,"new",E,"Creates an empty punctuated sequence.",294,[[],[R[2469]]]],[11,R[340],E,"Determines whether this punctuated sequence is empty,…",294,[[["self"]],["bool"]]],[11,"len",E,"Returns the number of syntax tree nodes in this punctuated…",294,[[["self"]],["usize"]]],[11,"first",E,"Borrows the first element in this sequence.",294,[[["self"]],[[T],["option"]]]],[11,"last",E,"Borrows the last element in this sequence.",294,[[["self"]],[[T],["option"]]]],[11,"last_mut",E,"Mutably borrows the last element in this sequence.",294,[[["self"]],[[T],["option"]]]],[11,"iter",E,"Returns an iterator over borrowed syntax tree nodes of…",294,[[["self"]],["iter"]]],[11,R[628],E,"Returns an iterator over mutably borrowed syntax tree…",294,[[["self"]],["itermut"]]],[11,"pairs",E,R[2009],294,[[["self"]],["pairs"]]],[11,"pairs_mut",E,R[2009],294,[[["self"]],["pairsmut"]]],[11,"into_pairs",E,R[2009],294,[[],["intopairs"]]],[11,"push_value",E,R[2010],294,[[["self"],[T]]]],[11,"push_punct",E,"Appends a trailing punctuation onto the end of this…",294,[[["self"],["p"]]]],[11,"pop",E,"Removes the last punctuated pair from this sequence, or…",294,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"trailing_punct",E,"Determines whether this punctuated sequence ends with a…",294,[[["self"]],["bool"]]],[11,"empty_or_trailing",E,"Returns true if either this `Punctuated` is empty, or it…",294,[[["self"]],["bool"]]],[11,"push",E,R[2010],294,[[["self"],[T]]]],[11,"insert",E,"Inserts an element at position `index`.",294,[[["self"],["usize"],[T]]]],[11,R[2467],E,R[2468],294,[[[R[1999]]],[R[3]]]],[11,"parse_terminated_with",E,"Parses zero or more occurrences of `T` using the given…",294,[[[R[1999]]],[R[3]]]],[11,"parse_separated_nonempty",E,"Parses one or more occurrences of `T` separated by…",294,[[[R[1999]]],[R[3]]]],[11,"parse_separated_nonempty_with",E,"Parses one or more occurrences of `T` using the given…",294,[[[R[1999]]],[R[3]]]],[11,R[3401],E,"Extracts the syntax tree node from this punctuated pair,…",293,[[],[T]]],[11,"value",E,"Borrows the syntax tree node from this punctuated pair.",293,[[["self"]],[T]]],[11,"value_mut",E,"Mutably borrows the syntax tree node from this punctuated…",293,[[["self"]],[T]]],[11,"punct",E,"Borrows the punctuation from this punctuated pair, unless…",293,[[["self"]],[["option"],["p"]]]],[11,"new",E,"Creates a punctuated pair out of a syntax tree node and an…",293,[[["option"],[T]],["self"]]],[11,"into_tuple",E,"Produces this punctuated pair as a tuple of syntax tree…",293,[[]]],[0,"spanned","syn",R[2011],N,N],[8,"Spanned","syn::spanned",R[2011],N,N],[10,"span",E,"Returns a `Span` covering the complete contents of this…",295,[[["self"]],["span"]]],[0,"visit","syn",R[2013],N,N],[5,"visit_abi","syn::visit",E,N,[[["v"],["abi"]]]],[5,R[2014],E,E,N,[[[R[2015]],["v"]]]],[5,"visit_arm",E,E,N,[[["arm"],["v"]]]],[5,R[2016],E,E,N,[[["v"],[R[2239]]]]],[5,R[2017],E,E,N,[[["v"],[R[2240]]]]],[5,R[2018],E,E,N,[[[R[2241]],["v"]]]],[5,R[2019],E,E,N,[[["v"],["binop"]]]],[5,R[2020],E,E,N,[[["v"],["binding"]]]],[5,R[2021],E,E,N,[[["block"],["v"]]]],[5,R[2022],E,E,N,[[[R[2023]],["v"]]]],[5,R[2024],E,E,N,[[[R[2242]],["v"]]]],[5,R[2025],E,E,N,[[[R[2243]],["v"]]]],[5,R[2505],E,E,N,[[["v"],["data"]]]],[5,R[2026],E,E,N,[[["v"],[R[2489]]]]],[5,R[2027],E,E,N,[[["v"],[R[2244]]]]],[5,R[2028],E,E,N,[[[R[2245]],["v"]]]],[5,R[2029],E,E,N,[[["v"],[R[2030]]]]],[5,R[2506],E,E,N,[[["v"],["expr"]]]],[5,R[2031],E,E,N,[[["v"],[R[2246]]]]],[5,R[2032],E,E,N,[[["v"],[R[2247]]]]],[5,R[2033],E,E,N,[[[R[2034]],["v"]]]],[5,R[2035],E,E,N,[[["v"],[R[2248]]]]],[5,R[2036],E,E,N,[[[R[2249]],["v"]]]],[5,R[2037],E,E,N,[[["v"],[R[2250]]]]],[5,R[2038],E,E,N,[[[R[2251]],["v"]]]],[5,R[2039],E,E,N,[[["exprbox"],["v"]]]],[5,R[2040],E,E,N,[[["v"],[R[2252]]]]],[5,R[2041],E,E,N,[[["v"],[R[2478]]]]],[5,R[2042],E,E,N,[[["v"],[R[2479]]]]],[5,R[2043],E,E,N,[[[R[2044]],["v"]]]],[5,R[2045],E,E,N,[[["v"],[R[2046]]]]],[5,R[2047],E,E,N,[[["v"],[R[2253]]]]],[5,R[2048],E,E,N,[[[R[2049]],["v"]]]],[5,R[2050],E,E,N,[[["v"],[R[2254]]]]],[5,R[2051],E,E,N,[[["exprif"],["v"]]]],[5,R[2052],E,E,N,[[[R[2255]],["v"]]]],[5,R[2053],E,E,N,[[["exprlet"],["v"]]]],[5,R[2054],E,E,N,[[["v"],["exprlit"]]]],[5,R[2055],E,E,N,[[["v"],[R[2480]]]]],[5,R[2056],E,E,N,[[[R[2256]],["v"]]]],[5,R[2057],E,E,N,[[["v"],[R[2257]]]]],[5,R[2058],E,E,N,[[[R[2059]],["v"]]]],[5,R[2060],E,E,N,[[["v"],[R[2258]]]]],[5,R[2061],E,E,N,[[[R[2481]],["v"]]]],[5,R[2062],E,E,N,[[[R[2259]],["v"]]]],[5,R[2063],E,E,N,[[["v"],[R[2064]]]]],[5,R[2065],E,E,N,[[[R[2260]],["v"]]]],[5,R[2066],E,E,N,[[["v"],[R[2261]]]]],[5,R[2067],E,E,N,[[[R[2262]],["v"]]]],[5,R[2068],E,E,N,[[["v"],["exprtry"]]]],[5,R[2069],E,E,N,[[[R[2070]],["v"]]]],[5,R[2071],E,E,N,[[["v"],[R[2263]]]]],[5,R[2072],E,E,N,[[[R[2482]],["v"]]]],[5,R[2073],E,E,N,[[["v"],[R[2264]]]]],[5,R[2074],E,E,N,[[["v"],[R[2265]]]]],[5,R[2075],E,E,N,[[[R[2266]],["v"]]]],[5,R[2076],E,E,N,[[[R[2267]],["v"]]]],[5,R[2077],E,E,N,[[["field"],["v"]]]],[5,R[2078],E,E,N,[[["v"],[R[2496]]]]],[5,R[2079],E,E,N,[[[R[2268]],["v"]]]],[5,R[2080],E,E,N,[[["v"],["fields"]]]],[5,R[2081],E,E,N,[[["v"],[R[2082]]]]],[5,R[2083],E,E,N,[[["v"],[R[2084]]]]],[5,R[2507],E,E,N,[[["file"],["v"]]]],[5,R[2085],E,E,N,[[["v"],["fnarg"]]]],[5,R[2086],E,E,N,[[["v"],[R[2087]]]]],[5,R[2088],E,E,N,[[["v"],[R[2089]]]]],[5,R[2090],E,E,N,[[["v"],[R[2091]]]]],[5,R[2092],E,E,N,[[[R[2093]],["v"]]]],[5,R[2094],E,E,N,[[[R[2095]],["v"]]]],[5,R[2096],E,E,N,[[[R[2097]],["v"]]]],[5,R[2098],E,E,N,[[[R[2099]],["v"]]]],[5,R[2100],E,E,N,[[[R[2101]],["v"]]]],[5,R[2102],E,E,N,[[["v"],[R[1860]]]]],[5,R[2103],E,E,N,[[["v"],["ident"]]]],[5,R[2104],E,E,N,[[[R[2487]],["v"]]]],[5,R[2105],E,E,N,[[[R[2106]],["v"]]]],[5,R[2107],E,E,N,[[[R[2108]],["v"]]]],[5,R[2109],E,E,N,[[[R[2110]],["v"]]]],[5,R[2111],E,E,N,[[["v"],[R[2112]]]]],[5,R[2113],E,E,N,[[["v"],["index"]]]],[5,R[2508],E,E,N,[[["item"],["v"]]]],[5,R[2114],E,E,N,[[["v"],[R[2269]]]]],[5,R[2115],E,E,N,[[["v"],[R[2483]]]]],[5,R[2116],E,E,N,[[["v"],[R[2117]]]]],[5,R[2118],E,E,N,[[["itemfn"],["v"]]]],[5,R[2119],E,E,N,[[["v"],[R[2120]]]]],[5,R[2121],E,E,N,[[[R[2484]],["v"]]]],[5,R[2122],E,E,N,[[[R[2270]],["v"]]]],[5,R[2123],E,E,N,[[[R[2271]],["v"]]]],[5,R[2124],E,E,N,[[["v"],["itemmod"]]]],[5,R[2125],E,E,N,[[[R[2272]],["v"]]]],[5,R[2126],E,E,N,[[[R[2273]],["v"]]]],[5,R[2127],E,E,N,[[[R[2274]],["v"]]]],[5,R[2128],E,E,N,[[["v"],[R[2129]]]]],[5,R[2130],E,E,N,[[[R[2485]],["v"]]]],[5,R[2131],E,E,N,[[["v"],[R[2275]]]]],[5,R[2132],E,E,N,[[["v"],["itemuse"]]]],[5,R[2133],E,E,N,[[["v"],["label"]]]],[5,R[2134],E,E,N,[[["v"],[R[2000]]]]],[5,R[2135],E,E,N,[[["v"],[R[2136]]]]],[5,"visit_lit",E,E,N,[[["lit"],["v"]]]],[5,R[2137],E,E,N,[[["litbool"],["v"]]]],[5,R[2138],E,E,N,[[["litbyte"],["v"]]]],[5,R[2139],E,E,N,[[["v"],[R[2276]]]]],[5,R[2140],E,E,N,[[["litchar"],["v"]]]],[5,R[2141],E,E,N,[[[R[2488]],["v"]]]],[5,R[2142],E,E,N,[[["litint"],["v"]]]],[5,R[2143],E,E,N,[[["v"],["litstr"]]]],[5,R[2144],E,E,N,[[["local"],["v"]]]],[5,R[2145],E,E,N,[[["v"],["macro"]]]],[5,R[2146],E,E,N,[[[R[2147]],["v"]]]],[5,R[2148],E,E,N,[[["v"],["member"]]]],[5,R[2509],E,E,N,[[["v"],["meta"]]]],[5,R[2149],E,E,N,[[[R[2476]],["v"]]]],[5,R[2150],E,E,N,[[[R[2151]],["v"]]]],[5,R[2152],E,E,N,[[["v"],[R[2153]]]]],[5,R[2154],E,E,N,[[[R[2277]],["v"]]]],[5,R[2155],E,E,N,[[[R[2156]],["v"]]]],[5,"visit_pat",E,E,N,[[["v"],["pat"]]]],[5,R[2157],E,E,N,[[["patbox"],["v"]]]],[5,R[2158],E,E,N,[[["v"],[R[2491]]]]],[5,R[2159],E,E,N,[[["v"],["patlit"]]]],[5,R[2160],E,E,N,[[["v"],[R[2492]]]]],[5,R[2161],E,E,N,[[["v"],["pator"]]]],[5,R[2162],E,E,N,[[["patpath"],["v"]]]],[5,R[2163],E,E,N,[[[R[2493]],["v"]]]],[5,R[2164],E,E,N,[[["v"],[R[2165]]]]],[5,R[2166],E,E,N,[[["patrest"],["v"]]]],[5,R[2167],E,E,N,[[[R[2494]],["v"]]]],[5,R[2168],E,E,N,[[[R[2278]],["v"]]]],[5,R[2169],E,E,N,[[["v"],[R[2495]]]]],[5,R[2170],E,E,N,[[[R[2171]],["v"]]]],[5,R[2172],E,E,N,[[["v"],["pattype"]]]],[5,R[2173],E,E,N,[[["v"],["patwild"]]]],[5,R[2510],E,E,N,[[["path"],["v"]]]],[5,R[2174],E,E,N,[[["v"],[R[2175]]]]],[5,R[2176],E,E,N,[[[R[2177]],["v"]]]],[5,R[2178],E,E,N,[[[R[2179]],["v"]]]],[5,R[2180],E,E,N,[[[R[2181]],["v"]]]],[5,R[2182],E,E,N,[[["v"],[R[2183]]]]],[5,R[2184],E,E,N,[[["v"],["qself"]]]],[5,R[2185],E,E,N,[[[R[2186]],["v"]]]],[5,R[2187],E,E,N,[[[R[2422]],["v"]]]],[5,R[2188],E,E,N,[[[R[2279]],["v"]]]],[5,R[2189],E,E,N,[[["v"],[R[188]]]]],[5,R[2511],E,E,N,[[["v"],["span"]]]],[5,R[2512],E,E,N,[[["v"],["stmt"]]]],[5,R[2190],E,E,N,[[[R[2280]],["v"]]]],[5,R[2191],E,E,N,[[["v"],[R[2192]]]]],[5,R[2193],E,E,N,[[[R[2281]],["v"]]]],[5,R[2194],E,E,N,[[["v"],[R[2195]]]]],[5,R[2196],E,E,N,[[[R[2197]],["v"]]]],[5,R[2198],E,E,N,[[["v"],[R[2199]]]]],[5,R[2200],E,E,N,[[["v"],[R[2201]]]]],[5,R[2513],E,E,N,[[["v"],["type"]]]],[5,R[2202],E,E,N,[[["v"],[R[2282]]]]],[5,R[2203],E,E,N,[[[R[2283]],["v"]]]],[5,R[2204],E,E,N,[[["v"],[R[2284]]]]],[5,R[2205],E,E,N,[[["v"],[R[2206]]]]],[5,R[2207],E,E,N,[[["v"],[R[2285]]]]],[5,R[2208],E,E,N,[[["v"],[R[2286]]]]],[5,R[2209],E,E,N,[[["v"],[R[2287]]]]],[5,R[2210],E,E,N,[[[R[2288]],["v"]]]],[5,R[2211],E,E,N,[[[R[2212]],["v"]]]],[5,R[2213],E,E,N,[[["v"],[R[2289]]]]],[5,R[2214],E,E,N,[[[R[2490]],["v"]]]],[5,R[2215],E,E,N,[[["v"],["typeptr"]]]],[5,R[2216],E,E,N,[[["v"],[R[2217]]]]],[5,R[2218],E,E,N,[[["v"],[R[2290]]]]],[5,R[2219],E,E,N,[[[R[2220]],["v"]]]],[5,R[2221],E,E,N,[[[R[2291]],["v"]]]],[5,R[2222],E,E,N,[[["v"],["unop"]]]],[5,R[2223],E,E,N,[[["v"],["useglob"]]]],[5,R[2224],E,E,N,[[[R[2486]],["v"]]]],[5,R[2225],E,E,N,[[["usename"],["v"]]]],[5,R[2226],E,E,N,[[["usepath"],["v"]]]],[5,R[2227],E,E,N,[[[R[2292]],["v"]]]],[5,R[2228],E,E,N,[[["usetree"],["v"]]]],[5,R[2229],E,E,N,[[[R[2455]],["v"]]]],[5,R[2230],E,E,N,[[["variant"],["v"]]]],[5,R[2231],E,E,N,[[[R[2477]],["v"]]]],[5,R[2232],E,E,N,[[["v"],[R[2293]]]]],[5,R[2233],E,E,N,[[["v"],[R[2234]]]]],[5,R[2235],E,E,N,[[[R[2294]],["v"]]]],[5,R[2236],E,E,N,[[[R[2012]],["v"]]]],[5,R[2237],E,E,N,[[[R[2238]],["v"]]]],[8,"Visit",E,R[2013],N,N],[11,"visit_abi",E,E,296,[[["self"],["abi"]]]],[11,R[2014],E,E,296,[[["self"],[R[2015]]]]],[11,"visit_arm",E,E,296,[[["self"],["arm"]]]],[11,R[2016],E,E,296,[[["self"],[R[2239]]]]],[11,R[2017],E,E,296,[[["self"],[R[2240]]]]],[11,R[2018],E,E,296,[[["self"],[R[2241]]]]],[11,R[2019],E,E,296,[[["self"],["binop"]]]],[11,R[2020],E,E,296,[[["self"],["binding"]]]],[11,R[2021],E,E,296,[[["block"],["self"]]]],[11,R[2022],E,E,296,[[["self"],[R[2023]]]]],[11,R[2024],E,E,296,[[[R[2242]],["self"]]]],[11,R[2025],E,E,296,[[[R[2243]],["self"]]]],[11,R[2505],E,E,296,[[["self"],["data"]]]],[11,R[2026],E,E,296,[[["self"],[R[2489]]]]],[11,R[2027],E,E,296,[[["self"],[R[2244]]]]],[11,R[2028],E,E,296,[[[R[2245]],["self"]]]],[11,R[2029],E,E,296,[[["self"],[R[2030]]]]],[11,R[2506],E,E,296,[[["self"],["expr"]]]],[11,R[2031],E,E,296,[[["self"],[R[2246]]]]],[11,R[2032],E,E,296,[[["self"],[R[2247]]]]],[11,R[2033],E,E,296,[[[R[2034]],["self"]]]],[11,R[2035],E,E,296,[[["self"],[R[2248]]]]],[11,R[2036],E,E,296,[[["self"],[R[2249]]]]],[11,R[2037],E,E,296,[[["self"],[R[2250]]]]],[11,R[2038],E,E,296,[[[R[2251]],["self"]]]],[11,R[2039],E,E,296,[[["exprbox"],["self"]]]],[11,R[2040],E,E,296,[[["self"],[R[2252]]]]],[11,R[2041],E,E,296,[[["self"],[R[2478]]]]],[11,R[2042],E,E,296,[[["self"],[R[2479]]]]],[11,R[2043],E,E,296,[[["self"],[R[2044]]]]],[11,R[2045],E,E,296,[[["self"],[R[2046]]]]],[11,R[2047],E,E,296,[[["self"],[R[2253]]]]],[11,R[2048],E,E,296,[[[R[2049]],["self"]]]],[11,R[2050],E,E,296,[[["self"],[R[2254]]]]],[11,R[2051],E,E,296,[[["exprif"],["self"]]]],[11,R[2052],E,E,296,[[["self"],[R[2255]]]]],[11,R[2053],E,E,296,[[["self"],["exprlet"]]]],[11,R[2054],E,E,296,[[["self"],["exprlit"]]]],[11,R[2055],E,E,296,[[["self"],[R[2480]]]]],[11,R[2056],E,E,296,[[[R[2256]],["self"]]]],[11,R[2057],E,E,296,[[["self"],[R[2257]]]]],[11,R[2058],E,E,296,[[["self"],[R[2059]]]]],[11,R[2060],E,E,296,[[["self"],[R[2258]]]]],[11,R[2061],E,E,296,[[["self"],[R[2481]]]]],[11,R[2062],E,E,296,[[["self"],[R[2259]]]]],[11,R[2063],E,E,296,[[["self"],[R[2064]]]]],[11,R[2065],E,E,296,[[["self"],[R[2260]]]]],[11,R[2066],E,E,296,[[["self"],[R[2261]]]]],[11,R[2067],E,E,296,[[["self"],[R[2262]]]]],[11,R[2068],E,E,296,[[["self"],["exprtry"]]]],[11,R[2069],E,E,296,[[[R[2070]],["self"]]]],[11,R[2071],E,E,296,[[["self"],[R[2263]]]]],[11,R[2072],E,E,296,[[["self"],[R[2482]]]]],[11,R[2073],E,E,296,[[["self"],[R[2264]]]]],[11,R[2074],E,E,296,[[["self"],[R[2265]]]]],[11,R[2075],E,E,296,[[[R[2266]],["self"]]]],[11,R[2076],E,E,296,[[["self"],[R[2267]]]]],[11,R[2077],E,E,296,[[["field"],["self"]]]],[11,R[2078],E,E,296,[[["self"],[R[2496]]]]],[11,R[2079],E,E,296,[[["self"],[R[2268]]]]],[11,R[2080],E,E,296,[[["self"],["fields"]]]],[11,R[2081],E,E,296,[[["self"],[R[2082]]]]],[11,R[2083],E,E,296,[[["self"],[R[2084]]]]],[11,R[2507],E,E,296,[[["self"],["file"]]]],[11,R[2085],E,E,296,[[["self"],["fnarg"]]]],[11,R[2086],E,E,296,[[["self"],[R[2087]]]]],[11,R[2088],E,E,296,[[["self"],[R[2089]]]]],[11,R[2090],E,E,296,[[["self"],[R[2091]]]]],[11,R[2092],E,E,296,[[[R[2093]],["self"]]]],[11,R[2094],E,E,296,[[["self"],[R[2095]]]]],[11,R[2096],E,E,296,[[["self"],[R[2097]]]]],[11,R[2098],E,E,296,[[["self"],[R[2099]]]]],[11,R[2100],E,E,296,[[["self"],[R[2101]]]]],[11,R[2102],E,E,296,[[["self"],[R[1860]]]]],[11,R[2103],E,E,296,[[["self"],["ident"]]]],[11,R[2104],E,E,296,[[[R[2487]],["self"]]]],[11,R[2105],E,E,296,[[["self"],[R[2106]]]]],[11,R[2107],E,E,296,[[["self"],[R[2108]]]]],[11,R[2109],E,E,296,[[[R[2110]],["self"]]]],[11,R[2111],E,E,296,[[["self"],[R[2112]]]]],[11,R[2113],E,E,296,[[["self"],["index"]]]],[11,R[2508],E,E,296,[[["self"],["item"]]]],[11,R[2114],E,E,296,[[["self"],[R[2269]]]]],[11,R[2115],E,E,296,[[["self"],[R[2483]]]]],[11,R[2116],E,E,296,[[["self"],[R[2117]]]]],[11,R[2118],E,E,296,[[["self"],["itemfn"]]]],[11,R[2119],E,E,296,[[["self"],[R[2120]]]]],[11,R[2121],E,E,296,[[["self"],[R[2484]]]]],[11,R[2122],E,E,296,[[["self"],[R[2270]]]]],[11,R[2123],E,E,296,[[[R[2271]],["self"]]]],[11,R[2124],E,E,296,[[["self"],["itemmod"]]]],[11,R[2125],E,E,296,[[[R[2272]],["self"]]]],[11,R[2126],E,E,296,[[[R[2273]],["self"]]]],[11,R[2127],E,E,296,[[[R[2274]],["self"]]]],[11,R[2128],E,E,296,[[["self"],[R[2129]]]]],[11,R[2130],E,E,296,[[[R[2485]],["self"]]]],[11,R[2131],E,E,296,[[["self"],[R[2275]]]]],[11,R[2132],E,E,296,[[["self"],["itemuse"]]]],[11,R[2133],E,E,296,[[["self"],["label"]]]],[11,R[2134],E,E,296,[[["self"],[R[2000]]]]],[11,R[2135],E,E,296,[[["self"],[R[2136]]]]],[11,"visit_lit",E,E,296,[[["lit"],["self"]]]],[11,R[2137],E,E,296,[[["self"],["litbool"]]]],[11,R[2138],E,E,296,[[["litbyte"],["self"]]]],[11,R[2139],E,E,296,[[["self"],[R[2276]]]]],[11,R[2140],E,E,296,[[["self"],["litchar"]]]],[11,R[2141],E,E,296,[[["self"],[R[2488]]]]],[11,R[2142],E,E,296,[[["self"],["litint"]]]],[11,R[2143],E,E,296,[[["self"],["litstr"]]]],[11,R[2144],E,E,296,[[["self"],["local"]]]],[11,R[2145],E,E,296,[[["self"],["macro"]]]],[11,R[2146],E,E,296,[[[R[2147]],["self"]]]],[11,R[2148],E,E,296,[[["self"],["member"]]]],[11,R[2509],E,E,296,[[["self"],["meta"]]]],[11,R[2149],E,E,296,[[[R[2476]],["self"]]]],[11,R[2150],E,E,296,[[["self"],[R[2151]]]]],[11,R[2152],E,E,296,[[["self"],[R[2153]]]]],[11,R[2154],E,E,296,[[[R[2277]],["self"]]]],[11,R[2155],E,E,296,[[["self"],[R[2156]]]]],[11,"visit_pat",E,E,296,[[["self"],["pat"]]]],[11,R[2157],E,E,296,[[["self"],["patbox"]]]],[11,R[2158],E,E,296,[[["self"],[R[2491]]]]],[11,R[2159],E,E,296,[[["self"],["patlit"]]]],[11,R[2160],E,E,296,[[["self"],[R[2492]]]]],[11,R[2161],E,E,296,[[["self"],["pator"]]]],[11,R[2162],E,E,296,[[["patpath"],["self"]]]],[11,R[2163],E,E,296,[[["self"],[R[2493]]]]],[11,R[2164],E,E,296,[[["self"],[R[2165]]]]],[11,R[2166],E,E,296,[[["patrest"],["self"]]]],[11,R[2167],E,E,296,[[["self"],[R[2494]]]]],[11,R[2168],E,E,296,[[["self"],[R[2278]]]]],[11,R[2169],E,E,296,[[["self"],[R[2495]]]]],[11,R[2170],E,E,296,[[["self"],[R[2171]]]]],[11,R[2172],E,E,296,[[["self"],["pattype"]]]],[11,R[2173],E,E,296,[[["self"],["patwild"]]]],[11,R[2510],E,E,296,[[["self"],["path"]]]],[11,R[2174],E,E,296,[[["self"],[R[2175]]]]],[11,R[2176],E,E,296,[[[R[2177]],["self"]]]],[11,R[2178],E,E,296,[[["self"],[R[2179]]]]],[11,R[2180],E,E,296,[[["self"],[R[2181]]]]],[11,R[2182],E,E,296,[[["self"],[R[2183]]]]],[11,R[2184],E,E,296,[[["self"],["qself"]]]],[11,R[2185],E,E,296,[[[R[2186]],["self"]]]],[11,R[2187],E,E,296,[[[R[2422]],["self"]]]],[11,R[2188],E,E,296,[[[R[2279]],["self"]]]],[11,R[2189],E,E,296,[[["self"],[R[188]]]]],[11,R[2511],E,E,296,[[["self"],["span"]]]],[11,R[2512],E,E,296,[[["self"],["stmt"]]]],[11,R[2190],E,E,296,[[[R[2280]],["self"]]]],[11,R[2191],E,E,296,[[["self"],[R[2192]]]]],[11,R[2193],E,E,296,[[[R[2281]],["self"]]]],[11,R[2194],E,E,296,[[["self"],[R[2195]]]]],[11,R[2196],E,E,296,[[["self"],[R[2197]]]]],[11,R[2198],E,E,296,[[["self"],[R[2199]]]]],[11,R[2200],E,E,296,[[["self"],[R[2201]]]]],[11,R[2513],E,E,296,[[["self"],["type"]]]],[11,R[2202],E,E,296,[[["self"],[R[2282]]]]],[11,R[2203],E,E,296,[[[R[2283]],["self"]]]],[11,R[2204],E,E,296,[[["self"],[R[2284]]]]],[11,R[2205],E,E,296,[[["self"],[R[2206]]]]],[11,R[2207],E,E,296,[[["self"],[R[2285]]]]],[11,R[2208],E,E,296,[[["self"],[R[2286]]]]],[11,R[2209],E,E,296,[[["self"],[R[2287]]]]],[11,R[2210],E,E,296,[[[R[2288]],["self"]]]],[11,R[2211],E,E,296,[[[R[2212]],["self"]]]],[11,R[2213],E,E,296,[[["self"],[R[2289]]]]],[11,R[2214],E,E,296,[[["self"],[R[2490]]]]],[11,R[2215],E,E,296,[[["self"],["typeptr"]]]],[11,R[2216],E,E,296,[[["self"],[R[2217]]]]],[11,R[2218],E,E,296,[[["self"],[R[2290]]]]],[11,R[2219],E,E,296,[[["self"],[R[2220]]]]],[11,R[2221],E,E,296,[[["self"],[R[2291]]]]],[11,R[2222],E,E,296,[[["self"],["unop"]]]],[11,R[2223],E,E,296,[[["self"],["useglob"]]]],[11,R[2224],E,E,296,[[[R[2486]],["self"]]]],[11,R[2225],E,E,296,[[["usename"],["self"]]]],[11,R[2226],E,E,296,[[["self"],["usepath"]]]],[11,R[2227],E,E,296,[[["self"],[R[2292]]]]],[11,R[2228],E,E,296,[[["self"],["usetree"]]]],[11,R[2229],E,E,296,[[["self"],[R[2455]]]]],[11,R[2230],E,E,296,[[["self"],["variant"]]]],[11,R[2231],E,E,296,[[[R[2477]],["self"]]]],[11,R[2232],E,E,296,[[["self"],[R[2293]]]]],[11,R[2233],E,E,296,[[["self"],[R[2234]]]]],[11,R[2235],E,E,296,[[[R[2294]],["self"]]]],[11,R[2236],E,E,296,[[[R[2012]],["self"]]]],[11,R[2237],E,E,296,[[["self"],[R[2238]]]]],[0,"fold","syn",R[2295],N,N],[5,"fold_abi","syn::fold",E,N,[[["f"],["abi"]],["abi"]]],[5,R[2296],E,E,N,[[["f"],[R[2015]]],[R[2015]]]],[5,"fold_arm",E,E,N,[[["f"],["arm"]],["arm"]]],[5,R[2297],E,E,N,[[["f"],[R[2239]]],[R[2239]]]],[5,R[2298],E,E,N,[[["f"],[R[2240]]],[R[2240]]]],[5,R[2299],E,E,N,[[["f"],[R[2241]]],[R[2241]]]],[5,R[2300],E,E,N,[[["f"],["binop"]],["binop"]]],[5,R[2301],E,E,N,[[["binding"],["f"]],["binding"]]],[5,R[2514],E,E,N,[[["f"],["block"]],["block"]]],[5,R[2302],E,E,N,[[["f"],[R[2023]]],[R[2023]]]],[5,R[2303],E,E,N,[[["f"],[R[2242]]],[R[2242]]]],[5,R[2304],E,E,N,[[["f"],[R[2243]]],[R[2243]]]],[5,"fold_data",E,E,N,[[["data"],["f"]],["data"]]],[5,R[2305],E,E,N,[[["f"],[R[2489]]],[R[2489]]]],[5,R[2306],E,E,N,[[[R[2244]],["f"]],[R[2244]]]],[5,R[2307],E,E,N,[[["f"],[R[2245]]],[R[2245]]]],[5,R[2308],E,E,N,[[["f"],[R[2030]]],[R[2030]]]],[5,"fold_expr",E,E,N,[[["f"],["expr"]],["expr"]]],[5,R[2309],E,E,N,[[["f"],[R[2246]]],[R[2246]]]],[5,R[2310],E,E,N,[[["f"],[R[2247]]],[R[2247]]]],[5,R[2311],E,E,N,[[["f"],[R[2034]]],[R[2034]]]],[5,R[2312],E,E,N,[[["f"],[R[2248]]],[R[2248]]]],[5,R[2313],E,E,N,[[["f"],[R[2249]]],[R[2249]]]],[5,R[2314],E,E,N,[[["f"],[R[2250]]],[R[2250]]]],[5,R[2315],E,E,N,[[[R[2251]],["f"]],[R[2251]]]],[5,R[2316],E,E,N,[[["exprbox"],["f"]],["exprbox"]]],[5,R[2317],E,E,N,[[[R[2252]],["f"]],[R[2252]]]],[5,R[2318],E,E,N,[[["f"],[R[2478]]],[R[2478]]]],[5,R[2319],E,E,N,[[["f"],[R[2479]]],[R[2479]]]],[5,R[2320],E,E,N,[[[R[2044]],["f"]],[R[2044]]]],[5,R[2321],E,E,N,[[["f"],[R[2046]]],[R[2046]]]],[5,R[2322],E,E,N,[[[R[2253]],["f"]],[R[2253]]]],[5,R[2323],E,E,N,[[["f"],[R[2049]]],[R[2049]]]],[5,R[2324],E,E,N,[[["f"],[R[2254]]],[R[2254]]]],[5,R[2325],E,E,N,[[["f"],["exprif"]],["exprif"]]],[5,R[2326],E,E,N,[[["f"],[R[2255]]],[R[2255]]]],[5,R[2327],E,E,N,[[["f"],["exprlet"]],["exprlet"]]],[5,R[2328],E,E,N,[[["f"],["exprlit"]],["exprlit"]]],[5,R[2329],E,E,N,[[[R[2480]],["f"]],[R[2480]]]],[5,R[2330],E,E,N,[[[R[2256]],["f"]],[R[2256]]]],[5,R[2331],E,E,N,[[["f"],[R[2257]]],[R[2257]]]],[5,R[2332],E,E,N,[[[R[2059]],["f"]],[R[2059]]]],[5,R[2333],E,E,N,[[[R[2258]],["f"]],[R[2258]]]],[5,R[2334],E,E,N,[[["f"],[R[2481]]],[R[2481]]]],[5,R[2335],E,E,N,[[[R[2259]],["f"]],[R[2259]]]],[5,R[2336],E,E,N,[[[R[2064]],["f"]],[R[2064]]]],[5,R[2337],E,E,N,[[["f"],[R[2260]]],[R[2260]]]],[5,R[2338],E,E,N,[[["f"],[R[2261]]],[R[2261]]]],[5,R[2339],E,E,N,[[["f"],[R[2262]]],[R[2262]]]],[5,R[2340],E,E,N,[[["f"],["exprtry"]],["exprtry"]]],[5,R[2341],E,E,N,[[["f"],[R[2070]]],[R[2070]]]],[5,R[2342],E,E,N,[[["f"],[R[2263]]],[R[2263]]]],[5,R[2343],E,E,N,[[["f"],[R[2482]]],[R[2482]]]],[5,R[2344],E,E,N,[[[R[2264]],["f"]],[R[2264]]]],[5,R[2345],E,E,N,[[["f"],[R[2265]]],[R[2265]]]],[5,R[2346],E,E,N,[[["f"],[R[2266]]],[R[2266]]]],[5,R[2347],E,E,N,[[["f"],[R[2267]]],[R[2267]]]],[5,R[2515],E,E,N,[[["f"],["field"]],["field"]]],[5,R[2348],E,E,N,[[["f"],[R[2496]]],[R[2496]]]],[5,R[2349],E,E,N,[[["f"],[R[2268]]],[R[2268]]]],[5,R[2350],E,E,N,[[["f"],["fields"]],["fields"]]],[5,R[2351],E,E,N,[[["f"],[R[2082]]],[R[2082]]]],[5,R[2352],E,E,N,[[["f"],[R[2084]]],[R[2084]]]],[5,"fold_file",E,E,N,[[["f"],["file"]],["file"]]],[5,R[2353],E,E,N,[[["f"],["fnarg"]],["fnarg"]]],[5,R[2354],E,E,N,[[["f"],[R[2087]]],[R[2087]]]],[5,R[2355],E,E,N,[[["f"],[R[2089]]],[R[2089]]]],[5,R[2356],E,E,N,[[["f"],[R[2091]]],[R[2091]]]],[5,R[2357],E,E,N,[[["f"],[R[2093]]],[R[2093]]]],[5,R[2358],E,E,N,[[["f"],[R[2095]]],[R[2095]]]],[5,R[2359],E,E,N,[[[R[2097]],["f"]],[R[2097]]]],[5,R[2360],E,E,N,[[["f"],[R[2099]]],[R[2099]]]],[5,R[2361],E,E,N,[[["f"],[R[2101]]],[R[2101]]]],[5,R[2362],E,E,N,[[["f"],[R[1860]]],[R[1860]]]],[5,R[2516],E,E,N,[[["f"],["ident"]],["ident"]]],[5,R[2363],E,E,N,[[["f"],[R[2487]]],[R[2487]]]],[5,R[2364],E,E,N,[[["f"],[R[2106]]],[R[2106]]]],[5,R[2365],E,E,N,[[[R[2108]],["f"]],[R[2108]]]],[5,R[2366],E,E,N,[[[R[2110]],["f"]],[R[2110]]]],[5,R[2367],E,E,N,[[["f"],[R[2112]]],[R[2112]]]],[5,R[2517],E,E,N,[[["index"],["f"]],["index"]]],[5,"fold_item",E,E,N,[[["item"],["f"]],["item"]]],[5,R[2368],E,E,N,[[[R[2269]],["f"]],[R[2269]]]],[5,R[2369],E,E,N,[[["f"],[R[2483]]],[R[2483]]]],[5,R[2370],E,E,N,[[["f"],[R[2117]]],[R[2117]]]],[5,R[2371],E,E,N,[[["f"],["itemfn"]],["itemfn"]]],[5,R[2372],E,E,N,[[["f"],[R[2120]]],[R[2120]]]],[5,R[2373],E,E,N,[[["f"],[R[2484]]],[R[2484]]]],[5,R[2374],E,E,N,[[["f"],[R[2270]]],[R[2270]]]],[5,R[2375],E,E,N,[[["f"],[R[2271]]],[R[2271]]]],[5,R[2376],E,E,N,[[["itemmod"],["f"]],["itemmod"]]],[5,R[2377],E,E,N,[[["f"],[R[2272]]],[R[2272]]]],[5,R[2378],E,E,N,[[[R[2273]],["f"]],[R[2273]]]],[5,R[2379],E,E,N,[[["f"],[R[2274]]],[R[2274]]]],[5,R[2380],E,E,N,[[[R[2129]],["f"]],[R[2129]]]],[5,R[2381],E,E,N,[[["f"],[R[2485]]],[R[2485]]]],[5,R[2382],E,E,N,[[["f"],[R[2275]]],[R[2275]]]],[5,R[2383],E,E,N,[[["f"],["itemuse"]],["itemuse"]]],[5,R[2518],E,E,N,[[["f"],["label"]],["label"]]],[5,R[2384],E,E,N,[[[R[2000]],["f"]],[R[2000]]]],[5,R[2385],E,E,N,[[["f"],[R[2136]]],[R[2136]]]],[5,"fold_lit",E,E,N,[[["lit"],["f"]],["lit"]]],[5,R[2386],E,E,N,[[["f"],["litbool"]],["litbool"]]],[5,R[2387],E,E,N,[[["f"],["litbyte"]],["litbyte"]]],[5,R[2388],E,E,N,[[[R[2276]],["f"]],[R[2276]]]],[5,R[2389],E,E,N,[[["litchar"],["f"]],["litchar"]]],[5,R[2390],E,E,N,[[["f"],[R[2488]]],[R[2488]]]],[5,R[2391],E,E,N,[[["litint"],["f"]],["litint"]]],[5,R[2392],E,E,N,[[["litstr"],["f"]],["litstr"]]],[5,R[2519],E,E,N,[[["f"],["local"]],["local"]]],[5,R[2520],E,E,N,[[["f"],["macro"]],["macro"]]],[5,R[2393],E,E,N,[[["f"],[R[2147]]],[R[2147]]]],[5,R[2394],E,E,N,[[["f"],["member"]],["member"]]],[5,"fold_meta",E,E,N,[[["f"],["meta"]],["meta"]]],[5,R[2395],E,E,N,[[["f"],[R[2476]]],[R[2476]]]],[5,R[2396],E,E,N,[[["f"],[R[2151]]],[R[2151]]]],[5,R[2397],E,E,N,[[["f"],[R[2153]]],[R[2153]]]],[5,R[2398],E,E,N,[[["f"],[R[2277]]],[R[2277]]]],[5,R[2399],E,E,N,[[[R[2156]],["f"]],[R[2156]]]],[5,"fold_pat",E,E,N,[[["pat"],["f"]],["pat"]]],[5,R[2400],E,E,N,[[["f"],["patbox"]],["patbox"]]],[5,R[2401],E,E,N,[[[R[2491]],["f"]],[R[2491]]]],[5,R[2402],E,E,N,[[["f"],["patlit"]],["patlit"]]],[5,R[2403],E,E,N,[[["f"],[R[2492]]],[R[2492]]]],[5,R[2404],E,E,N,[[["f"],["pator"]],["pator"]]],[5,R[2405],E,E,N,[[["f"],["patpath"]],["patpath"]]],[5,R[2406],E,E,N,[[["f"],[R[2493]]],[R[2493]]]],[5,R[2407],E,E,N,[[["f"],[R[2165]]],[R[2165]]]],[5,R[2408],E,E,N,[[["f"],["patrest"]],["patrest"]]],[5,R[2409],E,E,N,[[[R[2494]],["f"]],[R[2494]]]],[5,R[2410],E,E,N,[[[R[2278]],["f"]],[R[2278]]]],[5,R[2411],E,E,N,[[["f"],[R[2495]]],[R[2495]]]],[5,R[2412],E,E,N,[[[R[2171]],["f"]],[R[2171]]]],[5,R[2413],E,E,N,[[["f"],["pattype"]],["pattype"]]],[5,R[2414],E,E,N,[[["f"],["patwild"]],["patwild"]]],[5,"fold_path",E,E,N,[[["f"],["path"]],["path"]]],[5,R[2415],E,E,N,[[["f"],[R[2175]]],[R[2175]]]],[5,R[2416],E,E,N,[[[R[2177]],["f"]],[R[2177]]]],[5,R[2417],E,E,N,[[["f"],[R[2179]]],[R[2179]]]],[5,R[2418],E,E,N,[[["f"],[R[2181]]],[R[2181]]]],[5,R[2419],E,E,N,[[["f"],[R[2183]]],[R[2183]]]],[5,R[2521],E,E,N,[[["f"],["qself"]],["qself"]]],[5,R[2420],E,E,N,[[["f"],[R[2186]]],[R[2186]]]],[5,R[2421],E,E,N,[[["f"],[R[2422]]],[R[2422]]]],[5,R[2423],E,E,N,[[[R[2279]],["f"]],[R[2279]]]],[5,R[2424],E,E,N,[[["f"],[R[188]]],[R[188]]]],[5,"fold_span",E,E,N,[[["span"],["f"]],["span"]]],[5,"fold_stmt",E,E,N,[[["f"],["stmt"]],["stmt"]]],[5,R[2425],E,E,N,[[["f"],[R[2280]]],[R[2280]]]],[5,R[2426],E,E,N,[[["f"],[R[2192]]],[R[2192]]]],[5,R[2427],E,E,N,[[["f"],[R[2281]]],[R[2281]]]],[5,R[2428],E,E,N,[[["f"],[R[2195]]],[R[2195]]]],[5,R[2429],E,E,N,[[["f"],[R[2197]]],[R[2197]]]],[5,R[2430],E,E,N,[[[R[2199]],["f"]],[R[2199]]]],[5,R[2431],E,E,N,[[["f"],[R[2201]]],[R[2201]]]],[5,"fold_type",E,E,N,[[["f"],["type"]],["type"]]],[5,R[2432],E,E,N,[[["f"],[R[2282]]],[R[2282]]]],[5,R[2433],E,E,N,[[[R[2283]],["f"]],[R[2283]]]],[5,R[2434],E,E,N,[[["f"],[R[2284]]],[R[2284]]]],[5,R[2435],E,E,N,[[["f"],[R[2206]]],[R[2206]]]],[5,R[2436],E,E,N,[[[R[2285]],["f"]],[R[2285]]]],[5,R[2437],E,E,N,[[["f"],[R[2286]]],[R[2286]]]],[5,R[2438],E,E,N,[[["f"],[R[2287]]],[R[2287]]]],[5,R[2439],E,E,N,[[["f"],[R[2288]]],[R[2288]]]],[5,R[2440],E,E,N,[[["f"],[R[2212]]],[R[2212]]]],[5,R[2441],E,E,N,[[["f"],[R[2289]]],[R[2289]]]],[5,R[2442],E,E,N,[[["f"],[R[2490]]],[R[2490]]]],[5,R[2443],E,E,N,[[["f"],["typeptr"]],["typeptr"]]],[5,R[2444],E,E,N,[[["f"],[R[2217]]],[R[2217]]]],[5,R[2445],E,E,N,[[["f"],[R[2290]]],[R[2290]]]],[5,R[2446],E,E,N,[[[R[2220]],["f"]],[R[2220]]]],[5,R[2447],E,E,N,[[["f"],[R[2291]]],[R[2291]]]],[5,R[2522],E,E,N,[[["f"],["unop"]],["unop"]]],[5,R[2448],E,E,N,[[["f"],["useglob"]],["useglob"]]],[5,R[2449],E,E,N,[[[R[2486]],["f"]],[R[2486]]]],[5,R[2450],E,E,N,[[["f"],["usename"]],["usename"]]],[5,R[2451],E,E,N,[[["f"],["usepath"]],["usepath"]]],[5,R[2452],E,E,N,[[["f"],[R[2292]]],[R[2292]]]],[5,R[2453],E,E,N,[[["usetree"],["f"]],["usetree"]]],[5,R[2454],E,E,N,[[["f"],[R[2455]]],[R[2455]]]],[5,R[2456],E,E,N,[[["variant"],["f"]],["variant"]]],[5,R[2457],E,E,N,[[["f"],[R[2477]]],[R[2477]]]],[5,R[2458],E,E,N,[[["f"],[R[2293]]],[R[2293]]]],[5,R[2459],E,E,N,[[[R[2234]],["f"]],[R[2234]]]],[5,R[2460],E,E,N,[[["f"],[R[2294]]],[R[2294]]]],[5,R[2461],E,E,N,[[["f"],[R[2012]]],[R[2012]]]],[5,R[2462],E,E,N,[[["f"],[R[2238]]],[R[2238]]]],[8,"Fold",E,R[2295],N,N],[11,"fold_abi",E,E,297,[[["self"],["abi"]],["abi"]]],[11,R[2296],E,E,297,[[["self"],[R[2015]]],[R[2015]]]],[11,"fold_arm",E,E,297,[[["self"],["arm"]],["arm"]]],[11,R[2297],E,E,297,[[["self"],[R[2239]]],[R[2239]]]],[11,R[2298],E,E,297,[[["self"],[R[2240]]],[R[2240]]]],[11,R[2299],E,E,297,[[["self"],[R[2241]]],[R[2241]]]],[11,R[2300],E,E,297,[[["self"],["binop"]],["binop"]]],[11,R[2301],E,E,297,[[["binding"],["self"]],["binding"]]],[11,R[2514],E,E,297,[[["self"],["block"]],["block"]]],[11,R[2302],E,E,297,[[["self"],[R[2023]]],[R[2023]]]],[11,R[2303],E,E,297,[[["self"],[R[2242]]],[R[2242]]]],[11,R[2304],E,E,297,[[["self"],[R[2243]]],[R[2243]]]],[11,"fold_data",E,E,297,[[["data"],["self"]],["data"]]],[11,R[2305],E,E,297,[[["self"],[R[2489]]],[R[2489]]]],[11,R[2306],E,E,297,[[[R[2244]],["self"]],[R[2244]]]],[11,R[2307],E,E,297,[[["self"],[R[2245]]],[R[2245]]]],[11,R[2308],E,E,297,[[["self"],[R[2030]]],[R[2030]]]],[11,"fold_expr",E,E,297,[[["self"],["expr"]],["expr"]]],[11,R[2309],E,E,297,[[["self"],[R[2246]]],[R[2246]]]],[11,R[2310],E,E,297,[[["self"],[R[2247]]],[R[2247]]]],[11,R[2311],E,E,297,[[["self"],[R[2034]]],[R[2034]]]],[11,R[2312],E,E,297,[[["self"],[R[2248]]],[R[2248]]]],[11,R[2313],E,E,297,[[["self"],[R[2249]]],[R[2249]]]],[11,R[2314],E,E,297,[[["self"],[R[2250]]],[R[2250]]]],[11,R[2315],E,E,297,[[[R[2251]],["self"]],[R[2251]]]],[11,R[2316],E,E,297,[[["exprbox"],["self"]],["exprbox"]]],[11,R[2317],E,E,297,[[[R[2252]],["self"]],[R[2252]]]],[11,R[2318],E,E,297,[[["self"],[R[2478]]],[R[2478]]]],[11,R[2319],E,E,297,[[["self"],[R[2479]]],[R[2479]]]],[11,R[2320],E,E,297,[[[R[2044]],["self"]],[R[2044]]]],[11,R[2321],E,E,297,[[["self"],[R[2046]]],[R[2046]]]],[11,R[2322],E,E,297,[[[R[2253]],["self"]],[R[2253]]]],[11,R[2323],E,E,297,[[["self"],[R[2049]]],[R[2049]]]],[11,R[2324],E,E,297,[[["self"],[R[2254]]],[R[2254]]]],[11,R[2325],E,E,297,[[["self"],["exprif"]],["exprif"]]],[11,R[2326],E,E,297,[[["self"],[R[2255]]],[R[2255]]]],[11,R[2327],E,E,297,[[["self"],["exprlet"]],["exprlet"]]],[11,R[2328],E,E,297,[[["self"],["exprlit"]],["exprlit"]]],[11,R[2329],E,E,297,[[[R[2480]],["self"]],[R[2480]]]],[11,R[2330],E,E,297,[[[R[2256]],["self"]],[R[2256]]]],[11,R[2331],E,E,297,[[["self"],[R[2257]]],[R[2257]]]],[11,R[2332],E,E,297,[[[R[2059]],["self"]],[R[2059]]]],[11,R[2333],E,E,297,[[[R[2258]],["self"]],[R[2258]]]],[11,R[2334],E,E,297,[[["self"],[R[2481]]],[R[2481]]]],[11,R[2335],E,E,297,[[[R[2259]],["self"]],[R[2259]]]],[11,R[2336],E,E,297,[[[R[2064]],["self"]],[R[2064]]]],[11,R[2337],E,E,297,[[["self"],[R[2260]]],[R[2260]]]],[11,R[2338],E,E,297,[[["self"],[R[2261]]],[R[2261]]]],[11,R[2339],E,E,297,[[["self"],[R[2262]]],[R[2262]]]],[11,R[2340],E,E,297,[[["self"],["exprtry"]],["exprtry"]]],[11,R[2341],E,E,297,[[["self"],[R[2070]]],[R[2070]]]],[11,R[2342],E,E,297,[[["self"],[R[2263]]],[R[2263]]]],[11,R[2343],E,E,297,[[["self"],[R[2482]]],[R[2482]]]],[11,R[2344],E,E,297,[[[R[2264]],["self"]],[R[2264]]]],[11,R[2345],E,E,297,[[["self"],[R[2265]]],[R[2265]]]],[11,R[2346],E,E,297,[[["self"],[R[2266]]],[R[2266]]]],[11,R[2347],E,E,297,[[["self"],[R[2267]]],[R[2267]]]],[11,R[2515],E,E,297,[[["self"],["field"]],["field"]]],[11,R[2348],E,E,297,[[["self"],[R[2496]]],[R[2496]]]],[11,R[2349],E,E,297,[[["self"],[R[2268]]],[R[2268]]]],[11,R[2350],E,E,297,[[["self"],["fields"]],["fields"]]],[11,R[2351],E,E,297,[[["self"],[R[2082]]],[R[2082]]]],[11,R[2352],E,E,297,[[["self"],[R[2084]]],[R[2084]]]],[11,"fold_file",E,E,297,[[["self"],["file"]],["file"]]],[11,R[2353],E,E,297,[[["self"],["fnarg"]],["fnarg"]]],[11,R[2354],E,E,297,[[["self"],[R[2087]]],[R[2087]]]],[11,R[2355],E,E,297,[[["self"],[R[2089]]],[R[2089]]]],[11,R[2356],E,E,297,[[["self"],[R[2091]]],[R[2091]]]],[11,R[2357],E,E,297,[[["self"],[R[2093]]],[R[2093]]]],[11,R[2358],E,E,297,[[["self"],[R[2095]]],[R[2095]]]],[11,R[2359],E,E,297,[[[R[2097]],["self"]],[R[2097]]]],[11,R[2360],E,E,297,[[["self"],[R[2099]]],[R[2099]]]],[11,R[2361],E,E,297,[[["self"],[R[2101]]],[R[2101]]]],[11,R[2362],E,E,297,[[["self"],[R[1860]]],[R[1860]]]],[11,R[2516],E,E,297,[[["self"],["ident"]],["ident"]]],[11,R[2363],E,E,297,[[["self"],[R[2487]]],[R[2487]]]],[11,R[2364],E,E,297,[[["self"],[R[2106]]],[R[2106]]]],[11,R[2365],E,E,297,[[[R[2108]],["self"]],[R[2108]]]],[11,R[2366],E,E,297,[[[R[2110]],["self"]],[R[2110]]]],[11,R[2367],E,E,297,[[["self"],[R[2112]]],[R[2112]]]],[11,R[2517],E,E,297,[[["index"],["self"]],["index"]]],[11,"fold_item",E,E,297,[[["item"],["self"]],["item"]]],[11,R[2368],E,E,297,[[[R[2269]],["self"]],[R[2269]]]],[11,R[2369],E,E,297,[[["self"],[R[2483]]],[R[2483]]]],[11,R[2370],E,E,297,[[["self"],[R[2117]]],[R[2117]]]],[11,R[2371],E,E,297,[[["self"],["itemfn"]],["itemfn"]]],[11,R[2372],E,E,297,[[["self"],[R[2120]]],[R[2120]]]],[11,R[2373],E,E,297,[[["self"],[R[2484]]],[R[2484]]]],[11,R[2374],E,E,297,[[["self"],[R[2270]]],[R[2270]]]],[11,R[2375],E,E,297,[[["self"],[R[2271]]],[R[2271]]]],[11,R[2376],E,E,297,[[["itemmod"],["self"]],["itemmod"]]],[11,R[2377],E,E,297,[[["self"],[R[2272]]],[R[2272]]]],[11,R[2378],E,E,297,[[[R[2273]],["self"]],[R[2273]]]],[11,R[2379],E,E,297,[[["self"],[R[2274]]],[R[2274]]]],[11,R[2380],E,E,297,[[[R[2129]],["self"]],[R[2129]]]],[11,R[2381],E,E,297,[[["self"],[R[2485]]],[R[2485]]]],[11,R[2382],E,E,297,[[["self"],[R[2275]]],[R[2275]]]],[11,R[2383],E,E,297,[[["self"],["itemuse"]],["itemuse"]]],[11,R[2518],E,E,297,[[["self"],["label"]],["label"]]],[11,R[2384],E,E,297,[[[R[2000]],["self"]],[R[2000]]]],[11,R[2385],E,E,297,[[["self"],[R[2136]]],[R[2136]]]],[11,"fold_lit",E,E,297,[[["lit"],["self"]],["lit"]]],[11,R[2386],E,E,297,[[["self"],["litbool"]],["litbool"]]],[11,R[2387],E,E,297,[[["self"],["litbyte"]],["litbyte"]]],[11,R[2388],E,E,297,[[[R[2276]],["self"]],[R[2276]]]],[11,R[2389],E,E,297,[[["litchar"],["self"]],["litchar"]]],[11,R[2390],E,E,297,[[["self"],[R[2488]]],[R[2488]]]],[11,R[2391],E,E,297,[[["litint"],["self"]],["litint"]]],[11,R[2392],E,E,297,[[["litstr"],["self"]],["litstr"]]],[11,R[2519],E,E,297,[[["self"],["local"]],["local"]]],[11,R[2520],E,E,297,[[["self"],["macro"]],["macro"]]],[11,R[2393],E,E,297,[[["self"],[R[2147]]],[R[2147]]]],[11,R[2394],E,E,297,[[["self"],["member"]],["member"]]],[11,"fold_meta",E,E,297,[[["self"],["meta"]],["meta"]]],[11,R[2395],E,E,297,[[["self"],[R[2476]]],[R[2476]]]],[11,R[2396],E,E,297,[[["self"],[R[2151]]],[R[2151]]]],[11,R[2397],E,E,297,[[["self"],[R[2153]]],[R[2153]]]],[11,R[2398],E,E,297,[[["self"],[R[2277]]],[R[2277]]]],[11,R[2399],E,E,297,[[[R[2156]],["self"]],[R[2156]]]],[11,"fold_pat",E,E,297,[[["pat"],["self"]],["pat"]]],[11,R[2400],E,E,297,[[["self"],["patbox"]],["patbox"]]],[11,R[2401],E,E,297,[[[R[2491]],["self"]],[R[2491]]]],[11,R[2402],E,E,297,[[["self"],["patlit"]],["patlit"]]],[11,R[2403],E,E,297,[[["self"],[R[2492]]],[R[2492]]]],[11,R[2404],E,E,297,[[["self"],["pator"]],["pator"]]],[11,R[2405],E,E,297,[[["self"],["patpath"]],["patpath"]]],[11,R[2406],E,E,297,[[["self"],[R[2493]]],[R[2493]]]],[11,R[2407],E,E,297,[[["self"],[R[2165]]],[R[2165]]]],[11,R[2408],E,E,297,[[["self"],["patrest"]],["patrest"]]],[11,R[2409],E,E,297,[[[R[2494]],["self"]],[R[2494]]]],[11,R[2410],E,E,297,[[[R[2278]],["self"]],[R[2278]]]],[11,R[2411],E,E,297,[[["self"],[R[2495]]],[R[2495]]]],[11,R[2412],E,E,297,[[[R[2171]],["self"]],[R[2171]]]],[11,R[2413],E,E,297,[[["self"],["pattype"]],["pattype"]]],[11,R[2414],E,E,297,[[["self"],["patwild"]],["patwild"]]],[11,"fold_path",E,E,297,[[["self"],["path"]],["path"]]],[11,R[2415],E,E,297,[[["self"],[R[2175]]],[R[2175]]]],[11,R[2416],E,E,297,[[[R[2177]],["self"]],[R[2177]]]],[11,R[2417],E,E,297,[[["self"],[R[2179]]],[R[2179]]]],[11,R[2418],E,E,297,[[["self"],[R[2181]]],[R[2181]]]],[11,R[2419],E,E,297,[[["self"],[R[2183]]],[R[2183]]]],[11,R[2521],E,E,297,[[["self"],["qself"]],["qself"]]],[11,R[2420],E,E,297,[[["self"],[R[2186]]],[R[2186]]]],[11,R[2421],E,E,297,[[["self"],[R[2422]]],[R[2422]]]],[11,R[2423],E,E,297,[[[R[2279]],["self"]],[R[2279]]]],[11,R[2424],E,E,297,[[["self"],[R[188]]],[R[188]]]],[11,"fold_span",E,E,297,[[["span"],["self"]],["span"]]],[11,"fold_stmt",E,E,297,[[["self"],["stmt"]],["stmt"]]],[11,R[2425],E,E,297,[[["self"],[R[2280]]],[R[2280]]]],[11,R[2426],E,E,297,[[["self"],[R[2192]]],[R[2192]]]],[11,R[2427],E,E,297,[[["self"],[R[2281]]],[R[2281]]]],[11,R[2428],E,E,297,[[["self"],[R[2195]]],[R[2195]]]],[11,R[2429],E,E,297,[[["self"],[R[2197]]],[R[2197]]]],[11,R[2430],E,E,297,[[[R[2199]],["self"]],[R[2199]]]],[11,R[2431],E,E,297,[[["self"],[R[2201]]],[R[2201]]]],[11,"fold_type",E,E,297,[[["self"],["type"]],["type"]]],[11,R[2432],E,E,297,[[["self"],[R[2282]]],[R[2282]]]],[11,R[2433],E,E,297,[[[R[2283]],["self"]],[R[2283]]]],[11,R[2434],E,E,297,[[["self"],[R[2284]]],[R[2284]]]],[11,R[2435],E,E,297,[[["self"],[R[2206]]],[R[2206]]]],[11,R[2436],E,E,297,[[[R[2285]],["self"]],[R[2285]]]],[11,R[2437],E,E,297,[[["self"],[R[2286]]],[R[2286]]]],[11,R[2438],E,E,297,[[["self"],[R[2287]]],[R[2287]]]],[11,R[2439],E,E,297,[[["self"],[R[2288]]],[R[2288]]]],[11,R[2440],E,E,297,[[["self"],[R[2212]]],[R[2212]]]],[11,R[2441],E,E,297,[[["self"],[R[2289]]],[R[2289]]]],[11,R[2442],E,E,297,[[["self"],[R[2490]]],[R[2490]]]],[11,R[2443],E,E,297,[[["self"],["typeptr"]],["typeptr"]]],[11,R[2444],E,E,297,[[["self"],[R[2217]]],[R[2217]]]],[11,R[2445],E,E,297,[[["self"],[R[2290]]],[R[2290]]]],[11,R[2446],E,E,297,[[[R[2220]],["self"]],[R[2220]]]],[11,R[2447],E,E,297,[[["self"],[R[2291]]],[R[2291]]]],[11,R[2522],E,E,297,[[["self"],["unop"]],["unop"]]],[11,R[2448],E,E,297,[[["self"],["useglob"]],["useglob"]]],[11,R[2449],E,E,297,[[[R[2486]],["self"]],[R[2486]]]],[11,R[2450],E,E,297,[[["self"],["usename"]],["usename"]]],[11,R[2451],E,E,297,[[["self"],["usepath"]],["usepath"]]],[11,R[2452],E,E,297,[[["self"],[R[2292]]],[R[2292]]]],[11,R[2453],E,E,297,[[["usetree"],["self"]],["usetree"]]],[11,R[2454],E,E,297,[[["self"],[R[2455]]],[R[2455]]]],[11,R[2456],E,E,297,[[["variant"],["self"]],["variant"]]],[11,R[2457],E,E,297,[[["self"],[R[2477]]],[R[2477]]]],[11,R[2458],E,E,297,[[["self"],[R[2293]]],[R[2293]]]],[11,R[2459],E,E,297,[[[R[2234]],["self"]],[R[2234]]]],[11,R[2460],E,E,297,[[["self"],[R[2294]]],[R[2294]]]],[11,R[2461],E,E,297,[[["self"],[R[2012]]],[R[2012]]]],[11,R[2462],E,E,297,[[["self"],[R[2238]]],[R[2238]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error",R[2474],R[2463],N,N],[3,"Lookahead1",E,"Support for checking the next token in a stream to decide…",N,N],[3,R[2581],E,"Cursor position within a buffered token stream.",N,N],[3,"StepCursor",E,"Cursor state associated with speculative parsing.",N,N],[3,"Nothing",E,"An empty syntax tree node that consumes no tokens when…",N,N],[0,"discouraged",E,"Extensions to the parsing API with niche applicability.",N,N],[8,R[2580],"syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",N,N],[10,"advance_to",E,"Advance this parse stream to the position of a forked…",298,[[["self"]]]],[6,"Result",R[2474],R[2471],N,N],[6,"ParseStream",E,"Input to a Syn parser function.",N,N],[8,"Peek",E,"Types that can be parsed by looking at just one token.",N,N],[8,"Parse",E,"Parsing interface implemented by all types that can be…",N,N],[10,"parse",E,E,299,[[[R[1999]]],[R[3]]]],[8,"Parser",E,"Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output",E,E,300,N],[10,"parse2",E,R[2464],300,[[[R[1152]]],[R[3]]]],[11,"parse",E,R[2465],300,[[[R[1152]]],[R[3]]]],[11,"parse_str",E,R[2466],300,[[["str"]],[R[3]]]],[11,"error",E,R[2470],301,[[["display"]],["error"]]],[11,"parse",E,"Parses a syntax tree node of type `T`, advancing the…",302,[[["self"]],[["parse"],[R[3]]]]],[11,"call",E,"Calls the given parser function to parse a syntax tree…",302,[[["self"]],[R[3]]]],[11,"peek",E,R[2523],302,[[["self"],["peek"]],["bool"]]],[11,"peek2",E,"Looks at the second-next token in the parse stream.",302,[[["self"],["peek"]],["bool"]]],[11,"peek3",E,"Looks at the third-next token in the parse stream.",302,[[["self"],["peek"]],["bool"]]],[11,R[2467],E,R[2468],302,[[["self"]],[[R[2469]],[R[3],[R[2469]]]]]],[11,R[340],E,"Returns whether there are tokens remaining in this stream.",302,[[["self"]],["bool"]]],[11,"lookahead1",E,"Constructs a helper for peeking at the next token in this…",302,[[["self"]],["lookahead1"]]],[11,"fork",E,"Forks a parse stream so that parsing tokens out of either…",302,[[["self"]],["self"]]],[11,"error",E,R[2470],302,[[["self"],["display"]],["error"]]],[11,"step",E,"Speculatively parses tokens from this parse stream,…",302,[[["self"],["f"]],[R[3]]]],[11,"span",E,"Returns the `Span` of the next token in the parse stream,…",302,[[["self"]],["span"]]],[11,"cursor",E,"Provides low-level access to the token representation…",302,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",303,[[["span"],["display"]],["self"]]],[11,"new_spanned",E,"Creates an error with the specified message spanning the…",303,[[["totokens"],["display"]],["self"]]],[11,"span",E,"The source location of the error.",303,[[["self"]],["span"]]],[11,"to_compile_error",E,"Render the error as an invocation of [`compile_error!`].",303,[[["self"]],[R[1152]]]],[11,"combine",E,"Add another error message to self such that when…",303,[[["self"],["error"]]]],[6,"AttributeArgs",E,"Conventional argument type associated with an invocation…",N,N],[6,"Result",E,R[2471],N,N],[14,"parenthesized",E,"Parse a set of parentheses and expose their content to…",N,N],[14,"braced",E,"Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed",E,"Parse a set of square brackets and expose their content to…",N,N],[14,"Token",E,"A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote",E,"Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input",E,"Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword",E,"Define a type that supports parsing and printing a given…",N,N],[14,"custom_punctuation",E,"Define a type that supports parsing and printing a…",N,N],[11,"peek",E,E,304,[[["cursor"]],["bool"]]],[11,"display",E,E,304,[[],["str"]]],[11,"span",E,E,304,[[["self"]],["span"]]],[11,"into",E,E,304,[[],[U]]],[11,"from",E,E,304,[[[T]],[T]]],[11,R[24],E,E,304,[[["self"]],[T]]],[11,R[25],E,E,304,[[["self"],[T]]]],[11,R[78],E,E,304,[[["self"]],["string"]]],[11,R[20],E,E,304,[[[U]],[R[3]]]],[11,R[21],E,E,304,[[],[R[3]]]],[11,R[45],E,E,304,[[["self"]],[T]]],[11,R[22],E,E,304,[[["self"]],[T]]],[11,R[26],E,E,304,[[["self"]],[R[46]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"span",E,E,1,[[["self"]],["span"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"span",E,E,2,[[["self"]],["span"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"span",E,E,3,[[["self"]],["span"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"span",E,E,5,[[["self"]],["span"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"span",E,E,6,[[["self"]],["span"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"span",E,E,7,[[["self"]],["span"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"span",E,E,9,[[["self"]],["span"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"span",E,E,10,[[["self"]],["span"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"span",E,E,11,[[["self"]],["span"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"span",E,E,12,[[["self"]],["span"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"span",E,E,13,[[["self"]],["span"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"],[T]]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"span",E,E,14,[[["self"]],["span"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"span",E,E,15,[[["self"]],["span"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"span",E,E,16,[[["self"]],["span"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"span",E,E,17,[[["self"]],["span"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"span",E,E,18,[[["self"]],["span"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"],[T]]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"span",E,E,19,[[["self"]],["span"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"],[T]]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"span",E,E,20,[[["self"]],["span"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[24],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"],[T]]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"span",E,E,21,[[["self"]],["span"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[24],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"],[T]]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"span",E,E,22,[[["self"]],["span"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[24],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"],[T]]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"span",E,E,23,[[["self"]],["span"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,"span",E,E,24,[[["self"]],["span"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[24],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"],[T]]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,"span",E,E,25,[[["self"]],["span"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[24],E,E,25,[[["self"]],[T]]],[11,R[25],E,E,25,[[["self"],[T]]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,"span",E,E,26,[[["self"]],["span"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[24],E,E,26,[[["self"]],[T]]],[11,R[25],E,E,26,[[["self"],[T]]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,"span",E,E,27,[[["self"]],["span"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[24],E,E,27,[[["self"]],[T]]],[11,R[25],E,E,27,[[["self"],[T]]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,"span",E,E,28,[[["self"]],["span"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[24],E,E,28,[[["self"]],[T]]],[11,R[25],E,E,28,[[["self"],[T]]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,"span",E,E,29,[[["self"]],["span"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[24],E,E,29,[[["self"]],[T]]],[11,R[25],E,E,29,[[["self"],[T]]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,"span",E,E,30,[[["self"]],["span"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[24],E,E,30,[[["self"]],[T]]],[11,R[25],E,E,30,[[["self"],[T]]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,"span",E,E,31,[[["self"]],["span"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[24],E,E,31,[[["self"]],[T]]],[11,R[25],E,E,31,[[["self"],[T]]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,"span",E,E,32,[[["self"]],["span"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[24],E,E,32,[[["self"]],[T]]],[11,R[25],E,E,32,[[["self"],[T]]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,"span",E,E,33,[[["self"]],["span"]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[24],E,E,33,[[["self"]],[T]]],[11,R[25],E,E,33,[[["self"],[T]]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,"span",E,E,34,[[["self"]],["span"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[24],E,E,34,[[["self"]],[T]]],[11,R[25],E,E,34,[[["self"],[T]]]],[11,R[20],E,E,34,[[[U]],[R[3]]]],[11,R[21],E,E,34,[[],[R[3]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[["self"]],[T]]],[11,R[26],E,E,34,[[["self"]],[R[46]]]],[11,"span",E,E,35,[[["self"]],["span"]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[24],E,E,35,[[["self"]],[T]]],[11,R[25],E,E,35,[[["self"],[T]]]],[11,R[20],E,E,35,[[[U]],[R[3]]]],[11,R[21],E,E,35,[[],[R[3]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[["self"]],[T]]],[11,R[26],E,E,35,[[["self"]],[R[46]]]],[11,"span",E,E,36,[[["self"]],["span"]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[24],E,E,36,[[["self"]],[T]]],[11,R[25],E,E,36,[[["self"],[T]]]],[11,R[20],E,E,36,[[[U]],[R[3]]]],[11,R[21],E,E,36,[[],[R[3]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[22],E,E,36,[[["self"]],[T]]],[11,R[26],E,E,36,[[["self"]],[R[46]]]],[11,"span",E,E,37,[[["self"]],["span"]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[24],E,E,37,[[["self"]],[T]]],[11,R[25],E,E,37,[[["self"],[T]]]],[11,R[20],E,E,37,[[[U]],[R[3]]]],[11,R[21],E,E,37,[[],[R[3]]]],[11,R[45],E,E,37,[[["self"]],[T]]],[11,R[22],E,E,37,[[["self"]],[T]]],[11,R[26],E,E,37,[[["self"]],[R[46]]]],[11,"span",E,E,38,[[["self"]],["span"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[24],E,E,38,[[["self"]],[T]]],[11,R[25],E,E,38,[[["self"],[T]]]],[11,R[20],E,E,38,[[[U]],[R[3]]]],[11,R[21],E,E,38,[[],[R[3]]]],[11,R[45],E,E,38,[[["self"]],[T]]],[11,R[22],E,E,38,[[["self"]],[T]]],[11,R[26],E,E,38,[[["self"]],[R[46]]]],[11,"span",E,E,39,[[["self"]],["span"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[24],E,E,39,[[["self"]],[T]]],[11,R[25],E,E,39,[[["self"],[T]]]],[11,R[20],E,E,39,[[[U]],[R[3]]]],[11,R[21],E,E,39,[[],[R[3]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[["self"]],[T]]],[11,R[26],E,E,39,[[["self"]],[R[46]]]],[11,"span",E,E,40,[[["self"]],["span"]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[24],E,E,40,[[["self"]],[T]]],[11,R[25],E,E,40,[[["self"],[T]]]],[11,R[20],E,E,40,[[[U]],[R[3]]]],[11,R[21],E,E,40,[[],[R[3]]]],[11,R[45],E,E,40,[[["self"]],[T]]],[11,R[22],E,E,40,[[["self"]],[T]]],[11,R[26],E,E,40,[[["self"]],[R[46]]]],[11,"span",E,E,41,[[["self"]],["span"]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[24],E,E,41,[[["self"]],[T]]],[11,R[25],E,E,41,[[["self"],[T]]]],[11,R[20],E,E,41,[[[U]],[R[3]]]],[11,R[21],E,E,41,[[],[R[3]]]],[11,R[45],E,E,41,[[["self"]],[T]]],[11,R[22],E,E,41,[[["self"]],[T]]],[11,R[26],E,E,41,[[["self"]],[R[46]]]],[11,"span",E,E,42,[[["self"]],["span"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[24],E,E,42,[[["self"]],[T]]],[11,R[25],E,E,42,[[["self"],[T]]]],[11,R[20],E,E,42,[[[U]],[R[3]]]],[11,R[21],E,E,42,[[],[R[3]]]],[11,R[45],E,E,42,[[["self"]],[T]]],[11,R[22],E,E,42,[[["self"]],[T]]],[11,R[26],E,E,42,[[["self"]],[R[46]]]],[11,"span",E,E,43,[[["self"]],["span"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[24],E,E,43,[[["self"]],[T]]],[11,R[25],E,E,43,[[["self"],[T]]]],[11,R[20],E,E,43,[[[U]],[R[3]]]],[11,R[21],E,E,43,[[],[R[3]]]],[11,R[45],E,E,43,[[["self"]],[T]]],[11,R[22],E,E,43,[[["self"]],[T]]],[11,R[26],E,E,43,[[["self"]],[R[46]]]],[11,"span",E,E,44,[[["self"]],["span"]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[24],E,E,44,[[["self"]],[T]]],[11,R[25],E,E,44,[[["self"],[T]]]],[11,R[20],E,E,44,[[[U]],[R[3]]]],[11,R[21],E,E,44,[[],[R[3]]]],[11,R[45],E,E,44,[[["self"]],[T]]],[11,R[22],E,E,44,[[["self"]],[T]]],[11,R[26],E,E,44,[[["self"]],[R[46]]]],[11,"span",E,E,45,[[["self"]],["span"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[24],E,E,45,[[["self"]],[T]]],[11,R[25],E,E,45,[[["self"],[T]]]],[11,R[20],E,E,45,[[[U]],[R[3]]]],[11,R[21],E,E,45,[[],[R[3]]]],[11,R[45],E,E,45,[[["self"]],[T]]],[11,R[22],E,E,45,[[["self"]],[T]]],[11,R[26],E,E,45,[[["self"]],[R[46]]]],[11,"span",E,E,46,[[["self"]],["span"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[24],E,E,46,[[["self"]],[T]]],[11,R[25],E,E,46,[[["self"],[T]]]],[11,R[20],E,E,46,[[[U]],[R[3]]]],[11,R[21],E,E,46,[[],[R[3]]]],[11,R[45],E,E,46,[[["self"]],[T]]],[11,R[22],E,E,46,[[["self"]],[T]]],[11,R[26],E,E,46,[[["self"]],[R[46]]]],[11,"span",E,E,47,[[["self"]],["span"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[24],E,E,47,[[["self"]],[T]]],[11,R[25],E,E,47,[[["self"],[T]]]],[11,R[20],E,E,47,[[[U]],[R[3]]]],[11,R[21],E,E,47,[[],[R[3]]]],[11,R[45],E,E,47,[[["self"]],[T]]],[11,R[22],E,E,47,[[["self"]],[T]]],[11,R[26],E,E,47,[[["self"]],[R[46]]]],[11,"span",E,E,48,[[["self"]],["span"]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[24],E,E,48,[[["self"]],[T]]],[11,R[25],E,E,48,[[["self"],[T]]]],[11,R[20],E,E,48,[[[U]],[R[3]]]],[11,R[21],E,E,48,[[],[R[3]]]],[11,R[45],E,E,48,[[["self"]],[T]]],[11,R[22],E,E,48,[[["self"]],[T]]],[11,R[26],E,E,48,[[["self"]],[R[46]]]],[11,"span",E,E,49,[[["self"]],["span"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[24],E,E,49,[[["self"]],[T]]],[11,R[25],E,E,49,[[["self"],[T]]]],[11,R[20],E,E,49,[[[U]],[R[3]]]],[11,R[21],E,E,49,[[],[R[3]]]],[11,R[45],E,E,49,[[["self"]],[T]]],[11,R[22],E,E,49,[[["self"]],[T]]],[11,R[26],E,E,49,[[["self"]],[R[46]]]],[11,"span",E,E,50,[[["self"]],["span"]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[24],E,E,50,[[["self"]],[T]]],[11,R[25],E,E,50,[[["self"],[T]]]],[11,R[20],E,E,50,[[[U]],[R[3]]]],[11,R[21],E,E,50,[[],[R[3]]]],[11,R[45],E,E,50,[[["self"]],[T]]],[11,R[22],E,E,50,[[["self"]],[T]]],[11,R[26],E,E,50,[[["self"]],[R[46]]]],[11,"span",E,E,51,[[["self"]],["span"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[24],E,E,51,[[["self"]],[T]]],[11,R[25],E,E,51,[[["self"],[T]]]],[11,R[20],E,E,51,[[[U]],[R[3]]]],[11,R[21],E,E,51,[[],[R[3]]]],[11,R[45],E,E,51,[[["self"]],[T]]],[11,R[22],E,E,51,[[["self"]],[T]]],[11,R[26],E,E,51,[[["self"]],[R[46]]]],[11,"span",E,E,52,[[["self"]],["span"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[24],E,E,52,[[["self"]],[T]]],[11,R[25],E,E,52,[[["self"],[T]]]],[11,R[20],E,E,52,[[[U]],[R[3]]]],[11,R[21],E,E,52,[[],[R[3]]]],[11,R[45],E,E,52,[[["self"]],[T]]],[11,R[22],E,E,52,[[["self"]],[T]]],[11,R[26],E,E,52,[[["self"]],[R[46]]]],[11,"span",E,E,53,[[["self"]],["span"]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[24],E,E,53,[[["self"]],[T]]],[11,R[25],E,E,53,[[["self"],[T]]]],[11,R[20],E,E,53,[[[U]],[R[3]]]],[11,R[21],E,E,53,[[],[R[3]]]],[11,R[45],E,E,53,[[["self"]],[T]]],[11,R[22],E,E,53,[[["self"]],[T]]],[11,R[26],E,E,53,[[["self"]],[R[46]]]],[11,"span",E,E,54,[[["self"]],["span"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[24],E,E,54,[[["self"]],[T]]],[11,R[25],E,E,54,[[["self"],[T]]]],[11,R[20],E,E,54,[[[U]],[R[3]]]],[11,R[21],E,E,54,[[],[R[3]]]],[11,R[45],E,E,54,[[["self"]],[T]]],[11,R[22],E,E,54,[[["self"]],[T]]],[11,R[26],E,E,54,[[["self"]],[R[46]]]],[11,"span",E,E,55,[[["self"]],["span"]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[24],E,E,55,[[["self"]],[T]]],[11,R[25],E,E,55,[[["self"],[T]]]],[11,R[20],E,E,55,[[[U]],[R[3]]]],[11,R[21],E,E,55,[[],[R[3]]]],[11,R[45],E,E,55,[[["self"]],[T]]],[11,R[22],E,E,55,[[["self"]],[T]]],[11,R[26],E,E,55,[[["self"]],[R[46]]]],[11,"span",E,E,56,[[["self"]],["span"]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[24],E,E,56,[[["self"]],[T]]],[11,R[25],E,E,56,[[["self"],[T]]]],[11,R[20],E,E,56,[[[U]],[R[3]]]],[11,R[21],E,E,56,[[],[R[3]]]],[11,R[45],E,E,56,[[["self"]],[T]]],[11,R[22],E,E,56,[[["self"]],[T]]],[11,R[26],E,E,56,[[["self"]],[R[46]]]],[11,"span",E,E,57,[[["self"]],["span"]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[24],E,E,57,[[["self"]],[T]]],[11,R[25],E,E,57,[[["self"],[T]]]],[11,R[20],E,E,57,[[[U]],[R[3]]]],[11,R[21],E,E,57,[[],[R[3]]]],[11,R[45],E,E,57,[[["self"]],[T]]],[11,R[22],E,E,57,[[["self"]],[T]]],[11,R[26],E,E,57,[[["self"]],[R[46]]]],[11,"span",E,E,58,[[["self"]],["span"]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[24],E,E,58,[[["self"]],[T]]],[11,R[25],E,E,58,[[["self"],[T]]]],[11,R[20],E,E,58,[[[U]],[R[3]]]],[11,R[21],E,E,58,[[],[R[3]]]],[11,R[45],E,E,58,[[["self"]],[T]]],[11,R[22],E,E,58,[[["self"]],[T]]],[11,R[26],E,E,58,[[["self"]],[R[46]]]],[11,"span",E,E,59,[[["self"]],["span"]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[24],E,E,59,[[["self"]],[T]]],[11,R[25],E,E,59,[[["self"],[T]]]],[11,R[20],E,E,59,[[[U]],[R[3]]]],[11,R[21],E,E,59,[[],[R[3]]]],[11,R[45],E,E,59,[[["self"]],[T]]],[11,R[22],E,E,59,[[["self"]],[T]]],[11,R[26],E,E,59,[[["self"]],[R[46]]]],[11,"span",E,E,60,[[["self"]],["span"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[24],E,E,60,[[["self"]],[T]]],[11,R[25],E,E,60,[[["self"],[T]]]],[11,R[20],E,E,60,[[[U]],[R[3]]]],[11,R[21],E,E,60,[[],[R[3]]]],[11,R[45],E,E,60,[[["self"]],[T]]],[11,R[22],E,E,60,[[["self"]],[T]]],[11,R[26],E,E,60,[[["self"]],[R[46]]]],[11,"span",E,E,61,[[["self"]],["span"]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[24],E,E,61,[[["self"]],[T]]],[11,R[25],E,E,61,[[["self"],[T]]]],[11,R[20],E,E,61,[[[U]],[R[3]]]],[11,R[21],E,E,61,[[],[R[3]]]],[11,R[45],E,E,61,[[["self"]],[T]]],[11,R[22],E,E,61,[[["self"]],[T]]],[11,R[26],E,E,61,[[["self"]],[R[46]]]],[11,"span",E,E,62,[[["self"]],["span"]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[24],E,E,62,[[["self"]],[T]]],[11,R[25],E,E,62,[[["self"],[T]]]],[11,R[20],E,E,62,[[[U]],[R[3]]]],[11,R[21],E,E,62,[[],[R[3]]]],[11,R[45],E,E,62,[[["self"]],[T]]],[11,R[22],E,E,62,[[["self"]],[T]]],[11,R[26],E,E,62,[[["self"]],[R[46]]]],[11,"span",E,E,63,[[["self"]],["span"]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[24],E,E,63,[[["self"]],[T]]],[11,R[25],E,E,63,[[["self"],[T]]]],[11,R[20],E,E,63,[[[U]],[R[3]]]],[11,R[21],E,E,63,[[],[R[3]]]],[11,R[45],E,E,63,[[["self"]],[T]]],[11,R[22],E,E,63,[[["self"]],[T]]],[11,R[26],E,E,63,[[["self"]],[R[46]]]],[11,"span",E,E,305,[[["self"]],["span"]]],[11,"into",E,E,305,[[],[U]]],[11,"from",E,E,305,[[[T]],[T]]],[11,R[24],E,E,305,[[["self"]],[T]]],[11,R[25],E,E,305,[[["self"],[T]]]],[11,R[20],E,E,305,[[[U]],[R[3]]]],[11,R[21],E,E,305,[[],[R[3]]]],[11,R[45],E,E,305,[[["self"]],[T]]],[11,R[22],E,E,305,[[["self"]],[T]]],[11,R[26],E,E,305,[[["self"]],[R[46]]]],[11,"span",E,E,306,[[["self"]],["span"]]],[11,"into",E,E,306,[[],[U]]],[11,"from",E,E,306,[[[T]],[T]]],[11,R[24],E,E,306,[[["self"]],[T]]],[11,R[25],E,E,306,[[["self"],[T]]]],[11,R[20],E,E,306,[[[U]],[R[3]]]],[11,R[21],E,E,306,[[],[R[3]]]],[11,R[45],E,E,306,[[["self"]],[T]]],[11,R[22],E,E,306,[[["self"]],[T]]],[11,R[26],E,E,306,[[["self"]],[R[46]]]],[11,"span",E,E,283,[[["self"]],["span"]]],[11,"into",E,E,283,[[],[U]]],[11,"from",E,E,283,[[[T]],[T]]],[11,R[24],E,E,283,[[["self"]],[T]]],[11,R[25],E,E,283,[[["self"],[T]]]],[11,R[20],E,E,283,[[[U]],[R[3]]]],[11,R[21],E,E,283,[[],[R[3]]]],[11,R[45],E,E,283,[[["self"]],[T]]],[11,R[22],E,E,283,[[["self"]],[T]]],[11,R[26],E,E,283,[[["self"]],[R[46]]]],[11,"span",E,E,64,[[["self"]],["span"]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[24],E,E,64,[[["self"]],[T]]],[11,R[25],E,E,64,[[["self"],[T]]]],[11,R[20],E,E,64,[[[U]],[R[3]]]],[11,R[21],E,E,64,[[],[R[3]]]],[11,R[45],E,E,64,[[["self"]],[T]]],[11,R[22],E,E,64,[[["self"]],[T]]],[11,R[26],E,E,64,[[["self"]],[R[46]]]],[11,"span",E,E,65,[[["self"]],["span"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[24],E,E,65,[[["self"]],[T]]],[11,R[25],E,E,65,[[["self"],[T]]]],[11,R[20],E,E,65,[[[U]],[R[3]]]],[11,R[21],E,E,65,[[],[R[3]]]],[11,R[45],E,E,65,[[["self"]],[T]]],[11,R[22],E,E,65,[[["self"]],[T]]],[11,R[26],E,E,65,[[["self"]],[R[46]]]],[11,"span",E,E,66,[[["self"]],["span"]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[24],E,E,66,[[["self"]],[T]]],[11,R[25],E,E,66,[[["self"],[T]]]],[11,R[20],E,E,66,[[[U]],[R[3]]]],[11,R[21],E,E,66,[[],[R[3]]]],[11,R[45],E,E,66,[[["self"]],[T]]],[11,R[22],E,E,66,[[["self"]],[T]]],[11,R[26],E,E,66,[[["self"]],[R[46]]]],[11,"span",E,E,67,[[["self"]],["span"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[24],E,E,67,[[["self"]],[T]]],[11,R[25],E,E,67,[[["self"],[T]]]],[11,R[20],E,E,67,[[[U]],[R[3]]]],[11,R[21],E,E,67,[[],[R[3]]]],[11,R[45],E,E,67,[[["self"]],[T]]],[11,R[22],E,E,67,[[["self"]],[T]]],[11,R[26],E,E,67,[[["self"]],[R[46]]]],[11,"span",E,E,68,[[["self"]],["span"]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[24],E,E,68,[[["self"]],[T]]],[11,R[25],E,E,68,[[["self"],[T]]]],[11,R[20],E,E,68,[[[U]],[R[3]]]],[11,R[21],E,E,68,[[],[R[3]]]],[11,R[45],E,E,68,[[["self"]],[T]]],[11,R[22],E,E,68,[[["self"]],[T]]],[11,R[26],E,E,68,[[["self"]],[R[46]]]],[11,"span",E,E,69,[[["self"]],["span"]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[24],E,E,69,[[["self"]],[T]]],[11,R[25],E,E,69,[[["self"],[T]]]],[11,R[20],E,E,69,[[[U]],[R[3]]]],[11,R[21],E,E,69,[[],[R[3]]]],[11,R[45],E,E,69,[[["self"]],[T]]],[11,R[22],E,E,69,[[["self"]],[T]]],[11,R[26],E,E,69,[[["self"]],[R[46]]]],[11,"span",E,E,70,[[["self"]],["span"]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[24],E,E,70,[[["self"]],[T]]],[11,R[25],E,E,70,[[["self"],[T]]]],[11,R[20],E,E,70,[[[U]],[R[3]]]],[11,R[21],E,E,70,[[],[R[3]]]],[11,R[45],E,E,70,[[["self"]],[T]]],[11,R[22],E,E,70,[[["self"]],[T]]],[11,R[26],E,E,70,[[["self"]],[R[46]]]],[11,"span",E,E,71,[[["self"]],["span"]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[24],E,E,71,[[["self"]],[T]]],[11,R[25],E,E,71,[[["self"],[T]]]],[11,R[20],E,E,71,[[[U]],[R[3]]]],[11,R[21],E,E,71,[[],[R[3]]]],[11,R[45],E,E,71,[[["self"]],[T]]],[11,R[22],E,E,71,[[["self"]],[T]]],[11,R[26],E,E,71,[[["self"]],[R[46]]]],[11,"span",E,E,72,[[["self"]],["span"]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[24],E,E,72,[[["self"]],[T]]],[11,R[25],E,E,72,[[["self"],[T]]]],[11,R[20],E,E,72,[[[U]],[R[3]]]],[11,R[21],E,E,72,[[],[R[3]]]],[11,R[45],E,E,72,[[["self"]],[T]]],[11,R[22],E,E,72,[[["self"]],[T]]],[11,R[26],E,E,72,[[["self"]],[R[46]]]],[11,"span",E,E,73,[[["self"]],["span"]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[24],E,E,73,[[["self"]],[T]]],[11,R[25],E,E,73,[[["self"],[T]]]],[11,R[20],E,E,73,[[[U]],[R[3]]]],[11,R[21],E,E,73,[[],[R[3]]]],[11,R[45],E,E,73,[[["self"]],[T]]],[11,R[22],E,E,73,[[["self"]],[T]]],[11,R[26],E,E,73,[[["self"]],[R[46]]]],[11,"span",E,E,74,[[["self"]],["span"]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[24],E,E,74,[[["self"]],[T]]],[11,R[25],E,E,74,[[["self"],[T]]]],[11,R[20],E,E,74,[[[U]],[R[3]]]],[11,R[21],E,E,74,[[],[R[3]]]],[11,R[45],E,E,74,[[["self"]],[T]]],[11,R[22],E,E,74,[[["self"]],[T]]],[11,R[26],E,E,74,[[["self"]],[R[46]]]],[11,"span",E,E,75,[[["self"]],["span"]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[24],E,E,75,[[["self"]],[T]]],[11,R[25],E,E,75,[[["self"],[T]]]],[11,R[20],E,E,75,[[[U]],[R[3]]]],[11,R[21],E,E,75,[[],[R[3]]]],[11,R[45],E,E,75,[[["self"]],[T]]],[11,R[22],E,E,75,[[["self"]],[T]]],[11,R[26],E,E,75,[[["self"]],[R[46]]]],[11,"span",E,E,76,[[["self"]],["span"]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[24],E,E,76,[[["self"]],[T]]],[11,R[25],E,E,76,[[["self"],[T]]]],[11,R[20],E,E,76,[[[U]],[R[3]]]],[11,R[21],E,E,76,[[],[R[3]]]],[11,R[45],E,E,76,[[["self"]],[T]]],[11,R[22],E,E,76,[[["self"]],[T]]],[11,R[26],E,E,76,[[["self"]],[R[46]]]],[11,"span",E,E,77,[[["self"]],["span"]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[24],E,E,77,[[["self"]],[T]]],[11,R[25],E,E,77,[[["self"],[T]]]],[11,R[20],E,E,77,[[[U]],[R[3]]]],[11,R[21],E,E,77,[[],[R[3]]]],[11,R[45],E,E,77,[[["self"]],[T]]],[11,R[22],E,E,77,[[["self"]],[T]]],[11,R[26],E,E,77,[[["self"]],[R[46]]]],[11,"span",E,E,78,[[["self"]],["span"]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[24],E,E,78,[[["self"]],[T]]],[11,R[25],E,E,78,[[["self"],[T]]]],[11,R[20],E,E,78,[[[U]],[R[3]]]],[11,R[21],E,E,78,[[],[R[3]]]],[11,R[45],E,E,78,[[["self"]],[T]]],[11,R[22],E,E,78,[[["self"]],[T]]],[11,R[26],E,E,78,[[["self"]],[R[46]]]],[11,"span",E,E,79,[[["self"]],["span"]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[24],E,E,79,[[["self"]],[T]]],[11,R[25],E,E,79,[[["self"],[T]]]],[11,R[20],E,E,79,[[[U]],[R[3]]]],[11,R[21],E,E,79,[[],[R[3]]]],[11,R[45],E,E,79,[[["self"]],[T]]],[11,R[22],E,E,79,[[["self"]],[T]]],[11,R[26],E,E,79,[[["self"]],[R[46]]]],[11,"span",E,E,80,[[["self"]],["span"]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[24],E,E,80,[[["self"]],[T]]],[11,R[25],E,E,80,[[["self"],[T]]]],[11,R[20],E,E,80,[[[U]],[R[3]]]],[11,R[21],E,E,80,[[],[R[3]]]],[11,R[45],E,E,80,[[["self"]],[T]]],[11,R[22],E,E,80,[[["self"]],[T]]],[11,R[26],E,E,80,[[["self"]],[R[46]]]],[11,"span",E,E,81,[[["self"]],["span"]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[24],E,E,81,[[["self"]],[T]]],[11,R[25],E,E,81,[[["self"],[T]]]],[11,R[20],E,E,81,[[[U]],[R[3]]]],[11,R[21],E,E,81,[[],[R[3]]]],[11,R[45],E,E,81,[[["self"]],[T]]],[11,R[22],E,E,81,[[["self"]],[T]]],[11,R[26],E,E,81,[[["self"]],[R[46]]]],[11,"span",E,E,82,[[["self"]],["span"]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[24],E,E,82,[[["self"]],[T]]],[11,R[25],E,E,82,[[["self"],[T]]]],[11,R[20],E,E,82,[[[U]],[R[3]]]],[11,R[21],E,E,82,[[],[R[3]]]],[11,R[45],E,E,82,[[["self"]],[T]]],[11,R[22],E,E,82,[[["self"]],[T]]],[11,R[26],E,E,82,[[["self"]],[R[46]]]],[11,"span",E,E,83,[[["self"]],["span"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[24],E,E,83,[[["self"]],[T]]],[11,R[25],E,E,83,[[["self"],[T]]]],[11,R[20],E,E,83,[[[U]],[R[3]]]],[11,R[21],E,E,83,[[],[R[3]]]],[11,R[45],E,E,83,[[["self"]],[T]]],[11,R[22],E,E,83,[[["self"]],[T]]],[11,R[26],E,E,83,[[["self"]],[R[46]]]],[11,"span",E,E,84,[[["self"]],["span"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[24],E,E,84,[[["self"]],[T]]],[11,R[25],E,E,84,[[["self"],[T]]]],[11,R[20],E,E,84,[[[U]],[R[3]]]],[11,R[21],E,E,84,[[],[R[3]]]],[11,R[45],E,E,84,[[["self"]],[T]]],[11,R[22],E,E,84,[[["self"]],[T]]],[11,R[26],E,E,84,[[["self"]],[R[46]]]],[11,"span",E,E,85,[[["self"]],["span"]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[24],E,E,85,[[["self"]],[T]]],[11,R[25],E,E,85,[[["self"],[T]]]],[11,R[20],E,E,85,[[[U]],[R[3]]]],[11,R[21],E,E,85,[[],[R[3]]]],[11,R[45],E,E,85,[[["self"]],[T]]],[11,R[22],E,E,85,[[["self"]],[T]]],[11,R[26],E,E,85,[[["self"]],[R[46]]]],[11,"span",E,E,86,[[["self"]],["span"]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[24],E,E,86,[[["self"]],[T]]],[11,R[25],E,E,86,[[["self"],[T]]]],[11,R[20],E,E,86,[[[U]],[R[3]]]],[11,R[21],E,E,86,[[],[R[3]]]],[11,R[45],E,E,86,[[["self"]],[T]]],[11,R[22],E,E,86,[[["self"]],[T]]],[11,R[26],E,E,86,[[["self"]],[R[46]]]],[11,"span",E,E,87,[[["self"]],["span"]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[24],E,E,87,[[["self"]],[T]]],[11,R[25],E,E,87,[[["self"],[T]]]],[11,R[20],E,E,87,[[[U]],[R[3]]]],[11,R[21],E,E,87,[[],[R[3]]]],[11,R[45],E,E,87,[[["self"]],[T]]],[11,R[22],E,E,87,[[["self"]],[T]]],[11,R[26],E,E,87,[[["self"]],[R[46]]]],[11,"span",E,E,88,[[["self"]],["span"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[24],E,E,88,[[["self"]],[T]]],[11,R[25],E,E,88,[[["self"],[T]]]],[11,R[20],E,E,88,[[[U]],[R[3]]]],[11,R[21],E,E,88,[[],[R[3]]]],[11,R[45],E,E,88,[[["self"]],[T]]],[11,R[22],E,E,88,[[["self"]],[T]]],[11,R[26],E,E,88,[[["self"]],[R[46]]]],[11,"span",E,E,89,[[["self"]],["span"]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[24],E,E,89,[[["self"]],[T]]],[11,R[25],E,E,89,[[["self"],[T]]]],[11,R[20],E,E,89,[[[U]],[R[3]]]],[11,R[21],E,E,89,[[],[R[3]]]],[11,R[45],E,E,89,[[["self"]],[T]]],[11,R[22],E,E,89,[[["self"]],[T]]],[11,R[26],E,E,89,[[["self"]],[R[46]]]],[11,"span",E,E,90,[[["self"]],["span"]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[24],E,E,90,[[["self"]],[T]]],[11,R[25],E,E,90,[[["self"],[T]]]],[11,R[20],E,E,90,[[[U]],[R[3]]]],[11,R[21],E,E,90,[[],[R[3]]]],[11,R[45],E,E,90,[[["self"]],[T]]],[11,R[22],E,E,90,[[["self"]],[T]]],[11,R[26],E,E,90,[[["self"]],[R[46]]]],[11,"span",E,E,91,[[["self"]],["span"]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[24],E,E,91,[[["self"]],[T]]],[11,R[25],E,E,91,[[["self"],[T]]]],[11,R[20],E,E,91,[[[U]],[R[3]]]],[11,R[21],E,E,91,[[],[R[3]]]],[11,R[45],E,E,91,[[["self"]],[T]]],[11,R[22],E,E,91,[[["self"]],[T]]],[11,R[26],E,E,91,[[["self"]],[R[46]]]],[11,"span",E,E,92,[[["self"]],["span"]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[24],E,E,92,[[["self"]],[T]]],[11,R[25],E,E,92,[[["self"],[T]]]],[11,R[20],E,E,92,[[[U]],[R[3]]]],[11,R[21],E,E,92,[[],[R[3]]]],[11,R[45],E,E,92,[[["self"]],[T]]],[11,R[22],E,E,92,[[["self"]],[T]]],[11,R[26],E,E,92,[[["self"]],[R[46]]]],[11,"span",E,E,93,[[["self"]],["span"]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[24],E,E,93,[[["self"]],[T]]],[11,R[25],E,E,93,[[["self"],[T]]]],[11,R[20],E,E,93,[[[U]],[R[3]]]],[11,R[21],E,E,93,[[],[R[3]]]],[11,R[45],E,E,93,[[["self"]],[T]]],[11,R[22],E,E,93,[[["self"]],[T]]],[11,R[26],E,E,93,[[["self"]],[R[46]]]],[11,"span",E,E,94,[[["self"]],["span"]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[24],E,E,94,[[["self"]],[T]]],[11,R[25],E,E,94,[[["self"],[T]]]],[11,R[20],E,E,94,[[[U]],[R[3]]]],[11,R[21],E,E,94,[[],[R[3]]]],[11,R[45],E,E,94,[[["self"]],[T]]],[11,R[22],E,E,94,[[["self"]],[T]]],[11,R[26],E,E,94,[[["self"]],[R[46]]]],[11,"span",E,E,95,[[["self"]],["span"]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[24],E,E,95,[[["self"]],[T]]],[11,R[25],E,E,95,[[["self"],[T]]]],[11,R[20],E,E,95,[[[U]],[R[3]]]],[11,R[21],E,E,95,[[],[R[3]]]],[11,R[45],E,E,95,[[["self"]],[T]]],[11,R[22],E,E,95,[[["self"]],[T]]],[11,R[26],E,E,95,[[["self"]],[R[46]]]],[11,"span",E,E,96,[[["self"]],["span"]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[24],E,E,96,[[["self"]],[T]]],[11,R[25],E,E,96,[[["self"],[T]]]],[11,R[20],E,E,96,[[[U]],[R[3]]]],[11,R[21],E,E,96,[[],[R[3]]]],[11,R[45],E,E,96,[[["self"]],[T]]],[11,R[22],E,E,96,[[["self"]],[T]]],[11,R[26],E,E,96,[[["self"]],[R[46]]]],[11,"span",E,E,97,[[["self"]],["span"]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[24],E,E,97,[[["self"]],[T]]],[11,R[25],E,E,97,[[["self"],[T]]]],[11,R[20],E,E,97,[[[U]],[R[3]]]],[11,R[21],E,E,97,[[],[R[3]]]],[11,R[45],E,E,97,[[["self"]],[T]]],[11,R[22],E,E,97,[[["self"]],[T]]],[11,R[26],E,E,97,[[["self"]],[R[46]]]],[11,"span",E,E,98,[[["self"]],["span"]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[24],E,E,98,[[["self"]],[T]]],[11,R[25],E,E,98,[[["self"],[T]]]],[11,R[20],E,E,98,[[[U]],[R[3]]]],[11,R[21],E,E,98,[[],[R[3]]]],[11,R[45],E,E,98,[[["self"]],[T]]],[11,R[22],E,E,98,[[["self"]],[T]]],[11,R[26],E,E,98,[[["self"]],[R[46]]]],[11,"span",E,E,99,[[["self"]],["span"]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[24],E,E,99,[[["self"]],[T]]],[11,R[25],E,E,99,[[["self"],[T]]]],[11,R[20],E,E,99,[[[U]],[R[3]]]],[11,R[21],E,E,99,[[],[R[3]]]],[11,R[45],E,E,99,[[["self"]],[T]]],[11,R[22],E,E,99,[[["self"]],[T]]],[11,R[26],E,E,99,[[["self"]],[R[46]]]],[11,"peek",E,E,100,[[["cursor"]],["bool"]]],[11,"display",E,E,100,[[],["str"]]],[11,"span",E,E,100,[[["self"]],["span"]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[24],E,E,100,[[["self"]],[T]]],[11,R[25],E,E,100,[[["self"],[T]]]],[11,R[78],E,E,100,[[["self"]],["string"]]],[11,R[20],E,E,100,[[[U]],[R[3]]]],[11,R[21],E,E,100,[[],[R[3]]]],[11,R[45],E,E,100,[[["self"]],[T]]],[11,R[22],E,E,100,[[["self"]],[T]]],[11,R[26],E,E,100,[[["self"]],[R[46]]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,"display",E,E,101,[[],["str"]]],[11,"span",E,E,101,[[["self"]],["span"]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[24],E,E,101,[[["self"]],[T]]],[11,R[25],E,E,101,[[["self"],[T]]]],[11,R[20],E,E,101,[[[U]],[R[3]]]],[11,R[21],E,E,101,[[],[R[3]]]],[11,R[45],E,E,101,[[["self"]],[T]]],[11,R[22],E,E,101,[[["self"]],[T]]],[11,R[26],E,E,101,[[["self"]],[R[46]]]],[11,"peek",E,E,286,[[["cursor"]],["bool"]]],[11,"display",E,E,286,[[],["str"]]],[11,"span",E,E,286,[[["self"]],["span"]]],[11,"into",E,E,286,[[],[U]]],[11,"from",E,E,286,[[[T]],[T]]],[11,R[24],E,E,286,[[["self"]],[T]]],[11,R[25],E,E,286,[[["self"],[T]]]],[11,R[20],E,E,286,[[[U]],[R[3]]]],[11,R[21],E,E,286,[[],[R[3]]]],[11,R[45],E,E,286,[[["self"]],[T]]],[11,R[22],E,E,286,[[["self"]],[T]]],[11,R[26],E,E,286,[[["self"]],[R[46]]]],[11,"peek",E,E,285,[[["cursor"]],["bool"]]],[11,"display",E,E,285,[[],["str"]]],[11,"span",E,E,285,[[["self"]],["span"]]],[11,"into",E,E,285,[[],[U]]],[11,"from",E,E,285,[[[T]],[T]]],[11,R[24],E,E,285,[[["self"]],[T]]],[11,R[25],E,E,285,[[["self"],[T]]]],[11,R[20],E,E,285,[[[U]],[R[3]]]],[11,R[21],E,E,285,[[],[R[3]]]],[11,R[45],E,E,285,[[["self"]],[T]]],[11,R[22],E,E,285,[[["self"]],[T]]],[11,R[26],E,E,285,[[["self"]],[R[46]]]],[11,"peek",E,E,287,[[["cursor"]],["bool"]]],[11,"display",E,E,287,[[],["str"]]],[11,"span",E,E,287,[[["self"]],["span"]]],[11,"into",E,E,287,[[],[U]]],[11,"from",E,E,287,[[[T]],[T]]],[11,R[24],E,E,287,[[["self"]],[T]]],[11,R[25],E,E,287,[[["self"],[T]]]],[11,R[20],E,E,287,[[[U]],[R[3]]]],[11,R[21],E,E,287,[[],[R[3]]]],[11,R[45],E,E,287,[[["self"]],[T]]],[11,R[22],E,E,287,[[["self"]],[T]]],[11,R[26],E,E,287,[[["self"]],[R[46]]]],[11,"peek",E,E,289,[[["cursor"]],["bool"]]],[11,"display",E,E,289,[[],["str"]]],[11,"span",E,E,289,[[["self"]],["span"]]],[11,"into",E,E,289,[[],[U]]],[11,"from",E,E,289,[[[T]],[T]]],[11,R[24],E,E,289,[[["self"]],[T]]],[11,R[25],E,E,289,[[["self"],[T]]]],[11,R[78],E,E,289,[[["self"]],["string"]]],[11,R[20],E,E,289,[[[U]],[R[3]]]],[11,R[21],E,E,289,[[],[R[3]]]],[11,R[45],E,E,289,[[["self"]],[T]]],[11,R[22],E,E,289,[[["self"]],[T]]],[11,R[26],E,E,289,[[["self"]],[R[46]]]],[11,"peek",E,E,288,[[["cursor"]],["bool"]]],[11,"display",E,E,288,[[],["str"]]],[11,"span",E,E,288,[[["self"]],["span"]]],[11,"into",E,E,288,[[],[U]]],[11,"from",E,E,288,[[[T]],[T]]],[11,R[24],E,E,288,[[["self"]],[T]]],[11,R[25],E,E,288,[[["self"],[T]]]],[11,R[78],E,E,288,[[["self"]],["string"]]],[11,R[20],E,E,288,[[[U]],[R[3]]]],[11,R[21],E,E,288,[[],[R[3]]]],[11,R[45],E,E,288,[[["self"]],[T]]],[11,R[22],E,E,288,[[["self"]],[T]]],[11,R[26],E,E,288,[[["self"]],[R[46]]]],[11,"peek",E,E,284,[[["cursor"]],["bool"]]],[11,"display",E,E,284,[[],["str"]]],[11,"span",E,E,284,[[["self"]],["span"]]],[11,"into",E,E,284,[[],[U]]],[11,"from",E,E,284,[[[T]],[T]]],[11,R[24],E,E,284,[[["self"]],[T]]],[11,R[25],E,E,284,[[["self"],[T]]]],[11,R[20],E,E,284,[[[U]],[R[3]]]],[11,R[21],E,E,284,[[],[R[3]]]],[11,R[45],E,E,284,[[["self"]],[T]]],[11,R[22],E,E,284,[[["self"]],[T]]],[11,R[26],E,E,284,[[["self"]],[R[46]]]],[11,"span",E,E,102,[[["self"]],["span"]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[24],E,E,102,[[["self"]],[T]]],[11,R[25],E,E,102,[[["self"],[T]]]],[11,R[20],E,E,102,[[[U]],[R[3]]]],[11,R[21],E,E,102,[[],[R[3]]]],[11,R[45],E,E,102,[[["self"]],[T]]],[11,R[22],E,E,102,[[["self"]],[T]]],[11,R[26],E,E,102,[[["self"]],[R[46]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[24],E,E,103,[[["self"]],[T]]],[11,R[25],E,E,103,[[["self"],[T]]]],[11,R[20],E,E,103,[[[U]],[R[3]]]],[11,R[21],E,E,103,[[],[R[3]]]],[11,R[45],E,E,103,[[["self"]],[T]]],[11,R[22],E,E,103,[[["self"]],[T]]],[11,R[26],E,E,103,[[["self"]],[R[46]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[24],E,E,104,[[["self"]],[T]]],[11,R[25],E,E,104,[[["self"],[T]]]],[11,R[20],E,E,104,[[[U]],[R[3]]]],[11,R[21],E,E,104,[[],[R[3]]]],[11,R[45],E,E,104,[[["self"]],[T]]],[11,R[22],E,E,104,[[["self"]],[T]]],[11,R[26],E,E,104,[[["self"]],[R[46]]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[24],E,E,105,[[["self"]],[T]]],[11,R[25],E,E,105,[[["self"],[T]]]],[11,R[20],E,E,105,[[[U]],[R[3]]]],[11,R[21],E,E,105,[[],[R[3]]]],[11,R[45],E,E,105,[[["self"]],[T]]],[11,R[22],E,E,105,[[["self"]],[T]]],[11,R[26],E,E,105,[[["self"]],[R[46]]]],[11,"span",E,E,106,[[["self"]],["span"]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[24],E,E,106,[[["self"]],[T]]],[11,R[25],E,E,106,[[["self"],[T]]]],[11,R[20],E,E,106,[[[U]],[R[3]]]],[11,R[21],E,E,106,[[],[R[3]]]],[11,R[45],E,E,106,[[["self"]],[T]]],[11,R[22],E,E,106,[[["self"]],[T]]],[11,R[26],E,E,106,[[["self"]],[R[46]]]],[11,"span",E,E,107,[[["self"]],["span"]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[24],E,E,107,[[["self"]],[T]]],[11,R[25],E,E,107,[[["self"],[T]]]],[11,R[20],E,E,107,[[[U]],[R[3]]]],[11,R[21],E,E,107,[[],[R[3]]]],[11,R[45],E,E,107,[[["self"]],[T]]],[11,R[22],E,E,107,[[["self"]],[T]]],[11,R[26],E,E,107,[[["self"]],[R[46]]]],[11,"span",E,E,108,[[["self"]],["span"]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[24],E,E,108,[[["self"]],[T]]],[11,R[25],E,E,108,[[["self"],[T]]]],[11,R[20],E,E,108,[[[U]],[R[3]]]],[11,R[21],E,E,108,[[],[R[3]]]],[11,R[45],E,E,108,[[["self"]],[T]]],[11,R[22],E,E,108,[[["self"]],[T]]],[11,R[26],E,E,108,[[["self"]],[R[46]]]],[11,"span",E,E,109,[[["self"]],["span"]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[24],E,E,109,[[["self"]],[T]]],[11,R[25],E,E,109,[[["self"],[T]]]],[11,R[20],E,E,109,[[[U]],[R[3]]]],[11,R[21],E,E,109,[[],[R[3]]]],[11,R[45],E,E,109,[[["self"]],[T]]],[11,R[22],E,E,109,[[["self"]],[T]]],[11,R[26],E,E,109,[[["self"]],[R[46]]]],[11,"span",E,E,110,[[["self"]],["span"]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[24],E,E,110,[[["self"]],[T]]],[11,R[25],E,E,110,[[["self"],[T]]]],[11,R[20],E,E,110,[[[U]],[R[3]]]],[11,R[21],E,E,110,[[],[R[3]]]],[11,R[45],E,E,110,[[["self"]],[T]]],[11,R[22],E,E,110,[[["self"]],[T]]],[11,R[26],E,E,110,[[["self"]],[R[46]]]],[11,"span",E,E,111,[[["self"]],["span"]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[24],E,E,111,[[["self"]],[T]]],[11,R[25],E,E,111,[[["self"],[T]]]],[11,R[20],E,E,111,[[[U]],[R[3]]]],[11,R[21],E,E,111,[[],[R[3]]]],[11,R[45],E,E,111,[[["self"]],[T]]],[11,R[22],E,E,111,[[["self"]],[T]]],[11,R[26],E,E,111,[[["self"]],[R[46]]]],[11,"span",E,E,112,[[["self"]],["span"]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[24],E,E,112,[[["self"]],[T]]],[11,R[25],E,E,112,[[["self"],[T]]]],[11,R[20],E,E,112,[[[U]],[R[3]]]],[11,R[21],E,E,112,[[],[R[3]]]],[11,R[45],E,E,112,[[["self"]],[T]]],[11,R[22],E,E,112,[[["self"]],[T]]],[11,R[26],E,E,112,[[["self"]],[R[46]]]],[11,"span",E,E,113,[[["self"]],["span"]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[24],E,E,113,[[["self"]],[T]]],[11,R[25],E,E,113,[[["self"],[T]]]],[11,R[20],E,E,113,[[[U]],[R[3]]]],[11,R[21],E,E,113,[[],[R[3]]]],[11,R[45],E,E,113,[[["self"]],[T]]],[11,R[22],E,E,113,[[["self"]],[T]]],[11,R[26],E,E,113,[[["self"]],[R[46]]]],[11,"span",E,E,114,[[["self"]],["span"]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[24],E,E,114,[[["self"]],[T]]],[11,R[25],E,E,114,[[["self"],[T]]]],[11,R[20],E,E,114,[[[U]],[R[3]]]],[11,R[21],E,E,114,[[],[R[3]]]],[11,R[45],E,E,114,[[["self"]],[T]]],[11,R[22],E,E,114,[[["self"]],[T]]],[11,R[26],E,E,114,[[["self"]],[R[46]]]],[11,"span",E,E,115,[[["self"]],["span"]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[24],E,E,115,[[["self"]],[T]]],[11,R[25],E,E,115,[[["self"],[T]]]],[11,R[20],E,E,115,[[[U]],[R[3]]]],[11,R[21],E,E,115,[[],[R[3]]]],[11,R[45],E,E,115,[[["self"]],[T]]],[11,R[22],E,E,115,[[["self"]],[T]]],[11,R[26],E,E,115,[[["self"]],[R[46]]]],[11,"span",E,E,116,[[["self"]],["span"]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[24],E,E,116,[[["self"]],[T]]],[11,R[25],E,E,116,[[["self"],[T]]]],[11,R[20],E,E,116,[[[U]],[R[3]]]],[11,R[21],E,E,116,[[],[R[3]]]],[11,R[45],E,E,116,[[["self"]],[T]]],[11,R[22],E,E,116,[[["self"]],[T]]],[11,R[26],E,E,116,[[["self"]],[R[46]]]],[11,"span",E,E,117,[[["self"]],["span"]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[24],E,E,117,[[["self"]],[T]]],[11,R[25],E,E,117,[[["self"],[T]]]],[11,R[20],E,E,117,[[[U]],[R[3]]]],[11,R[21],E,E,117,[[],[R[3]]]],[11,R[45],E,E,117,[[["self"]],[T]]],[11,R[22],E,E,117,[[["self"]],[T]]],[11,R[26],E,E,117,[[["self"]],[R[46]]]],[11,"span",E,E,118,[[["self"]],["span"]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[24],E,E,118,[[["self"]],[T]]],[11,R[25],E,E,118,[[["self"],[T]]]],[11,R[20],E,E,118,[[[U]],[R[3]]]],[11,R[21],E,E,118,[[],[R[3]]]],[11,R[45],E,E,118,[[["self"]],[T]]],[11,R[22],E,E,118,[[["self"]],[T]]],[11,R[26],E,E,118,[[["self"]],[R[46]]]],[11,"span",E,E,119,[[["self"]],["span"]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[24],E,E,119,[[["self"]],[T]]],[11,R[25],E,E,119,[[["self"],[T]]]],[11,R[20],E,E,119,[[[U]],[R[3]]]],[11,R[21],E,E,119,[[],[R[3]]]],[11,R[45],E,E,119,[[["self"]],[T]]],[11,R[22],E,E,119,[[["self"]],[T]]],[11,R[26],E,E,119,[[["self"]],[R[46]]]],[11,"span",E,E,120,[[["self"]],["span"]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[24],E,E,120,[[["self"]],[T]]],[11,R[25],E,E,120,[[["self"],[T]]]],[11,R[20],E,E,120,[[[U]],[R[3]]]],[11,R[21],E,E,120,[[],[R[3]]]],[11,R[45],E,E,120,[[["self"]],[T]]],[11,R[22],E,E,120,[[["self"]],[T]]],[11,R[26],E,E,120,[[["self"]],[R[46]]]],[11,"span",E,E,121,[[["self"]],["span"]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[24],E,E,121,[[["self"]],[T]]],[11,R[25],E,E,121,[[["self"],[T]]]],[11,R[20],E,E,121,[[[U]],[R[3]]]],[11,R[21],E,E,121,[[],[R[3]]]],[11,R[45],E,E,121,[[["self"]],[T]]],[11,R[22],E,E,121,[[["self"]],[T]]],[11,R[26],E,E,121,[[["self"]],[R[46]]]],[11,"span",E,E,122,[[["self"]],["span"]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[24],E,E,122,[[["self"]],[T]]],[11,R[25],E,E,122,[[["self"],[T]]]],[11,R[20],E,E,122,[[[U]],[R[3]]]],[11,R[21],E,E,122,[[],[R[3]]]],[11,R[45],E,E,122,[[["self"]],[T]]],[11,R[22],E,E,122,[[["self"]],[T]]],[11,R[26],E,E,122,[[["self"]],[R[46]]]],[11,"span",E,E,123,[[["self"]],["span"]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[24],E,E,123,[[["self"]],[T]]],[11,R[25],E,E,123,[[["self"],[T]]]],[11,R[20],E,E,123,[[[U]],[R[3]]]],[11,R[21],E,E,123,[[],[R[3]]]],[11,R[45],E,E,123,[[["self"]],[T]]],[11,R[22],E,E,123,[[["self"]],[T]]],[11,R[26],E,E,123,[[["self"]],[R[46]]]],[11,"span",E,E,124,[[["self"]],["span"]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[24],E,E,124,[[["self"]],[T]]],[11,R[25],E,E,124,[[["self"],[T]]]],[11,R[20],E,E,124,[[[U]],[R[3]]]],[11,R[21],E,E,124,[[],[R[3]]]],[11,R[45],E,E,124,[[["self"]],[T]]],[11,R[22],E,E,124,[[["self"]],[T]]],[11,R[26],E,E,124,[[["self"]],[R[46]]]],[11,"span",E,E,125,[[["self"]],["span"]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[24],E,E,125,[[["self"]],[T]]],[11,R[25],E,E,125,[[["self"],[T]]]],[11,R[20],E,E,125,[[[U]],[R[3]]]],[11,R[21],E,E,125,[[],[R[3]]]],[11,R[45],E,E,125,[[["self"]],[T]]],[11,R[22],E,E,125,[[["self"]],[T]]],[11,R[26],E,E,125,[[["self"]],[R[46]]]],[11,"span",E,E,126,[[["self"]],["span"]]],[11,"into",E,E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[24],E,E,126,[[["self"]],[T]]],[11,R[25],E,E,126,[[["self"],[T]]]],[11,R[20],E,E,126,[[[U]],[R[3]]]],[11,R[21],E,E,126,[[],[R[3]]]],[11,R[45],E,E,126,[[["self"]],[T]]],[11,R[22],E,E,126,[[["self"]],[T]]],[11,R[26],E,E,126,[[["self"]],[R[46]]]],[11,"span",E,E,127,[[["self"]],["span"]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[24],E,E,127,[[["self"]],[T]]],[11,R[25],E,E,127,[[["self"],[T]]]],[11,R[20],E,E,127,[[[U]],[R[3]]]],[11,R[21],E,E,127,[[],[R[3]]]],[11,R[45],E,E,127,[[["self"]],[T]]],[11,R[22],E,E,127,[[["self"]],[T]]],[11,R[26],E,E,127,[[["self"]],[R[46]]]],[11,"span",E,E,128,[[["self"]],["span"]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[24],E,E,128,[[["self"]],[T]]],[11,R[25],E,E,128,[[["self"],[T]]]],[11,R[20],E,E,128,[[[U]],[R[3]]]],[11,R[21],E,E,128,[[],[R[3]]]],[11,R[45],E,E,128,[[["self"]],[T]]],[11,R[22],E,E,128,[[["self"]],[T]]],[11,R[26],E,E,128,[[["self"]],[R[46]]]],[11,"span",E,E,129,[[["self"]],["span"]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[24],E,E,129,[[["self"]],[T]]],[11,R[25],E,E,129,[[["self"],[T]]]],[11,R[20],E,E,129,[[[U]],[R[3]]]],[11,R[21],E,E,129,[[],[R[3]]]],[11,R[45],E,E,129,[[["self"]],[T]]],[11,R[22],E,E,129,[[["self"]],[T]]],[11,R[26],E,E,129,[[["self"]],[R[46]]]],[11,"span",E,E,130,[[["self"]],["span"]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[24],E,E,130,[[["self"]],[T]]],[11,R[25],E,E,130,[[["self"],[T]]]],[11,R[20],E,E,130,[[[U]],[R[3]]]],[11,R[21],E,E,130,[[],[R[3]]]],[11,R[45],E,E,130,[[["self"]],[T]]],[11,R[22],E,E,130,[[["self"]],[T]]],[11,R[26],E,E,130,[[["self"]],[R[46]]]],[11,"span",E,E,131,[[["self"]],["span"]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[24],E,E,131,[[["self"]],[T]]],[11,R[25],E,E,131,[[["self"],[T]]]],[11,R[20],E,E,131,[[[U]],[R[3]]]],[11,R[21],E,E,131,[[],[R[3]]]],[11,R[45],E,E,131,[[["self"]],[T]]],[11,R[22],E,E,131,[[["self"]],[T]]],[11,R[26],E,E,131,[[["self"]],[R[46]]]],[11,"span",E,E,132,[[["self"]],["span"]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[24],E,E,132,[[["self"]],[T]]],[11,R[25],E,E,132,[[["self"],[T]]]],[11,R[20],E,E,132,[[[U]],[R[3]]]],[11,R[21],E,E,132,[[],[R[3]]]],[11,R[45],E,E,132,[[["self"]],[T]]],[11,R[22],E,E,132,[[["self"]],[T]]],[11,R[26],E,E,132,[[["self"]],[R[46]]]],[11,"span",E,E,133,[[["self"]],["span"]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[24],E,E,133,[[["self"]],[T]]],[11,R[25],E,E,133,[[["self"],[T]]]],[11,R[20],E,E,133,[[[U]],[R[3]]]],[11,R[21],E,E,133,[[],[R[3]]]],[11,R[45],E,E,133,[[["self"]],[T]]],[11,R[22],E,E,133,[[["self"]],[T]]],[11,R[26],E,E,133,[[["self"]],[R[46]]]],[11,"span",E,E,134,[[["self"]],["span"]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[24],E,E,134,[[["self"]],[T]]],[11,R[25],E,E,134,[[["self"],[T]]]],[11,R[20],E,E,134,[[[U]],[R[3]]]],[11,R[21],E,E,134,[[],[R[3]]]],[11,R[45],E,E,134,[[["self"]],[T]]],[11,R[22],E,E,134,[[["self"]],[T]]],[11,R[26],E,E,134,[[["self"]],[R[46]]]],[11,"span",E,E,135,[[["self"]],["span"]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[24],E,E,135,[[["self"]],[T]]],[11,R[25],E,E,135,[[["self"],[T]]]],[11,R[20],E,E,135,[[[U]],[R[3]]]],[11,R[21],E,E,135,[[],[R[3]]]],[11,R[45],E,E,135,[[["self"]],[T]]],[11,R[22],E,E,135,[[["self"]],[T]]],[11,R[26],E,E,135,[[["self"]],[R[46]]]],[11,"span",E,E,136,[[["self"]],["span"]]],[11,"into",E,E,136,[[],[U]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[24],E,E,136,[[["self"]],[T]]],[11,R[25],E,E,136,[[["self"],[T]]]],[11,R[20],E,E,136,[[[U]],[R[3]]]],[11,R[21],E,E,136,[[],[R[3]]]],[11,R[45],E,E,136,[[["self"]],[T]]],[11,R[22],E,E,136,[[["self"]],[T]]],[11,R[26],E,E,136,[[["self"]],[R[46]]]],[11,"span",E,E,137,[[["self"]],["span"]]],[11,"into",E,E,137,[[],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[24],E,E,137,[[["self"]],[T]]],[11,R[25],E,E,137,[[["self"],[T]]]],[11,R[20],E,E,137,[[[U]],[R[3]]]],[11,R[21],E,E,137,[[],[R[3]]]],[11,R[45],E,E,137,[[["self"]],[T]]],[11,R[22],E,E,137,[[["self"]],[T]]],[11,R[26],E,E,137,[[["self"]],[R[46]]]],[11,"span",E,E,138,[[["self"]],["span"]]],[11,"into",E,E,138,[[],[U]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[24],E,E,138,[[["self"]],[T]]],[11,R[25],E,E,138,[[["self"],[T]]]],[11,R[20],E,E,138,[[[U]],[R[3]]]],[11,R[21],E,E,138,[[],[R[3]]]],[11,R[45],E,E,138,[[["self"]],[T]]],[11,R[22],E,E,138,[[["self"]],[T]]],[11,R[26],E,E,138,[[["self"]],[R[46]]]],[11,"span",E,E,139,[[["self"]],["span"]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[24],E,E,139,[[["self"]],[T]]],[11,R[25],E,E,139,[[["self"],[T]]]],[11,R[20],E,E,139,[[[U]],[R[3]]]],[11,R[21],E,E,139,[[],[R[3]]]],[11,R[45],E,E,139,[[["self"]],[T]]],[11,R[22],E,E,139,[[["self"]],[T]]],[11,R[26],E,E,139,[[["self"]],[R[46]]]],[11,"span",E,E,140,[[["self"]],["span"]]],[11,"into",E,E,140,[[],[U]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[24],E,E,140,[[["self"]],[T]]],[11,R[25],E,E,140,[[["self"],[T]]]],[11,R[20],E,E,140,[[[U]],[R[3]]]],[11,R[21],E,E,140,[[],[R[3]]]],[11,R[45],E,E,140,[[["self"]],[T]]],[11,R[22],E,E,140,[[["self"]],[T]]],[11,R[26],E,E,140,[[["self"]],[R[46]]]],[11,"span",E,E,141,[[["self"]],["span"]]],[11,"into",E,E,141,[[],[U]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[24],E,E,141,[[["self"]],[T]]],[11,R[25],E,E,141,[[["self"],[T]]]],[11,R[20],E,E,141,[[[U]],[R[3]]]],[11,R[21],E,E,141,[[],[R[3]]]],[11,R[45],E,E,141,[[["self"]],[T]]],[11,R[22],E,E,141,[[["self"]],[T]]],[11,R[26],E,E,141,[[["self"]],[R[46]]]],[11,"span",E,E,142,[[["self"]],["span"]]],[11,"into",E,E,142,[[],[U]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[24],E,E,142,[[["self"]],[T]]],[11,R[25],E,E,142,[[["self"],[T]]]],[11,R[20],E,E,142,[[[U]],[R[3]]]],[11,R[21],E,E,142,[[],[R[3]]]],[11,R[45],E,E,142,[[["self"]],[T]]],[11,R[22],E,E,142,[[["self"]],[T]]],[11,R[26],E,E,142,[[["self"]],[R[46]]]],[11,"span",E,E,143,[[["self"]],["span"]]],[11,"into",E,E,143,[[],[U]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[24],E,E,143,[[["self"]],[T]]],[11,R[25],E,E,143,[[["self"],[T]]]],[11,R[20],E,E,143,[[[U]],[R[3]]]],[11,R[21],E,E,143,[[],[R[3]]]],[11,R[45],E,E,143,[[["self"]],[T]]],[11,R[22],E,E,143,[[["self"]],[T]]],[11,R[26],E,E,143,[[["self"]],[R[46]]]],[11,"span",E,E,144,[[["self"]],["span"]]],[11,"into",E,E,144,[[],[U]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[24],E,E,144,[[["self"]],[T]]],[11,R[25],E,E,144,[[["self"],[T]]]],[11,R[20],E,E,144,[[[U]],[R[3]]]],[11,R[21],E,E,144,[[],[R[3]]]],[11,R[45],E,E,144,[[["self"]],[T]]],[11,R[22],E,E,144,[[["self"]],[T]]],[11,R[26],E,E,144,[[["self"]],[R[46]]]],[11,"span",E,E,145,[[["self"]],["span"]]],[11,"into",E,E,145,[[],[U]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[24],E,E,145,[[["self"]],[T]]],[11,R[25],E,E,145,[[["self"],[T]]]],[11,R[20],E,E,145,[[[U]],[R[3]]]],[11,R[21],E,E,145,[[],[R[3]]]],[11,R[45],E,E,145,[[["self"]],[T]]],[11,R[22],E,E,145,[[["self"]],[T]]],[11,R[26],E,E,145,[[["self"]],[R[46]]]],[11,"span",E,E,146,[[["self"]],["span"]]],[11,"into",E,E,146,[[],[U]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[24],E,E,146,[[["self"]],[T]]],[11,R[25],E,E,146,[[["self"],[T]]]],[11,R[20],E,E,146,[[[U]],[R[3]]]],[11,R[21],E,E,146,[[],[R[3]]]],[11,R[45],E,E,146,[[["self"]],[T]]],[11,R[22],E,E,146,[[["self"]],[T]]],[11,R[26],E,E,146,[[["self"]],[R[46]]]],[11,"span",E,E,147,[[["self"]],["span"]]],[11,"into",E,E,147,[[],[U]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[24],E,E,147,[[["self"]],[T]]],[11,R[25],E,E,147,[[["self"],[T]]]],[11,R[20],E,E,147,[[[U]],[R[3]]]],[11,R[21],E,E,147,[[],[R[3]]]],[11,R[45],E,E,147,[[["self"]],[T]]],[11,R[22],E,E,147,[[["self"]],[T]]],[11,R[26],E,E,147,[[["self"]],[R[46]]]],[11,"into",E,E,148,[[],[U]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[24],E,E,148,[[["self"]],[T]]],[11,R[25],E,E,148,[[["self"],[T]]]],[11,R[20],E,E,148,[[[U]],[R[3]]]],[11,R[21],E,E,148,[[],[R[3]]]],[11,R[45],E,E,148,[[["self"]],[T]]],[11,R[22],E,E,148,[[["self"]],[T]]],[11,R[26],E,E,148,[[["self"]],[R[46]]]],[11,"into",E,E,303,[[],[U]]],[11,"from",E,E,303,[[[T]],[T]]],[11,R[211],E,E,303,[[],["i"]]],[11,R[24],E,E,303,[[["self"]],[T]]],[11,R[25],E,E,303,[[["self"],[T]]]],[11,R[78],E,E,303,[[["self"]],["string"]]],[11,R[20],E,E,303,[[[U]],[R[3]]]],[11,R[21],E,E,303,[[],[R[3]]]],[11,R[45],E,E,303,[[["self"]],[T]]],[11,R[22],E,E,303,[[["self"]],[T]]],[11,R[26],E,E,303,[[["self"]],[R[46]]]],[11,"into",E,E,149,[[],[U]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[24],E,E,149,[[["self"]],[T]]],[11,R[25],E,E,149,[[["self"],[T]]]],[11,R[20],E,E,149,[[[U]],[R[3]]]],[11,R[21],E,E,149,[[],[R[3]]]],[11,R[45],E,E,149,[[["self"]],[T]]],[11,R[22],E,E,149,[[["self"]],[T]]],[11,R[26],E,E,149,[[["self"]],[R[46]]]],[11,"span",E,E,150,[[["self"]],["span"]]],[11,"into",E,E,150,[[],[U]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[24],E,E,150,[[["self"]],[T]]],[11,R[25],E,E,150,[[["self"],[T]]]],[11,R[20],E,E,150,[[[U]],[R[3]]]],[11,R[21],E,E,150,[[],[R[3]]]],[11,R[45],E,E,150,[[["self"]],[T]]],[11,R[22],E,E,150,[[["self"]],[T]]],[11,R[26],E,E,150,[[["self"]],[R[46]]]],[11,"span",E,E,151,[[["self"]],["span"]]],[11,"into",E,E,151,[[],[U]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[24],E,E,151,[[["self"]],[T]]],[11,R[25],E,E,151,[[["self"],[T]]]],[11,R[20],E,E,151,[[[U]],[R[3]]]],[11,R[21],E,E,151,[[],[R[3]]]],[11,R[45],E,E,151,[[["self"]],[T]]],[11,R[22],E,E,151,[[["self"]],[T]]],[11,R[26],E,E,151,[[["self"]],[R[46]]]],[11,"span",E,E,152,[[["self"]],["span"]]],[11,"into",E,E,152,[[],[U]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[211],E,E,152,[[],["i"]]],[11,R[24],E,E,152,[[["self"]],[T]]],[11,R[25],E,E,152,[[["self"],[T]]]],[11,R[20],E,E,152,[[[U]],[R[3]]]],[11,R[21],E,E,152,[[],[R[3]]]],[11,R[45],E,E,152,[[["self"]],[T]]],[11,R[22],E,E,152,[[["self"]],[T]]],[11,R[26],E,E,152,[[["self"]],[R[46]]]],[11,"span",E,E,153,[[["self"]],["span"]]],[11,"into",E,E,153,[[],[U]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[24],E,E,153,[[["self"]],[T]]],[11,R[25],E,E,153,[[["self"],[T]]]],[11,R[20],E,E,153,[[[U]],[R[3]]]],[11,R[21],E,E,153,[[],[R[3]]]],[11,R[45],E,E,153,[[["self"]],[T]]],[11,R[22],E,E,153,[[["self"]],[T]]],[11,R[26],E,E,153,[[["self"]],[R[46]]]],[11,"span",E,E,154,[[["self"]],["span"]]],[11,"into",E,E,154,[[],[U]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[24],E,E,154,[[["self"]],[T]]],[11,R[25],E,E,154,[[["self"],[T]]]],[11,R[20],E,E,154,[[[U]],[R[3]]]],[11,R[21],E,E,154,[[],[R[3]]]],[11,R[45],E,E,154,[[["self"]],[T]]],[11,R[22],E,E,154,[[["self"]],[T]]],[11,R[26],E,E,154,[[["self"]],[R[46]]]],[11,"into",E,E,155,[[],[U]]],[11,"from",E,E,155,[[[T]],[T]]],[11,R[24],E,E,155,[[["self"]],[T]]],[11,R[25],E,E,155,[[["self"],[T]]]],[11,R[20],E,E,155,[[[U]],[R[3]]]],[11,R[21],E,E,155,[[],[R[3]]]],[11,R[45],E,E,155,[[["self"]],[T]]],[11,R[22],E,E,155,[[["self"]],[T]]],[11,R[26],E,E,155,[[["self"]],[R[46]]]],[11,"span",E,E,156,[[["self"]],["span"]]],[11,"into",E,E,156,[[],[U]]],[11,"from",E,E,156,[[[T]],[T]]],[11,R[24],E,E,156,[[["self"]],[T]]],[11,R[25],E,E,156,[[["self"],[T]]]],[11,R[20],E,E,156,[[[U]],[R[3]]]],[11,R[21],E,E,156,[[],[R[3]]]],[11,R[45],E,E,156,[[["self"]],[T]]],[11,R[22],E,E,156,[[["self"]],[T]]],[11,R[26],E,E,156,[[["self"]],[R[46]]]],[11,"span",E,E,157,[[["self"]],["span"]]],[11,"into",E,E,157,[[],[U]]],[11,"from",E,E,157,[[[T]],[T]]],[11,R[24],E,E,157,[[["self"]],[T]]],[11,R[25],E,E,157,[[["self"],[T]]]],[11,R[20],E,E,157,[[[U]],[R[3]]]],[11,R[21],E,E,157,[[],[R[3]]]],[11,R[45],E,E,157,[[["self"]],[T]]],[11,R[22],E,E,157,[[["self"]],[T]]],[11,R[26],E,E,157,[[["self"]],[R[46]]]],[11,"span",E,E,158,[[["self"]],["span"]]],[11,"into",E,E,158,[[],[U]]],[11,"from",E,E,158,[[[T]],[T]]],[11,R[24],E,E,158,[[["self"]],[T]]],[11,R[25],E,E,158,[[["self"],[T]]]],[11,R[20],E,E,158,[[[U]],[R[3]]]],[11,R[21],E,E,158,[[],[R[3]]]],[11,R[45],E,E,158,[[["self"]],[T]]],[11,R[22],E,E,158,[[["self"]],[T]]],[11,R[26],E,E,158,[[["self"]],[R[46]]]],[11,"span",E,E,159,[[["self"]],["span"]]],[11,"into",E,E,159,[[],[U]]],[11,"from",E,E,159,[[[T]],[T]]],[11,R[24],E,E,159,[[["self"]],[T]]],[11,R[25],E,E,159,[[["self"],[T]]]],[11,R[20],E,E,159,[[[U]],[R[3]]]],[11,R[21],E,E,159,[[],[R[3]]]],[11,R[45],E,E,159,[[["self"]],[T]]],[11,R[22],E,E,159,[[["self"]],[T]]],[11,R[26],E,E,159,[[["self"]],[R[46]]]],[11,"span",E,E,160,[[["self"]],["span"]]],[11,"into",E,E,160,[[],[U]]],[11,"from",E,E,160,[[[T]],[T]]],[11,R[24],E,E,160,[[["self"]],[T]]],[11,R[25],E,E,160,[[["self"],[T]]]],[11,R[20],E,E,160,[[[U]],[R[3]]]],[11,R[21],E,E,160,[[],[R[3]]]],[11,R[45],E,E,160,[[["self"]],[T]]],[11,R[22],E,E,160,[[["self"]],[T]]],[11,R[26],E,E,160,[[["self"]],[R[46]]]],[11,"span",E,E,161,[[["self"]],["span"]]],[11,"into",E,E,161,[[],[U]]],[11,"from",E,E,161,[[[T]],[T]]],[11,R[24],E,E,161,[[["self"]],[T]]],[11,R[25],E,E,161,[[["self"],[T]]]],[11,R[20],E,E,161,[[[U]],[R[3]]]],[11,R[21],E,E,161,[[],[R[3]]]],[11,R[45],E,E,161,[[["self"]],[T]]],[11,R[22],E,E,161,[[["self"]],[T]]],[11,R[26],E,E,161,[[["self"]],[R[46]]]],[11,"span",E,E,162,[[["self"]],["span"]]],[11,"into",E,E,162,[[],[U]]],[11,"from",E,E,162,[[[T]],[T]]],[11,R[24],E,E,162,[[["self"]],[T]]],[11,R[25],E,E,162,[[["self"],[T]]]],[11,R[20],E,E,162,[[[U]],[R[3]]]],[11,R[21],E,E,162,[[],[R[3]]]],[11,R[45],E,E,162,[[["self"]],[T]]],[11,R[22],E,E,162,[[["self"]],[T]]],[11,R[26],E,E,162,[[["self"]],[R[46]]]],[11,"span",E,E,163,[[["self"]],["span"]]],[11,"into",E,E,163,[[],[U]]],[11,"from",E,E,163,[[[T]],[T]]],[11,R[24],E,E,163,[[["self"]],[T]]],[11,R[25],E,E,163,[[["self"],[T]]]],[11,R[20],E,E,163,[[[U]],[R[3]]]],[11,R[21],E,E,163,[[],[R[3]]]],[11,R[45],E,E,163,[[["self"]],[T]]],[11,R[22],E,E,163,[[["self"]],[T]]],[11,R[26],E,E,163,[[["self"]],[R[46]]]],[11,"span",E,E,164,[[["self"]],["span"]]],[11,"into",E,E,164,[[],[U]]],[11,"from",E,E,164,[[[T]],[T]]],[11,R[24],E,E,164,[[["self"]],[T]]],[11,R[25],E,E,164,[[["self"],[T]]]],[11,R[20],E,E,164,[[[U]],[R[3]]]],[11,R[21],E,E,164,[[],[R[3]]]],[11,R[45],E,E,164,[[["self"]],[T]]],[11,R[22],E,E,164,[[["self"]],[T]]],[11,R[26],E,E,164,[[["self"]],[R[46]]]],[11,"span",E,E,165,[[["self"]],["span"]]],[11,"into",E,E,165,[[],[U]]],[11,"from",E,E,165,[[[T]],[T]]],[11,R[24],E,E,165,[[["self"]],[T]]],[11,R[25],E,E,165,[[["self"],[T]]]],[11,R[20],E,E,165,[[[U]],[R[3]]]],[11,R[21],E,E,165,[[],[R[3]]]],[11,R[45],E,E,165,[[["self"]],[T]]],[11,R[22],E,E,165,[[["self"]],[T]]],[11,R[26],E,E,165,[[["self"]],[R[46]]]],[11,"span",E,E,166,[[["self"]],["span"]]],[11,"into",E,E,166,[[],[U]]],[11,"from",E,E,166,[[[T]],[T]]],[11,R[24],E,E,166,[[["self"]],[T]]],[11,R[25],E,E,166,[[["self"],[T]]]],[11,R[20],E,E,166,[[[U]],[R[3]]]],[11,R[21],E,E,166,[[],[R[3]]]],[11,R[45],E,E,166,[[["self"]],[T]]],[11,R[22],E,E,166,[[["self"]],[T]]],[11,R[26],E,E,166,[[["self"]],[R[46]]]],[11,"span",E,E,167,[[["self"]],["span"]]],[11,"into",E,E,167,[[],[U]]],[11,"from",E,E,167,[[[T]],[T]]],[11,R[24],E,E,167,[[["self"]],[T]]],[11,R[25],E,E,167,[[["self"],[T]]]],[11,R[20],E,E,167,[[[U]],[R[3]]]],[11,R[21],E,E,167,[[],[R[3]]]],[11,R[45],E,E,167,[[["self"]],[T]]],[11,R[22],E,E,167,[[["self"]],[T]]],[11,R[26],E,E,167,[[["self"]],[R[46]]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,"display",E,E,168,[[],["str"]]],[11,"span",E,E,168,[[["self"]],["span"]]],[11,"into",E,E,168,[[],[U]]],[11,"from",E,E,168,[[[T]],[T]]],[11,R[24],E,E,168,[[["self"]],[T]]],[11,R[25],E,E,168,[[["self"],[T]]]],[11,R[20],E,E,168,[[[U]],[R[3]]]],[11,R[21],E,E,168,[[],[R[3]]]],[11,R[45],E,E,168,[[["self"]],[T]]],[11,R[22],E,E,168,[[["self"]],[T]]],[11,R[26],E,E,168,[[["self"]],[R[46]]]],[11,"into",E,E,169,[[],[U]]],[11,"from",E,E,169,[[[T]],[T]]],[11,R[24],E,E,169,[[["self"]],[T]]],[11,R[25],E,E,169,[[["self"],[T]]]],[11,R[20],E,E,169,[[[U]],[R[3]]]],[11,R[21],E,E,169,[[],[R[3]]]],[11,R[45],E,E,169,[[["self"]],[T]]],[11,R[22],E,E,169,[[["self"]],[T]]],[11,R[26],E,E,169,[[["self"]],[R[46]]]],[11,"into",E,E,170,[[],[U]]],[11,"from",E,E,170,[[[T]],[T]]],[11,R[24],E,E,170,[[["self"]],[T]]],[11,R[25],E,E,170,[[["self"],[T]]]],[11,R[20],E,E,170,[[[U]],[R[3]]]],[11,R[21],E,E,170,[[],[R[3]]]],[11,R[45],E,E,170,[[["self"]],[T]]],[11,R[22],E,E,170,[[["self"]],[T]]],[11,R[26],E,E,170,[[["self"]],[R[46]]]],[11,"into",E,E,171,[[],[U]]],[11,"from",E,E,171,[[[T]],[T]]],[11,R[24],E,E,171,[[["self"]],[T]]],[11,R[25],E,E,171,[[["self"],[T]]]],[11,R[20],E,E,171,[[[U]],[R[3]]]],[11,R[21],E,E,171,[[],[R[3]]]],[11,R[45],E,E,171,[[["self"]],[T]]],[11,R[22],E,E,171,[[["self"]],[T]]],[11,R[26],E,E,171,[[["self"]],[R[46]]]],[11,"span",E,E,172,[[["self"]],["span"]]],[11,"into",E,E,172,[[],[U]]],[11,"from",E,E,172,[[[T]],[T]]],[11,R[24],E,E,172,[[["self"]],[T]]],[11,R[25],E,E,172,[[["self"],[T]]]],[11,R[20],E,E,172,[[[U]],[R[3]]]],[11,R[21],E,E,172,[[],[R[3]]]],[11,R[45],E,E,172,[[["self"]],[T]]],[11,R[22],E,E,172,[[["self"]],[T]]],[11,R[26],E,E,172,[[["self"]],[R[46]]]],[11,"span",E,E,173,[[["self"]],["span"]]],[11,"into",E,E,173,[[],[U]]],[11,"from",E,E,173,[[[T]],[T]]],[11,R[24],E,E,173,[[["self"]],[T]]],[11,R[25],E,E,173,[[["self"],[T]]]],[11,R[20],E,E,173,[[[U]],[R[3]]]],[11,R[21],E,E,173,[[],[R[3]]]],[11,R[45],E,E,173,[[["self"]],[T]]],[11,R[22],E,E,173,[[["self"]],[T]]],[11,R[26],E,E,173,[[["self"]],[R[46]]]],[11,"span",E,E,174,[[["self"]],["span"]]],[11,"into",E,E,174,[[],[U]]],[11,"from",E,E,174,[[[T]],[T]]],[11,R[24],E,E,174,[[["self"]],[T]]],[11,R[25],E,E,174,[[["self"],[T]]]],[11,R[20],E,E,174,[[[U]],[R[3]]]],[11,R[21],E,E,174,[[],[R[3]]]],[11,R[45],E,E,174,[[["self"]],[T]]],[11,R[22],E,E,174,[[["self"]],[T]]],[11,R[26],E,E,174,[[["self"]],[R[46]]]],[11,"span",E,E,175,[[["self"]],["span"]]],[11,"into",E,E,175,[[],[U]]],[11,"from",E,E,175,[[[T]],[T]]],[11,R[24],E,E,175,[[["self"]],[T]]],[11,R[25],E,E,175,[[["self"],[T]]]],[11,R[20],E,E,175,[[[U]],[R[3]]]],[11,R[21],E,E,175,[[],[R[3]]]],[11,R[45],E,E,175,[[["self"]],[T]]],[11,R[22],E,E,175,[[["self"]],[T]]],[11,R[26],E,E,175,[[["self"]],[R[46]]]],[11,"span",E,E,176,[[["self"]],["span"]]],[11,"into",E,E,176,[[],[U]]],[11,"from",E,E,176,[[[T]],[T]]],[11,R[24],E,E,176,[[["self"]],[T]]],[11,R[25],E,E,176,[[["self"],[T]]]],[11,R[20],E,E,176,[[[U]],[R[3]]]],[11,R[21],E,E,176,[[],[R[3]]]],[11,R[45],E,E,176,[[["self"]],[T]]],[11,R[22],E,E,176,[[["self"]],[T]]],[11,R[26],E,E,176,[[["self"]],[R[46]]]],[11,"span",E,E,177,[[["self"]],["span"]]],[11,"into",E,E,177,[[],[U]]],[11,"from",E,E,177,[[[T]],[T]]],[11,R[24],E,E,177,[[["self"]],[T]]],[11,R[25],E,E,177,[[["self"],[T]]]],[11,R[20],E,E,177,[[[U]],[R[3]]]],[11,R[21],E,E,177,[[],[R[3]]]],[11,R[45],E,E,177,[[["self"]],[T]]],[11,R[22],E,E,177,[[["self"]],[T]]],[11,R[26],E,E,177,[[["self"]],[R[46]]]],[11,"span",E,E,178,[[["self"]],["span"]]],[11,"into",E,E,178,[[],[U]]],[11,"from",E,E,178,[[[T]],[T]]],[11,R[24],E,E,178,[[["self"]],[T]]],[11,R[25],E,E,178,[[["self"],[T]]]],[11,R[20],E,E,178,[[[U]],[R[3]]]],[11,R[21],E,E,178,[[],[R[3]]]],[11,R[45],E,E,178,[[["self"]],[T]]],[11,R[22],E,E,178,[[["self"]],[T]]],[11,R[26],E,E,178,[[["self"]],[R[46]]]],[11,"span",E,E,179,[[["self"]],["span"]]],[11,"into",E,E,179,[[],[U]]],[11,"from",E,E,179,[[[T]],[T]]],[11,R[24],E,E,179,[[["self"]],[T]]],[11,R[25],E,E,179,[[["self"],[T]]]],[11,R[20],E,E,179,[[[U]],[R[3]]]],[11,R[21],E,E,179,[[],[R[3]]]],[11,R[45],E,E,179,[[["self"]],[T]]],[11,R[22],E,E,179,[[["self"]],[T]]],[11,R[26],E,E,179,[[["self"]],[R[46]]]],[11,"peek",R[2475],E,180,[[["cursor"]],["bool"]]],[11,"display",E,E,180,[[],["str"]]],[11,"span",E,E,180,[[["self"]],["span"]]],[11,"into",E,E,180,[[],[U]]],[11,"from",E,E,180,[[[T]],[T]]],[11,R[24],E,E,180,[[["self"]],[T]]],[11,R[25],E,E,180,[[["self"],[T]]]],[11,R[20],E,E,180,[[[U]],[R[3]]]],[11,R[21],E,E,180,[[],[R[3]]]],[11,R[45],E,E,180,[[["self"]],[T]]],[11,R[22],E,E,180,[[["self"]],[T]]],[11,R[26],E,E,180,[[["self"]],[R[46]]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"span",E,E,181,[[["self"]],["span"]]],[11,"into",E,E,181,[[],[U]]],[11,"from",E,E,181,[[[T]],[T]]],[11,R[24],E,E,181,[[["self"]],[T]]],[11,R[25],E,E,181,[[["self"],[T]]]],[11,R[20],E,E,181,[[[U]],[R[3]]]],[11,R[21],E,E,181,[[],[R[3]]]],[11,R[45],E,E,181,[[["self"]],[T]]],[11,R[22],E,E,181,[[["self"]],[T]]],[11,R[26],E,E,181,[[["self"]],[R[46]]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,"display",E,E,182,[[],["str"]]],[11,"span",E,E,182,[[["self"]],["span"]]],[11,"into",E,E,182,[[],[U]]],[11,"from",E,E,182,[[[T]],[T]]],[11,R[24],E,E,182,[[["self"]],[T]]],[11,R[25],E,E,182,[[["self"],[T]]]],[11,R[20],E,E,182,[[[U]],[R[3]]]],[11,R[21],E,E,182,[[],[R[3]]]],[11,R[45],E,E,182,[[["self"]],[T]]],[11,R[22],E,E,182,[[["self"]],[T]]],[11,R[26],E,E,182,[[["self"]],[R[46]]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,"display",E,E,183,[[],["str"]]],[11,"span",E,E,183,[[["self"]],["span"]]],[11,"into",E,E,183,[[],[U]]],[11,"from",E,E,183,[[[T]],[T]]],[11,R[24],E,E,183,[[["self"]],[T]]],[11,R[25],E,E,183,[[["self"],[T]]]],[11,R[20],E,E,183,[[[U]],[R[3]]]],[11,R[21],E,E,183,[[],[R[3]]]],[11,R[45],E,E,183,[[["self"]],[T]]],[11,R[22],E,E,183,[[["self"]],[T]]],[11,R[26],E,E,183,[[["self"]],[R[46]]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,"display",E,E,184,[[],["str"]]],[11,"span",E,E,184,[[["self"]],["span"]]],[11,"into",E,E,184,[[],[U]]],[11,"from",E,E,184,[[[T]],[T]]],[11,R[24],E,E,184,[[["self"]],[T]]],[11,R[25],E,E,184,[[["self"],[T]]]],[11,R[20],E,E,184,[[[U]],[R[3]]]],[11,R[21],E,E,184,[[],[R[3]]]],[11,R[45],E,E,184,[[["self"]],[T]]],[11,R[22],E,E,184,[[["self"]],[T]]],[11,R[26],E,E,184,[[["self"]],[R[46]]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,"display",E,E,185,[[],["str"]]],[11,"span",E,E,185,[[["self"]],["span"]]],[11,"into",E,E,185,[[],[U]]],[11,"from",E,E,185,[[[T]],[T]]],[11,R[24],E,E,185,[[["self"]],[T]]],[11,R[25],E,E,185,[[["self"],[T]]]],[11,R[20],E,E,185,[[[U]],[R[3]]]],[11,R[21],E,E,185,[[],[R[3]]]],[11,R[45],E,E,185,[[["self"]],[T]]],[11,R[22],E,E,185,[[["self"]],[T]]],[11,R[26],E,E,185,[[["self"]],[R[46]]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,"display",E,E,186,[[],["str"]]],[11,"span",E,E,186,[[["self"]],["span"]]],[11,"into",E,E,186,[[],[U]]],[11,"from",E,E,186,[[[T]],[T]]],[11,R[24],E,E,186,[[["self"]],[T]]],[11,R[25],E,E,186,[[["self"],[T]]]],[11,R[20],E,E,186,[[[U]],[R[3]]]],[11,R[21],E,E,186,[[],[R[3]]]],[11,R[45],E,E,186,[[["self"]],[T]]],[11,R[22],E,E,186,[[["self"]],[T]]],[11,R[26],E,E,186,[[["self"]],[R[46]]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,"display",E,E,187,[[],["str"]]],[11,"span",E,E,187,[[["self"]],["span"]]],[11,"into",E,E,187,[[],[U]]],[11,"from",E,E,187,[[[T]],[T]]],[11,R[24],E,E,187,[[["self"]],[T]]],[11,R[25],E,E,187,[[["self"],[T]]]],[11,R[20],E,E,187,[[[U]],[R[3]]]],[11,R[21],E,E,187,[[],[R[3]]]],[11,R[45],E,E,187,[[["self"]],[T]]],[11,R[22],E,E,187,[[["self"]],[T]]],[11,R[26],E,E,187,[[["self"]],[R[46]]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,"display",E,E,188,[[],["str"]]],[11,"span",E,E,188,[[["self"]],["span"]]],[11,"into",E,E,188,[[],[U]]],[11,"from",E,E,188,[[[T]],[T]]],[11,R[24],E,E,188,[[["self"]],[T]]],[11,R[25],E,E,188,[[["self"],[T]]]],[11,R[20],E,E,188,[[[U]],[R[3]]]],[11,R[21],E,E,188,[[],[R[3]]]],[11,R[45],E,E,188,[[["self"]],[T]]],[11,R[22],E,E,188,[[["self"]],[T]]],[11,R[26],E,E,188,[[["self"]],[R[46]]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,"display",E,E,189,[[],["str"]]],[11,"span",E,E,189,[[["self"]],["span"]]],[11,"into",E,E,189,[[],[U]]],[11,"from",E,E,189,[[[T]],[T]]],[11,R[24],E,E,189,[[["self"]],[T]]],[11,R[25],E,E,189,[[["self"],[T]]]],[11,R[20],E,E,189,[[[U]],[R[3]]]],[11,R[21],E,E,189,[[],[R[3]]]],[11,R[45],E,E,189,[[["self"]],[T]]],[11,R[22],E,E,189,[[["self"]],[T]]],[11,R[26],E,E,189,[[["self"]],[R[46]]]],[11,"peek",E,E,190,[[["cursor"]],["bool"]]],[11,"display",E,E,190,[[],["str"]]],[11,"span",E,E,190,[[["self"]],["span"]]],[11,"into",E,E,190,[[],[U]]],[11,"from",E,E,190,[[[T]],[T]]],[11,R[24],E,E,190,[[["self"]],[T]]],[11,R[25],E,E,190,[[["self"],[T]]]],[11,R[20],E,E,190,[[[U]],[R[3]]]],[11,R[21],E,E,190,[[],[R[3]]]],[11,R[45],E,E,190,[[["self"]],[T]]],[11,R[22],E,E,190,[[["self"]],[T]]],[11,R[26],E,E,190,[[["self"]],[R[46]]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,"display",E,E,191,[[],["str"]]],[11,"span",E,E,191,[[["self"]],["span"]]],[11,"into",E,E,191,[[],[U]]],[11,"from",E,E,191,[[[T]],[T]]],[11,R[24],E,E,191,[[["self"]],[T]]],[11,R[25],E,E,191,[[["self"],[T]]]],[11,R[20],E,E,191,[[[U]],[R[3]]]],[11,R[21],E,E,191,[[],[R[3]]]],[11,R[45],E,E,191,[[["self"]],[T]]],[11,R[22],E,E,191,[[["self"]],[T]]],[11,R[26],E,E,191,[[["self"]],[R[46]]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"span",E,E,192,[[["self"]],["span"]]],[11,"into",E,E,192,[[],[U]]],[11,"from",E,E,192,[[[T]],[T]]],[11,R[24],E,E,192,[[["self"]],[T]]],[11,R[25],E,E,192,[[["self"],[T]]]],[11,R[20],E,E,192,[[[U]],[R[3]]]],[11,R[21],E,E,192,[[],[R[3]]]],[11,R[45],E,E,192,[[["self"]],[T]]],[11,R[22],E,E,192,[[["self"]],[T]]],[11,R[26],E,E,192,[[["self"]],[R[46]]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"span",E,E,193,[[["self"]],["span"]]],[11,"into",E,E,193,[[],[U]]],[11,"from",E,E,193,[[[T]],[T]]],[11,R[24],E,E,193,[[["self"]],[T]]],[11,R[25],E,E,193,[[["self"],[T]]]],[11,R[20],E,E,193,[[[U]],[R[3]]]],[11,R[21],E,E,193,[[],[R[3]]]],[11,R[45],E,E,193,[[["self"]],[T]]],[11,R[22],E,E,193,[[["self"]],[T]]],[11,R[26],E,E,193,[[["self"]],[R[46]]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"span",E,E,194,[[["self"]],["span"]]],[11,"into",E,E,194,[[],[U]]],[11,"from",E,E,194,[[[T]],[T]]],[11,R[24],E,E,194,[[["self"]],[T]]],[11,R[25],E,E,194,[[["self"],[T]]]],[11,R[20],E,E,194,[[[U]],[R[3]]]],[11,R[21],E,E,194,[[],[R[3]]]],[11,R[45],E,E,194,[[["self"]],[T]]],[11,R[22],E,E,194,[[["self"]],[T]]],[11,R[26],E,E,194,[[["self"]],[R[46]]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"span",E,E,195,[[["self"]],["span"]]],[11,"into",E,E,195,[[],[U]]],[11,"from",E,E,195,[[[T]],[T]]],[11,R[24],E,E,195,[[["self"]],[T]]],[11,R[25],E,E,195,[[["self"],[T]]]],[11,R[20],E,E,195,[[[U]],[R[3]]]],[11,R[21],E,E,195,[[],[R[3]]]],[11,R[45],E,E,195,[[["self"]],[T]]],[11,R[22],E,E,195,[[["self"]],[T]]],[11,R[26],E,E,195,[[["self"]],[R[46]]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"span",E,E,196,[[["self"]],["span"]]],[11,"into",E,E,196,[[],[U]]],[11,"from",E,E,196,[[[T]],[T]]],[11,R[24],E,E,196,[[["self"]],[T]]],[11,R[25],E,E,196,[[["self"],[T]]]],[11,R[20],E,E,196,[[[U]],[R[3]]]],[11,R[21],E,E,196,[[],[R[3]]]],[11,R[45],E,E,196,[[["self"]],[T]]],[11,R[22],E,E,196,[[["self"]],[T]]],[11,R[26],E,E,196,[[["self"]],[R[46]]]],[11,"peek",E,E,197,[[["cursor"]],["bool"]]],[11,"display",E,E,197,[[],["str"]]],[11,"span",E,E,197,[[["self"]],["span"]]],[11,"into",E,E,197,[[],[U]]],[11,"from",E,E,197,[[[T]],[T]]],[11,R[24],E,E,197,[[["self"]],[T]]],[11,R[25],E,E,197,[[["self"],[T]]]],[11,R[20],E,E,197,[[[U]],[R[3]]]],[11,R[21],E,E,197,[[],[R[3]]]],[11,R[45],E,E,197,[[["self"]],[T]]],[11,R[22],E,E,197,[[["self"]],[T]]],[11,R[26],E,E,197,[[["self"]],[R[46]]]],[11,"peek",E,E,198,[[["cursor"]],["bool"]]],[11,"display",E,E,198,[[],["str"]]],[11,"span",E,E,198,[[["self"]],["span"]]],[11,"into",E,E,198,[[],[U]]],[11,"from",E,E,198,[[[T]],[T]]],[11,R[24],E,E,198,[[["self"]],[T]]],[11,R[25],E,E,198,[[["self"],[T]]]],[11,R[20],E,E,198,[[[U]],[R[3]]]],[11,R[21],E,E,198,[[],[R[3]]]],[11,R[45],E,E,198,[[["self"]],[T]]],[11,R[22],E,E,198,[[["self"]],[T]]],[11,R[26],E,E,198,[[["self"]],[R[46]]]],[11,"peek",E,E,199,[[["cursor"]],["bool"]]],[11,"display",E,E,199,[[],["str"]]],[11,"span",E,E,199,[[["self"]],["span"]]],[11,"into",E,E,199,[[],[U]]],[11,"from",E,E,199,[[[T]],[T]]],[11,R[24],E,E,199,[[["self"]],[T]]],[11,R[25],E,E,199,[[["self"],[T]]]],[11,R[20],E,E,199,[[[U]],[R[3]]]],[11,R[21],E,E,199,[[],[R[3]]]],[11,R[45],E,E,199,[[["self"]],[T]]],[11,R[22],E,E,199,[[["self"]],[T]]],[11,R[26],E,E,199,[[["self"]],[R[46]]]],[11,"peek",E,E,200,[[["cursor"]],["bool"]]],[11,"display",E,E,200,[[],["str"]]],[11,"span",E,E,200,[[["self"]],["span"]]],[11,"into",E,E,200,[[],[U]]],[11,"from",E,E,200,[[[T]],[T]]],[11,R[24],E,E,200,[[["self"]],[T]]],[11,R[25],E,E,200,[[["self"],[T]]]],[11,R[20],E,E,200,[[[U]],[R[3]]]],[11,R[21],E,E,200,[[],[R[3]]]],[11,R[45],E,E,200,[[["self"]],[T]]],[11,R[22],E,E,200,[[["self"]],[T]]],[11,R[26],E,E,200,[[["self"]],[R[46]]]],[11,"peek",E,E,201,[[["cursor"]],["bool"]]],[11,"display",E,E,201,[[],["str"]]],[11,"span",E,E,201,[[["self"]],["span"]]],[11,"into",E,E,201,[[],[U]]],[11,"from",E,E,201,[[[T]],[T]]],[11,R[24],E,E,201,[[["self"]],[T]]],[11,R[25],E,E,201,[[["self"],[T]]]],[11,R[20],E,E,201,[[[U]],[R[3]]]],[11,R[21],E,E,201,[[],[R[3]]]],[11,R[45],E,E,201,[[["self"]],[T]]],[11,R[22],E,E,201,[[["self"]],[T]]],[11,R[26],E,E,201,[[["self"]],[R[46]]]],[11,"peek",E,E,202,[[["cursor"]],["bool"]]],[11,"display",E,E,202,[[],["str"]]],[11,"span",E,E,202,[[["self"]],["span"]]],[11,"into",E,E,202,[[],[U]]],[11,"from",E,E,202,[[[T]],[T]]],[11,R[24],E,E,202,[[["self"]],[T]]],[11,R[25],E,E,202,[[["self"],[T]]]],[11,R[20],E,E,202,[[[U]],[R[3]]]],[11,R[21],E,E,202,[[],[R[3]]]],[11,R[45],E,E,202,[[["self"]],[T]]],[11,R[22],E,E,202,[[["self"]],[T]]],[11,R[26],E,E,202,[[["self"]],[R[46]]]],[11,"peek",E,E,203,[[["cursor"]],["bool"]]],[11,"display",E,E,203,[[],["str"]]],[11,"span",E,E,203,[[["self"]],["span"]]],[11,"into",E,E,203,[[],[U]]],[11,"from",E,E,203,[[[T]],[T]]],[11,R[24],E,E,203,[[["self"]],[T]]],[11,R[25],E,E,203,[[["self"],[T]]]],[11,R[20],E,E,203,[[[U]],[R[3]]]],[11,R[21],E,E,203,[[],[R[3]]]],[11,R[45],E,E,203,[[["self"]],[T]]],[11,R[22],E,E,203,[[["self"]],[T]]],[11,R[26],E,E,203,[[["self"]],[R[46]]]],[11,"peek",E,E,204,[[["cursor"]],["bool"]]],[11,"display",E,E,204,[[],["str"]]],[11,"span",E,E,204,[[["self"]],["span"]]],[11,"into",E,E,204,[[],[U]]],[11,"from",E,E,204,[[[T]],[T]]],[11,R[24],E,E,204,[[["self"]],[T]]],[11,R[25],E,E,204,[[["self"],[T]]]],[11,R[20],E,E,204,[[[U]],[R[3]]]],[11,R[21],E,E,204,[[],[R[3]]]],[11,R[45],E,E,204,[[["self"]],[T]]],[11,R[22],E,E,204,[[["self"]],[T]]],[11,R[26],E,E,204,[[["self"]],[R[46]]]],[11,"peek",E,E,205,[[["cursor"]],["bool"]]],[11,"display",E,E,205,[[],["str"]]],[11,"span",E,E,205,[[["self"]],["span"]]],[11,"into",E,E,205,[[],[U]]],[11,"from",E,E,205,[[[T]],[T]]],[11,R[24],E,E,205,[[["self"]],[T]]],[11,R[25],E,E,205,[[["self"],[T]]]],[11,R[20],E,E,205,[[[U]],[R[3]]]],[11,R[21],E,E,205,[[],[R[3]]]],[11,R[45],E,E,205,[[["self"]],[T]]],[11,R[22],E,E,205,[[["self"]],[T]]],[11,R[26],E,E,205,[[["self"]],[R[46]]]],[11,"peek",E,E,206,[[["cursor"]],["bool"]]],[11,"display",E,E,206,[[],["str"]]],[11,"span",E,E,206,[[["self"]],["span"]]],[11,"into",E,E,206,[[],[U]]],[11,"from",E,E,206,[[[T]],[T]]],[11,R[24],E,E,206,[[["self"]],[T]]],[11,R[25],E,E,206,[[["self"],[T]]]],[11,R[20],E,E,206,[[[U]],[R[3]]]],[11,R[21],E,E,206,[[],[R[3]]]],[11,R[45],E,E,206,[[["self"]],[T]]],[11,R[22],E,E,206,[[["self"]],[T]]],[11,R[26],E,E,206,[[["self"]],[R[46]]]],[11,"peek",E,E,207,[[["cursor"]],["bool"]]],[11,"display",E,E,207,[[],["str"]]],[11,"span",E,E,207,[[["self"]],["span"]]],[11,"into",E,E,207,[[],[U]]],[11,"from",E,E,207,[[[T]],[T]]],[11,R[24],E,E,207,[[["self"]],[T]]],[11,R[25],E,E,207,[[["self"],[T]]]],[11,R[20],E,E,207,[[[U]],[R[3]]]],[11,R[21],E,E,207,[[],[R[3]]]],[11,R[45],E,E,207,[[["self"]],[T]]],[11,R[22],E,E,207,[[["self"]],[T]]],[11,R[26],E,E,207,[[["self"]],[R[46]]]],[11,"peek",E,E,208,[[["cursor"]],["bool"]]],[11,"display",E,E,208,[[],["str"]]],[11,"span",E,E,208,[[["self"]],["span"]]],[11,"into",E,E,208,[[],[U]]],[11,"from",E,E,208,[[[T]],[T]]],[11,R[24],E,E,208,[[["self"]],[T]]],[11,R[25],E,E,208,[[["self"],[T]]]],[11,R[20],E,E,208,[[[U]],[R[3]]]],[11,R[21],E,E,208,[[],[R[3]]]],[11,R[45],E,E,208,[[["self"]],[T]]],[11,R[22],E,E,208,[[["self"]],[T]]],[11,R[26],E,E,208,[[["self"]],[R[46]]]],[11,"peek",E,E,209,[[["cursor"]],["bool"]]],[11,"display",E,E,209,[[],["str"]]],[11,"span",E,E,209,[[["self"]],["span"]]],[11,"into",E,E,209,[[],[U]]],[11,"from",E,E,209,[[[T]],[T]]],[11,R[24],E,E,209,[[["self"]],[T]]],[11,R[25],E,E,209,[[["self"],[T]]]],[11,R[20],E,E,209,[[[U]],[R[3]]]],[11,R[21],E,E,209,[[],[R[3]]]],[11,R[45],E,E,209,[[["self"]],[T]]],[11,R[22],E,E,209,[[["self"]],[T]]],[11,R[26],E,E,209,[[["self"]],[R[46]]]],[11,"peek",E,E,210,[[["cursor"]],["bool"]]],[11,"display",E,E,210,[[],["str"]]],[11,"span",E,E,210,[[["self"]],["span"]]],[11,"into",E,E,210,[[],[U]]],[11,"from",E,E,210,[[[T]],[T]]],[11,R[24],E,E,210,[[["self"]],[T]]],[11,R[25],E,E,210,[[["self"],[T]]]],[11,R[20],E,E,210,[[[U]],[R[3]]]],[11,R[21],E,E,210,[[],[R[3]]]],[11,R[45],E,E,210,[[["self"]],[T]]],[11,R[22],E,E,210,[[["self"]],[T]]],[11,R[26],E,E,210,[[["self"]],[R[46]]]],[11,"peek",E,E,211,[[["cursor"]],["bool"]]],[11,"display",E,E,211,[[],["str"]]],[11,"span",E,E,211,[[["self"]],["span"]]],[11,"into",E,E,211,[[],[U]]],[11,"from",E,E,211,[[[T]],[T]]],[11,R[24],E,E,211,[[["self"]],[T]]],[11,R[25],E,E,211,[[["self"],[T]]]],[11,R[20],E,E,211,[[[U]],[R[3]]]],[11,R[21],E,E,211,[[],[R[3]]]],[11,R[45],E,E,211,[[["self"]],[T]]],[11,R[22],E,E,211,[[["self"]],[T]]],[11,R[26],E,E,211,[[["self"]],[R[46]]]],[11,"peek",E,E,212,[[["cursor"]],["bool"]]],[11,"display",E,E,212,[[],["str"]]],[11,"span",E,E,212,[[["self"]],["span"]]],[11,"into",E,E,212,[[],[U]]],[11,"from",E,E,212,[[[T]],[T]]],[11,R[24],E,E,212,[[["self"]],[T]]],[11,R[25],E,E,212,[[["self"],[T]]]],[11,R[20],E,E,212,[[[U]],[R[3]]]],[11,R[21],E,E,212,[[],[R[3]]]],[11,R[45],E,E,212,[[["self"]],[T]]],[11,R[22],E,E,212,[[["self"]],[T]]],[11,R[26],E,E,212,[[["self"]],[R[46]]]],[11,"peek",E,E,213,[[["cursor"]],["bool"]]],[11,"display",E,E,213,[[],["str"]]],[11,"span",E,E,213,[[["self"]],["span"]]],[11,"into",E,E,213,[[],[U]]],[11,"from",E,E,213,[[[T]],[T]]],[11,R[24],E,E,213,[[["self"]],[T]]],[11,R[25],E,E,213,[[["self"],[T]]]],[11,R[20],E,E,213,[[[U]],[R[3]]]],[11,R[21],E,E,213,[[],[R[3]]]],[11,R[45],E,E,213,[[["self"]],[T]]],[11,R[22],E,E,213,[[["self"]],[T]]],[11,R[26],E,E,213,[[["self"]],[R[46]]]],[11,"peek",E,E,214,[[["cursor"]],["bool"]]],[11,"display",E,E,214,[[],["str"]]],[11,"span",E,E,214,[[["self"]],["span"]]],[11,"into",E,E,214,[[],[U]]],[11,"from",E,E,214,[[[T]],[T]]],[11,R[24],E,E,214,[[["self"]],[T]]],[11,R[25],E,E,214,[[["self"],[T]]]],[11,R[20],E,E,214,[[[U]],[R[3]]]],[11,R[21],E,E,214,[[],[R[3]]]],[11,R[45],E,E,214,[[["self"]],[T]]],[11,R[22],E,E,214,[[["self"]],[T]]],[11,R[26],E,E,214,[[["self"]],[R[46]]]],[11,"peek",E,E,215,[[["cursor"]],["bool"]]],[11,"display",E,E,215,[[],["str"]]],[11,"span",E,E,215,[[["self"]],["span"]]],[11,"into",E,E,215,[[],[U]]],[11,"from",E,E,215,[[[T]],[T]]],[11,R[24],E,E,215,[[["self"]],[T]]],[11,R[25],E,E,215,[[["self"],[T]]]],[11,R[20],E,E,215,[[[U]],[R[3]]]],[11,R[21],E,E,215,[[],[R[3]]]],[11,R[45],E,E,215,[[["self"]],[T]]],[11,R[22],E,E,215,[[["self"]],[T]]],[11,R[26],E,E,215,[[["self"]],[R[46]]]],[11,"peek",E,E,216,[[["cursor"]],["bool"]]],[11,"display",E,E,216,[[],["str"]]],[11,"span",E,E,216,[[["self"]],["span"]]],[11,"into",E,E,216,[[],[U]]],[11,"from",E,E,216,[[[T]],[T]]],[11,R[24],E,E,216,[[["self"]],[T]]],[11,R[25],E,E,216,[[["self"],[T]]]],[11,R[20],E,E,216,[[[U]],[R[3]]]],[11,R[21],E,E,216,[[],[R[3]]]],[11,R[45],E,E,216,[[["self"]],[T]]],[11,R[22],E,E,216,[[["self"]],[T]]],[11,R[26],E,E,216,[[["self"]],[R[46]]]],[11,"peek",E,E,217,[[["cursor"]],["bool"]]],[11,"display",E,E,217,[[],["str"]]],[11,"span",E,E,217,[[["self"]],["span"]]],[11,"into",E,E,217,[[],[U]]],[11,"from",E,E,217,[[[T]],[T]]],[11,R[24],E,E,217,[[["self"]],[T]]],[11,R[25],E,E,217,[[["self"],[T]]]],[11,R[20],E,E,217,[[[U]],[R[3]]]],[11,R[21],E,E,217,[[],[R[3]]]],[11,R[45],E,E,217,[[["self"]],[T]]],[11,R[22],E,E,217,[[["self"]],[T]]],[11,R[26],E,E,217,[[["self"]],[R[46]]]],[11,"peek",E,E,218,[[["cursor"]],["bool"]]],[11,"display",E,E,218,[[],["str"]]],[11,"span",E,E,218,[[["self"]],["span"]]],[11,"into",E,E,218,[[],[U]]],[11,"from",E,E,218,[[[T]],[T]]],[11,R[24],E,E,218,[[["self"]],[T]]],[11,R[25],E,E,218,[[["self"],[T]]]],[11,R[20],E,E,218,[[[U]],[R[3]]]],[11,R[21],E,E,218,[[],[R[3]]]],[11,R[45],E,E,218,[[["self"]],[T]]],[11,R[22],E,E,218,[[["self"]],[T]]],[11,R[26],E,E,218,[[["self"]],[R[46]]]],[11,"peek",E,E,219,[[["cursor"]],["bool"]]],[11,"display",E,E,219,[[],["str"]]],[11,"span",E,E,219,[[["self"]],["span"]]],[11,"into",E,E,219,[[],[U]]],[11,"from",E,E,219,[[[T]],[T]]],[11,R[24],E,E,219,[[["self"]],[T]]],[11,R[25],E,E,219,[[["self"],[T]]]],[11,R[20],E,E,219,[[[U]],[R[3]]]],[11,R[21],E,E,219,[[],[R[3]]]],[11,R[45],E,E,219,[[["self"]],[T]]],[11,R[22],E,E,219,[[["self"]],[T]]],[11,R[26],E,E,219,[[["self"]],[R[46]]]],[11,"peek",E,E,220,[[["cursor"]],["bool"]]],[11,"display",E,E,220,[[],["str"]]],[11,"span",E,E,220,[[["self"]],["span"]]],[11,"into",E,E,220,[[],[U]]],[11,"from",E,E,220,[[[T]],[T]]],[11,R[24],E,E,220,[[["self"]],[T]]],[11,R[25],E,E,220,[[["self"],[T]]]],[11,R[20],E,E,220,[[[U]],[R[3]]]],[11,R[21],E,E,220,[[],[R[3]]]],[11,R[45],E,E,220,[[["self"]],[T]]],[11,R[22],E,E,220,[[["self"]],[T]]],[11,R[26],E,E,220,[[["self"]],[R[46]]]],[11,"peek",E,E,221,[[["cursor"]],["bool"]]],[11,"display",E,E,221,[[],["str"]]],[11,"span",E,E,221,[[["self"]],["span"]]],[11,"into",E,E,221,[[],[U]]],[11,"from",E,E,221,[[[T]],[T]]],[11,R[24],E,E,221,[[["self"]],[T]]],[11,R[25],E,E,221,[[["self"],[T]]]],[11,R[20],E,E,221,[[[U]],[R[3]]]],[11,R[21],E,E,221,[[],[R[3]]]],[11,R[45],E,E,221,[[["self"]],[T]]],[11,R[22],E,E,221,[[["self"]],[T]]],[11,R[26],E,E,221,[[["self"]],[R[46]]]],[11,"peek",E,E,222,[[["cursor"]],["bool"]]],[11,"display",E,E,222,[[],["str"]]],[11,"span",E,E,222,[[["self"]],["span"]]],[11,"into",E,E,222,[[],[U]]],[11,"from",E,E,222,[[[T]],[T]]],[11,R[24],E,E,222,[[["self"]],[T]]],[11,R[25],E,E,222,[[["self"],[T]]]],[11,R[20],E,E,222,[[[U]],[R[3]]]],[11,R[21],E,E,222,[[],[R[3]]]],[11,R[45],E,E,222,[[["self"]],[T]]],[11,R[22],E,E,222,[[["self"]],[T]]],[11,R[26],E,E,222,[[["self"]],[R[46]]]],[11,"peek",E,E,223,[[["cursor"]],["bool"]]],[11,"display",E,E,223,[[],["str"]]],[11,"span",E,E,223,[[["self"]],["span"]]],[11,"into",E,E,223,[[],[U]]],[11,"from",E,E,223,[[[T]],[T]]],[11,R[24],E,E,223,[[["self"]],[T]]],[11,R[25],E,E,223,[[["self"],[T]]]],[11,R[20],E,E,223,[[[U]],[R[3]]]],[11,R[21],E,E,223,[[],[R[3]]]],[11,R[45],E,E,223,[[["self"]],[T]]],[11,R[22],E,E,223,[[["self"]],[T]]],[11,R[26],E,E,223,[[["self"]],[R[46]]]],[11,"peek",E,E,224,[[["cursor"]],["bool"]]],[11,"display",E,E,224,[[],["str"]]],[11,"span",E,E,224,[[["self"]],["span"]]],[11,"into",E,E,224,[[],[U]]],[11,"from",E,E,224,[[[T]],[T]]],[11,R[24],E,E,224,[[["self"]],[T]]],[11,R[25],E,E,224,[[["self"],[T]]]],[11,R[20],E,E,224,[[[U]],[R[3]]]],[11,R[21],E,E,224,[[],[R[3]]]],[11,R[45],E,E,224,[[["self"]],[T]]],[11,R[22],E,E,224,[[["self"]],[T]]],[11,R[26],E,E,224,[[["self"]],[R[46]]]],[11,"peek",E,E,225,[[["cursor"]],["bool"]]],[11,"display",E,E,225,[[],["str"]]],[11,"span",E,E,225,[[["self"]],["span"]]],[11,"into",E,E,225,[[],[U]]],[11,"from",E,E,225,[[[T]],[T]]],[11,R[24],E,E,225,[[["self"]],[T]]],[11,R[25],E,E,225,[[["self"],[T]]]],[11,R[20],E,E,225,[[[U]],[R[3]]]],[11,R[21],E,E,225,[[],[R[3]]]],[11,R[45],E,E,225,[[["self"]],[T]]],[11,R[22],E,E,225,[[["self"]],[T]]],[11,R[26],E,E,225,[[["self"]],[R[46]]]],[11,"peek",E,E,226,[[["cursor"]],["bool"]]],[11,"display",E,E,226,[[],["str"]]],[11,"span",E,E,226,[[["self"]],["span"]]],[11,"into",E,E,226,[[],[U]]],[11,"from",E,E,226,[[[T]],[T]]],[11,R[24],E,E,226,[[["self"]],[T]]],[11,R[25],E,E,226,[[["self"],[T]]]],[11,R[20],E,E,226,[[[U]],[R[3]]]],[11,R[21],E,E,226,[[],[R[3]]]],[11,R[45],E,E,226,[[["self"]],[T]]],[11,R[22],E,E,226,[[["self"]],[T]]],[11,R[26],E,E,226,[[["self"]],[R[46]]]],[11,"peek",E,E,227,[[["cursor"]],["bool"]]],[11,"display",E,E,227,[[],["str"]]],[11,"span",E,E,227,[[["self"]],["span"]]],[11,"into",E,E,227,[[],[U]]],[11,"from",E,E,227,[[[T]],[T]]],[11,R[24],E,E,227,[[["self"]],[T]]],[11,R[25],E,E,227,[[["self"],[T]]]],[11,R[20],E,E,227,[[[U]],[R[3]]]],[11,R[21],E,E,227,[[],[R[3]]]],[11,R[45],E,E,227,[[["self"]],[T]]],[11,R[22],E,E,227,[[["self"]],[T]]],[11,R[26],E,E,227,[[["self"]],[R[46]]]],[11,"peek",E,E,228,[[["cursor"]],["bool"]]],[11,"display",E,E,228,[[],["str"]]],[11,"span",E,E,228,[[["self"]],["span"]]],[11,"into",E,E,228,[[],[U]]],[11,"from",E,E,228,[[[T]],[T]]],[11,R[24],E,E,228,[[["self"]],[T]]],[11,R[25],E,E,228,[[["self"],[T]]]],[11,R[20],E,E,228,[[[U]],[R[3]]]],[11,R[21],E,E,228,[[],[R[3]]]],[11,R[45],E,E,228,[[["self"]],[T]]],[11,R[22],E,E,228,[[["self"]],[T]]],[11,R[26],E,E,228,[[["self"]],[R[46]]]],[11,"peek",E,E,229,[[["cursor"]],["bool"]]],[11,"display",E,E,229,[[],["str"]]],[11,"span",E,E,229,[[["self"]],["span"]]],[11,"into",E,E,229,[[],[U]]],[11,"from",E,E,229,[[[T]],[T]]],[11,R[24],E,E,229,[[["self"]],[T]]],[11,R[25],E,E,229,[[["self"],[T]]]],[11,R[20],E,E,229,[[[U]],[R[3]]]],[11,R[21],E,E,229,[[],[R[3]]]],[11,R[45],E,E,229,[[["self"]],[T]]],[11,R[22],E,E,229,[[["self"]],[T]]],[11,R[26],E,E,229,[[["self"]],[R[46]]]],[11,"peek",E,E,230,[[["cursor"]],["bool"]]],[11,"display",E,E,230,[[],["str"]]],[11,"span",E,E,230,[[["self"]],["span"]]],[11,"into",E,E,230,[[],[U]]],[11,"from",E,E,230,[[[T]],[T]]],[11,R[24],E,E,230,[[["self"]],[T]]],[11,R[25],E,E,230,[[["self"],[T]]]],[11,R[20],E,E,230,[[[U]],[R[3]]]],[11,R[21],E,E,230,[[],[R[3]]]],[11,R[45],E,E,230,[[["self"]],[T]]],[11,R[22],E,E,230,[[["self"]],[T]]],[11,R[26],E,E,230,[[["self"]],[R[46]]]],[11,"peek",E,E,231,[[["cursor"]],["bool"]]],[11,"display",E,E,231,[[],["str"]]],[11,"span",E,E,231,[[["self"]],["span"]]],[11,"into",E,E,231,[[],[U]]],[11,"from",E,E,231,[[[T]],[T]]],[11,R[24],E,E,231,[[["self"]],[T]]],[11,R[25],E,E,231,[[["self"],[T]]]],[11,R[20],E,E,231,[[[U]],[R[3]]]],[11,R[21],E,E,231,[[],[R[3]]]],[11,R[45],E,E,231,[[["self"]],[T]]],[11,R[22],E,E,231,[[["self"]],[T]]],[11,R[26],E,E,231,[[["self"]],[R[46]]]],[11,"peek",E,E,232,[[["cursor"]],["bool"]]],[11,"display",E,E,232,[[],["str"]]],[11,"span",E,E,232,[[["self"]],["span"]]],[11,"into",E,E,232,[[],[U]]],[11,"from",E,E,232,[[[T]],[T]]],[11,R[24],E,E,232,[[["self"]],[T]]],[11,R[25],E,E,232,[[["self"],[T]]]],[11,R[20],E,E,232,[[[U]],[R[3]]]],[11,R[21],E,E,232,[[],[R[3]]]],[11,R[45],E,E,232,[[["self"]],[T]]],[11,R[22],E,E,232,[[["self"]],[T]]],[11,R[26],E,E,232,[[["self"]],[R[46]]]],[11,"peek",E,E,233,[[["cursor"]],["bool"]]],[11,"display",E,E,233,[[],["str"]]],[11,"span",E,E,233,[[["self"]],["span"]]],[11,"into",E,E,233,[[],[U]]],[11,"from",E,E,233,[[[T]],[T]]],[11,R[24],E,E,233,[[["self"]],[T]]],[11,R[25],E,E,233,[[["self"],[T]]]],[11,R[20],E,E,233,[[[U]],[R[3]]]],[11,R[21],E,E,233,[[],[R[3]]]],[11,R[45],E,E,233,[[["self"]],[T]]],[11,R[22],E,E,233,[[["self"]],[T]]],[11,R[26],E,E,233,[[["self"]],[R[46]]]],[11,"peek",E,E,234,[[["cursor"]],["bool"]]],[11,"display",E,E,234,[[],["str"]]],[11,"span",E,E,234,[[["self"]],["span"]]],[11,"into",E,E,234,[[],[U]]],[11,"from",E,E,234,[[[T]],[T]]],[11,R[24],E,E,234,[[["self"]],[T]]],[11,R[25],E,E,234,[[["self"],[T]]]],[11,R[20],E,E,234,[[[U]],[R[3]]]],[11,R[21],E,E,234,[[],[R[3]]]],[11,R[45],E,E,234,[[["self"]],[T]]],[11,R[22],E,E,234,[[["self"]],[T]]],[11,R[26],E,E,234,[[["self"]],[R[46]]]],[11,"peek",E,E,235,[[["cursor"]],["bool"]]],[11,"display",E,E,235,[[],["str"]]],[11,"span",E,E,235,[[["self"]],["span"]]],[11,"into",E,E,235,[[],[U]]],[11,"from",E,E,235,[[[T]],[T]]],[11,R[24],E,E,235,[[["self"]],[T]]],[11,R[25],E,E,235,[[["self"],[T]]]],[11,R[20],E,E,235,[[[U]],[R[3]]]],[11,R[21],E,E,235,[[],[R[3]]]],[11,R[45],E,E,235,[[["self"]],[T]]],[11,R[22],E,E,235,[[["self"]],[T]]],[11,R[26],E,E,235,[[["self"]],[R[46]]]],[11,"peek",E,E,236,[[["cursor"]],["bool"]]],[11,"display",E,E,236,[[],["str"]]],[11,"span",E,E,236,[[["self"]],["span"]]],[11,"into",E,E,236,[[],[U]]],[11,"from",E,E,236,[[[T]],[T]]],[11,R[24],E,E,236,[[["self"]],[T]]],[11,R[25],E,E,236,[[["self"],[T]]]],[11,R[20],E,E,236,[[[U]],[R[3]]]],[11,R[21],E,E,236,[[],[R[3]]]],[11,R[45],E,E,236,[[["self"]],[T]]],[11,R[22],E,E,236,[[["self"]],[T]]],[11,R[26],E,E,236,[[["self"]],[R[46]]]],[11,"peek",E,E,237,[[["cursor"]],["bool"]]],[11,"display",E,E,237,[[],["str"]]],[11,"span",E,E,237,[[["self"]],["span"]]],[11,"into",E,E,237,[[],[U]]],[11,"from",E,E,237,[[[T]],[T]]],[11,R[24],E,E,237,[[["self"]],[T]]],[11,R[25],E,E,237,[[["self"],[T]]]],[11,R[20],E,E,237,[[[U]],[R[3]]]],[11,R[21],E,E,237,[[],[R[3]]]],[11,R[45],E,E,237,[[["self"]],[T]]],[11,R[22],E,E,237,[[["self"]],[T]]],[11,R[26],E,E,237,[[["self"]],[R[46]]]],[11,"peek",E,E,238,[[["cursor"]],["bool"]]],[11,"display",E,E,238,[[],["str"]]],[11,"span",E,E,238,[[["self"]],["span"]]],[11,"into",E,E,238,[[],[U]]],[11,"from",E,E,238,[[[T]],[T]]],[11,R[24],E,E,238,[[["self"]],[T]]],[11,R[25],E,E,238,[[["self"],[T]]]],[11,R[20],E,E,238,[[[U]],[R[3]]]],[11,R[21],E,E,238,[[],[R[3]]]],[11,R[45],E,E,238,[[["self"]],[T]]],[11,R[22],E,E,238,[[["self"]],[T]]],[11,R[26],E,E,238,[[["self"]],[R[46]]]],[11,"peek",E,E,239,[[["cursor"]],["bool"]]],[11,"display",E,E,239,[[],["str"]]],[11,"span",E,E,239,[[["self"]],["span"]]],[11,"into",E,E,239,[[],[U]]],[11,"from",E,E,239,[[[T]],[T]]],[11,R[24],E,E,239,[[["self"]],[T]]],[11,R[25],E,E,239,[[["self"],[T]]]],[11,R[20],E,E,239,[[[U]],[R[3]]]],[11,R[21],E,E,239,[[],[R[3]]]],[11,R[45],E,E,239,[[["self"]],[T]]],[11,R[22],E,E,239,[[["self"]],[T]]],[11,R[26],E,E,239,[[["self"]],[R[46]]]],[11,"peek",E,E,240,[[["cursor"]],["bool"]]],[11,"display",E,E,240,[[],["str"]]],[11,"span",E,E,240,[[["self"]],["span"]]],[11,"into",E,E,240,[[],[U]]],[11,"from",E,E,240,[[[T]],[T]]],[11,R[24],E,E,240,[[["self"]],[T]]],[11,R[25],E,E,240,[[["self"],[T]]]],[11,R[20],E,E,240,[[[U]],[R[3]]]],[11,R[21],E,E,240,[[],[R[3]]]],[11,R[45],E,E,240,[[["self"]],[T]]],[11,R[22],E,E,240,[[["self"]],[T]]],[11,R[26],E,E,240,[[["self"]],[R[46]]]],[11,"peek",E,E,241,[[["cursor"]],["bool"]]],[11,"display",E,E,241,[[],["str"]]],[11,"span",E,E,241,[[["self"]],["span"]]],[11,"into",E,E,241,[[],[U]]],[11,"from",E,E,241,[[[T]],[T]]],[11,R[24],E,E,241,[[["self"]],[T]]],[11,R[25],E,E,241,[[["self"],[T]]]],[11,R[20],E,E,241,[[[U]],[R[3]]]],[11,R[21],E,E,241,[[],[R[3]]]],[11,R[45],E,E,241,[[["self"]],[T]]],[11,R[22],E,E,241,[[["self"]],[T]]],[11,R[26],E,E,241,[[["self"]],[R[46]]]],[11,"peek",E,E,242,[[["cursor"]],["bool"]]],[11,"display",E,E,242,[[],["str"]]],[11,"span",E,E,242,[[["self"]],["span"]]],[11,"into",E,E,242,[[],[U]]],[11,"from",E,E,242,[[[T]],[T]]],[11,R[24],E,E,242,[[["self"]],[T]]],[11,R[25],E,E,242,[[["self"],[T]]]],[11,R[20],E,E,242,[[[U]],[R[3]]]],[11,R[21],E,E,242,[[],[R[3]]]],[11,R[45],E,E,242,[[["self"]],[T]]],[11,R[22],E,E,242,[[["self"]],[T]]],[11,R[26],E,E,242,[[["self"]],[R[46]]]],[11,"peek",E,E,243,[[["cursor"]],["bool"]]],[11,"display",E,E,243,[[],["str"]]],[11,"span",E,E,243,[[["self"]],["span"]]],[11,"into",E,E,243,[[],[U]]],[11,"from",E,E,243,[[[T]],[T]]],[11,R[24],E,E,243,[[["self"]],[T]]],[11,R[25],E,E,243,[[["self"],[T]]]],[11,R[20],E,E,243,[[[U]],[R[3]]]],[11,R[21],E,E,243,[[],[R[3]]]],[11,R[45],E,E,243,[[["self"]],[T]]],[11,R[22],E,E,243,[[["self"]],[T]]],[11,R[26],E,E,243,[[["self"]],[R[46]]]],[11,"peek",E,E,244,[[["cursor"]],["bool"]]],[11,"display",E,E,244,[[],["str"]]],[11,"span",E,E,244,[[["self"]],["span"]]],[11,"into",E,E,244,[[],[U]]],[11,"from",E,E,244,[[[T]],[T]]],[11,R[24],E,E,244,[[["self"]],[T]]],[11,R[25],E,E,244,[[["self"],[T]]]],[11,R[20],E,E,244,[[[U]],[R[3]]]],[11,R[21],E,E,244,[[],[R[3]]]],[11,R[45],E,E,244,[[["self"]],[T]]],[11,R[22],E,E,244,[[["self"]],[T]]],[11,R[26],E,E,244,[[["self"]],[R[46]]]],[11,"peek",E,E,245,[[["cursor"]],["bool"]]],[11,"display",E,E,245,[[],["str"]]],[11,"span",E,E,245,[[["self"]],["span"]]],[11,"into",E,E,245,[[],[U]]],[11,"from",E,E,245,[[[T]],[T]]],[11,R[24],E,E,245,[[["self"]],[T]]],[11,R[25],E,E,245,[[["self"],[T]]]],[11,R[20],E,E,245,[[[U]],[R[3]]]],[11,R[21],E,E,245,[[],[R[3]]]],[11,R[45],E,E,245,[[["self"]],[T]]],[11,R[22],E,E,245,[[["self"]],[T]]],[11,R[26],E,E,245,[[["self"]],[R[46]]]],[11,"peek",E,E,246,[[["cursor"]],["bool"]]],[11,"display",E,E,246,[[],["str"]]],[11,"span",E,E,246,[[["self"]],["span"]]],[11,"into",E,E,246,[[],[U]]],[11,"from",E,E,246,[[[T]],[T]]],[11,R[24],E,E,246,[[["self"]],[T]]],[11,R[25],E,E,246,[[["self"],[T]]]],[11,R[20],E,E,246,[[[U]],[R[3]]]],[11,R[21],E,E,246,[[],[R[3]]]],[11,R[45],E,E,246,[[["self"]],[T]]],[11,R[22],E,E,246,[[["self"]],[T]]],[11,R[26],E,E,246,[[["self"]],[R[46]]]],[11,"peek",E,E,247,[[["cursor"]],["bool"]]],[11,"display",E,E,247,[[],["str"]]],[11,"span",E,E,247,[[["self"]],["span"]]],[11,"into",E,E,247,[[],[U]]],[11,"from",E,E,247,[[[T]],[T]]],[11,R[24],E,E,247,[[["self"]],[T]]],[11,R[25],E,E,247,[[["self"],[T]]]],[11,R[20],E,E,247,[[[U]],[R[3]]]],[11,R[21],E,E,247,[[],[R[3]]]],[11,R[45],E,E,247,[[["self"]],[T]]],[11,R[22],E,E,247,[[["self"]],[T]]],[11,R[26],E,E,247,[[["self"]],[R[46]]]],[11,"peek",E,E,248,[[["cursor"]],["bool"]]],[11,"display",E,E,248,[[],["str"]]],[11,"span",E,E,248,[[["self"]],["span"]]],[11,"into",E,E,248,[[],[U]]],[11,"from",E,E,248,[[[T]],[T]]],[11,R[24],E,E,248,[[["self"]],[T]]],[11,R[25],E,E,248,[[["self"],[T]]]],[11,R[20],E,E,248,[[[U]],[R[3]]]],[11,R[21],E,E,248,[[],[R[3]]]],[11,R[45],E,E,248,[[["self"]],[T]]],[11,R[22],E,E,248,[[["self"]],[T]]],[11,R[26],E,E,248,[[["self"]],[R[46]]]],[11,"peek",E,E,249,[[["cursor"]],["bool"]]],[11,"display",E,E,249,[[],["str"]]],[11,"span",E,E,249,[[["self"]],["span"]]],[11,"into",E,E,249,[[],[U]]],[11,"from",E,E,249,[[[T]],[T]]],[11,R[24],E,E,249,[[["self"]],[T]]],[11,R[25],E,E,249,[[["self"],[T]]]],[11,R[20],E,E,249,[[[U]],[R[3]]]],[11,R[21],E,E,249,[[],[R[3]]]],[11,R[45],E,E,249,[[["self"]],[T]]],[11,R[22],E,E,249,[[["self"]],[T]]],[11,R[26],E,E,249,[[["self"]],[R[46]]]],[11,"peek",E,E,250,[[["cursor"]],["bool"]]],[11,"display",E,E,250,[[],["str"]]],[11,"span",E,E,250,[[["self"]],["span"]]],[11,"into",E,E,250,[[],[U]]],[11,"from",E,E,250,[[[T]],[T]]],[11,R[24],E,E,250,[[["self"]],[T]]],[11,R[25],E,E,250,[[["self"],[T]]]],[11,R[20],E,E,250,[[[U]],[R[3]]]],[11,R[21],E,E,250,[[],[R[3]]]],[11,R[45],E,E,250,[[["self"]],[T]]],[11,R[22],E,E,250,[[["self"]],[T]]],[11,R[26],E,E,250,[[["self"]],[R[46]]]],[11,"peek",E,E,251,[[["cursor"]],["bool"]]],[11,"display",E,E,251,[[],["str"]]],[11,"span",E,E,251,[[["self"]],["span"]]],[11,"into",E,E,251,[[],[U]]],[11,"from",E,E,251,[[[T]],[T]]],[11,R[24],E,E,251,[[["self"]],[T]]],[11,R[25],E,E,251,[[["self"],[T]]]],[11,R[20],E,E,251,[[[U]],[R[3]]]],[11,R[21],E,E,251,[[],[R[3]]]],[11,R[45],E,E,251,[[["self"]],[T]]],[11,R[22],E,E,251,[[["self"]],[T]]],[11,R[26],E,E,251,[[["self"]],[R[46]]]],[11,"peek",E,E,252,[[["cursor"]],["bool"]]],[11,"display",E,E,252,[[],["str"]]],[11,"span",E,E,252,[[["self"]],["span"]]],[11,"into",E,E,252,[[],[U]]],[11,"from",E,E,252,[[[T]],[T]]],[11,R[24],E,E,252,[[["self"]],[T]]],[11,R[25],E,E,252,[[["self"],[T]]]],[11,R[20],E,E,252,[[[U]],[R[3]]]],[11,R[21],E,E,252,[[],[R[3]]]],[11,R[45],E,E,252,[[["self"]],[T]]],[11,R[22],E,E,252,[[["self"]],[T]]],[11,R[26],E,E,252,[[["self"]],[R[46]]]],[11,"peek",E,E,253,[[["cursor"]],["bool"]]],[11,"display",E,E,253,[[],["str"]]],[11,"span",E,E,253,[[["self"]],["span"]]],[11,"into",E,E,253,[[],[U]]],[11,"from",E,E,253,[[[T]],[T]]],[11,R[24],E,E,253,[[["self"]],[T]]],[11,R[25],E,E,253,[[["self"],[T]]]],[11,R[20],E,E,253,[[[U]],[R[3]]]],[11,R[21],E,E,253,[[],[R[3]]]],[11,R[45],E,E,253,[[["self"]],[T]]],[11,R[22],E,E,253,[[["self"]],[T]]],[11,R[26],E,E,253,[[["self"]],[R[46]]]],[11,"peek",E,E,254,[[["cursor"]],["bool"]]],[11,"display",E,E,254,[[],["str"]]],[11,"span",E,E,254,[[["self"]],["span"]]],[11,"into",E,E,254,[[],[U]]],[11,"from",E,E,254,[[[T]],[T]]],[11,R[24],E,E,254,[[["self"]],[T]]],[11,R[25],E,E,254,[[["self"],[T]]]],[11,R[20],E,E,254,[[[U]],[R[3]]]],[11,R[21],E,E,254,[[],[R[3]]]],[11,R[45],E,E,254,[[["self"]],[T]]],[11,R[22],E,E,254,[[["self"]],[T]]],[11,R[26],E,E,254,[[["self"]],[R[46]]]],[11,"peek",E,E,255,[[["cursor"]],["bool"]]],[11,"display",E,E,255,[[],["str"]]],[11,"span",E,E,255,[[["self"]],["span"]]],[11,"into",E,E,255,[[],[U]]],[11,"from",E,E,255,[[[T]],[T]]],[11,R[24],E,E,255,[[["self"]],[T]]],[11,R[25],E,E,255,[[["self"],[T]]]],[11,R[20],E,E,255,[[[U]],[R[3]]]],[11,R[21],E,E,255,[[],[R[3]]]],[11,R[45],E,E,255,[[["self"]],[T]]],[11,R[22],E,E,255,[[["self"]],[T]]],[11,R[26],E,E,255,[[["self"]],[R[46]]]],[11,"peek",E,E,256,[[["cursor"]],["bool"]]],[11,"display",E,E,256,[[],["str"]]],[11,"span",E,E,256,[[["self"]],["span"]]],[11,"into",E,E,256,[[],[U]]],[11,"from",E,E,256,[[[T]],[T]]],[11,R[24],E,E,256,[[["self"]],[T]]],[11,R[25],E,E,256,[[["self"],[T]]]],[11,R[20],E,E,256,[[[U]],[R[3]]]],[11,R[21],E,E,256,[[],[R[3]]]],[11,R[45],E,E,256,[[["self"]],[T]]],[11,R[22],E,E,256,[[["self"]],[T]]],[11,R[26],E,E,256,[[["self"]],[R[46]]]],[11,"peek",E,E,257,[[["cursor"]],["bool"]]],[11,"display",E,E,257,[[],["str"]]],[11,"span",E,E,257,[[["self"]],["span"]]],[11,"into",E,E,257,[[],[U]]],[11,"from",E,E,257,[[[T]],[T]]],[11,R[24],E,E,257,[[["self"]],[T]]],[11,R[25],E,E,257,[[["self"],[T]]]],[11,R[20],E,E,257,[[[U]],[R[3]]]],[11,R[21],E,E,257,[[],[R[3]]]],[11,R[45],E,E,257,[[["self"]],[T]]],[11,R[22],E,E,257,[[["self"]],[T]]],[11,R[26],E,E,257,[[["self"]],[R[46]]]],[11,"peek",E,E,258,[[["cursor"]],["bool"]]],[11,"display",E,E,258,[[],["str"]]],[11,"span",E,E,258,[[["self"]],["span"]]],[11,"into",E,E,258,[[],[U]]],[11,"from",E,E,258,[[[T]],[T]]],[11,R[24],E,E,258,[[["self"]],[T]]],[11,R[25],E,E,258,[[["self"],[T]]]],[11,R[20],E,E,258,[[[U]],[R[3]]]],[11,R[21],E,E,258,[[],[R[3]]]],[11,R[45],E,E,258,[[["self"]],[T]]],[11,R[22],E,E,258,[[["self"]],[T]]],[11,R[26],E,E,258,[[["self"]],[R[46]]]],[11,"peek",E,E,259,[[["cursor"]],["bool"]]],[11,"display",E,E,259,[[],["str"]]],[11,"span",E,E,259,[[["self"]],["span"]]],[11,"into",E,E,259,[[],[U]]],[11,"from",E,E,259,[[[T]],[T]]],[11,R[24],E,E,259,[[["self"]],[T]]],[11,R[25],E,E,259,[[["self"],[T]]]],[11,R[20],E,E,259,[[[U]],[R[3]]]],[11,R[21],E,E,259,[[],[R[3]]]],[11,R[45],E,E,259,[[["self"]],[T]]],[11,R[22],E,E,259,[[["self"]],[T]]],[11,R[26],E,E,259,[[["self"]],[R[46]]]],[11,"peek",E,E,260,[[["cursor"]],["bool"]]],[11,"display",E,E,260,[[],["str"]]],[11,"span",E,E,260,[[["self"]],["span"]]],[11,"into",E,E,260,[[],[U]]],[11,"from",E,E,260,[[[T]],[T]]],[11,R[24],E,E,260,[[["self"]],[T]]],[11,R[25],E,E,260,[[["self"],[T]]]],[11,R[20],E,E,260,[[[U]],[R[3]]]],[11,R[21],E,E,260,[[],[R[3]]]],[11,R[45],E,E,260,[[["self"]],[T]]],[11,R[22],E,E,260,[[["self"]],[T]]],[11,R[26],E,E,260,[[["self"]],[R[46]]]],[11,"peek",E,E,261,[[["cursor"]],["bool"]]],[11,"display",E,E,261,[[],["str"]]],[11,"span",E,E,261,[[["self"]],["span"]]],[11,"into",E,E,261,[[],[U]]],[11,"from",E,E,261,[[[T]],[T]]],[11,R[24],E,E,261,[[["self"]],[T]]],[11,R[25],E,E,261,[[["self"],[T]]]],[11,R[20],E,E,261,[[[U]],[R[3]]]],[11,R[21],E,E,261,[[],[R[3]]]],[11,R[45],E,E,261,[[["self"]],[T]]],[11,R[22],E,E,261,[[["self"]],[T]]],[11,R[26],E,E,261,[[["self"]],[R[46]]]],[11,"peek",E,E,262,[[["cursor"]],["bool"]]],[11,"display",E,E,262,[[],["str"]]],[11,"span",E,E,262,[[["self"]],["span"]]],[11,"into",E,E,262,[[],[U]]],[11,"from",E,E,262,[[[T]],[T]]],[11,R[24],E,E,262,[[["self"]],[T]]],[11,R[25],E,E,262,[[["self"],[T]]]],[11,R[20],E,E,262,[[[U]],[R[3]]]],[11,R[21],E,E,262,[[],[R[3]]]],[11,R[45],E,E,262,[[["self"]],[T]]],[11,R[22],E,E,262,[[["self"]],[T]]],[11,R[26],E,E,262,[[["self"]],[R[46]]]],[11,"peek",E,E,263,[[["cursor"]],["bool"]]],[11,"display",E,E,263,[[],["str"]]],[11,"span",E,E,263,[[["self"]],["span"]]],[11,"into",E,E,263,[[],[U]]],[11,"from",E,E,263,[[[T]],[T]]],[11,R[24],E,E,263,[[["self"]],[T]]],[11,R[25],E,E,263,[[["self"],[T]]]],[11,R[20],E,E,263,[[[U]],[R[3]]]],[11,R[21],E,E,263,[[],[R[3]]]],[11,R[45],E,E,263,[[["self"]],[T]]],[11,R[22],E,E,263,[[["self"]],[T]]],[11,R[26],E,E,263,[[["self"]],[R[46]]]],[11,"peek",E,E,264,[[["cursor"]],["bool"]]],[11,"display",E,E,264,[[],["str"]]],[11,"span",E,E,264,[[["self"]],["span"]]],[11,"into",E,E,264,[[],[U]]],[11,"from",E,E,264,[[[T]],[T]]],[11,R[24],E,E,264,[[["self"]],[T]]],[11,R[25],E,E,264,[[["self"],[T]]]],[11,R[20],E,E,264,[[[U]],[R[3]]]],[11,R[21],E,E,264,[[],[R[3]]]],[11,R[45],E,E,264,[[["self"]],[T]]],[11,R[22],E,E,264,[[["self"]],[T]]],[11,R[26],E,E,264,[[["self"]],[R[46]]]],[11,"peek",E,E,265,[[["cursor"]],["bool"]]],[11,"display",E,E,265,[[],["str"]]],[11,"span",E,E,265,[[["self"]],["span"]]],[11,"into",E,E,265,[[],[U]]],[11,"from",E,E,265,[[[T]],[T]]],[11,R[24],E,E,265,[[["self"]],[T]]],[11,R[25],E,E,265,[[["self"],[T]]]],[11,R[20],E,E,265,[[[U]],[R[3]]]],[11,R[21],E,E,265,[[],[R[3]]]],[11,R[45],E,E,265,[[["self"]],[T]]],[11,R[22],E,E,265,[[["self"]],[T]]],[11,R[26],E,E,265,[[["self"]],[R[46]]]],[11,"peek",E,E,266,[[["cursor"]],["bool"]]],[11,"display",E,E,266,[[],["str"]]],[11,"span",E,E,266,[[["self"]],["span"]]],[11,"into",E,E,266,[[],[U]]],[11,"from",E,E,266,[[[T]],[T]]],[11,R[24],E,E,266,[[["self"]],[T]]],[11,R[25],E,E,266,[[["self"],[T]]]],[11,R[20],E,E,266,[[[U]],[R[3]]]],[11,R[21],E,E,266,[[],[R[3]]]],[11,R[45],E,E,266,[[["self"]],[T]]],[11,R[22],E,E,266,[[["self"]],[T]]],[11,R[26],E,E,266,[[["self"]],[R[46]]]],[11,"peek",E,E,267,[[["cursor"]],["bool"]]],[11,"display",E,E,267,[[],["str"]]],[11,"span",E,E,267,[[["self"]],["span"]]],[11,"into",E,E,267,[[],[U]]],[11,"from",E,E,267,[[[T]],[T]]],[11,R[24],E,E,267,[[["self"]],[T]]],[11,R[25],E,E,267,[[["self"],[T]]]],[11,R[20],E,E,267,[[[U]],[R[3]]]],[11,R[21],E,E,267,[[],[R[3]]]],[11,R[45],E,E,267,[[["self"]],[T]]],[11,R[22],E,E,267,[[["self"]],[T]]],[11,R[26],E,E,267,[[["self"]],[R[46]]]],[11,"peek",E,E,268,[[["cursor"]],["bool"]]],[11,"display",E,E,268,[[],["str"]]],[11,"span",E,E,268,[[["self"]],["span"]]],[11,"into",E,E,268,[[],[U]]],[11,"from",E,E,268,[[[T]],[T]]],[11,R[24],E,E,268,[[["self"]],[T]]],[11,R[25],E,E,268,[[["self"],[T]]]],[11,R[20],E,E,268,[[[U]],[R[3]]]],[11,R[21],E,E,268,[[],[R[3]]]],[11,R[45],E,E,268,[[["self"]],[T]]],[11,R[22],E,E,268,[[["self"]],[T]]],[11,R[26],E,E,268,[[["self"]],[R[46]]]],[11,"peek",E,E,269,[[["cursor"]],["bool"]]],[11,"display",E,E,269,[[],["str"]]],[11,"span",E,E,269,[[["self"]],["span"]]],[11,"into",E,E,269,[[],[U]]],[11,"from",E,E,269,[[[T]],[T]]],[11,R[24],E,E,269,[[["self"]],[T]]],[11,R[25],E,E,269,[[["self"],[T]]]],[11,R[20],E,E,269,[[[U]],[R[3]]]],[11,R[21],E,E,269,[[],[R[3]]]],[11,R[45],E,E,269,[[["self"]],[T]]],[11,R[22],E,E,269,[[["self"]],[T]]],[11,R[26],E,E,269,[[["self"]],[R[46]]]],[11,"peek",E,E,270,[[["cursor"]],["bool"]]],[11,"display",E,E,270,[[],["str"]]],[11,"span",E,E,270,[[["self"]],["span"]]],[11,"into",E,E,270,[[],[U]]],[11,"from",E,E,270,[[[T]],[T]]],[11,R[24],E,E,270,[[["self"]],[T]]],[11,R[25],E,E,270,[[["self"],[T]]]],[11,R[20],E,E,270,[[[U]],[R[3]]]],[11,R[21],E,E,270,[[],[R[3]]]],[11,R[45],E,E,270,[[["self"]],[T]]],[11,R[22],E,E,270,[[["self"]],[T]]],[11,R[26],E,E,270,[[["self"]],[R[46]]]],[11,"peek",E,E,271,[[["cursor"]],["bool"]]],[11,"display",E,E,271,[[],["str"]]],[11,"span",E,E,271,[[["self"]],["span"]]],[11,"into",E,E,271,[[],[U]]],[11,"from",E,E,271,[[[T]],[T]]],[11,R[24],E,E,271,[[["self"]],[T]]],[11,R[25],E,E,271,[[["self"],[T]]]],[11,R[20],E,E,271,[[[U]],[R[3]]]],[11,R[21],E,E,271,[[],[R[3]]]],[11,R[45],E,E,271,[[["self"]],[T]]],[11,R[22],E,E,271,[[["self"]],[T]]],[11,R[26],E,E,271,[[["self"]],[R[46]]]],[11,"peek",E,E,272,[[["cursor"]],["bool"]]],[11,"display",E,E,272,[[],["str"]]],[11,"span",E,E,272,[[["self"]],["span"]]],[11,"into",E,E,272,[[],[U]]],[11,"from",E,E,272,[[[T]],[T]]],[11,R[24],E,E,272,[[["self"]],[T]]],[11,R[25],E,E,272,[[["self"],[T]]]],[11,R[20],E,E,272,[[[U]],[R[3]]]],[11,R[21],E,E,272,[[],[R[3]]]],[11,R[45],E,E,272,[[["self"]],[T]]],[11,R[22],E,E,272,[[["self"]],[T]]],[11,R[26],E,E,272,[[["self"]],[R[46]]]],[11,"peek",E,E,273,[[["cursor"]],["bool"]]],[11,"display",E,E,273,[[],["str"]]],[11,"span",E,E,273,[[["self"]],["span"]]],[11,"into",E,E,273,[[],[U]]],[11,"from",E,E,273,[[[T]],[T]]],[11,R[24],E,E,273,[[["self"]],[T]]],[11,R[25],E,E,273,[[["self"],[T]]]],[11,R[20],E,E,273,[[[U]],[R[3]]]],[11,R[21],E,E,273,[[],[R[3]]]],[11,R[45],E,E,273,[[["self"]],[T]]],[11,R[22],E,E,273,[[["self"]],[T]]],[11,R[26],E,E,273,[[["self"]],[R[46]]]],[11,"peek",E,E,274,[[["cursor"]],["bool"]]],[11,"display",E,E,274,[[],["str"]]],[11,"span",E,E,274,[[["self"]],["span"]]],[11,"into",E,E,274,[[],[U]]],[11,"from",E,E,274,[[[T]],[T]]],[11,R[24],E,E,274,[[["self"]],[T]]],[11,R[25],E,E,274,[[["self"],[T]]]],[11,R[20],E,E,274,[[[U]],[R[3]]]],[11,R[21],E,E,274,[[],[R[3]]]],[11,R[45],E,E,274,[[["self"]],[T]]],[11,R[22],E,E,274,[[["self"]],[T]]],[11,R[26],E,E,274,[[["self"]],[R[46]]]],[11,"peek",E,E,275,[[["cursor"]],["bool"]]],[11,"display",E,E,275,[[],["str"]]],[11,"span",E,E,275,[[["self"]],["span"]]],[11,"into",E,E,275,[[],[U]]],[11,"from",E,E,275,[[[T]],[T]]],[11,R[24],E,E,275,[[["self"]],[T]]],[11,R[25],E,E,275,[[["self"],[T]]]],[11,R[20],E,E,275,[[[U]],[R[3]]]],[11,R[21],E,E,275,[[],[R[3]]]],[11,R[45],E,E,275,[[["self"]],[T]]],[11,R[22],E,E,275,[[["self"]],[T]]],[11,R[26],E,E,275,[[["self"]],[R[46]]]],[11,"peek",E,E,276,[[["cursor"]],["bool"]]],[11,"display",E,E,276,[[],["str"]]],[11,"span",E,E,276,[[["self"]],["span"]]],[11,"into",E,E,276,[[],[U]]],[11,"from",E,E,276,[[[T]],[T]]],[11,R[24],E,E,276,[[["self"]],[T]]],[11,R[25],E,E,276,[[["self"],[T]]]],[11,R[20],E,E,276,[[[U]],[R[3]]]],[11,R[21],E,E,276,[[],[R[3]]]],[11,R[45],E,E,276,[[["self"]],[T]]],[11,R[22],E,E,276,[[["self"]],[T]]],[11,R[26],E,E,276,[[["self"]],[R[46]]]],[11,"peek",E,E,277,[[["cursor"]],["bool"]]],[11,"display",E,E,277,[[],["str"]]],[11,"span",E,E,277,[[["self"]],["span"]]],[11,"into",E,E,277,[[],[U]]],[11,"from",E,E,277,[[[T]],[T]]],[11,R[24],E,E,277,[[["self"]],[T]]],[11,R[25],E,E,277,[[["self"],[T]]]],[11,R[20],E,E,277,[[[U]],[R[3]]]],[11,R[21],E,E,277,[[],[R[3]]]],[11,R[45],E,E,277,[[["self"]],[T]]],[11,R[22],E,E,277,[[["self"]],[T]]],[11,R[26],E,E,277,[[["self"]],[R[46]]]],[11,"peek",E,E,278,[[["cursor"]],["bool"]]],[11,"display",E,E,278,[[],["str"]]],[11,"span",E,E,278,[[["self"]],["span"]]],[11,"into",E,E,278,[[],[U]]],[11,"from",E,E,278,[[[T]],[T]]],[11,R[24],E,E,278,[[["self"]],[T]]],[11,R[25],E,E,278,[[["self"],[T]]]],[11,R[20],E,E,278,[[[U]],[R[3]]]],[11,R[21],E,E,278,[[],[R[3]]]],[11,R[45],E,E,278,[[["self"]],[T]]],[11,R[22],E,E,278,[[["self"]],[T]]],[11,R[26],E,E,278,[[["self"]],[R[46]]]],[11,"peek",E,E,279,[[["cursor"]],["bool"]]],[11,"display",E,E,279,[[],["str"]]],[11,"into",E,E,279,[[],[U]]],[11,"from",E,E,279,[[[T]],[T]]],[11,R[24],E,E,279,[[["self"]],[T]]],[11,R[25],E,E,279,[[["self"],[T]]]],[11,R[20],E,E,279,[[[U]],[R[3]]]],[11,R[21],E,E,279,[[],[R[3]]]],[11,R[45],E,E,279,[[["self"]],[T]]],[11,R[22],E,E,279,[[["self"]],[T]]],[11,R[26],E,E,279,[[["self"]],[R[46]]]],[11,"peek",E,E,280,[[["cursor"]],["bool"]]],[11,"display",E,E,280,[[],["str"]]],[11,"into",E,E,280,[[],[U]]],[11,"from",E,E,280,[[[T]],[T]]],[11,R[24],E,E,280,[[["self"]],[T]]],[11,R[25],E,E,280,[[["self"],[T]]]],[11,R[20],E,E,280,[[[U]],[R[3]]]],[11,R[21],E,E,280,[[],[R[3]]]],[11,R[45],E,E,280,[[["self"]],[T]]],[11,R[22],E,E,280,[[["self"]],[T]]],[11,R[26],E,E,280,[[["self"]],[R[46]]]],[11,"peek",E,E,281,[[["cursor"]],["bool"]]],[11,"display",E,E,281,[[],["str"]]],[11,"into",E,E,281,[[],[U]]],[11,"from",E,E,281,[[[T]],[T]]],[11,R[24],E,E,281,[[["self"]],[T]]],[11,R[25],E,E,281,[[["self"],[T]]]],[11,R[20],E,E,281,[[[U]],[R[3]]]],[11,R[21],E,E,281,[[],[R[3]]]],[11,R[45],E,E,281,[[["self"]],[T]]],[11,R[22],E,E,281,[[["self"]],[T]]],[11,R[26],E,E,281,[[["self"]],[R[46]]]],[11,"peek",E,E,282,[[["cursor"]],["bool"]]],[11,"display",E,E,282,[[],["str"]]],[11,"into",E,E,282,[[],[U]]],[11,"from",E,E,282,[[[T]],[T]]],[11,R[24],E,E,282,[[["self"]],[T]]],[11,R[25],E,E,282,[[["self"],[T]]]],[11,R[20],E,E,282,[[[U]],[R[3]]]],[11,R[21],E,E,282,[[],[R[3]]]],[11,R[45],E,E,282,[[["self"]],[T]]],[11,R[22],E,E,282,[[["self"]],[T]]],[11,R[26],E,E,282,[[["self"]],[R[46]]]],[11,"into",R[2472],E,290,[[],[U]]],[11,"from",E,E,290,[[[T]],[T]]],[11,R[20],E,E,290,[[[U]],[R[3]]]],[11,R[21],E,E,290,[[],[R[3]]]],[11,R[45],E,E,290,[[["self"]],[T]]],[11,R[22],E,E,290,[[["self"]],[T]]],[11,R[26],E,E,290,[[["self"]],[R[46]]]],[11,"into",E,E,291,[[],[U]]],[11,"from",E,E,291,[[[T]],[T]]],[11,R[24],E,E,291,[[["self"]],[T]]],[11,R[25],E,E,291,[[["self"],[T]]]],[11,R[20],E,E,291,[[[U]],[R[3]]]],[11,R[21],E,E,291,[[],[R[3]]]],[11,R[45],E,E,291,[[["self"]],[T]]],[11,R[22],E,E,291,[[["self"]],[T]]],[11,R[26],E,E,291,[[["self"]],[R[46]]]],[11,"span",R[2473],E,294,[[["self"]],["span"]]],[11,"into",E,E,294,[[],[U]]],[11,"from",E,E,294,[[[T]],[T]]],[11,R[211],E,E,294,[[],["i"]]],[11,R[24],E,E,294,[[["self"]],[T]]],[11,R[25],E,E,294,[[["self"],[T]]]],[11,R[20],E,E,294,[[[U]],[R[3]]]],[11,R[21],E,E,294,[[],[R[3]]]],[11,R[45],E,E,294,[[["self"]],[T]]],[11,R[22],E,E,294,[[["self"]],[T]]],[11,R[26],E,E,294,[[["self"]],[R[46]]]],[11,"into",E,E,307,[[],[U]]],[11,"from",E,E,307,[[[T]],[T]]],[11,R[211],E,E,307,[[],["i"]]],[11,R[24],E,E,307,[[["self"]],[T]]],[11,R[25],E,E,307,[[["self"],[T]]]],[11,R[20],E,E,307,[[[U]],[R[3]]]],[11,R[21],E,E,307,[[],[R[3]]]],[11,R[45],E,E,307,[[["self"]],[T]]],[11,R[22],E,E,307,[[["self"]],[T]]],[11,R[26],E,E,307,[[["self"]],[R[46]]]],[11,"into",E,E,308,[[],[U]]],[11,"from",E,E,308,[[[T]],[T]]],[11,R[211],E,E,308,[[],["i"]]],[11,R[20],E,E,308,[[[U]],[R[3]]]],[11,R[21],E,E,308,[[],[R[3]]]],[11,R[45],E,E,308,[[["self"]],[T]]],[11,R[22],E,E,308,[[["self"]],[T]]],[11,R[26],E,E,308,[[["self"]],[R[46]]]],[11,"into",E,E,309,[[],[U]]],[11,"from",E,E,309,[[[T]],[T]]],[11,R[211],E,E,309,[[],["i"]]],[11,R[24],E,E,309,[[["self"]],[T]]],[11,R[25],E,E,309,[[["self"],[T]]]],[11,R[20],E,E,309,[[[U]],[R[3]]]],[11,R[21],E,E,309,[[],[R[3]]]],[11,R[45],E,E,309,[[["self"]],[T]]],[11,R[22],E,E,309,[[["self"]],[T]]],[11,R[26],E,E,309,[[["self"]],[R[46]]]],[11,"into",E,E,310,[[],[U]]],[11,"from",E,E,310,[[[T]],[T]]],[11,R[211],E,E,310,[[],["i"]]],[11,R[24],E,E,310,[[["self"]],[T]]],[11,R[25],E,E,310,[[["self"],[T]]]],[11,R[20],E,E,310,[[[U]],[R[3]]]],[11,R[21],E,E,310,[[],[R[3]]]],[11,R[45],E,E,310,[[["self"]],[T]]],[11,R[22],E,E,310,[[["self"]],[T]]],[11,R[26],E,E,310,[[["self"]],[R[46]]]],[11,"into",E,E,311,[[],[U]]],[11,"from",E,E,311,[[[T]],[T]]],[11,R[211],E,E,311,[[],["i"]]],[11,R[24],E,E,311,[[["self"]],[T]]],[11,R[25],E,E,311,[[["self"],[T]]]],[11,R[20],E,E,311,[[[U]],[R[3]]]],[11,R[21],E,E,311,[[],[R[3]]]],[11,R[45],E,E,311,[[["self"]],[T]]],[11,R[22],E,E,311,[[["self"]],[T]]],[11,R[26],E,E,311,[[["self"]],[R[46]]]],[11,"into",E,E,312,[[],[U]]],[11,"from",E,E,312,[[[T]],[T]]],[11,R[211],E,E,312,[[],["i"]]],[11,R[20],E,E,312,[[[U]],[R[3]]]],[11,R[21],E,E,312,[[],[R[3]]]],[11,R[45],E,E,312,[[["self"]],[T]]],[11,R[22],E,E,312,[[["self"]],[T]]],[11,R[26],E,E,312,[[["self"]],[R[46]]]],[11,"span",E,E,293,[[["self"]],["span"]]],[11,"into",E,E,293,[[],[U]]],[11,"from",E,E,293,[[[T]],[T]]],[11,R[24],E,E,293,[[["self"]],[T]]],[11,R[25],E,E,293,[[["self"],[T]]]],[11,R[20],E,E,293,[[[U]],[R[3]]]],[11,R[21],E,E,293,[[],[R[3]]]],[11,R[45],E,E,293,[[["self"]],[T]]],[11,R[22],E,E,293,[[["self"]],[T]]],[11,R[26],E,E,293,[[["self"]],[R[46]]]],[11,"into",R[2474],E,313,[[],[U]]],[11,"from",E,E,313,[[[T]],[T]]],[11,R[20],E,E,313,[[[U]],[R[3]]]],[11,R[21],E,E,313,[[],[R[3]]]],[11,R[45],E,E,313,[[["self"]],[T]]],[11,R[22],E,E,313,[[["self"]],[T]]],[11,R[26],E,E,313,[[["self"]],[R[46]]]],[11,"into",E,E,302,[[],[U]]],[11,"from",E,E,302,[[[T]],[T]]],[11,R[78],E,E,302,[[["self"]],["string"]]],[11,R[20],E,E,302,[[[U]],[R[3]]]],[11,R[21],E,E,302,[[],[R[3]]]],[11,R[45],E,E,302,[[["self"]],[T]]],[11,R[22],E,E,302,[[["self"]],[T]]],[11,R[26],E,E,302,[[["self"]],[R[46]]]],[11,"into",E,E,301,[[],[U]]],[11,"from",E,E,301,[[[T]],[T]]],[11,R[24],E,E,301,[[["self"]],[T]]],[11,R[25],E,E,301,[[["self"],[T]]]],[11,R[20],E,E,301,[[[U]],[R[3]]]],[11,R[21],E,E,301,[[],[R[3]]]],[11,R[45],E,E,301,[[["self"]],[T]]],[11,R[22],E,E,301,[[["self"]],[T]]],[11,R[26],E,E,301,[[["self"]],[R[46]]]],[11,"into",E,E,314,[[],[U]]],[11,"from",E,E,314,[[[T]],[T]]],[11,R[20],E,E,314,[[[U]],[R[3]]]],[11,R[21],E,E,314,[[],[R[3]]]],[11,R[45],E,E,314,[[["self"]],[T]]],[11,R[22],E,E,314,[[["self"]],[T]]],[11,R[26],E,E,314,[[["self"]],[R[46]]]],[11,"clone","syn",E,304,[[["self"]],["ident"]]],[11,"fmt",E,E,304,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[106],E,E,304,[[["self"],["ident"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",E,E,304,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"hash",E,E,304,[[["self"],["h"]]]],[11,"eq",E,E,304,[[["self"],["ident"]],["bool"]]],[11,"eq",E,E,304,[[[T],["self"]],["bool"]]],[11,"cmp",E,E,304,[[["self"],["ident"]],[R[105]]]],[11,R[2501],E,E,304,[[["self"],[R[1152]]]]],[11,"span",E,E,304,[[["self"]],[["option",["span"]],["span"]]]],[11,"fmt",E,E,304,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"peek",E,E,100,[[["cursor"]],["bool"]]],[11,"display",E,E,100,[[],["str"]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,"display",E,E,168,[[],["str"]]],[11,"peek",E,E,284,[[["cursor"]],["bool"]]],[11,"display",E,E,284,[[],["str"]]],[11,"peek",E,E,285,[[["cursor"]],["bool"]]],[11,"display",E,E,285,[[],["str"]]],[11,"peek",E,E,286,[[["cursor"]],["bool"]]],[11,"display",E,E,286,[[],["str"]]],[11,"peek",E,E,287,[[["cursor"]],["bool"]]],[11,"display",E,E,287,[[],["str"]]],[11,"peek",E,E,288,[[["cursor"]],["bool"]]],[11,"display",E,E,288,[[],["str"]]],[11,"peek",E,E,289,[[["cursor"]],["bool"]]],[11,"display",E,E,289,[[],["str"]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,"display",E,E,101,[[],["str"]]],[11,"peek",R[2475],E,180,[[["cursor"]],["bool"]]],[11,"display",E,E,180,[[],["str"]]],[11,"peek",E,E,281,[[["cursor"]],["bool"]]],[11,"display",E,E,281,[[],["str"]]],[11,"peek",E,E,279,[[["cursor"]],["bool"]]],[11,"display",E,E,279,[[],["str"]]],[11,"peek",E,E,280,[[["cursor"]],["bool"]]],[11,"display",E,E,280,[[],["str"]]],[11,"peek",E,E,282,[[["cursor"]],["bool"]]],[11,"display",E,E,282,[[],["str"]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,"display",E,E,182,[[],["str"]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,"display",E,E,183,[[],["str"]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,"display",E,E,184,[[],["str"]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,"display",E,E,185,[[],["str"]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,"display",E,E,186,[[],["str"]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,"display",E,E,187,[[],["str"]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,"display",E,E,188,[[],["str"]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,"display",E,E,189,[[],["str"]]],[11,"peek",E,E,190,[[["cursor"]],["bool"]]],[11,"display",E,E,190,[[],["str"]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,"display",E,E,191,[[],["str"]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"peek",E,E,197,[[["cursor"]],["bool"]]],[11,"display",E,E,197,[[],["str"]]],[11,"peek",E,E,198,[[["cursor"]],["bool"]]],[11,"display",E,E,198,[[],["str"]]],[11,"peek",E,E,199,[[["cursor"]],["bool"]]],[11,"display",E,E,199,[[],["str"]]],[11,"peek",E,E,200,[[["cursor"]],["bool"]]],[11,"display",E,E,200,[[],["str"]]],[11,"peek",E,E,201,[[["cursor"]],["bool"]]],[11,"display",E,E,201,[[],["str"]]],[11,"peek",E,E,202,[[["cursor"]],["bool"]]],[11,"display",E,E,202,[[],["str"]]],[11,"peek",E,E,203,[[["cursor"]],["bool"]]],[11,"display",E,E,203,[[],["str"]]],[11,"peek",E,E,204,[[["cursor"]],["bool"]]],[11,"display",E,E,204,[[],["str"]]],[11,"peek",E,E,205,[[["cursor"]],["bool"]]],[11,"display",E,E,205,[[],["str"]]],[11,"peek",E,E,206,[[["cursor"]],["bool"]]],[11,"display",E,E,206,[[],["str"]]],[11,"peek",E,E,207,[[["cursor"]],["bool"]]],[11,"display",E,E,207,[[],["str"]]],[11,"peek",E,E,208,[[["cursor"]],["bool"]]],[11,"display",E,E,208,[[],["str"]]],[11,"peek",E,E,209,[[["cursor"]],["bool"]]],[11,"display",E,E,209,[[],["str"]]],[11,"peek",E,E,210,[[["cursor"]],["bool"]]],[11,"display",E,E,210,[[],["str"]]],[11,"peek",E,E,211,[[["cursor"]],["bool"]]],[11,"display",E,E,211,[[],["str"]]],[11,"peek",E,E,212,[[["cursor"]],["bool"]]],[11,"display",E,E,212,[[],["str"]]],[11,"peek",E,E,213,[[["cursor"]],["bool"]]],[11,"display",E,E,213,[[],["str"]]],[11,"peek",E,E,214,[[["cursor"]],["bool"]]],[11,"display",E,E,214,[[],["str"]]],[11,"peek",E,E,215,[[["cursor"]],["bool"]]],[11,"display",E,E,215,[[],["str"]]],[11,"peek",E,E,216,[[["cursor"]],["bool"]]],[11,"display",E,E,216,[[],["str"]]],[11,"peek",E,E,217,[[["cursor"]],["bool"]]],[11,"display",E,E,217,[[],["str"]]],[11,"peek",E,E,218,[[["cursor"]],["bool"]]],[11,"display",E,E,218,[[],["str"]]],[11,"peek",E,E,219,[[["cursor"]],["bool"]]],[11,"display",E,E,219,[[],["str"]]],[11,"peek",E,E,220,[[["cursor"]],["bool"]]],[11,"display",E,E,220,[[],["str"]]],[11,"peek",E,E,221,[[["cursor"]],["bool"]]],[11,"display",E,E,221,[[],["str"]]],[11,"peek",E,E,222,[[["cursor"]],["bool"]]],[11,"display",E,E,222,[[],["str"]]],[11,"peek",E,E,223,[[["cursor"]],["bool"]]],[11,"display",E,E,223,[[],["str"]]],[11,"peek",E,E,224,[[["cursor"]],["bool"]]],[11,"display",E,E,224,[[],["str"]]],[11,"peek",E,E,225,[[["cursor"]],["bool"]]],[11,"display",E,E,225,[[],["str"]]],[11,"peek",E,E,226,[[["cursor"]],["bool"]]],[11,"display",E,E,226,[[],["str"]]],[11,"peek",E,E,227,[[["cursor"]],["bool"]]],[11,"display",E,E,227,[[],["str"]]],[11,"peek",E,E,228,[[["cursor"]],["bool"]]],[11,"display",E,E,228,[[],["str"]]],[11,"peek",E,E,229,[[["cursor"]],["bool"]]],[11,"display",E,E,229,[[],["str"]]],[11,"peek",E,E,230,[[["cursor"]],["bool"]]],[11,"display",E,E,230,[[],["str"]]],[11,"peek",E,E,231,[[["cursor"]],["bool"]]],[11,"display",E,E,231,[[],["str"]]],[11,"peek",E,E,232,[[["cursor"]],["bool"]]],[11,"display",E,E,232,[[],["str"]]],[11,"peek",E,E,233,[[["cursor"]],["bool"]]],[11,"display",E,E,233,[[],["str"]]],[11,"peek",E,E,234,[[["cursor"]],["bool"]]],[11,"display",E,E,234,[[],["str"]]],[11,"peek",E,E,235,[[["cursor"]],["bool"]]],[11,"display",E,E,235,[[],["str"]]],[11,"peek",E,E,236,[[["cursor"]],["bool"]]],[11,"display",E,E,236,[[],["str"]]],[11,"peek",E,E,237,[[["cursor"]],["bool"]]],[11,"display",E,E,237,[[],["str"]]],[11,"peek",E,E,238,[[["cursor"]],["bool"]]],[11,"display",E,E,238,[[],["str"]]],[11,"peek",E,E,239,[[["cursor"]],["bool"]]],[11,"display",E,E,239,[[],["str"]]],[11,"peek",E,E,240,[[["cursor"]],["bool"]]],[11,"display",E,E,240,[[],["str"]]],[11,"peek",E,E,241,[[["cursor"]],["bool"]]],[11,"display",E,E,241,[[],["str"]]],[11,"peek",E,E,242,[[["cursor"]],["bool"]]],[11,"display",E,E,242,[[],["str"]]],[11,"peek",E,E,243,[[["cursor"]],["bool"]]],[11,"display",E,E,243,[[],["str"]]],[11,"peek",E,E,244,[[["cursor"]],["bool"]]],[11,"display",E,E,244,[[],["str"]]],[11,"peek",E,E,245,[[["cursor"]],["bool"]]],[11,"display",E,E,245,[[],["str"]]],[11,"peek",E,E,246,[[["cursor"]],["bool"]]],[11,"display",E,E,246,[[],["str"]]],[11,"peek",E,E,247,[[["cursor"]],["bool"]]],[11,"display",E,E,247,[[],["str"]]],[11,"peek",E,E,248,[[["cursor"]],["bool"]]],[11,"display",E,E,248,[[],["str"]]],[11,"peek",E,E,249,[[["cursor"]],["bool"]]],[11,"display",E,E,249,[[],["str"]]],[11,"peek",E,E,250,[[["cursor"]],["bool"]]],[11,"display",E,E,250,[[],["str"]]],[11,"peek",E,E,251,[[["cursor"]],["bool"]]],[11,"display",E,E,251,[[],["str"]]],[11,"peek",E,E,252,[[["cursor"]],["bool"]]],[11,"display",E,E,252,[[],["str"]]],[11,"peek",E,E,253,[[["cursor"]],["bool"]]],[11,"display",E,E,253,[[],["str"]]],[11,"peek",E,E,254,[[["cursor"]],["bool"]]],[11,"display",E,E,254,[[],["str"]]],[11,"peek",E,E,255,[[["cursor"]],["bool"]]],[11,"display",E,E,255,[[],["str"]]],[11,"peek",E,E,256,[[["cursor"]],["bool"]]],[11,"display",E,E,256,[[],["str"]]],[11,"peek",E,E,257,[[["cursor"]],["bool"]]],[11,"display",E,E,257,[[],["str"]]],[11,"peek",E,E,258,[[["cursor"]],["bool"]]],[11,"display",E,E,258,[[],["str"]]],[11,"peek",E,E,259,[[["cursor"]],["bool"]]],[11,"display",E,E,259,[[],["str"]]],[11,"peek",E,E,260,[[["cursor"]],["bool"]]],[11,"display",E,E,260,[[],["str"]]],[11,"peek",E,E,261,[[["cursor"]],["bool"]]],[11,"display",E,E,261,[[],["str"]]],[11,"peek",E,E,262,[[["cursor"]],["bool"]]],[11,"display",E,E,262,[[],["str"]]],[11,"peek",E,E,263,[[["cursor"]],["bool"]]],[11,"display",E,E,263,[[],["str"]]],[11,"peek",E,E,264,[[["cursor"]],["bool"]]],[11,"display",E,E,264,[[],["str"]]],[11,"peek",E,E,265,[[["cursor"]],["bool"]]],[11,"display",E,E,265,[[],["str"]]],[11,"peek",E,E,266,[[["cursor"]],["bool"]]],[11,"display",E,E,266,[[],["str"]]],[11,"peek",E,E,267,[[["cursor"]],["bool"]]],[11,"display",E,E,267,[[],["str"]]],[11,"peek",E,E,268,[[["cursor"]],["bool"]]],[11,"display",E,E,268,[[],["str"]]],[11,"peek",E,E,269,[[["cursor"]],["bool"]]],[11,"display",E,E,269,[[],["str"]]],[11,"peek",E,E,270,[[["cursor"]],["bool"]]],[11,"display",E,E,270,[[],["str"]]],[11,"peek",E,E,271,[[["cursor"]],["bool"]]],[11,"display",E,E,271,[[],["str"]]],[11,"peek",E,E,272,[[["cursor"]],["bool"]]],[11,"display",E,E,272,[[],["str"]]],[11,"peek",E,E,273,[[["cursor"]],["bool"]]],[11,"display",E,E,273,[[],["str"]]],[11,"peek",E,E,274,[[["cursor"]],["bool"]]],[11,"display",E,E,274,[[],["str"]]],[11,"peek",E,E,275,[[["cursor"]],["bool"]]],[11,"display",E,E,275,[[],["str"]]],[11,"peek",E,E,276,[[["cursor"]],["bool"]]],[11,"display",E,E,276,[[],["str"]]],[11,"peek",E,E,277,[[["cursor"]],["bool"]]],[11,"display",E,E,277,[[],["str"]]],[11,"peek",E,E,278,[[["cursor"]],["bool"]]],[11,"display",E,E,278,[[],["str"]]],[11,"peek","syn",E,304,[[["cursor"]],["bool"]]],[11,"display",E,E,304,[[],["str"]]],[11,"parse_any",E,E,304,[[[R[1999]]],[R[3]]]],[11,"unraw",E,E,304,[[["self"]],["ident"]]],[11,"advance_to",R[2474],E,302,[[["self"]]]],[11,"parse",R[2475],E,180,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,181,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,182,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,183,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,184,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,185,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,186,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,187,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,188,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,189,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,190,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,191,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,192,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,193,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,194,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,195,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,196,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,197,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,198,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,199,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,200,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,201,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,202,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,203,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,204,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,205,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,206,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,207,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,208,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,209,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,210,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,211,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,212,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,213,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,214,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,215,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,216,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,217,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,218,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,219,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,220,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,221,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,222,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,223,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,224,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,225,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,226,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,227,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,228,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,229,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,230,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,231,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,232,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,233,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,234,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,235,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,236,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,237,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,238,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,239,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,240,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,241,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,242,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,243,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,244,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,245,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,246,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,247,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,248,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,249,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,250,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,251,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,252,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,253,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,254,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,255,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,256,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,257,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,258,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,259,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,260,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,261,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,262,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,263,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,264,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,265,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,266,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,267,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,268,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,269,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,270,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,271,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,272,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,273,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,274,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,275,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,276,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,277,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,278,[[[R[1999]]],[R[3]]]],[11,"parse","syn",E,304,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,150,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,1,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,2,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,151,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,6,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,4,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,5,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,153,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,156,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,33,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,30,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,28,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,34,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,36,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,21,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,14,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,23,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,37,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,47,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,19,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,49,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,24,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,48,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,32,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,25,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,50,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,20,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,15,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,16,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,27,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,31,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,40,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,41,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,22,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,26,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,43,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,35,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,44,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,42,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,38,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,45,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,17,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,46,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,52,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,51,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,12,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,11,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,155,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,39,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,157,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,10,[[[R[1999]]],[[R[3],["arm"]],["arm"]]]],[11,"parse",E,E,53,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,56,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,158,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,57,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,54,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,62,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,160,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,61,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,159,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,55,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,63,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,161,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,165,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,78,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,79,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,74,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,87,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,167,[[[R[1999]]],[["usetree"],[R[3],["usetree"]]]]],[11,"parse",E,E,81,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,72,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,75,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,162,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,88,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,80,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,76,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,163,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,64,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,66,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,67,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,65,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,85,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,82,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,73,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,86,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,83,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,84,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,166,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,90,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,92,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,93,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,91,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,77,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,164,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,68,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,70,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,71,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,69,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,99,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,100,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,168,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,284,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,285,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,286,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,287,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,288,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,289,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,101,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,102,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,106,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,172,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,173,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,107,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,174,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,176,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,122,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,111,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,120,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,121,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,112,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,117,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,115,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,124,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,116,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,119,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,175,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,123,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,114,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,113,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,118,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,110,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,109,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,177,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,146,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,178,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,142,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,145,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,147,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,143,[[[R[1999]]],[R[3]]]],[11,"parse",E,E,144,[[[R[1999]]],[R[3]]]],[11,"parse",R[2474],E,314,[[[R[1999]]],[R[3]]]],[11,"drop",E,E,302,[[["self"]]]],[11,"from","syn",E,304,[[["selfvalue"]],["ident"]]],[11,"from",E,E,304,[[["selftype"]],["ident"]]],[11,"from",E,E,304,[[["super"]],["ident"]]],[11,"from",E,E,304,[[["crate"]],["ident"]]],[11,"from",E,E,304,[[["extern"]],["ident"]]],[11,"from",E,E,304,[[[R[2497]]],["ident"]]],[11,"from",E,E,150,[[["path"]],["meta"]]],[11,"from",E,E,150,[[[R[2476]]],["meta"]]],[11,"from",E,E,150,[[[R[2151]]],["meta"]]],[11,"from",E,E,151,[[["meta"]],[R[2277]]]],[11,"from",E,E,151,[[["lit"]],[R[2277]]]],[11,"from",E,E,152,[[[R[2082]]],["fields"]]],[11,"from",E,E,152,[[[R[2084]]],["fields"]]],[11,"from",E,E,153,[[[R[2293]]],[R[2294]]]],[11,"from",E,E,153,[[[R[2477]]],[R[2294]]]],[11,"from",E,E,153,[[[R[2234]]],[R[2294]]]],[11,"from",E,E,156,[[[R[2246]]],["expr"]]],[11,"from",E,E,156,[[[R[2247]]],["expr"]]],[11,"from",E,E,156,[[[R[2034]]],["expr"]]],[11,"from",E,E,156,[[[R[2248]]],["expr"]]],[11,"from",E,E,156,[[[R[2249]]],["expr"]]],[11,"from",E,E,156,[[[R[2250]]],["expr"]]],[11,"from",E,E,156,[[[R[2251]]],["expr"]]],[11,"from",E,E,156,[[["exprbox"]],["expr"]]],[11,"from",E,E,156,[[[R[2252]]],["expr"]]],[11,"from",E,E,156,[[[R[2478]]],["expr"]]],[11,"from",E,E,156,[[[R[2479]]],["expr"]]],[11,"from",E,E,156,[[[R[2044]]],["expr"]]],[11,"from",E,E,156,[[[R[2046]]],["expr"]]],[11,"from",E,E,156,[[[R[2253]]],["expr"]]],[11,"from",E,E,156,[[[R[2049]]],["expr"]]],[11,"from",E,E,156,[[[R[2254]]],["expr"]]],[11,"from",E,E,156,[[["exprif"]],["expr"]]],[11,"from",E,E,156,[[[R[2255]]],["expr"]]],[11,"from",E,E,156,[[["exprlet"]],["expr"]]],[11,"from",E,E,156,[[["exprlit"]],["expr"]]],[11,"from",E,E,156,[[[R[2480]]],["expr"]]],[11,"from",E,E,156,[[[R[2256]]],["expr"]]],[11,"from",E,E,156,[[[R[2257]]],["expr"]]],[11,"from",E,E,156,[[[R[2059]]],["expr"]]],[11,"from",E,E,156,[[[R[2258]]],["expr"]]],[11,"from",E,E,156,[[[R[2481]]],["expr"]]],[11,"from",E,E,156,[[[R[2259]]],["expr"]]],[11,"from",E,E,156,[[[R[2064]]],["expr"]]],[11,"from",E,E,156,[[[R[2260]]],["expr"]]],[11,"from",E,E,156,[[[R[2261]]],["expr"]]],[11,"from",E,E,156,[[[R[2262]]],["expr"]]],[11,"from",E,E,156,[[["exprtry"]],["expr"]]],[11,"from",E,E,156,[[[R[2070]]],["expr"]]],[11,"from",E,E,156,[[[R[2263]]],["expr"]]],[11,"from",E,E,156,[[[R[2482]]],["expr"]]],[11,"from",E,E,156,[[[R[2264]]],["expr"]]],[11,"from",E,E,156,[[[R[2265]]],["expr"]]],[11,"from",E,E,156,[[[R[2266]]],["expr"]]],[11,"from",E,E,156,[[[R[2267]]],["expr"]]],[11,"from",E,E,53,[[["usize"]],["index"]]],[11,"from",E,E,158,[[[R[2288]]],[R[2101]]]],[11,"from",E,E,158,[[[R[2136]]],[R[2101]]]],[11,"from",E,E,158,[[[R[2242]]],[R[2101]]]],[11,"from",E,E,62,[[["ident"]],["self"]]],[11,"from",E,E,160,[[[R[2280]]],[R[2212]]]],[11,"from",E,E,160,[[[R[2000]]],[R[2212]]]],[11,"from",E,E,161,[[[R[2183]]],[R[2238]]]],[11,"from",E,E,161,[[[R[2181]]],[R[2238]]]],[11,"from",E,E,161,[[[R[2179]]],[R[2238]]]],[11,"from",E,E,165,[[[R[2269]]],["item"]]],[11,"from",E,E,165,[[[R[2483]]],["item"]]],[11,"from",E,E,165,[[[R[2117]]],["item"]]],[11,"from",E,E,165,[[["itemfn"]],["item"]]],[11,"from",E,E,165,[[[R[2120]]],["item"]]],[11,"from",E,E,165,[[[R[2484]]],["item"]]],[11,"from",E,E,165,[[[R[2270]]],["item"]]],[11,"from",E,E,165,[[[R[2271]]],["item"]]],[11,"from",E,E,165,[[["itemmod"]],["item"]]],[11,"from",E,E,165,[[[R[2272]]],["item"]]],[11,"from",E,E,165,[[[R[2273]]],["item"]]],[11,"from",E,E,165,[[[R[2274]]],["item"]]],[11,"from",E,E,165,[[[R[2129]]],["item"]]],[11,"from",E,E,165,[[[R[2485]]],["item"]]],[11,"from",E,E,165,[[[R[2275]]],["item"]]],[11,"from",E,E,165,[[["itemuse"]],["item"]]],[11,"from",E,E,165,[[[R[2030]]],["item"]]],[11,"from",E,E,106,[[[R[2273]]],[R[2030]]]],[11,"from",E,E,106,[[[R[2483]]],[R[2030]]]],[11,"from",E,E,106,[[[R[2275]]],[R[2030]]]],[11,"from",E,E,167,[[["usepath"]],["usetree"]]],[11,"from",E,E,167,[[["usename"]],["usetree"]]],[11,"from",E,E,167,[[[R[2292]]],["usetree"]]],[11,"from",E,E,167,[[["useglob"]],["usetree"]]],[11,"from",E,E,167,[[[R[2486]]],["usetree"]]],[11,"from",E,E,163,[[[R[2089]]],[R[2087]]]],[11,"from",E,E,163,[[[R[2093]]],[R[2087]]]],[11,"from",E,E,163,[[[R[2095]]],[R[2087]]]],[11,"from",E,E,163,[[[R[2091]]],[R[2087]]]],[11,"from",E,E,166,[[[R[2195]]],[R[2281]]]],[11,"from",E,E,166,[[[R[2199]]],[R[2281]]]],[11,"from",E,E,166,[[[R[2201]]],[R[2281]]]],[11,"from",E,E,166,[[[R[2197]]],[R[2281]]]],[11,"from",E,E,164,[[[R[2106]]],[R[2487]]]],[11,"from",E,E,164,[[[R[2110]]],[R[2487]]]],[11,"from",E,E,164,[[[R[2112]]],[R[2487]]]],[11,"from",E,E,164,[[[R[2108]]],[R[2487]]]],[11,"from",E,E,162,[[[R[2422]]],["fnarg"]]],[11,"from",E,E,162,[[["pattype"]],["fnarg"]]],[11,"from",E,E,168,[[["litstr"]],["lit"]]],[11,"from",E,E,168,[[[R[2276]]],["lit"]]],[11,"from",E,E,168,[[["litbyte"]],["lit"]]],[11,"from",E,E,168,[[["litchar"]],["lit"]]],[11,"from",E,E,168,[[["litint"]],["lit"]]],[11,"from",E,E,168,[[[R[2488]]],["lit"]]],[11,"from",E,E,168,[[["litbool"]],["lit"]]],[11,"from",E,E,288,[[["literal"]],["self"]]],[11,"from",E,E,289,[[["literal"]],["self"]]],[11,"from",E,E,171,[[[R[2244]]],["data"]]],[11,"from",E,E,171,[[[R[2489]]],["data"]]],[11,"from",E,E,171,[[[R[2245]]],["data"]]],[11,"from",E,E,176,[[[R[2282]]],["type"]]],[11,"from",E,E,176,[[[R[2283]]],["type"]]],[11,"from",E,E,176,[[[R[2284]]],["type"]]],[11,"from",E,E,176,[[[R[2206]]],["type"]]],[11,"from",E,E,176,[[[R[2285]]],["type"]]],[11,"from",E,E,176,[[[R[2286]]],["type"]]],[11,"from",E,E,176,[[[R[2287]]],["type"]]],[11,"from",E,E,176,[[[R[2289]]],["type"]]],[11,"from",E,E,176,[[[R[2490]]],["type"]]],[11,"from",E,E,176,[[["typeptr"]],["type"]]],[11,"from",E,E,176,[[[R[2217]]],["type"]]],[11,"from",E,E,176,[[[R[2290]]],["type"]]],[11,"from",E,E,176,[[[R[2220]]],["type"]]],[11,"from",E,E,176,[[[R[2291]]],["type"]]],[11,"from",E,E,177,[[["patbox"]],["pat"]]],[11,"from",E,E,177,[[[R[2491]]],["pat"]]],[11,"from",E,E,177,[[["patlit"]],["pat"]]],[11,"from",E,E,177,[[[R[2492]]],["pat"]]],[11,"from",E,E,177,[[["pator"]],["pat"]]],[11,"from",E,E,177,[[["patpath"]],["pat"]]],[11,"from",E,E,177,[[[R[2493]]],["pat"]]],[11,"from",E,E,177,[[[R[2165]]],["pat"]]],[11,"from",E,E,177,[[["patrest"]],["pat"]]],[11,"from",E,E,177,[[[R[2494]]],["pat"]]],[11,"from",E,E,177,[[[R[2278]]],["pat"]]],[11,"from",E,E,177,[[[R[2495]]],["pat"]]],[11,"from",E,E,177,[[[R[2171]]],["pat"]]],[11,"from",E,E,177,[[["pattype"]],["pat"]]],[11,"from",E,E,177,[[["patwild"]],["pat"]]],[11,"from",E,E,146,[[[T]],["self"]]],[11,"from",E,E,147,[[[T]],["self"]]],[11,"from",E,E,303,[[["lexerror"]],["self"]]],[11,"next",R[2473],E,307,[[["self"]],["option"]]],[11,R[292],E,E,307,[[["self"]]]],[11,"next",E,E,308,[[["self"]],["option"]]],[11,R[292],E,E,308,[[["self"]]]],[11,"next",E,E,309,[[["self"]],["option"]]],[11,R[292],E,E,309,[[["self"]]]],[11,"next",E,E,310,[[["self"]],["option"]]],[11,R[292],E,E,310,[[["self"]]]],[11,"next",E,E,311,[[["self"]],["option"]]],[11,R[292],E,E,311,[[["self"]]]],[11,"next",E,E,312,[[["self"]],["option"]]],[11,R[292],E,E,312,[[["self"]]]],[11,"extend",E,E,294,[[[R[294]],["self"]]]],[11,"extend",E,E,294,[[[R[294]],["self"]]]],[11,R[211],"syn",E,152,[[]]],[11,R[211],R[2473],E,294,[[]]],[11,R[211],"syn",E,303,[[]]],[11,R[295],R[2473],E,307,[[["self"]],["option"]]],[11,R[295],E,E,308,[[["self"]],["option"]]],[11,R[295],E,E,309,[[["self"]],["option"]]],[11,R[295],E,E,310,[[["self"]],["option"]]],[11,R[295],E,E,311,[[["self"]],["option"]]],[11,R[295],E,E,312,[[["self"]],["option"]]],[11,"len",E,E,307,[[["self"]],["usize"]]],[11,"len",E,E,308,[[["self"]],["usize"]]],[11,"len",E,E,309,[[["self"]],["usize"]]],[11,"len",E,E,310,[[["self"]],["usize"]]],[11,"len",E,E,311,[[["self"]],["usize"]]],[11,"len",E,E,312,[[["self"]],["usize"]]],[11,"clone",R[2475],E,180,[[["self"]],[R[2497]]]],[11,"clone",E,E,181,[[["self"]],["abstract"]]],[11,"clone",E,E,182,[[["self"]],["as"]]],[11,"clone",E,E,183,[[["self"]],["async"]]],[11,"clone",E,E,184,[[["self"]],["auto"]]],[11,"clone",E,E,185,[[["self"]],["await"]]],[11,"clone",E,E,186,[[["self"]],["become"]]],[11,"clone",E,E,187,[[["self"]],["box"]]],[11,"clone",E,E,188,[[["self"]],["break"]]],[11,"clone",E,E,189,[[["self"]],["const"]]],[11,"clone",E,E,190,[[["self"]],["continue"]]],[11,"clone",E,E,191,[[["self"]],["crate"]]],[11,"clone",E,E,192,[[["self"]],[R[90]]]],[11,"clone",E,E,193,[[["self"]],["do"]]],[11,"clone",E,E,194,[[["self"]],["dyn"]]],[11,"clone",E,E,195,[[["self"]],["else"]]],[11,"clone",E,E,196,[[["self"]],["enum"]]],[11,"clone",E,E,197,[[["self"]],["extern"]]],[11,"clone",E,E,198,[[["self"]],["final"]]],[11,"clone",E,E,199,[[["self"]],["fn"]]],[11,"clone",E,E,200,[[["self"]],["for"]]],[11,"clone",E,E,201,[[["self"]],["if"]]],[11,"clone",E,E,202,[[["self"]],["impl"]]],[11,"clone",E,E,203,[[["self"]],["in"]]],[11,"clone",E,E,204,[[["self"]],["let"]]],[11,"clone",E,E,205,[[["self"]],["loop"]]],[11,"clone",E,E,206,[[["self"]],["macro"]]],[11,"clone",E,E,207,[[["self"]],["match"]]],[11,"clone",E,E,208,[[["self"]],["mod"]]],[11,"clone",E,E,209,[[["self"]],["move"]]],[11,"clone",E,E,210,[[["self"]],["mut"]]],[11,"clone",E,E,211,[[["self"]],["override"]]],[11,"clone",E,E,212,[[["self"]],["priv"]]],[11,"clone",E,E,213,[[["self"]],["pub"]]],[11,"clone",E,E,214,[[["self"]],["ref"]]],[11,"clone",E,E,215,[[["self"]],["return"]]],[11,"clone",E,E,216,[[["self"]],["selftype"]]],[11,"clone",E,E,217,[[["self"]],["selfvalue"]]],[11,"clone",E,E,218,[[["self"]],["static"]]],[11,"clone",E,E,219,[[["self"]],["struct"]]],[11,"clone",E,E,220,[[["self"]],["super"]]],[11,"clone",E,E,221,[[["self"]],["trait"]]],[11,"clone",E,E,222,[[["self"]],["try"]]],[11,"clone",E,E,223,[[["self"]],["type"]]],[11,"clone",E,E,224,[[["self"]],["typeof"]]],[11,"clone",E,E,225,[[["self"]],["union"]]],[11,"clone",E,E,226,[[["self"]],["unsafe"]]],[11,"clone",E,E,227,[[["self"]],["unsized"]]],[11,"clone",E,E,228,[[["self"]],["use"]]],[11,"clone",E,E,229,[[["self"]],["virtual"]]],[11,"clone",E,E,230,[[["self"]],["where"]]],[11,"clone",E,E,231,[[["self"]],["while"]]],[11,"clone",E,E,232,[[["self"]],["yield"]]],[11,"clone",E,E,233,[[["self"]],["add"]]],[11,"clone",E,E,234,[[["self"]],["addeq"]]],[11,"clone",E,E,235,[[["self"]],["and"]]],[11,"clone",E,E,236,[[["self"]],["andand"]]],[11,"clone",E,E,237,[[["self"]],["andeq"]]],[11,"clone",E,E,238,[[["self"]],["at"]]],[11,"clone",E,E,239,[[["self"]],["bang"]]],[11,"clone",E,E,240,[[["self"]],["caret"]]],[11,"clone",E,E,241,[[["self"]],["careteq"]]],[11,"clone",E,E,242,[[["self"]],["colon"]]],[11,"clone",E,E,243,[[["self"]],["colon2"]]],[11,"clone",E,E,244,[[["self"]],["comma"]]],[11,"clone",E,E,245,[[["self"]],["div"]]],[11,"clone",E,E,246,[[["self"]],["diveq"]]],[11,"clone",E,E,247,[[["self"]],["dollar"]]],[11,"clone",E,E,248,[[["self"]],["dot"]]],[11,"clone",E,E,249,[[["self"]],["dot2"]]],[11,"clone",E,E,250,[[["self"]],["dot3"]]],[11,"clone",E,E,251,[[["self"]],["dotdoteq"]]],[11,"clone",E,E,252,[[["self"]],["eq"]]],[11,"clone",E,E,253,[[["self"]],["eqeq"]]],[11,"clone",E,E,254,[[["self"]],["ge"]]],[11,"clone",E,E,255,[[["self"]],["gt"]]],[11,"clone",E,E,256,[[["self"]],["le"]]],[11,"clone",E,E,257,[[["self"]],["lt"]]],[11,"clone",E,E,258,[[["self"]],["muleq"]]],[11,"clone",E,E,259,[[["self"]],["ne"]]],[11,"clone",E,E,260,[[["self"]],["or"]]],[11,"clone",E,E,261,[[["self"]],["oreq"]]],[11,"clone",E,E,262,[[["self"]],["oror"]]],[11,"clone",E,E,263,[[["self"]],["pound"]]],[11,"clone",E,E,264,[[["self"]],["question"]]],[11,"clone",E,E,265,[[["self"]],["rarrow"]]],[11,"clone",E,E,266,[[["self"]],["larrow"]]],[11,"clone",E,E,267,[[["self"]],["rem"]]],[11,"clone",E,E,268,[[["self"]],["remeq"]]],[11,"clone",E,E,269,[[["self"]],["fatarrow"]]],[11,"clone",E,E,270,[[["self"]],["semi"]]],[11,"clone",E,E,271,[[["self"]],["shl"]]],[11,"clone",E,E,272,[[["self"]],["shleq"]]],[11,"clone",E,E,273,[[["self"]],["shr"]]],[11,"clone",E,E,274,[[["self"]],["shreq"]]],[11,"clone",E,E,275,[[["self"]],["star"]]],[11,"clone",E,E,276,[[["self"]],["sub"]]],[11,"clone",E,E,277,[[["self"]],["subeq"]]],[11,"clone",E,E,278,[[["self"]],["tilde"]]],[11,"clone",E,E,279,[[["self"]],["brace"]]],[11,"clone",E,E,280,[[["self"]],["bracket"]]],[11,"clone",E,E,281,[[["self"]],["paren"]]],[11,"clone",E,E,282,[[["self"]],["group"]]],[11,"clone","syn",E,0,[[["self"]],[R[2240]]]],[11,"clone",E,E,149,[[["self"]],[R[2239]]]],[11,"clone",E,E,150,[[["self"]],["meta"]]],[11,"clone",E,E,1,[[["self"]],[R[2476]]]],[11,"clone",E,E,2,[[["self"]],[R[2151]]]],[11,"clone",E,E,151,[[["self"]],[R[2277]]]],[11,"clone",E,E,6,[[["self"]],["variant"]]],[11,"clone",E,E,152,[[["self"]],["fields"]]],[11,"clone",E,E,4,[[["self"]],[R[2082]]]],[11,"clone",E,E,5,[[["self"]],[R[2084]]]],[11,"clone",E,E,3,[[["self"]],["field"]]],[11,"clone",E,E,153,[[["self"]],[R[2294]]]],[11,"clone",E,E,8,[[["self"]],[R[2293]]]],[11,"clone",E,E,7,[[["self"]],[R[2477]]]],[11,"clone",E,E,9,[[["self"]],[R[2234]]]],[11,"clone",E,E,156,[[["self"]],["expr"]]],[11,"clone",E,E,14,[[["self"]],[R[2246]]]],[11,"clone",E,E,15,[[["self"]],[R[2247]]]],[11,"clone",E,E,16,[[["self"]],[R[2034]]]],[11,"clone",E,E,17,[[["self"]],[R[2248]]]],[11,"clone",E,E,18,[[["self"]],[R[2249]]]],[11,"clone",E,E,19,[[["self"]],[R[2250]]]],[11,"clone",E,E,20,[[["self"]],[R[2251]]]],[11,"clone",E,E,21,[[["self"]],["exprbox"]]],[11,"clone",E,E,22,[[["self"]],[R[2252]]]],[11,"clone",E,E,23,[[["self"]],[R[2478]]]],[11,"clone",E,E,24,[[["self"]],[R[2479]]]],[11,"clone",E,E,25,[[["self"]],[R[2044]]]],[11,"clone",E,E,26,[[["self"]],[R[2046]]]],[11,"clone",E,E,27,[[["self"]],[R[2253]]]],[11,"clone",E,E,28,[[["self"]],[R[2049]]]],[11,"clone",E,E,29,[[["self"]],[R[2254]]]],[11,"clone",E,E,30,[[["self"]],["exprif"]]],[11,"clone",E,E,31,[[["self"]],[R[2255]]]],[11,"clone",E,E,32,[[["self"]],["exprlet"]]],[11,"clone",E,E,33,[[["self"]],["exprlit"]]],[11,"clone",E,E,34,[[["self"]],[R[2480]]]],[11,"clone",E,E,35,[[["self"]],[R[2256]]]],[11,"clone",E,E,36,[[["self"]],[R[2257]]]],[11,"clone",E,E,37,[[["self"]],[R[2059]]]],[11,"clone",E,E,38,[[["self"]],[R[2258]]]],[11,"clone",E,E,39,[[["self"]],[R[2481]]]],[11,"clone",E,E,40,[[["self"]],[R[2259]]]],[11,"clone",E,E,41,[[["self"]],[R[2064]]]],[11,"clone",E,E,42,[[["self"]],[R[2260]]]],[11,"clone",E,E,43,[[["self"]],[R[2261]]]],[11,"clone",E,E,44,[[["self"]],[R[2262]]]],[11,"clone",E,E,45,[[["self"]],["exprtry"]]],[11,"clone",E,E,46,[[["self"]],[R[2070]]]],[11,"clone",E,E,47,[[["self"]],[R[2263]]]],[11,"clone",E,E,48,[[["self"]],[R[2482]]]],[11,"clone",E,E,49,[[["self"]],[R[2264]]]],[11,"clone",E,E,50,[[["self"]],[R[2265]]]],[11,"clone",E,E,51,[[["self"]],[R[2266]]]],[11,"clone",E,E,52,[[["self"]],[R[2267]]]],[11,"clone",E,E,157,[[["self"]],["member"]]],[11,"clone",E,E,53,[[["self"]],["index"]]],[11,"clone",E,E,13,[[["self"]],[R[2153]]]],[11,"clone",E,E,154,[[["self"]],[R[2099]]]],[11,"clone",E,E,11,[[["self"]],[R[2268]]]],[11,"clone",E,E,12,[[["self"]],["label"]]],[11,"clone",E,E,10,[[["self"]],["arm"]]],[11,"clone",E,E,155,[[["self"]],[R[2186]]]],[11,"clone",E,E,56,[[["self"]],[R[1860]]]],[11,"clone",E,E,158,[[["self"]],[R[2101]]]],[11,"clone",E,E,62,[[["self"]],[R[2288]]]],[11,"clone",E,E,57,[[["self"]],[R[2136]]]],[11,"clone",E,E,55,[[["self"]],[R[2242]]]],[11,"clone",E,E,305,[[["self"]],[R[2498]]]],[11,"clone",E,E,283,[[["self"]],[R[2499]]]],[11,"clone",E,E,306,[[["self"]],[R[2500]]]],[11,"clone",E,E,54,[[["self"]],[R[2023]]]],[11,"clone",E,E,160,[[["self"]],[R[2212]]]],[11,"clone",E,E,61,[[["self"]],[R[2280]]]],[11,"clone",E,E,159,[[["self"]],[R[2192]]]],[11,"clone",E,E,63,[[["self"]],[R[2012]]]],[11,"clone",E,E,161,[[["self"]],[R[2238]]]],[11,"clone",E,E,60,[[["self"]],[R[2183]]]],[11,"clone",E,E,59,[[["self"]],[R[2181]]]],[11,"clone",E,E,58,[[["self"]],[R[2179]]]],[11,"clone",E,E,165,[[["self"]],["item"]]],[11,"clone",E,E,72,[[["self"]],[R[2269]]]],[11,"clone",E,E,73,[[["self"]],[R[2483]]]],[11,"clone",E,E,74,[[["self"]],[R[2117]]]],[11,"clone",E,E,75,[[["self"]],["itemfn"]]],[11,"clone",E,E,76,[[["self"]],[R[2120]]]],[11,"clone",E,E,77,[[["self"]],[R[2484]]]],[11,"clone",E,E,78,[[["self"]],[R[2270]]]],[11,"clone",E,E,79,[[["self"]],[R[2271]]]],[11,"clone",E,E,80,[[["self"]],["itemmod"]]],[11,"clone",E,E,81,[[["self"]],[R[2272]]]],[11,"clone",E,E,82,[[["self"]],[R[2273]]]],[11,"clone",E,E,83,[[["self"]],[R[2274]]]],[11,"clone",E,E,84,[[["self"]],[R[2129]]]],[11,"clone",E,E,85,[[["self"]],[R[2485]]]],[11,"clone",E,E,86,[[["self"]],[R[2275]]]],[11,"clone",E,E,87,[[["self"]],["itemuse"]]],[11,"clone",E,E,167,[[["self"]],["usetree"]]],[11,"clone",E,E,97,[[["self"]],["usepath"]]],[11,"clone",E,E,96,[[["self"]],["usename"]]],[11,"clone",E,E,98,[[["self"]],[R[2292]]]],[11,"clone",E,E,94,[[["self"]],["useglob"]]],[11,"clone",E,E,95,[[["self"]],[R[2486]]]],[11,"clone",E,E,163,[[["self"]],[R[2087]]]],[11,"clone",E,E,64,[[["self"]],[R[2089]]]],[11,"clone",E,E,66,[[["self"]],[R[2093]]]],[11,"clone",E,E,67,[[["self"]],[R[2095]]]],[11,"clone",E,E,65,[[["self"]],[R[2091]]]],[11,"clone",E,E,166,[[["self"]],[R[2281]]]],[11,"clone",E,E,90,[[["self"]],[R[2195]]]],[11,"clone",E,E,92,[[["self"]],[R[2199]]]],[11,"clone",E,E,93,[[["self"]],[R[2201]]]],[11,"clone",E,E,91,[[["self"]],[R[2197]]]],[11,"clone",E,E,164,[[["self"]],[R[2487]]]],[11,"clone",E,E,68,[[["self"]],[R[2106]]]],[11,"clone",E,E,70,[[["self"]],[R[2110]]]],[11,"clone",E,E,71,[[["self"]],[R[2112]]]],[11,"clone",E,E,69,[[["self"]],[R[2108]]]],[11,"clone",E,E,89,[[["self"]],[R[188]]]],[11,"clone",E,E,162,[[["self"]],["fnarg"]]],[11,"clone",E,E,88,[[["self"]],[R[2422]]]],[11,"clone",E,E,99,[[["self"]],["file"]]],[11,"clone",E,E,100,[[["self"]],[R[2000]]]],[11,"clone",E,E,168,[[["self"]],["lit"]]],[11,"clone",E,E,284,[[["self"]],["litstr"]]],[11,"clone",E,E,285,[[["self"]],[R[2276]]]],[11,"clone",E,E,286,[[["self"]],["litbyte"]]],[11,"clone",E,E,287,[[["self"]],["litchar"]]],[11,"clone",E,E,288,[[["self"]],["litint"]]],[11,"clone",E,E,289,[[["self"]],[R[2488]]]],[11,"clone",E,E,101,[[["self"]],["litbool"]]],[11,"clone",E,E,169,[[["self"]],["strstyle"]]],[11,"clone",E,E,102,[[["self"]],["macro"]]],[11,"clone",E,E,170,[[["self"]],[R[2147]]]],[11,"clone",E,E,106,[[["self"]],[R[2030]]]],[11,"clone",E,E,171,[[["self"]],["data"]]],[11,"clone",E,E,104,[[["self"]],[R[2244]]]],[11,"clone",E,E,103,[[["self"]],[R[2489]]]],[11,"clone",E,E,105,[[["self"]],[R[2245]]]],[11,"clone",E,E,172,[[["self"]],["binop"]]],[11,"clone",E,E,173,[[["self"]],["unop"]]],[11,"clone",E,E,107,[[["self"]],["block"]]],[11,"clone",E,E,174,[[["self"]],["stmt"]]],[11,"clone",E,E,108,[[["self"]],["local"]]],[11,"clone",E,E,176,[[["self"]],["type"]]],[11,"clone",E,E,111,[[["self"]],[R[2282]]]],[11,"clone",E,E,112,[[["self"]],[R[2283]]]],[11,"clone",E,E,113,[[["self"]],[R[2284]]]],[11,"clone",E,E,114,[[["self"]],[R[2206]]]],[11,"clone",E,E,115,[[["self"]],[R[2285]]]],[11,"clone",E,E,116,[[["self"]],[R[2286]]]],[11,"clone",E,E,117,[[["self"]],[R[2287]]]],[11,"clone",E,E,118,[[["self"]],[R[2289]]]],[11,"clone",E,E,119,[[["self"]],[R[2490]]]],[11,"clone",E,E,120,[[["self"]],["typeptr"]]],[11,"clone",E,E,121,[[["self"]],[R[2217]]]],[11,"clone",E,E,122,[[["self"]],[R[2290]]]],[11,"clone",E,E,123,[[["self"]],[R[2220]]]],[11,"clone",E,E,124,[[["self"]],[R[2291]]]],[11,"clone",E,E,109,[[["self"]],["abi"]]],[11,"clone",E,E,110,[[["self"]],[R[2241]]]],[11,"clone",E,E,125,[[["self"]],[R[2455]]]],[11,"clone",E,E,175,[[["self"]],[R[2279]]]],[11,"clone",E,E,177,[[["self"]],["pat"]]],[11,"clone",E,E,127,[[["self"]],["patbox"]]],[11,"clone",E,E,128,[[["self"]],[R[2491]]]],[11,"clone",E,E,129,[[["self"]],["patlit"]]],[11,"clone",E,E,130,[[["self"]],[R[2492]]]],[11,"clone",E,E,131,[[["self"]],["pator"]]],[11,"clone",E,E,132,[[["self"]],["patpath"]]],[11,"clone",E,E,133,[[["self"]],[R[2493]]]],[11,"clone",E,E,134,[[["self"]],[R[2165]]]],[11,"clone",E,E,135,[[["self"]],["patrest"]]],[11,"clone",E,E,136,[[["self"]],[R[2494]]]],[11,"clone",E,E,137,[[["self"]],[R[2278]]]],[11,"clone",E,E,138,[[["self"]],[R[2495]]]],[11,"clone",E,E,139,[[["self"]],[R[2171]]]],[11,"clone",E,E,140,[[["self"]],["pattype"]]],[11,"clone",E,E,141,[[["self"]],["patwild"]]],[11,"clone",E,E,126,[[["self"]],[R[2496]]]],[11,"clone",E,E,146,[[["self"]],["path"]]],[11,"clone",E,E,147,[[["self"]],[R[2177]]]],[11,"clone",E,E,179,[[["self"]],[R[2175]]]],[11,"clone",E,E,178,[[["self"]],[R[2097]]]],[11,"clone",E,E,142,[[["self"]],[R[2015]]]],[11,"clone",E,E,143,[[["self"]],["binding"]]],[11,"clone",E,E,144,[[["self"]],[R[2243]]]],[11,"clone",E,E,145,[[["self"]],[R[2156]]]],[11,"clone",E,E,148,[[["self"]],["qself"]]],[11,"clone",R[2472],E,291,[[["self"]],["cursor"]]],[11,"clone",R[2473],E,294,[[["self"]],[R[2469]]]],[11,"clone",E,E,307,[[["self"]],["self"]]],[11,"clone",E,E,309,[[["self"]],["intopairs"]]],[11,"clone",E,E,310,[[["self"]],[R[485]]]],[11,"clone",E,E,311,[[["self"]],["self"]]],[11,"clone",E,E,293,[[["self"]],["pair"]]],[11,"clone",R[2474],E,301,[[["self"]],["stepcursor"]]],[11,"clone","syn",E,303,[[["self"]],["error"]]],[11,R[90],R[2475],E,180,[[],["self"]]],[11,R[90],E,E,181,[[],["self"]]],[11,R[90],E,E,182,[[],["self"]]],[11,R[90],E,E,183,[[],["self"]]],[11,R[90],E,E,184,[[],["self"]]],[11,R[90],E,E,185,[[],["self"]]],[11,R[90],E,E,186,[[],["self"]]],[11,R[90],E,E,187,[[],["self"]]],[11,R[90],E,E,188,[[],["self"]]],[11,R[90],E,E,189,[[],["self"]]],[11,R[90],E,E,190,[[],["self"]]],[11,R[90],E,E,191,[[],["self"]]],[11,R[90],E,E,192,[[],["self"]]],[11,R[90],E,E,193,[[],["self"]]],[11,R[90],E,E,194,[[],["self"]]],[11,R[90],E,E,195,[[],["self"]]],[11,R[90],E,E,196,[[],["self"]]],[11,R[90],E,E,197,[[],["self"]]],[11,R[90],E,E,198,[[],["self"]]],[11,R[90],E,E,199,[[],["self"]]],[11,R[90],E,E,200,[[],["self"]]],[11,R[90],E,E,201,[[],["self"]]],[11,R[90],E,E,202,[[],["self"]]],[11,R[90],E,E,203,[[],["self"]]],[11,R[90],E,E,204,[[],["self"]]],[11,R[90],E,E,205,[[],["self"]]],[11,R[90],E,E,206,[[],["self"]]],[11,R[90],E,E,207,[[],["self"]]],[11,R[90],E,E,208,[[],["self"]]],[11,R[90],E,E,209,[[],["self"]]],[11,R[90],E,E,210,[[],["self"]]],[11,R[90],E,E,211,[[],["self"]]],[11,R[90],E,E,212,[[],["self"]]],[11,R[90],E,E,213,[[],["self"]]],[11,R[90],E,E,214,[[],["self"]]],[11,R[90],E,E,215,[[],["self"]]],[11,R[90],E,E,216,[[],["self"]]],[11,R[90],E,E,217,[[],["self"]]],[11,R[90],E,E,218,[[],["self"]]],[11,R[90],E,E,219,[[],["self"]]],[11,R[90],E,E,220,[[],["self"]]],[11,R[90],E,E,221,[[],["self"]]],[11,R[90],E,E,222,[[],["self"]]],[11,R[90],E,E,223,[[],["self"]]],[11,R[90],E,E,224,[[],["self"]]],[11,R[90],E,E,225,[[],["self"]]],[11,R[90],E,E,226,[[],["self"]]],[11,R[90],E,E,227,[[],["self"]]],[11,R[90],E,E,228,[[],["self"]]],[11,R[90],E,E,229,[[],["self"]]],[11,R[90],E,E,230,[[],["self"]]],[11,R[90],E,E,231,[[],["self"]]],[11,R[90],E,E,232,[[],["self"]]],[11,R[90],E,E,233,[[],["self"]]],[11,R[90],E,E,234,[[],["self"]]],[11,R[90],E,E,235,[[],["self"]]],[11,R[90],E,E,236,[[],["self"]]],[11,R[90],E,E,237,[[],["self"]]],[11,R[90],E,E,238,[[],["self"]]],[11,R[90],E,E,239,[[],["self"]]],[11,R[90],E,E,240,[[],["self"]]],[11,R[90],E,E,241,[[],["self"]]],[11,R[90],E,E,242,[[],["self"]]],[11,R[90],E,E,243,[[],["self"]]],[11,R[90],E,E,244,[[],["self"]]],[11,R[90],E,E,245,[[],["self"]]],[11,R[90],E,E,246,[[],["self"]]],[11,R[90],E,E,247,[[],["self"]]],[11,R[90],E,E,248,[[],["self"]]],[11,R[90],E,E,249,[[],["self"]]],[11,R[90],E,E,250,[[],["self"]]],[11,R[90],E,E,251,[[],["self"]]],[11,R[90],E,E,252,[[],["self"]]],[11,R[90],E,E,253,[[],["self"]]],[11,R[90],E,E,254,[[],["self"]]],[11,R[90],E,E,255,[[],["self"]]],[11,R[90],E,E,256,[[],["self"]]],[11,R[90],E,E,257,[[],["self"]]],[11,R[90],E,E,258,[[],["self"]]],[11,R[90],E,E,259,[[],["self"]]],[11,R[90],E,E,260,[[],["self"]]],[11,R[90],E,E,261,[[],["self"]]],[11,R[90],E,E,262,[[],["self"]]],[11,R[90],E,E,263,[[],["self"]]],[11,R[90],E,E,264,[[],["self"]]],[11,R[90],E,E,265,[[],["self"]]],[11,R[90],E,E,266,[[],["self"]]],[11,R[90],E,E,267,[[],["self"]]],[11,R[90],E,E,268,[[],["self"]]],[11,R[90],E,E,269,[[],["self"]]],[11,R[90],E,E,270,[[],["self"]]],[11,R[90],E,E,271,[[],["self"]]],[11,R[90],E,E,272,[[],["self"]]],[11,R[90],E,E,273,[[],["self"]]],[11,R[90],E,E,274,[[],["self"]]],[11,R[90],E,E,275,[[],["self"]]],[11,R[90],E,E,276,[[],["self"]]],[11,R[90],E,E,277,[[],["self"]]],[11,R[90],E,E,278,[[],["self"]]],[11,R[90],E,E,279,[[],["self"]]],[11,R[90],E,E,280,[[],["self"]]],[11,R[90],E,E,281,[[],["self"]]],[11,R[90],E,E,282,[[],["self"]]],[11,R[90],"syn",E,56,[[],[R[1860]]]],[11,R[90],E,E,54,[[],[R[2023]]]],[11,R[90],E,E,179,[[],["self"]]],[11,R[90],R[2473],E,294,[[],["self"]]],[11,"cmp","syn",E,100,[[["self"],[R[2000]]],[R[105]]]],[11,"eq",R[2475],E,180,[[[R[2497]],["self"]],["bool"]]],[11,"eq",E,E,181,[[["abstract"],["self"]],["bool"]]],[11,"eq",E,E,182,[[["self"],["as"]],["bool"]]],[11,"eq",E,E,183,[[["self"],["async"]],["bool"]]],[11,"eq",E,E,184,[[["self"],["auto"]],["bool"]]],[11,"eq",E,E,185,[[["await"],["self"]],["bool"]]],[11,"eq",E,E,186,[[["become"],["self"]],["bool"]]],[11,"eq",E,E,187,[[["self"],["box"]],["bool"]]],[11,"eq",E,E,188,[[["self"],["break"]],["bool"]]],[11,"eq",E,E,189,[[["self"],["const"]],["bool"]]],[11,"eq",E,E,190,[[["self"],["continue"]],["bool"]]],[11,"eq",E,E,191,[[["self"],["crate"]],["bool"]]],[11,"eq",E,E,192,[[[R[90]],["self"]],["bool"]]],[11,"eq",E,E,193,[[["self"],["do"]],["bool"]]],[11,"eq",E,E,194,[[["self"],["dyn"]],["bool"]]],[11,"eq",E,E,195,[[["else"],["self"]],["bool"]]],[11,"eq",E,E,196,[[["self"],["enum"]],["bool"]]],[11,"eq",E,E,197,[[["extern"],["self"]],["bool"]]],[11,"eq",E,E,198,[[["final"],["self"]],["bool"]]],[11,"eq",E,E,199,[[["fn"],["self"]],["bool"]]],[11,"eq",E,E,200,[[["for"],["self"]],["bool"]]],[11,"eq",E,E,201,[[["if"],["self"]],["bool"]]],[11,"eq",E,E,202,[[["self"],["impl"]],["bool"]]],[11,"eq",E,E,203,[[["in"],["self"]],["bool"]]],[11,"eq",E,E,204,[[["let"],["self"]],["bool"]]],[11,"eq",E,E,205,[[["self"],["loop"]],["bool"]]],[11,"eq",E,E,206,[[["macro"],["self"]],["bool"]]],[11,"eq",E,E,207,[[["self"],["match"]],["bool"]]],[11,"eq",E,E,208,[[["self"],["mod"]],["bool"]]],[11,"eq",E,E,209,[[["self"],["move"]],["bool"]]],[11,"eq",E,E,210,[[["mut"],["self"]],["bool"]]],[11,"eq",E,E,211,[[["override"],["self"]],["bool"]]],[11,"eq",E,E,212,[[["self"],["priv"]],["bool"]]],[11,"eq",E,E,213,[[["pub"],["self"]],["bool"]]],[11,"eq",E,E,214,[[["self"],["ref"]],["bool"]]],[11,"eq",E,E,215,[[["self"],["return"]],["bool"]]],[11,"eq",E,E,216,[[["selftype"],["self"]],["bool"]]],[11,"eq",E,E,217,[[["self"],["selfvalue"]],["bool"]]],[11,"eq",E,E,218,[[["self"],["static"]],["bool"]]],[11,"eq",E,E,219,[[["self"],["struct"]],["bool"]]],[11,"eq",E,E,220,[[["super"],["self"]],["bool"]]],[11,"eq",E,E,221,[[["self"],["trait"]],["bool"]]],[11,"eq",E,E,222,[[["self"],["try"]],["bool"]]],[11,"eq",E,E,223,[[["type"],["self"]],["bool"]]],[11,"eq",E,E,224,[[["self"],["typeof"]],["bool"]]],[11,"eq",E,E,225,[[["union"],["self"]],["bool"]]],[11,"eq",E,E,226,[[["self"],["unsafe"]],["bool"]]],[11,"eq",E,E,227,[[["unsized"],["self"]],["bool"]]],[11,"eq",E,E,228,[[["self"],["use"]],["bool"]]],[11,"eq",E,E,229,[[["virtual"],["self"]],["bool"]]],[11,"eq",E,E,230,[[["where"],["self"]],["bool"]]],[11,"eq",E,E,231,[[["while"],["self"]],["bool"]]],[11,"eq",E,E,232,[[["self"],["yield"]],["bool"]]],[11,"eq",E,E,233,[[["self"],["add"]],["bool"]]],[11,"eq",E,E,234,[[["addeq"],["self"]],["bool"]]],[11,"eq",E,E,235,[[["self"],["and"]],["bool"]]],[11,"eq",E,E,236,[[["self"],["andand"]],["bool"]]],[11,"eq",E,E,237,[[["self"],["andeq"]],["bool"]]],[11,"eq",E,E,238,[[["self"],["at"]],["bool"]]],[11,"eq",E,E,239,[[["bang"],["self"]],["bool"]]],[11,"eq",E,E,240,[[["self"],["caret"]],["bool"]]],[11,"eq",E,E,241,[[["self"],["careteq"]],["bool"]]],[11,"eq",E,E,242,[[["colon"],["self"]],["bool"]]],[11,"eq",E,E,243,[[["self"],["colon2"]],["bool"]]],[11,"eq",E,E,244,[[["comma"],["self"]],["bool"]]],[11,"eq",E,E,245,[[["self"],["div"]],["bool"]]],[11,"eq",E,E,246,[[["diveq"],["self"]],["bool"]]],[11,"eq",E,E,247,[[["dollar"],["self"]],["bool"]]],[11,"eq",E,E,248,[[["self"],["dot"]],["bool"]]],[11,"eq",E,E,249,[[["self"],["dot2"]],["bool"]]],[11,"eq",E,E,250,[[["self"],["dot3"]],["bool"]]],[11,"eq",E,E,251,[[["dotdoteq"],["self"]],["bool"]]],[11,"eq",E,E,252,[[["eq"],["self"]],["bool"]]],[11,"eq",E,E,253,[[["eqeq"],["self"]],["bool"]]],[11,"eq",E,E,254,[[["ge"],["self"]],["bool"]]],[11,"eq",E,E,255,[[["self"],["gt"]],["bool"]]],[11,"eq",E,E,256,[[["self"],["le"]],["bool"]]],[11,"eq",E,E,257,[[["self"],["lt"]],["bool"]]],[11,"eq",E,E,258,[[["self"],["muleq"]],["bool"]]],[11,"eq",E,E,259,[[["self"],["ne"]],["bool"]]],[11,"eq",E,E,260,[[["self"],["or"]],["bool"]]],[11,"eq",E,E,261,[[["self"],["oreq"]],["bool"]]],[11,"eq",E,E,262,[[["oror"],["self"]],["bool"]]],[11,"eq",E,E,263,[[["self"],["pound"]],["bool"]]],[11,"eq",E,E,264,[[["self"],["question"]],["bool"]]],[11,"eq",E,E,265,[[["self"],["rarrow"]],["bool"]]],[11,"eq",E,E,266,[[["self"],["larrow"]],["bool"]]],[11,"eq",E,E,267,[[["rem"],["self"]],["bool"]]],[11,"eq",E,E,268,[[["remeq"],["self"]],["bool"]]],[11,"eq",E,E,269,[[["self"],["fatarrow"]],["bool"]]],[11,"eq",E,E,270,[[["self"],["semi"]],["bool"]]],[11,"eq",E,E,271,[[["self"],["shl"]],["bool"]]],[11,"eq",E,E,272,[[["shleq"],["self"]],["bool"]]],[11,"eq",E,E,273,[[["self"],["shr"]],["bool"]]],[11,"eq",E,E,274,[[["shreq"],["self"]],["bool"]]],[11,"eq",E,E,275,[[["star"],["self"]],["bool"]]],[11,"eq",E,E,276,[[["sub"],["self"]],["bool"]]],[11,"eq",E,E,277,[[["self"],["subeq"]],["bool"]]],[11,"eq",E,E,278,[[["self"],["tilde"]],["bool"]]],[11,"eq",E,E,279,[[["self"],["brace"]],["bool"]]],[11,"eq",E,E,280,[[["self"],["bracket"]],["bool"]]],[11,"eq",E,E,281,[[["self"],["paren"]],["bool"]]],[11,"eq",E,E,282,[[["group"],["self"]],["bool"]]],[11,"eq","syn",E,0,[[["self"]],["bool"]]],[11,"eq",E,E,149,[[["self"],[R[2239]]],["bool"]]],[11,"ne",E,E,149,[[["self"],[R[2239]]],["bool"]]],[11,"eq",E,E,150,[[["self"],["meta"]],["bool"]]],[11,"ne",E,E,150,[[["self"],["meta"]],["bool"]]],[11,"eq",E,E,1,[[[R[2476]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[2476]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[2151]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[2151]]],["bool"]]],[11,"eq",E,E,151,[[[R[2277]],["self"]],["bool"]]],[11,"ne",E,E,151,[[[R[2277]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["variant"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["variant"],["self"]],["bool"]]],[11,"eq",E,E,152,[[["self"],["fields"]],["bool"]]],[11,"ne",E,E,152,[[["self"],["fields"]],["bool"]]],[11,"eq",E,E,4,[[[R[2082]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[2082]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[2084]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[2084]]],["bool"]]],[11,"eq",E,E,3,[[["field"],["self"]],["bool"]]],[11,"ne",E,E,3,[[["field"],["self"]],["bool"]]],[11,"eq",E,E,153,[[[R[2294]],["self"]],["bool"]]],[11,"ne",E,E,153,[[[R[2294]],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[2293]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[2293]]],["bool"]]],[11,"eq",E,E,7,[[[R[2477]],["self"]],["bool"]]],[11,"ne",E,E,7,[[[R[2477]],["self"]],["bool"]]],[11,"eq",E,E,9,[[[R[2234]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[2234]],["self"]],["bool"]]],[11,"eq",E,E,14,[[[R[2246]],["self"]],["bool"]]],[11,"ne",E,E,14,[[[R[2246]],["self"]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[2247]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[2247]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[2034]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[2034]]],["bool"]]],[11,"eq",E,E,17,[[[R[2248]],["self"]],["bool"]]],[11,"ne",E,E,17,[[[R[2248]],["self"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[2249]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[2249]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[2250]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[2250]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[2251]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[2251]]],["bool"]]],[11,"eq",E,E,21,[[["self"],["exprbox"]],["bool"]]],[11,"ne",E,E,21,[[["self"],["exprbox"]],["bool"]]],[11,"eq",E,E,22,[[[R[2252]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[2252]],["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[2478]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[2478]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[2479]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[2479]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[2044]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[2044]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[2046]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[2046]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[2253]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[2253]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[2049]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[2049]]],["bool"]]],[11,"eq",E,E,29,[[[R[2254]],["self"]],["bool"]]],[11,"ne",E,E,29,[[[R[2254]],["self"]],["bool"]]],[11,"eq",E,E,30,[[["self"],["exprif"]],["bool"]]],[11,"ne",E,E,30,[[["self"],["exprif"]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[2255]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[2255]]],["bool"]]],[11,"eq",E,E,32,[[["self"],["exprlet"]],["bool"]]],[11,"ne",E,E,32,[[["self"],["exprlet"]],["bool"]]],[11,"eq",E,E,33,[[["self"],["exprlit"]],["bool"]]],[11,"ne",E,E,33,[[["self"],["exprlit"]],["bool"]]],[11,"eq",E,E,34,[[[R[2480]],["self"]],["bool"]]],[11,"ne",E,E,34,[[[R[2480]],["self"]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[2256]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[2256]]],["bool"]]],[11,"eq",E,E,36,[[[R[2257]],["self"]],["bool"]]],[11,"ne",E,E,36,[[[R[2257]],["self"]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[2059]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[2059]]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[2258]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[2258]]],["bool"]]],[11,"eq",E,E,39,[[[R[2481]],["self"]],["bool"]]],[11,"ne",E,E,39,[[[R[2481]],["self"]],["bool"]]],[11,"eq",E,E,40,[[[R[2259]],["self"]],["bool"]]],[11,"ne",E,E,40,[[[R[2259]],["self"]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[2064]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[2064]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[2260]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[2260]]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[2261]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[2261]]],["bool"]]],[11,"eq",E,E,44,[[["self"],[R[2262]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[2262]]],["bool"]]],[11,"eq",E,E,45,[[["self"],["exprtry"]],["bool"]]],[11,"ne",E,E,45,[[["self"],["exprtry"]],["bool"]]],[11,"eq",E,E,46,[[[R[2070]],["self"]],["bool"]]],[11,"ne",E,E,46,[[[R[2070]],["self"]],["bool"]]],[11,"eq",E,E,47,[[[R[2263]],["self"]],["bool"]]],[11,"ne",E,E,47,[[[R[2263]],["self"]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[2482]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[2482]]],["bool"]]],[11,"eq",E,E,49,[[[R[2264]],["self"]],["bool"]]],[11,"ne",E,E,49,[[[R[2264]],["self"]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[2265]]],["bool"]]],[11,"ne",E,E,50,[[["self"],[R[2265]]],["bool"]]],[11,"eq",E,E,51,[[[R[2266]],["self"]],["bool"]]],[11,"ne",E,E,51,[[[R[2266]],["self"]],["bool"]]],[11,"eq",E,E,52,[[[R[2267]],["self"]],["bool"]]],[11,"ne",E,E,52,[[[R[2267]],["self"]],["bool"]]],[11,"eq",E,E,156,[[["self"]],["bool"]]],[11,"eq",E,E,157,[[["member"],["self"]],["bool"]]],[11,"ne",E,E,157,[[["member"],["self"]],["bool"]]],[11,"eq",E,E,53,[[["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[2153]],["self"]],["bool"]]],[11,"ne",E,E,13,[[[R[2153]],["self"]],["bool"]]],[11,"eq",E,E,154,[[["self"],[R[2099]]],["bool"]]],[11,"ne",E,E,154,[[["self"],[R[2099]]],["bool"]]],[11,"eq",E,E,11,[[[R[2268]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[2268]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["label"],["self"]],["bool"]]],[11,"ne",E,E,12,[[["label"],["self"]],["bool"]]],[11,"eq",E,E,10,[[["arm"],["self"]],["bool"]]],[11,"ne",E,E,10,[[["arm"],["self"]],["bool"]]],[11,"eq",E,E,155,[[["self"],[R[2186]]],["bool"]]],[11,"ne",E,E,155,[[["self"],[R[2186]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[1860]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[1860]]],["bool"]]],[11,"eq",E,E,158,[[["self"],[R[2101]]],["bool"]]],[11,"ne",E,E,158,[[["self"],[R[2101]]],["bool"]]],[11,"eq",E,E,62,[[["self"],[R[2288]]],["bool"]]],[11,"ne",E,E,62,[[["self"],[R[2288]]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[2136]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[2136]]],["bool"]]],[11,"eq",E,E,55,[[[R[2242]],["self"]],["bool"]]],[11,"ne",E,E,55,[[[R[2242]],["self"]],["bool"]]],[11,"eq",E,E,305,[[[R[2498]],["self"]],["bool"]]],[11,"ne",E,E,305,[[[R[2498]],["self"]],["bool"]]],[11,"eq",E,E,283,[[["self"],[R[2499]]],["bool"]]],[11,"ne",E,E,283,[[["self"],[R[2499]]],["bool"]]],[11,"eq",E,E,306,[[["self"],[R[2500]]],["bool"]]],[11,"ne",E,E,306,[[["self"],[R[2500]]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[2023]]],["bool"]]],[11,"ne",E,E,54,[[["self"],[R[2023]]],["bool"]]],[11,"eq",E,E,160,[[["self"],[R[2212]]],["bool"]]],[11,"ne",E,E,160,[[["self"],[R[2212]]],["bool"]]],[11,"eq",E,E,61,[[[R[2280]],["self"]],["bool"]]],[11,"ne",E,E,61,[[[R[2280]],["self"]],["bool"]]],[11,"eq",E,E,159,[[["self"],[R[2192]]],["bool"]]],[11,"ne",E,E,159,[[["self"],[R[2192]]],["bool"]]],[11,"eq",E,E,63,[[[R[2012]],["self"]],["bool"]]],[11,"ne",E,E,63,[[[R[2012]],["self"]],["bool"]]],[11,"eq",E,E,161,[[["self"],[R[2238]]],["bool"]]],[11,"ne",E,E,161,[[["self"],[R[2238]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[2183]]],["bool"]]],[11,"ne",E,E,60,[[["self"],[R[2183]]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[2181]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[2181]]],["bool"]]],[11,"eq",E,E,58,[[[R[2179]],["self"]],["bool"]]],[11,"ne",E,E,58,[[[R[2179]],["self"]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[2269]]],["bool"]]],[11,"ne",E,E,72,[[["self"],[R[2269]]],["bool"]]],[11,"eq",E,E,73,[[[R[2483]],["self"]],["bool"]]],[11,"ne",E,E,73,[[[R[2483]],["self"]],["bool"]]],[11,"eq",E,E,74,[[[R[2117]],["self"]],["bool"]]],[11,"ne",E,E,74,[[[R[2117]],["self"]],["bool"]]],[11,"eq",E,E,75,[[["self"],["itemfn"]],["bool"]]],[11,"ne",E,E,75,[[["self"],["itemfn"]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[2120]]],["bool"]]],[11,"ne",E,E,76,[[["self"],[R[2120]]],["bool"]]],[11,"eq",E,E,77,[[["self"],[R[2484]]],["bool"]]],[11,"ne",E,E,77,[[["self"],[R[2484]]],["bool"]]],[11,"eq",E,E,78,[[["self"],[R[2270]]],["bool"]]],[11,"ne",E,E,78,[[["self"],[R[2270]]],["bool"]]],[11,"eq",E,E,80,[[["itemmod"],["self"]],["bool"]]],[11,"ne",E,E,80,[[["itemmod"],["self"]],["bool"]]],[11,"eq",E,E,81,[[["self"],[R[2272]]],["bool"]]],[11,"ne",E,E,81,[[["self"],[R[2272]]],["bool"]]],[11,"eq",E,E,82,[[["self"],[R[2273]]],["bool"]]],[11,"ne",E,E,82,[[["self"],[R[2273]]],["bool"]]],[11,"eq",E,E,83,[[["self"],[R[2274]]],["bool"]]],[11,"ne",E,E,83,[[["self"],[R[2274]]],["bool"]]],[11,"eq",E,E,84,[[["self"],[R[2129]]],["bool"]]],[11,"ne",E,E,84,[[["self"],[R[2129]]],["bool"]]],[11,"eq",E,E,85,[[[R[2485]],["self"]],["bool"]]],[11,"ne",E,E,85,[[[R[2485]],["self"]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[2275]]],["bool"]]],[11,"ne",E,E,86,[[["self"],[R[2275]]],["bool"]]],[11,"eq",E,E,87,[[["self"],["itemuse"]],["bool"]]],[11,"ne",E,E,87,[[["self"],["itemuse"]],["bool"]]],[11,"eq",E,E,165,[[["self"]],["bool"]]],[11,"eq",E,E,79,[[["self"]],["bool"]]],[11,"eq",E,E,167,[[["self"],["usetree"]],["bool"]]],[11,"ne",E,E,167,[[["self"],["usetree"]],["bool"]]],[11,"eq",E,E,97,[[["usepath"],["self"]],["bool"]]],[11,"ne",E,E,97,[[["usepath"],["self"]],["bool"]]],[11,"eq",E,E,96,[[["usename"],["self"]],["bool"]]],[11,"ne",E,E,96,[[["usename"],["self"]],["bool"]]],[11,"eq",E,E,98,[[["self"],[R[2292]]],["bool"]]],[11,"ne",E,E,98,[[["self"],[R[2292]]],["bool"]]],[11,"eq",E,E,94,[[["self"],["useglob"]],["bool"]]],[11,"ne",E,E,94,[[["self"],["useglob"]],["bool"]]],[11,"eq",E,E,95,[[[R[2486]],["self"]],["bool"]]],[11,"ne",E,E,95,[[[R[2486]],["self"]],["bool"]]],[11,"eq",E,E,64,[[["self"],[R[2089]]],["bool"]]],[11,"ne",E,E,64,[[["self"],[R[2089]]],["bool"]]],[11,"eq",E,E,66,[[[R[2093]],["self"]],["bool"]]],[11,"ne",E,E,66,[[[R[2093]],["self"]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[2095]]],["bool"]]],[11,"ne",E,E,67,[[["self"],[R[2095]]],["bool"]]],[11,"eq",E,E,65,[[[R[2091]],["self"]],["bool"]]],[11,"ne",E,E,65,[[[R[2091]],["self"]],["bool"]]],[11,"eq",E,E,163,[[["self"]],["bool"]]],[11,"eq",E,E,90,[[[R[2195]],["self"]],["bool"]]],[11,"ne",E,E,90,[[[R[2195]],["self"]],["bool"]]],[11,"eq",E,E,92,[[["self"],[R[2199]]],["bool"]]],[11,"ne",E,E,92,[[["self"],[R[2199]]],["bool"]]],[11,"eq",E,E,93,[[["self"],[R[2201]]],["bool"]]],[11,"ne",E,E,93,[[["self"],[R[2201]]],["bool"]]],[11,"eq",E,E,91,[[[R[2197]],["self"]],["bool"]]],[11,"ne",E,E,91,[[[R[2197]],["self"]],["bool"]]],[11,"eq",E,E,166,[[["self"]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[2106]]],["bool"]]],[11,"ne",E,E,68,[[["self"],[R[2106]]],["bool"]]],[11,"eq",E,E,70,[[[R[2110]],["self"]],["bool"]]],[11,"ne",E,E,70,[[[R[2110]],["self"]],["bool"]]],[11,"eq",E,E,71,[[["self"],[R[2112]]],["bool"]]],[11,"ne",E,E,71,[[["self"],[R[2112]]],["bool"]]],[11,"eq",E,E,69,[[[R[2108]],["self"]],["bool"]]],[11,"ne",E,E,69,[[[R[2108]],["self"]],["bool"]]],[11,"eq",E,E,164,[[["self"]],["bool"]]],[11,"eq",E,E,89,[[["self"],[R[188]]],["bool"]]],[11,"ne",E,E,89,[[["self"],[R[188]]],["bool"]]],[11,"eq",E,E,162,[[["fnarg"],["self"]],["bool"]]],[11,"ne",E,E,162,[[["fnarg"],["self"]],["bool"]]],[11,"eq",E,E,88,[[[R[2422]],["self"]],["bool"]]],[11,"ne",E,E,88,[[[R[2422]],["self"]],["bool"]]],[11,"eq",E,E,99,[[["file"],["self"]],["bool"]]],[11,"ne",E,E,99,[[["file"],["self"]],["bool"]]],[11,"eq",E,E,100,[[["self"],[R[2000]]],["bool"]]],[11,"eq",E,E,168,[[["self"]],["bool"]]],[11,"eq",E,E,284,[[["self"]],["bool"]]],[11,"eq",E,E,285,[[["self"]],["bool"]]],[11,"eq",E,E,286,[[["self"]],["bool"]]],[11,"eq",E,E,287,[[["self"]],["bool"]]],[11,"eq",E,E,288,[[["self"]],["bool"]]],[11,"eq",E,E,289,[[["self"]],["bool"]]],[11,"eq",E,E,101,[[["self"]],["bool"]]],[11,"eq",E,E,169,[[["self"],["strstyle"]],["bool"]]],[11,"ne",E,E,169,[[["self"],["strstyle"]],["bool"]]],[11,"eq",E,E,170,[[[R[2147]],["self"]],["bool"]]],[11,"ne",E,E,170,[[[R[2147]],["self"]],["bool"]]],[11,"eq",E,E,102,[[["self"]],["bool"]]],[11,"eq",E,E,106,[[[R[2030]],["self"]],["bool"]]],[11,"ne",E,E,106,[[[R[2030]],["self"]],["bool"]]],[11,"eq",E,E,171,[[["data"],["self"]],["bool"]]],[11,"ne",E,E,171,[[["data"],["self"]],["bool"]]],[11,"eq",E,E,104,[[["self"],[R[2244]]],["bool"]]],[11,"ne",E,E,104,[[["self"],[R[2244]]],["bool"]]],[11,"eq",E,E,103,[[["self"],[R[2489]]],["bool"]]],[11,"ne",E,E,103,[[["self"],[R[2489]]],["bool"]]],[11,"eq",E,E,105,[[[R[2245]],["self"]],["bool"]]],[11,"ne",E,E,105,[[[R[2245]],["self"]],["bool"]]],[11,"eq",E,E,172,[[["self"],["binop"]],["bool"]]],[11,"ne",E,E,172,[[["self"],["binop"]],["bool"]]],[11,"eq",E,E,173,[[["self"],["unop"]],["bool"]]],[11,"ne",E,E,173,[[["self"],["unop"]],["bool"]]],[11,"eq",E,E,107,[[["block"],["self"]],["bool"]]],[11,"ne",E,E,107,[[["block"],["self"]],["bool"]]],[11,"eq",E,E,174,[[["stmt"],["self"]],["bool"]]],[11,"ne",E,E,174,[[["stmt"],["self"]],["bool"]]],[11,"eq",E,E,108,[[["self"],["local"]],["bool"]]],[11,"ne",E,E,108,[[["self"],["local"]],["bool"]]],[11,"eq",E,E,111,[[["self"],[R[2282]]],["bool"]]],[11,"ne",E,E,111,[[["self"],[R[2282]]],["bool"]]],[11,"eq",E,E,112,[[["self"],[R[2283]]],["bool"]]],[11,"ne",E,E,112,[[["self"],[R[2283]]],["bool"]]],[11,"eq",E,E,113,[[["self"],[R[2284]]],["bool"]]],[11,"ne",E,E,113,[[["self"],[R[2284]]],["bool"]]],[11,"eq",E,E,114,[[[R[2206]],["self"]],["bool"]]],[11,"ne",E,E,114,[[[R[2206]],["self"]],["bool"]]],[11,"eq",E,E,115,[[[R[2285]],["self"]],["bool"]]],[11,"ne",E,E,115,[[[R[2285]],["self"]],["bool"]]],[11,"eq",E,E,116,[[[R[2286]],["self"]],["bool"]]],[11,"ne",E,E,116,[[[R[2286]],["self"]],["bool"]]],[11,"eq",E,E,117,[[["self"],[R[2287]]],["bool"]]],[11,"ne",E,E,117,[[["self"],[R[2287]]],["bool"]]],[11,"eq",E,E,118,[[[R[2289]],["self"]],["bool"]]],[11,"ne",E,E,118,[[[R[2289]],["self"]],["bool"]]],[11,"eq",E,E,119,[[[R[2490]],["self"]],["bool"]]],[11,"ne",E,E,119,[[[R[2490]],["self"]],["bool"]]],[11,"eq",E,E,120,[[["typeptr"],["self"]],["bool"]]],[11,"ne",E,E,120,[[["typeptr"],["self"]],["bool"]]],[11,"eq",E,E,121,[[[R[2217]],["self"]],["bool"]]],[11,"ne",E,E,121,[[[R[2217]],["self"]],["bool"]]],[11,"eq",E,E,122,[[["self"],[R[2290]]],["bool"]]],[11,"ne",E,E,122,[[["self"],[R[2290]]],["bool"]]],[11,"eq",E,E,123,[[["self"],[R[2220]]],["bool"]]],[11,"ne",E,E,123,[[["self"],[R[2220]]],["bool"]]],[11,"eq",E,E,124,[[["self"],[R[2291]]],["bool"]]],[11,"ne",E,E,124,[[["self"],[R[2291]]],["bool"]]],[11,"eq",E,E,176,[[["self"]],["bool"]]],[11,"eq",E,E,109,[[["abi"],["self"]],["bool"]]],[11,"ne",E,E,109,[[["abi"],["self"]],["bool"]]],[11,"eq",E,E,110,[[[R[2241]],["self"]],["bool"]]],[11,"ne",E,E,110,[[[R[2241]],["self"]],["bool"]]],[11,"eq",E,E,125,[[["self"],[R[2455]]],["bool"]]],[11,"ne",E,E,125,[[["self"],[R[2455]]],["bool"]]],[11,"eq",E,E,175,[[[R[2279]],["self"]],["bool"]]],[11,"ne",E,E,175,[[[R[2279]],["self"]],["bool"]]],[11,"eq",E,E,127,[[["patbox"],["self"]],["bool"]]],[11,"ne",E,E,127,[[["patbox"],["self"]],["bool"]]],[11,"eq",E,E,128,[[[R[2491]],["self"]],["bool"]]],[11,"ne",E,E,128,[[[R[2491]],["self"]],["bool"]]],[11,"eq",E,E,129,[[["self"],["patlit"]],["bool"]]],[11,"ne",E,E,129,[[["self"],["patlit"]],["bool"]]],[11,"eq",E,E,130,[[["self"],[R[2492]]],["bool"]]],[11,"ne",E,E,130,[[["self"],[R[2492]]],["bool"]]],[11,"eq",E,E,131,[[["pator"],["self"]],["bool"]]],[11,"ne",E,E,131,[[["pator"],["self"]],["bool"]]],[11,"eq",E,E,132,[[["self"],["patpath"]],["bool"]]],[11,"ne",E,E,132,[[["self"],["patpath"]],["bool"]]],[11,"eq",E,E,133,[[[R[2493]],["self"]],["bool"]]],[11,"ne",E,E,133,[[[R[2493]],["self"]],["bool"]]],[11,"eq",E,E,134,[[[R[2165]],["self"]],["bool"]]],[11,"ne",E,E,134,[[[R[2165]],["self"]],["bool"]]],[11,"eq",E,E,135,[[["patrest"],["self"]],["bool"]]],[11,"ne",E,E,135,[[["patrest"],["self"]],["bool"]]],[11,"eq",E,E,136,[[[R[2494]],["self"]],["bool"]]],[11,"ne",E,E,136,[[[R[2494]],["self"]],["bool"]]],[11,"eq",E,E,137,[[["self"],[R[2278]]],["bool"]]],[11,"ne",E,E,137,[[["self"],[R[2278]]],["bool"]]],[11,"eq",E,E,138,[[["self"],[R[2495]]],["bool"]]],[11,"ne",E,E,138,[[["self"],[R[2495]]],["bool"]]],[11,"eq",E,E,139,[[[R[2171]],["self"]],["bool"]]],[11,"ne",E,E,139,[[[R[2171]],["self"]],["bool"]]],[11,"eq",E,E,140,[[["self"],["pattype"]],["bool"]]],[11,"ne",E,E,140,[[["self"],["pattype"]],["bool"]]],[11,"eq",E,E,141,[[["self"],["patwild"]],["bool"]]],[11,"ne",E,E,141,[[["self"],["patwild"]],["bool"]]],[11,"eq",E,E,126,[[[R[2496]],["self"]],["bool"]]],[11,"ne",E,E,126,[[[R[2496]],["self"]],["bool"]]],[11,"eq",E,E,177,[[["self"]],["bool"]]],[11,"eq",E,E,146,[[["self"],["path"]],["bool"]]],[11,"ne",E,E,146,[[["self"],["path"]],["bool"]]],[11,"eq",E,E,147,[[["self"],[R[2177]]],["bool"]]],[11,"ne",E,E,147,[[["self"],[R[2177]]],["bool"]]],[11,"eq",E,E,179,[[["self"],[R[2175]]],["bool"]]],[11,"ne",E,E,179,[[["self"],[R[2175]]],["bool"]]],[11,"eq",E,E,178,[[[R[2097]],["self"]],["bool"]]],[11,"ne",E,E,178,[[[R[2097]],["self"]],["bool"]]],[11,"eq",E,E,142,[[["self"],[R[2015]]],["bool"]]],[11,"ne",E,E,142,[[["self"],[R[2015]]],["bool"]]],[11,"eq",E,E,143,[[["binding"],["self"]],["bool"]]],[11,"ne",E,E,143,[[["binding"],["self"]],["bool"]]],[11,"eq",E,E,144,[[["self"],[R[2243]]],["bool"]]],[11,"ne",E,E,144,[[["self"],[R[2243]]],["bool"]]],[11,"eq",E,E,145,[[[R[2156]],["self"]],["bool"]]],[11,"ne",E,E,145,[[[R[2156]],["self"]],["bool"]]],[11,"eq",E,E,148,[[["qself"],["self"]],["bool"]]],[11,"ne",E,E,148,[[["qself"],["self"]],["bool"]]],[11,"eq",R[2472],E,291,[[["cursor"],["self"]],["bool"]]],[11,"ne",E,E,291,[[["cursor"],["self"]],["bool"]]],[11,"eq",R[2473],E,294,[[[R[2469]],["self"]],["bool"]]],[11,"ne",E,E,294,[[[R[2469]],["self"]],["bool"]]],[11,R[106],"syn",E,100,[[["self"],[R[2000]]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",E,E,100,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,288,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,289,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[2474],E,302,[[["self"],[R[37]]],[R[3]]]],[11,"fmt","syn",E,303,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[2475],E,180,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,181,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,182,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,183,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,184,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,185,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,186,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,187,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,188,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,189,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,190,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,191,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,192,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,193,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,194,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,195,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,196,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,197,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,198,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,199,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,200,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,201,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,202,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,203,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,204,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,205,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,206,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,207,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,208,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,209,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,210,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,211,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,212,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,213,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,214,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,215,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,216,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,217,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,218,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,219,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,220,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,221,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,222,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,223,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,224,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,225,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,226,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,227,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,228,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,229,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,230,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,231,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,232,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,233,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,234,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,235,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,236,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,237,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,238,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,239,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,240,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,241,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,242,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,243,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,244,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,245,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,246,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,247,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,248,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,249,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,250,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,251,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,252,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,253,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,254,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,255,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,256,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,257,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,258,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,259,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,260,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,261,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,262,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,263,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,264,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,265,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,266,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,267,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,268,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,269,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,270,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,271,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,272,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,273,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,274,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,275,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,276,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,277,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,278,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,279,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,280,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,281,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,282,[[["self"],[R[37]]],[R[3]]]],[11,"fmt","syn",E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,149,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,150,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,151,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,152,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,153,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,156,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,157,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,154,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,155,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,158,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,57,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,305,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,283,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,306,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,160,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,61,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,159,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,63,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,161,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,60,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,165,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,74,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,75,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,76,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,78,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,79,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,80,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,81,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,82,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,83,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,84,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,85,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,86,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,87,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,167,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,97,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,96,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,98,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,94,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,95,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,163,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,64,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,66,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,166,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,90,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,92,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,93,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,91,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,164,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,70,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,89,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,162,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,88,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,99,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,100,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,168,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,284,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,285,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,286,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,287,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,288,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,289,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,101,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,169,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,102,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,170,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,106,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,171,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,104,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,103,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,105,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,172,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,173,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,107,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,174,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,108,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,176,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,111,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,112,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,113,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,114,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,115,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,116,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,117,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,118,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,119,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,120,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,121,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,122,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,123,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,124,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,109,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,110,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,125,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,175,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,177,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,127,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,128,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,129,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,130,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,131,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,132,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,133,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,134,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,135,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,136,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,137,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,138,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,139,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,140,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,141,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,126,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,146,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,147,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,179,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,178,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,142,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,143,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,144,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,145,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,148,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[2473],E,294,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[2474],E,302,[[["self"],[R[37]]],[R[3]]]],[11,"fmt","syn",E,303,[[["self"],[R[37]]],[R[3]]]],[11,"deref",R[2475],E,180,[[["self"]]]],[11,"deref",E,E,233,[[["self"]]]],[11,"deref",E,E,235,[[["self"]]]],[11,"deref",E,E,238,[[["self"]]]],[11,"deref",E,E,239,[[["self"]]]],[11,"deref",E,E,240,[[["self"]]]],[11,"deref",E,E,242,[[["self"]]]],[11,"deref",E,E,244,[[["self"]]]],[11,"deref",E,E,245,[[["self"]]]],[11,"deref",E,E,247,[[["self"]]]],[11,"deref",E,E,248,[[["self"]]]],[11,"deref",E,E,252,[[["self"]]]],[11,"deref",E,E,255,[[["self"]]]],[11,"deref",E,E,257,[[["self"]]]],[11,"deref",E,E,260,[[["self"]]]],[11,"deref",E,E,263,[[["self"]]]],[11,"deref",E,E,264,[[["self"]]]],[11,"deref",E,E,267,[[["self"]]]],[11,"deref",E,E,270,[[["self"]]]],[11,"deref",E,E,275,[[["self"]]]],[11,"deref",E,E,276,[[["self"]]]],[11,"deref",E,E,278,[[["self"]]]],[11,"deref",R[2474],E,301,[[["self"]]]],[11,R[99],R[2475],E,180,[[["self"]]]],[11,R[99],E,E,233,[[["self"]]]],[11,R[99],E,E,235,[[["self"]]]],[11,R[99],E,E,238,[[["self"]]]],[11,R[99],E,E,239,[[["self"]]]],[11,R[99],E,E,240,[[["self"]]]],[11,R[99],E,E,242,[[["self"]]]],[11,R[99],E,E,244,[[["self"]]]],[11,R[99],E,E,245,[[["self"]]]],[11,R[99],E,E,247,[[["self"]]]],[11,R[99],E,E,248,[[["self"]]]],[11,R[99],E,E,252,[[["self"]]]],[11,R[99],E,E,255,[[["self"]]]],[11,R[99],E,E,257,[[["self"]]]],[11,R[99],E,E,260,[[["self"]]]],[11,R[99],E,E,263,[[["self"]]]],[11,R[99],E,E,264,[[["self"]]]],[11,R[99],E,E,267,[[["self"]]]],[11,R[99],E,E,270,[[["self"]]]],[11,R[99],E,E,275,[[["self"]]]],[11,R[99],E,E,276,[[["self"]]]],[11,R[99],E,E,278,[[["self"]]]],[11,"index",R[2473],E,294,[[["self"],["usize"]]]],[11,R[350],E,E,294,[[["self"],["usize"]]]],[11,"hash",R[2475],E,180,[[["self"],["h"]]]],[11,"hash",E,E,181,[[["self"],["h"]]]],[11,"hash",E,E,182,[[["self"],["h"]]]],[11,"hash",E,E,183,[[["self"],["h"]]]],[11,"hash",E,E,184,[[["self"],["h"]]]],[11,"hash",E,E,185,[[["self"],["h"]]]],[11,"hash",E,E,186,[[["self"],["h"]]]],[11,"hash",E,E,187,[[["self"],["h"]]]],[11,"hash",E,E,188,[[["self"],["h"]]]],[11,"hash",E,E,189,[[["self"],["h"]]]],[11,"hash",E,E,190,[[["self"],["h"]]]],[11,"hash",E,E,191,[[["self"],["h"]]]],[11,"hash",E,E,192,[[["self"],["h"]]]],[11,"hash",E,E,193,[[["self"],["h"]]]],[11,"hash",E,E,194,[[["self"],["h"]]]],[11,"hash",E,E,195,[[["self"],["h"]]]],[11,"hash",E,E,196,[[["self"],["h"]]]],[11,"hash",E,E,197,[[["self"],["h"]]]],[11,"hash",E,E,198,[[["self"],["h"]]]],[11,"hash",E,E,199,[[["self"],["h"]]]],[11,"hash",E,E,200,[[["self"],["h"]]]],[11,"hash",E,E,201,[[["self"],["h"]]]],[11,"hash",E,E,202,[[["self"],["h"]]]],[11,"hash",E,E,203,[[["self"],["h"]]]],[11,"hash",E,E,204,[[["self"],["h"]]]],[11,"hash",E,E,205,[[["self"],["h"]]]],[11,"hash",E,E,206,[[["self"],["h"]]]],[11,"hash",E,E,207,[[["self"],["h"]]]],[11,"hash",E,E,208,[[["self"],["h"]]]],[11,"hash",E,E,209,[[["self"],["h"]]]],[11,"hash",E,E,210,[[["self"],["h"]]]],[11,"hash",E,E,211,[[["self"],["h"]]]],[11,"hash",E,E,212,[[["self"],["h"]]]],[11,"hash",E,E,213,[[["self"],["h"]]]],[11,"hash",E,E,214,[[["self"],["h"]]]],[11,"hash",E,E,215,[[["self"],["h"]]]],[11,"hash",E,E,216,[[["self"],["h"]]]],[11,"hash",E,E,217,[[["self"],["h"]]]],[11,"hash",E,E,218,[[["self"],["h"]]]],[11,"hash",E,E,219,[[["self"],["h"]]]],[11,"hash",E,E,220,[[["self"],["h"]]]],[11,"hash",E,E,221,[[["self"],["h"]]]],[11,"hash",E,E,222,[[["self"],["h"]]]],[11,"hash",E,E,223,[[["self"],["h"]]]],[11,"hash",E,E,224,[[["self"],["h"]]]],[11,"hash",E,E,225,[[["self"],["h"]]]],[11,"hash",E,E,226,[[["self"],["h"]]]],[11,"hash",E,E,227,[[["self"],["h"]]]],[11,"hash",E,E,228,[[["self"],["h"]]]],[11,"hash",E,E,229,[[["self"],["h"]]]],[11,"hash",E,E,230,[[["self"],["h"]]]],[11,"hash",E,E,231,[[["self"],["h"]]]],[11,"hash",E,E,232,[[["self"],["h"]]]],[11,"hash",E,E,233,[[["self"],["h"]]]],[11,"hash",E,E,234,[[["self"],["h"]]]],[11,"hash",E,E,235,[[["self"],["h"]]]],[11,"hash",E,E,236,[[["self"],["h"]]]],[11,"hash",E,E,237,[[["self"],["h"]]]],[11,"hash",E,E,238,[[["self"],["h"]]]],[11,"hash",E,E,239,[[["self"],["h"]]]],[11,"hash",E,E,240,[[["self"],["h"]]]],[11,"hash",E,E,241,[[["self"],["h"]]]],[11,"hash",E,E,242,[[["self"],["h"]]]],[11,"hash",E,E,243,[[["self"],["h"]]]],[11,"hash",E,E,244,[[["self"],["h"]]]],[11,"hash",E,E,245,[[["self"],["h"]]]],[11,"hash",E,E,246,[[["self"],["h"]]]],[11,"hash",E,E,247,[[["self"],["h"]]]],[11,"hash",E,E,248,[[["self"],["h"]]]],[11,"hash",E,E,249,[[["self"],["h"]]]],[11,"hash",E,E,250,[[["self"],["h"]]]],[11,"hash",E,E,251,[[["self"],["h"]]]],[11,"hash",E,E,252,[[["self"],["h"]]]],[11,"hash",E,E,253,[[["self"],["h"]]]],[11,"hash",E,E,254,[[["self"],["h"]]]],[11,"hash",E,E,255,[[["self"],["h"]]]],[11,"hash",E,E,256,[[["self"],["h"]]]],[11,"hash",E,E,257,[[["self"],["h"]]]],[11,"hash",E,E,258,[[["self"],["h"]]]],[11,"hash",E,E,259,[[["self"],["h"]]]],[11,"hash",E,E,260,[[["self"],["h"]]]],[11,"hash",E,E,261,[[["self"],["h"]]]],[11,"hash",E,E,262,[[["self"],["h"]]]],[11,"hash",E,E,263,[[["self"],["h"]]]],[11,"hash",E,E,264,[[["self"],["h"]]]],[11,"hash",E,E,265,[[["self"],["h"]]]],[11,"hash",E,E,266,[[["self"],["h"]]]],[11,"hash",E,E,267,[[["self"],["h"]]]],[11,"hash",E,E,268,[[["self"],["h"]]]],[11,"hash",E,E,269,[[["self"],["h"]]]],[11,"hash",E,E,270,[[["self"],["h"]]]],[11,"hash",E,E,271,[[["self"],["h"]]]],[11,"hash",E,E,272,[[["self"],["h"]]]],[11,"hash",E,E,273,[[["self"],["h"]]]],[11,"hash",E,E,274,[[["self"],["h"]]]],[11,"hash",E,E,275,[[["self"],["h"]]]],[11,"hash",E,E,276,[[["self"],["h"]]]],[11,"hash",E,E,277,[[["self"],["h"]]]],[11,"hash",E,E,278,[[["self"],["h"]]]],[11,"hash",E,E,279,[[["self"],["h"]]]],[11,"hash",E,E,280,[[["self"],["h"]]]],[11,"hash",E,E,281,[[["self"],["h"]]]],[11,"hash",E,E,282,[[["self"],["h"]]]],[11,"hash","syn",E,0,[[["self"],["h"]]]],[11,"hash",E,E,149,[[["self"],["__h"]]]],[11,"hash",E,E,150,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,151,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,152,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,153,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"hash",E,E,23,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,38,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,44,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",E,E,46,[[["self"],["__h"]]]],[11,"hash",E,E,47,[[["self"],["__h"]]]],[11,"hash",E,E,48,[[["self"],["__h"]]]],[11,"hash",E,E,49,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["__h"]]]],[11,"hash",E,E,51,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,156,[[["self"],["h"]]]],[11,"hash",E,E,157,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",E,E,154,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,155,[[["self"],["__h"]]]],[11,"hash",E,E,56,[[["self"],["__h"]]]],[11,"hash",E,E,158,[[["self"],["__h"]]]],[11,"hash",E,E,62,[[["self"],["__h"]]]],[11,"hash",E,E,57,[[["self"],["__h"]]]],[11,"hash",E,E,55,[[["self"],["__h"]]]],[11,"hash",E,E,305,[[["self"],["__h"]]]],[11,"hash",E,E,283,[[["self"],["__h"]]]],[11,"hash",E,E,306,[[["self"],["__h"]]]],[11,"hash",E,E,54,[[["self"],["__h"]]]],[11,"hash",E,E,160,[[["self"],["__h"]]]],[11,"hash",E,E,61,[[["self"],["__h"]]]],[11,"hash",E,E,159,[[["self"],["__h"]]]],[11,"hash",E,E,63,[[["self"],["__h"]]]],[11,"hash",E,E,161,[[["self"],["__h"]]]],[11,"hash",E,E,60,[[["self"],["__h"]]]],[11,"hash",E,E,59,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",E,E,72,[[["self"],["__h"]]]],[11,"hash",E,E,73,[[["self"],["__h"]]]],[11,"hash",E,E,74,[[["self"],["__h"]]]],[11,"hash",E,E,75,[[["self"],["__h"]]]],[11,"hash",E,E,76,[[["self"],["__h"]]]],[11,"hash",E,E,77,[[["self"],["__h"]]]],[11,"hash",E,E,78,[[["self"],["__h"]]]],[11,"hash",E,E,80,[[["self"],["__h"]]]],[11,"hash",E,E,81,[[["self"],["__h"]]]],[11,"hash",E,E,82,[[["self"],["__h"]]]],[11,"hash",E,E,83,[[["self"],["__h"]]]],[11,"hash",E,E,84,[[["self"],["__h"]]]],[11,"hash",E,E,85,[[["self"],["__h"]]]],[11,"hash",E,E,86,[[["self"],["__h"]]]],[11,"hash",E,E,87,[[["self"],["__h"]]]],[11,"hash",E,E,165,[[["self"],["h"]]]],[11,"hash",E,E,79,[[["self"],["h"]]]],[11,"hash",E,E,167,[[["self"],["__h"]]]],[11,"hash",E,E,97,[[["self"],["__h"]]]],[11,"hash",E,E,96,[[["self"],["__h"]]]],[11,"hash",E,E,98,[[["self"],["__h"]]]],[11,"hash",E,E,94,[[["self"],["__h"]]]],[11,"hash",E,E,95,[[["self"],["__h"]]]],[11,"hash",E,E,64,[[["self"],["__h"]]]],[11,"hash",E,E,66,[[["self"],["__h"]]]],[11,"hash",E,E,67,[[["self"],["__h"]]]],[11,"hash",E,E,65,[[["self"],["__h"]]]],[11,"hash",E,E,163,[[["self"],["h"]]]],[11,"hash",E,E,90,[[["self"],["__h"]]]],[11,"hash",E,E,92,[[["self"],["__h"]]]],[11,"hash",E,E,93,[[["self"],["__h"]]]],[11,"hash",E,E,91,[[["self"],["__h"]]]],[11,"hash",E,E,166,[[["self"],["h"]]]],[11,"hash",E,E,68,[[["self"],["__h"]]]],[11,"hash",E,E,70,[[["self"],["__h"]]]],[11,"hash",E,E,71,[[["self"],["__h"]]]],[11,"hash",E,E,69,[[["self"],["__h"]]]],[11,"hash",E,E,164,[[["self"],["h"]]]],[11,"hash",E,E,89,[[["self"],["__h"]]]],[11,"hash",E,E,162,[[["self"],["__h"]]]],[11,"hash",E,E,88,[[["self"],["__h"]]]],[11,"hash",E,E,99,[[["self"],["__h"]]]],[11,"hash",E,E,100,[[["self"],["h"]]]],[11,"hash",E,E,168,[[["self"],["h"]]]],[11,"hash",E,E,284,[[["self"],["h"]]]],[11,"hash",E,E,285,[[["self"],["h"]]]],[11,"hash",E,E,286,[[["self"],["h"]]]],[11,"hash",E,E,287,[[["self"],["h"]]]],[11,"hash",E,E,288,[[["self"],["h"]]]],[11,"hash",E,E,289,[[["self"],["h"]]]],[11,"hash",E,E,101,[[["self"],["h"]]]],[11,"hash",E,E,169,[[["self"],["__h"]]]],[11,"hash",E,E,170,[[["self"],["__h"]]]],[11,"hash",E,E,102,[[["self"],["h"]]]],[11,"hash",E,E,106,[[["self"],["__h"]]]],[11,"hash",E,E,171,[[["self"],["__h"]]]],[11,"hash",E,E,104,[[["self"],["__h"]]]],[11,"hash",E,E,103,[[["self"],["__h"]]]],[11,"hash",E,E,105,[[["self"],["__h"]]]],[11,"hash",E,E,172,[[["self"],["__h"]]]],[11,"hash",E,E,173,[[["self"],["__h"]]]],[11,"hash",E,E,107,[[["self"],["__h"]]]],[11,"hash",E,E,174,[[["self"],["__h"]]]],[11,"hash",E,E,108,[[["self"],["__h"]]]],[11,"hash",E,E,111,[[["self"],["__h"]]]],[11,"hash",E,E,112,[[["self"],["__h"]]]],[11,"hash",E,E,113,[[["self"],["__h"]]]],[11,"hash",E,E,114,[[["self"],["__h"]]]],[11,"hash",E,E,115,[[["self"],["__h"]]]],[11,"hash",E,E,116,[[["self"],["__h"]]]],[11,"hash",E,E,117,[[["self"],["__h"]]]],[11,"hash",E,E,118,[[["self"],["__h"]]]],[11,"hash",E,E,119,[[["self"],["__h"]]]],[11,"hash",E,E,120,[[["self"],["__h"]]]],[11,"hash",E,E,121,[[["self"],["__h"]]]],[11,"hash",E,E,122,[[["self"],["__h"]]]],[11,"hash",E,E,123,[[["self"],["__h"]]]],[11,"hash",E,E,124,[[["self"],["__h"]]]],[11,"hash",E,E,176,[[["self"],["h"]]]],[11,"hash",E,E,109,[[["self"],["__h"]]]],[11,"hash",E,E,110,[[["self"],["__h"]]]],[11,"hash",E,E,125,[[["self"],["__h"]]]],[11,"hash",E,E,175,[[["self"],["__h"]]]],[11,"hash",E,E,127,[[["self"],["__h"]]]],[11,"hash",E,E,128,[[["self"],["__h"]]]],[11,"hash",E,E,129,[[["self"],["__h"]]]],[11,"hash",E,E,130,[[["self"],["__h"]]]],[11,"hash",E,E,131,[[["self"],["__h"]]]],[11,"hash",E,E,132,[[["self"],["__h"]]]],[11,"hash",E,E,133,[[["self"],["__h"]]]],[11,"hash",E,E,134,[[["self"],["__h"]]]],[11,"hash",E,E,135,[[["self"],["__h"]]]],[11,"hash",E,E,136,[[["self"],["__h"]]]],[11,"hash",E,E,137,[[["self"],["__h"]]]],[11,"hash",E,E,138,[[["self"],["__h"]]]],[11,"hash",E,E,139,[[["self"],["__h"]]]],[11,"hash",E,E,140,[[["self"],["__h"]]]],[11,"hash",E,E,141,[[["self"],["__h"]]]],[11,"hash",E,E,126,[[["self"],["__h"]]]],[11,"hash",E,E,177,[[["self"],["h"]]]],[11,"hash",E,E,146,[[["self"],["__h"]]]],[11,"hash",E,E,147,[[["self"],["__h"]]]],[11,"hash",E,E,179,[[["self"],["__h"]]]],[11,"hash",E,E,178,[[["self"],["__h"]]]],[11,"hash",E,E,142,[[["self"],["__h"]]]],[11,"hash",E,E,143,[[["self"],["__h"]]]],[11,"hash",E,E,144,[[["self"],["__h"]]]],[11,"hash",E,E,145,[[["self"],["__h"]]]],[11,"hash",E,E,148,[[["self"],["__h"]]]],[11,"hash",R[2473],E,294,[[["self"],["__h"]]]],[11,R[293],E,E,294,[[[R[294]]],["self"]]],[11,R[293],E,E,294,[[[R[294]]],["self"]]],[11,R[38],"syn",E,303,[[["self"]],["str"]]],[11,R[2501],R[2475],E,180,[[["self"],[R[1152]]]]],[11,R[2501],E,E,181,[[["self"],[R[1152]]]]],[11,R[2501],E,E,182,[[["self"],[R[1152]]]]],[11,R[2501],E,E,183,[[["self"],[R[1152]]]]],[11,R[2501],E,E,184,[[["self"],[R[1152]]]]],[11,R[2501],E,E,185,[[["self"],[R[1152]]]]],[11,R[2501],E,E,186,[[["self"],[R[1152]]]]],[11,R[2501],E,E,187,[[["self"],[R[1152]]]]],[11,R[2501],E,E,188,[[["self"],[R[1152]]]]],[11,R[2501],E,E,189,[[["self"],[R[1152]]]]],[11,R[2501],E,E,190,[[["self"],[R[1152]]]]],[11,R[2501],E,E,191,[[["self"],[R[1152]]]]],[11,R[2501],E,E,192,[[["self"],[R[1152]]]]],[11,R[2501],E,E,193,[[["self"],[R[1152]]]]],[11,R[2501],E,E,194,[[["self"],[R[1152]]]]],[11,R[2501],E,E,195,[[["self"],[R[1152]]]]],[11,R[2501],E,E,196,[[["self"],[R[1152]]]]],[11,R[2501],E,E,197,[[["self"],[R[1152]]]]],[11,R[2501],E,E,198,[[["self"],[R[1152]]]]],[11,R[2501],E,E,199,[[["self"],[R[1152]]]]],[11,R[2501],E,E,200,[[["self"],[R[1152]]]]],[11,R[2501],E,E,201,[[["self"],[R[1152]]]]],[11,R[2501],E,E,202,[[["self"],[R[1152]]]]],[11,R[2501],E,E,203,[[["self"],[R[1152]]]]],[11,R[2501],E,E,204,[[["self"],[R[1152]]]]],[11,R[2501],E,E,205,[[["self"],[R[1152]]]]],[11,R[2501],E,E,206,[[["self"],[R[1152]]]]],[11,R[2501],E,E,207,[[["self"],[R[1152]]]]],[11,R[2501],E,E,208,[[["self"],[R[1152]]]]],[11,R[2501],E,E,209,[[["self"],[R[1152]]]]],[11,R[2501],E,E,210,[[["self"],[R[1152]]]]],[11,R[2501],E,E,211,[[["self"],[R[1152]]]]],[11,R[2501],E,E,212,[[["self"],[R[1152]]]]],[11,R[2501],E,E,213,[[["self"],[R[1152]]]]],[11,R[2501],E,E,214,[[["self"],[R[1152]]]]],[11,R[2501],E,E,215,[[["self"],[R[1152]]]]],[11,R[2501],E,E,216,[[["self"],[R[1152]]]]],[11,R[2501],E,E,217,[[["self"],[R[1152]]]]],[11,R[2501],E,E,218,[[["self"],[R[1152]]]]],[11,R[2501],E,E,219,[[["self"],[R[1152]]]]],[11,R[2501],E,E,220,[[["self"],[R[1152]]]]],[11,R[2501],E,E,221,[[["self"],[R[1152]]]]],[11,R[2501],E,E,222,[[["self"],[R[1152]]]]],[11,R[2501],E,E,223,[[["self"],[R[1152]]]]],[11,R[2501],E,E,224,[[["self"],[R[1152]]]]],[11,R[2501],E,E,225,[[["self"],[R[1152]]]]],[11,R[2501],E,E,226,[[["self"],[R[1152]]]]],[11,R[2501],E,E,227,[[["self"],[R[1152]]]]],[11,R[2501],E,E,228,[[["self"],[R[1152]]]]],[11,R[2501],E,E,229,[[["self"],[R[1152]]]]],[11,R[2501],E,E,230,[[["self"],[R[1152]]]]],[11,R[2501],E,E,231,[[["self"],[R[1152]]]]],[11,R[2501],E,E,232,[[["self"],[R[1152]]]]],[11,R[2501],E,E,233,[[["self"],[R[1152]]]]],[11,R[2501],E,E,234,[[["self"],[R[1152]]]]],[11,R[2501],E,E,235,[[["self"],[R[1152]]]]],[11,R[2501],E,E,236,[[["self"],[R[1152]]]]],[11,R[2501],E,E,237,[[["self"],[R[1152]]]]],[11,R[2501],E,E,238,[[["self"],[R[1152]]]]],[11,R[2501],E,E,239,[[["self"],[R[1152]]]]],[11,R[2501],E,E,240,[[["self"],[R[1152]]]]],[11,R[2501],E,E,241,[[["self"],[R[1152]]]]],[11,R[2501],E,E,242,[[["self"],[R[1152]]]]],[11,R[2501],E,E,243,[[["self"],[R[1152]]]]],[11,R[2501],E,E,244,[[["self"],[R[1152]]]]],[11,R[2501],E,E,245,[[["self"],[R[1152]]]]],[11,R[2501],E,E,246,[[["self"],[R[1152]]]]],[11,R[2501],E,E,247,[[["self"],[R[1152]]]]],[11,R[2501],E,E,248,[[["self"],[R[1152]]]]],[11,R[2501],E,E,249,[[["self"],[R[1152]]]]],[11,R[2501],E,E,250,[[["self"],[R[1152]]]]],[11,R[2501],E,E,251,[[["self"],[R[1152]]]]],[11,R[2501],E,E,252,[[["self"],[R[1152]]]]],[11,R[2501],E,E,253,[[["self"],[R[1152]]]]],[11,R[2501],E,E,254,[[["self"],[R[1152]]]]],[11,R[2501],E,E,255,[[["self"],[R[1152]]]]],[11,R[2501],E,E,256,[[["self"],[R[1152]]]]],[11,R[2501],E,E,257,[[["self"],[R[1152]]]]],[11,R[2501],E,E,258,[[["self"],[R[1152]]]]],[11,R[2501],E,E,259,[[["self"],[R[1152]]]]],[11,R[2501],E,E,260,[[["self"],[R[1152]]]]],[11,R[2501],E,E,261,[[["self"],[R[1152]]]]],[11,R[2501],E,E,262,[[["self"],[R[1152]]]]],[11,R[2501],E,E,263,[[["self"],[R[1152]]]]],[11,R[2501],E,E,264,[[["self"],[R[1152]]]]],[11,R[2501],E,E,265,[[["self"],[R[1152]]]]],[11,R[2501],E,E,266,[[["self"],[R[1152]]]]],[11,R[2501],E,E,267,[[["self"],[R[1152]]]]],[11,R[2501],E,E,268,[[["self"],[R[1152]]]]],[11,R[2501],E,E,269,[[["self"],[R[1152]]]]],[11,R[2501],E,E,270,[[["self"],[R[1152]]]]],[11,R[2501],E,E,271,[[["self"],[R[1152]]]]],[11,R[2501],E,E,272,[[["self"],[R[1152]]]]],[11,R[2501],E,E,273,[[["self"],[R[1152]]]]],[11,R[2501],E,E,274,[[["self"],[R[1152]]]]],[11,R[2501],E,E,275,[[["self"],[R[1152]]]]],[11,R[2501],E,E,276,[[["self"],[R[1152]]]]],[11,R[2501],E,E,277,[[["self"],[R[1152]]]]],[11,R[2501],E,E,278,[[["self"],[R[1152]]]]],[11,R[2501],"syn",E,150,[[["self"],[R[1152]]]]],[11,R[2501],E,E,151,[[["self"],[R[1152]]]]],[11,R[2501],E,E,0,[[["self"],[R[1152]]]]],[11,R[2501],E,E,1,[[["self"],[R[1152]]]]],[11,R[2501],E,E,2,[[["self"],[R[1152]]]]],[11,R[2501],E,E,152,[[["self"],[R[1152]]]]],[11,R[2501],E,E,153,[[["self"],[R[1152]]]]],[11,R[2501],E,E,6,[[["self"],[R[1152]]]]],[11,R[2501],E,E,4,[[["self"],[R[1152]]]]],[11,R[2501],E,E,5,[[["self"],[R[1152]]]]],[11,R[2501],E,E,3,[[["self"],[R[1152]]]]],[11,R[2501],E,E,8,[[["self"],[R[1152]]]]],[11,R[2501],E,E,7,[[["self"],[R[1152]]]]],[11,R[2501],E,E,9,[[["self"],[R[1152]]]]],[11,R[2501],E,E,156,[[["self"],[R[1152]]]]],[11,R[2501],E,E,21,[[["self"],[R[1152]]]]],[11,R[2501],E,E,14,[[["self"],[R[1152]]]]],[11,R[2501],E,E,23,[[["self"],[R[1152]]]]],[11,R[2501],E,E,37,[[["self"],[R[1152]]]]],[11,R[2501],E,E,13,[[["self"],[R[1152]]]]],[11,R[2501],E,E,154,[[["self"],[R[1152]]]]],[11,R[2501],E,E,47,[[["self"],[R[1152]]]]],[11,R[2501],E,E,19,[[["self"],[R[1152]]]]],[11,R[2501],E,E,49,[[["self"],[R[1152]]]]],[11,R[2501],E,E,33,[[["self"],[R[1152]]]]],[11,R[2501],E,E,24,[[["self"],[R[1152]]]]],[11,R[2501],E,E,48,[[["self"],[R[1152]]]]],[11,R[2501],E,E,32,[[["self"],[R[1152]]]]],[11,R[2501],E,E,30,[[["self"],[R[1152]]]]],[11,R[2501],E,E,51,[[["self"],[R[1152]]]]],[11,R[2501],E,E,28,[[["self"],[R[1152]]]]],[11,R[2501],E,E,34,[[["self"],[R[1152]]]]],[11,R[2501],E,E,36,[[["self"],[R[1152]]]]],[11,R[2501],E,E,17,[[["self"],[R[1152]]]]],[11,R[2501],E,E,18,[[["self"],[R[1152]]]]],[11,R[2501],E,E,46,[[["self"],[R[1152]]]]],[11,R[2501],E,E,52,[[["self"],[R[1152]]]]],[11,R[2501],E,E,25,[[["self"],[R[1152]]]]],[11,R[2501],E,E,50,[[["self"],[R[1152]]]]],[11,R[2501],E,E,20,[[["self"],[R[1152]]]]],[11,R[2501],E,E,15,[[["self"],[R[1152]]]]],[11,R[2501],E,E,16,[[["self"],[R[1152]]]]],[11,R[2501],E,E,27,[[["self"],[R[1152]]]]],[11,R[2501],E,E,157,[[["self"],[R[1152]]]]],[11,R[2501],E,E,53,[[["self"],[R[1152]]]]],[11,R[2501],E,E,31,[[["self"],[R[1152]]]]],[11,R[2501],E,E,40,[[["self"],[R[1152]]]]],[11,R[2501],E,E,39,[[["self"],[R[1152]]]]],[11,R[2501],E,E,41,[[["self"],[R[1152]]]]],[11,R[2501],E,E,22,[[["self"],[R[1152]]]]],[11,R[2501],E,E,26,[[["self"],[R[1152]]]]],[11,R[2501],E,E,43,[[["self"],[R[1152]]]]],[11,R[2501],E,E,35,[[["self"],[R[1152]]]]],[11,R[2501],E,E,44,[[["self"],[R[1152]]]]],[11,R[2501],E,E,42,[[["self"],[R[1152]]]]],[11,R[2501],E,E,29,[[["self"],[R[1152]]]]],[11,R[2501],E,E,38,[[["self"],[R[1152]]]]],[11,R[2501],E,E,45,[[["self"],[R[1152]]]]],[11,R[2501],E,E,12,[[["self"],[R[1152]]]]],[11,R[2501],E,E,11,[[["self"],[R[1152]]]]],[11,R[2501],E,E,10,[[["self"],[R[1152]]]]],[11,R[2501],E,E,158,[[["self"],[R[1152]]]]],[11,R[2501],E,E,160,[[["self"],[R[1152]]]]],[11,R[2501],E,E,161,[[["self"],[R[1152]]]]],[11,R[2501],E,E,56,[[["self"],[R[1152]]]]],[11,R[2501],E,E,305,[[["self"],[R[1152]]]]],[11,R[2501],E,E,283,[[["self"],[R[1152]]]]],[11,R[2501],E,E,306,[[["self"],[R[1152]]]]],[11,R[2501],E,E,54,[[["self"],[R[1152]]]]],[11,R[2501],E,E,57,[[["self"],[R[1152]]]]],[11,R[2501],E,E,62,[[["self"],[R[1152]]]]],[11,R[2501],E,E,61,[[["self"],[R[1152]]]]],[11,R[2501],E,E,159,[[["self"],[R[1152]]]]],[11,R[2501],E,E,55,[[["self"],[R[1152]]]]],[11,R[2501],E,E,63,[[["self"],[R[1152]]]]],[11,R[2501],E,E,60,[[["self"],[R[1152]]]]],[11,R[2501],E,E,59,[[["self"],[R[1152]]]]],[11,R[2501],E,E,58,[[["self"],[R[1152]]]]],[11,R[2501],E,E,165,[[["self"],[R[1152]]]]],[11,R[2501],E,E,167,[[["self"],[R[1152]]]]],[11,R[2501],E,E,163,[[["self"],[R[1152]]]]],[11,R[2501],E,E,166,[[["self"],[R[1152]]]]],[11,R[2501],E,E,164,[[["self"],[R[1152]]]]],[11,R[2501],E,E,162,[[["self"],[R[1152]]]]],[11,R[2501],E,E,74,[[["self"],[R[1152]]]]],[11,R[2501],E,E,87,[[["self"],[R[1152]]]]],[11,R[2501],E,E,81,[[["self"],[R[1152]]]]],[11,R[2501],E,E,72,[[["self"],[R[1152]]]]],[11,R[2501],E,E,75,[[["self"],[R[1152]]]]],[11,R[2501],E,E,80,[[["self"],[R[1152]]]]],[11,R[2501],E,E,76,[[["self"],[R[1152]]]]],[11,R[2501],E,E,85,[[["self"],[R[1152]]]]],[11,R[2501],E,E,73,[[["self"],[R[1152]]]]],[11,R[2501],E,E,82,[[["self"],[R[1152]]]]],[11,R[2501],E,E,86,[[["self"],[R[1152]]]]],[11,R[2501],E,E,83,[[["self"],[R[1152]]]]],[11,R[2501],E,E,84,[[["self"],[R[1152]]]]],[11,R[2501],E,E,77,[[["self"],[R[1152]]]]],[11,R[2501],E,E,78,[[["self"],[R[1152]]]]],[11,R[2501],E,E,79,[[["self"],[R[1152]]]]],[11,R[2501],E,E,97,[[["self"],[R[1152]]]]],[11,R[2501],E,E,96,[[["self"],[R[1152]]]]],[11,R[2501],E,E,98,[[["self"],[R[1152]]]]],[11,R[2501],E,E,94,[[["self"],[R[1152]]]]],[11,R[2501],E,E,95,[[["self"],[R[1152]]]]],[11,R[2501],E,E,90,[[["self"],[R[1152]]]]],[11,R[2501],E,E,92,[[["self"],[R[1152]]]]],[11,R[2501],E,E,93,[[["self"],[R[1152]]]]],[11,R[2501],E,E,91,[[["self"],[R[1152]]]]],[11,R[2501],E,E,68,[[["self"],[R[1152]]]]],[11,R[2501],E,E,70,[[["self"],[R[1152]]]]],[11,R[2501],E,E,71,[[["self"],[R[1152]]]]],[11,R[2501],E,E,69,[[["self"],[R[1152]]]]],[11,R[2501],E,E,64,[[["self"],[R[1152]]]]],[11,R[2501],E,E,66,[[["self"],[R[1152]]]]],[11,R[2501],E,E,67,[[["self"],[R[1152]]]]],[11,R[2501],E,E,65,[[["self"],[R[1152]]]]],[11,R[2501],E,E,89,[[["self"],[R[1152]]]]],[11,R[2501],E,E,88,[[["self"],[R[1152]]]]],[11,R[2501],E,E,99,[[["self"],[R[1152]]]]],[11,R[2501],E,E,100,[[["self"],[R[1152]]]]],[11,R[2501],E,E,168,[[["self"],[R[1152]]]]],[11,R[2501],E,E,284,[[["self"],[R[1152]]]]],[11,R[2501],E,E,285,[[["self"],[R[1152]]]]],[11,R[2501],E,E,286,[[["self"],[R[1152]]]]],[11,R[2501],E,E,287,[[["self"],[R[1152]]]]],[11,R[2501],E,E,288,[[["self"],[R[1152]]]]],[11,R[2501],E,E,289,[[["self"],[R[1152]]]]],[11,R[2501],E,E,101,[[["self"],[R[1152]]]]],[11,R[2501],E,E,102,[[["self"],[R[1152]]]]],[11,R[2501],E,E,106,[[["self"],[R[1152]]]]],[11,R[2501],E,E,172,[[["self"],[R[1152]]]]],[11,R[2501],E,E,173,[[["self"],[R[1152]]]]],[11,R[2501],E,E,107,[[["self"],[R[1152]]]]],[11,R[2501],E,E,174,[[["self"],[R[1152]]]]],[11,R[2501],E,E,108,[[["self"],[R[1152]]]]],[11,R[2501],E,E,176,[[["self"],[R[1152]]]]],[11,R[2501],E,E,122,[[["self"],[R[1152]]]]],[11,R[2501],E,E,111,[[["self"],[R[1152]]]]],[11,R[2501],E,E,120,[[["self"],[R[1152]]]]],[11,R[2501],E,E,121,[[["self"],[R[1152]]]]],[11,R[2501],E,E,112,[[["self"],[R[1152]]]]],[11,R[2501],E,E,117,[[["self"],[R[1152]]]]],[11,R[2501],E,E,124,[[["self"],[R[1152]]]]],[11,R[2501],E,E,119,[[["self"],[R[1152]]]]],[11,R[2501],E,E,123,[[["self"],[R[1152]]]]],[11,R[2501],E,E,114,[[["self"],[R[1152]]]]],[11,R[2501],E,E,113,[[["self"],[R[1152]]]]],[11,R[2501],E,E,118,[[["self"],[R[1152]]]]],[11,R[2501],E,E,115,[[["self"],[R[1152]]]]],[11,R[2501],E,E,116,[[["self"],[R[1152]]]]],[11,R[2501],E,E,175,[[["self"],[R[1152]]]]],[11,R[2501],E,E,110,[[["self"],[R[1152]]]]],[11,R[2501],E,E,125,[[["self"],[R[1152]]]]],[11,R[2501],E,E,109,[[["self"],[R[1152]]]]],[11,R[2501],E,E,177,[[["self"],[R[1152]]]]],[11,R[2501],E,E,141,[[["self"],[R[1152]]]]],[11,R[2501],E,E,128,[[["self"],[R[1152]]]]],[11,R[2501],E,E,137,[[["self"],[R[1152]]]]],[11,R[2501],E,E,139,[[["self"],[R[1152]]]]],[11,R[2501],E,E,140,[[["self"],[R[1152]]]]],[11,R[2501],E,E,132,[[["self"],[R[1152]]]]],[11,R[2501],E,E,138,[[["self"],[R[1152]]]]],[11,R[2501],E,E,127,[[["self"],[R[1152]]]]],[11,R[2501],E,E,134,[[["self"],[R[1152]]]]],[11,R[2501],E,E,135,[[["self"],[R[1152]]]]],[11,R[2501],E,E,129,[[["self"],[R[1152]]]]],[11,R[2501],E,E,133,[[["self"],[R[1152]]]]],[11,R[2501],E,E,136,[[["self"],[R[1152]]]]],[11,R[2501],E,E,130,[[["self"],[R[1152]]]]],[11,R[2501],E,E,131,[[["self"],[R[1152]]]]],[11,R[2501],E,E,126,[[["self"],[R[1152]]]]],[11,R[2501],E,E,146,[[["self"],[R[1152]]]]],[11,R[2501],E,E,147,[[["self"],[R[1152]]]]],[11,R[2501],E,E,179,[[["self"],[R[1152]]]]],[11,R[2501],E,E,178,[[["self"],[R[1152]]]]],[11,R[2501],E,E,142,[[["self"],[R[1152]]]]],[11,R[2501],E,E,143,[[["self"],[R[1152]]]]],[11,R[2501],E,E,144,[[["self"],[R[1152]]]]],[11,R[2501],E,E,145,[[["self"],[R[1152]]]]],[11,R[2501],R[2473],E,294,[[["self"],[R[1152]]]]],[11,R[2501],E,E,293,[[["self"],[R[1152]]]]],[11,"fmt","syn",E,157,[[["self"],[R[37]]],[R[3]]]],[11,"span",E,E,157,[[["self"]],[["span"],["option",["span"]]]]],[11,"fmt",E,E,53,[[["self"],[R[37]]],[R[3]]]],[11,"span",E,E,53,[[["self"]],[["span"],["option",["span"]]]]],[11,"new",E,R[2502],304,[[["str"],["span"]],["ident"]]],[11,"span",E,R[2503],304,[[["self"]],["span"]]],[11,R[2001],E,R[2504],304,[[["self"],["span"]]]],[11,"visit_abi","syn::visit",E,296,[[["self"],["abi"]]]],[11,R[2014],E,E,296,[[["self"],[R[2015]]]]],[11,"visit_arm",E,E,296,[[["self"],["arm"]]]],[11,R[2016],E,E,296,[[["self"],[R[2239]]]]],[11,R[2017],E,E,296,[[["self"],[R[2240]]]]],[11,R[2018],E,E,296,[[["self"],[R[2241]]]]],[11,R[2019],E,E,296,[[["self"],["binop"]]]],[11,R[2020],E,E,296,[[["self"],["binding"]]]],[11,R[2021],E,E,296,[[["block"],["self"]]]],[11,R[2022],E,E,296,[[["self"],[R[2023]]]]],[11,R[2024],E,E,296,[[[R[2242]],["self"]]]],[11,R[2025],E,E,296,[[[R[2243]],["self"]]]],[11,R[2505],E,E,296,[[["self"],["data"]]]],[11,R[2026],E,E,296,[[["self"],[R[2489]]]]],[11,R[2027],E,E,296,[[["self"],[R[2244]]]]],[11,R[2028],E,E,296,[[[R[2245]],["self"]]]],[11,R[2029],E,E,296,[[["self"],[R[2030]]]]],[11,R[2506],E,E,296,[[["self"],["expr"]]]],[11,R[2031],E,E,296,[[["self"],[R[2246]]]]],[11,R[2032],E,E,296,[[["self"],[R[2247]]]]],[11,R[2033],E,E,296,[[[R[2034]],["self"]]]],[11,R[2035],E,E,296,[[["self"],[R[2248]]]]],[11,R[2036],E,E,296,[[["self"],[R[2249]]]]],[11,R[2037],E,E,296,[[["self"],[R[2250]]]]],[11,R[2038],E,E,296,[[[R[2251]],["self"]]]],[11,R[2039],E,E,296,[[["exprbox"],["self"]]]],[11,R[2040],E,E,296,[[["self"],[R[2252]]]]],[11,R[2041],E,E,296,[[["self"],[R[2478]]]]],[11,R[2042],E,E,296,[[["self"],[R[2479]]]]],[11,R[2043],E,E,296,[[["self"],[R[2044]]]]],[11,R[2045],E,E,296,[[["self"],[R[2046]]]]],[11,R[2047],E,E,296,[[["self"],[R[2253]]]]],[11,R[2048],E,E,296,[[[R[2049]],["self"]]]],[11,R[2050],E,E,296,[[["self"],[R[2254]]]]],[11,R[2051],E,E,296,[[["exprif"],["self"]]]],[11,R[2052],E,E,296,[[["self"],[R[2255]]]]],[11,R[2053],E,E,296,[[["self"],["exprlet"]]]],[11,R[2054],E,E,296,[[["self"],["exprlit"]]]],[11,R[2055],E,E,296,[[["self"],[R[2480]]]]],[11,R[2056],E,E,296,[[[R[2256]],["self"]]]],[11,R[2057],E,E,296,[[["self"],[R[2257]]]]],[11,R[2058],E,E,296,[[["self"],[R[2059]]]]],[11,R[2060],E,E,296,[[["self"],[R[2258]]]]],[11,R[2061],E,E,296,[[["self"],[R[2481]]]]],[11,R[2062],E,E,296,[[["self"],[R[2259]]]]],[11,R[2063],E,E,296,[[["self"],[R[2064]]]]],[11,R[2065],E,E,296,[[["self"],[R[2260]]]]],[11,R[2066],E,E,296,[[["self"],[R[2261]]]]],[11,R[2067],E,E,296,[[["self"],[R[2262]]]]],[11,R[2068],E,E,296,[[["self"],["exprtry"]]]],[11,R[2069],E,E,296,[[[R[2070]],["self"]]]],[11,R[2071],E,E,296,[[["self"],[R[2263]]]]],[11,R[2072],E,E,296,[[["self"],[R[2482]]]]],[11,R[2073],E,E,296,[[["self"],[R[2264]]]]],[11,R[2074],E,E,296,[[["self"],[R[2265]]]]],[11,R[2075],E,E,296,[[[R[2266]],["self"]]]],[11,R[2076],E,E,296,[[["self"],[R[2267]]]]],[11,R[2077],E,E,296,[[["field"],["self"]]]],[11,R[2078],E,E,296,[[["self"],[R[2496]]]]],[11,R[2079],E,E,296,[[["self"],[R[2268]]]]],[11,R[2080],E,E,296,[[["self"],["fields"]]]],[11,R[2081],E,E,296,[[["self"],[R[2082]]]]],[11,R[2083],E,E,296,[[["self"],[R[2084]]]]],[11,R[2507],E,E,296,[[["self"],["file"]]]],[11,R[2085],E,E,296,[[["self"],["fnarg"]]]],[11,R[2086],E,E,296,[[["self"],[R[2087]]]]],[11,R[2088],E,E,296,[[["self"],[R[2089]]]]],[11,R[2090],E,E,296,[[["self"],[R[2091]]]]],[11,R[2092],E,E,296,[[[R[2093]],["self"]]]],[11,R[2094],E,E,296,[[["self"],[R[2095]]]]],[11,R[2096],E,E,296,[[["self"],[R[2097]]]]],[11,R[2098],E,E,296,[[["self"],[R[2099]]]]],[11,R[2100],E,E,296,[[["self"],[R[2101]]]]],[11,R[2102],E,E,296,[[["self"],[R[1860]]]]],[11,R[2103],E,E,296,[[["self"],["ident"]]]],[11,R[2104],E,E,296,[[[R[2487]],["self"]]]],[11,R[2105],E,E,296,[[["self"],[R[2106]]]]],[11,R[2107],E,E,296,[[["self"],[R[2108]]]]],[11,R[2109],E,E,296,[[[R[2110]],["self"]]]],[11,R[2111],E,E,296,[[["self"],[R[2112]]]]],[11,R[2113],E,E,296,[[["self"],["index"]]]],[11,R[2508],E,E,296,[[["self"],["item"]]]],[11,R[2114],E,E,296,[[["self"],[R[2269]]]]],[11,R[2115],E,E,296,[[["self"],[R[2483]]]]],[11,R[2116],E,E,296,[[["self"],[R[2117]]]]],[11,R[2118],E,E,296,[[["self"],["itemfn"]]]],[11,R[2119],E,E,296,[[["self"],[R[2120]]]]],[11,R[2121],E,E,296,[[["self"],[R[2484]]]]],[11,R[2122],E,E,296,[[["self"],[R[2270]]]]],[11,R[2123],E,E,296,[[[R[2271]],["self"]]]],[11,R[2124],E,E,296,[[["self"],["itemmod"]]]],[11,R[2125],E,E,296,[[[R[2272]],["self"]]]],[11,R[2126],E,E,296,[[[R[2273]],["self"]]]],[11,R[2127],E,E,296,[[[R[2274]],["self"]]]],[11,R[2128],E,E,296,[[["self"],[R[2129]]]]],[11,R[2130],E,E,296,[[[R[2485]],["self"]]]],[11,R[2131],E,E,296,[[["self"],[R[2275]]]]],[11,R[2132],E,E,296,[[["self"],["itemuse"]]]],[11,R[2133],E,E,296,[[["self"],["label"]]]],[11,R[2134],E,E,296,[[["self"],[R[2000]]]]],[11,R[2135],E,E,296,[[["self"],[R[2136]]]]],[11,"visit_lit",E,E,296,[[["lit"],["self"]]]],[11,R[2137],E,E,296,[[["self"],["litbool"]]]],[11,R[2138],E,E,296,[[["litbyte"],["self"]]]],[11,R[2139],E,E,296,[[["self"],[R[2276]]]]],[11,R[2140],E,E,296,[[["self"],["litchar"]]]],[11,R[2141],E,E,296,[[["self"],[R[2488]]]]],[11,R[2142],E,E,296,[[["self"],["litint"]]]],[11,R[2143],E,E,296,[[["self"],["litstr"]]]],[11,R[2144],E,E,296,[[["self"],["local"]]]],[11,R[2145],E,E,296,[[["self"],["macro"]]]],[11,R[2146],E,E,296,[[[R[2147]],["self"]]]],[11,R[2148],E,E,296,[[["self"],["member"]]]],[11,R[2509],E,E,296,[[["self"],["meta"]]]],[11,R[2149],E,E,296,[[[R[2476]],["self"]]]],[11,R[2150],E,E,296,[[["self"],[R[2151]]]]],[11,R[2152],E,E,296,[[["self"],[R[2153]]]]],[11,R[2154],E,E,296,[[[R[2277]],["self"]]]],[11,R[2155],E,E,296,[[["self"],[R[2156]]]]],[11,"visit_pat",E,E,296,[[["self"],["pat"]]]],[11,R[2157],E,E,296,[[["self"],["patbox"]]]],[11,R[2158],E,E,296,[[["self"],[R[2491]]]]],[11,R[2159],E,E,296,[[["self"],["patlit"]]]],[11,R[2160],E,E,296,[[["self"],[R[2492]]]]],[11,R[2161],E,E,296,[[["self"],["pator"]]]],[11,R[2162],E,E,296,[[["patpath"],["self"]]]],[11,R[2163],E,E,296,[[["self"],[R[2493]]]]],[11,R[2164],E,E,296,[[["self"],[R[2165]]]]],[11,R[2166],E,E,296,[[["patrest"],["self"]]]],[11,R[2167],E,E,296,[[["self"],[R[2494]]]]],[11,R[2168],E,E,296,[[["self"],[R[2278]]]]],[11,R[2169],E,E,296,[[["self"],[R[2495]]]]],[11,R[2170],E,E,296,[[["self"],[R[2171]]]]],[11,R[2172],E,E,296,[[["self"],["pattype"]]]],[11,R[2173],E,E,296,[[["self"],["patwild"]]]],[11,R[2510],E,E,296,[[["self"],["path"]]]],[11,R[2174],E,E,296,[[["self"],[R[2175]]]]],[11,R[2176],E,E,296,[[[R[2177]],["self"]]]],[11,R[2178],E,E,296,[[["self"],[R[2179]]]]],[11,R[2180],E,E,296,[[["self"],[R[2181]]]]],[11,R[2182],E,E,296,[[["self"],[R[2183]]]]],[11,R[2184],E,E,296,[[["self"],["qself"]]]],[11,R[2185],E,E,296,[[[R[2186]],["self"]]]],[11,R[2187],E,E,296,[[[R[2422]],["self"]]]],[11,R[2188],E,E,296,[[[R[2279]],["self"]]]],[11,R[2189],E,E,296,[[["self"],[R[188]]]]],[11,R[2511],E,E,296,[[["self"],["span"]]]],[11,R[2512],E,E,296,[[["self"],["stmt"]]]],[11,R[2190],E,E,296,[[[R[2280]],["self"]]]],[11,R[2191],E,E,296,[[["self"],[R[2192]]]]],[11,R[2193],E,E,296,[[[R[2281]],["self"]]]],[11,R[2194],E,E,296,[[["self"],[R[2195]]]]],[11,R[2196],E,E,296,[[["self"],[R[2197]]]]],[11,R[2198],E,E,296,[[["self"],[R[2199]]]]],[11,R[2200],E,E,296,[[["self"],[R[2201]]]]],[11,R[2513],E,E,296,[[["self"],["type"]]]],[11,R[2202],E,E,296,[[["self"],[R[2282]]]]],[11,R[2203],E,E,296,[[[R[2283]],["self"]]]],[11,R[2204],E,E,296,[[["self"],[R[2284]]]]],[11,R[2205],E,E,296,[[["self"],[R[2206]]]]],[11,R[2207],E,E,296,[[["self"],[R[2285]]]]],[11,R[2208],E,E,296,[[["self"],[R[2286]]]]],[11,R[2209],E,E,296,[[["self"],[R[2287]]]]],[11,R[2210],E,E,296,[[[R[2288]],["self"]]]],[11,R[2211],E,E,296,[[[R[2212]],["self"]]]],[11,R[2213],E,E,296,[[["self"],[R[2289]]]]],[11,R[2214],E,E,296,[[["self"],[R[2490]]]]],[11,R[2215],E,E,296,[[["self"],["typeptr"]]]],[11,R[2216],E,E,296,[[["self"],[R[2217]]]]],[11,R[2218],E,E,296,[[["self"],[R[2290]]]]],[11,R[2219],E,E,296,[[["self"],[R[2220]]]]],[11,R[2221],E,E,296,[[["self"],[R[2291]]]]],[11,R[2222],E,E,296,[[["self"],["unop"]]]],[11,R[2223],E,E,296,[[["self"],["useglob"]]]],[11,R[2224],E,E,296,[[[R[2486]],["self"]]]],[11,R[2225],E,E,296,[[["usename"],["self"]]]],[11,R[2226],E,E,296,[[["self"],["usepath"]]]],[11,R[2227],E,E,296,[[["self"],[R[2292]]]]],[11,R[2228],E,E,296,[[["self"],["usetree"]]]],[11,R[2229],E,E,296,[[["self"],[R[2455]]]]],[11,R[2230],E,E,296,[[["self"],["variant"]]]],[11,R[2231],E,E,296,[[[R[2477]],["self"]]]],[11,R[2232],E,E,296,[[["self"],[R[2293]]]]],[11,R[2233],E,E,296,[[["self"],[R[2234]]]]],[11,R[2235],E,E,296,[[[R[2294]],["self"]]]],[11,R[2236],E,E,296,[[[R[2012]],["self"]]]],[11,R[2237],E,E,296,[[["self"],[R[2238]]]]],[11,"fold_abi","syn::fold",E,297,[[["self"],["abi"]],["abi"]]],[11,R[2296],E,E,297,[[["self"],[R[2015]]],[R[2015]]]],[11,"fold_arm",E,E,297,[[["self"],["arm"]],["arm"]]],[11,R[2297],E,E,297,[[["self"],[R[2239]]],[R[2239]]]],[11,R[2298],E,E,297,[[["self"],[R[2240]]],[R[2240]]]],[11,R[2299],E,E,297,[[["self"],[R[2241]]],[R[2241]]]],[11,R[2300],E,E,297,[[["self"],["binop"]],["binop"]]],[11,R[2301],E,E,297,[[["binding"],["self"]],["binding"]]],[11,R[2514],E,E,297,[[["self"],["block"]],["block"]]],[11,R[2302],E,E,297,[[["self"],[R[2023]]],[R[2023]]]],[11,R[2303],E,E,297,[[["self"],[R[2242]]],[R[2242]]]],[11,R[2304],E,E,297,[[["self"],[R[2243]]],[R[2243]]]],[11,"fold_data",E,E,297,[[["data"],["self"]],["data"]]],[11,R[2305],E,E,297,[[["self"],[R[2489]]],[R[2489]]]],[11,R[2306],E,E,297,[[[R[2244]],["self"]],[R[2244]]]],[11,R[2307],E,E,297,[[["self"],[R[2245]]],[R[2245]]]],[11,R[2308],E,E,297,[[["self"],[R[2030]]],[R[2030]]]],[11,"fold_expr",E,E,297,[[["self"],["expr"]],["expr"]]],[11,R[2309],E,E,297,[[["self"],[R[2246]]],[R[2246]]]],[11,R[2310],E,E,297,[[["self"],[R[2247]]],[R[2247]]]],[11,R[2311],E,E,297,[[["self"],[R[2034]]],[R[2034]]]],[11,R[2312],E,E,297,[[["self"],[R[2248]]],[R[2248]]]],[11,R[2313],E,E,297,[[["self"],[R[2249]]],[R[2249]]]],[11,R[2314],E,E,297,[[["self"],[R[2250]]],[R[2250]]]],[11,R[2315],E,E,297,[[[R[2251]],["self"]],[R[2251]]]],[11,R[2316],E,E,297,[[["exprbox"],["self"]],["exprbox"]]],[11,R[2317],E,E,297,[[[R[2252]],["self"]],[R[2252]]]],[11,R[2318],E,E,297,[[["self"],[R[2478]]],[R[2478]]]],[11,R[2319],E,E,297,[[["self"],[R[2479]]],[R[2479]]]],[11,R[2320],E,E,297,[[[R[2044]],["self"]],[R[2044]]]],[11,R[2321],E,E,297,[[["self"],[R[2046]]],[R[2046]]]],[11,R[2322],E,E,297,[[[R[2253]],["self"]],[R[2253]]]],[11,R[2323],E,E,297,[[["self"],[R[2049]]],[R[2049]]]],[11,R[2324],E,E,297,[[["self"],[R[2254]]],[R[2254]]]],[11,R[2325],E,E,297,[[["self"],["exprif"]],["exprif"]]],[11,R[2326],E,E,297,[[["self"],[R[2255]]],[R[2255]]]],[11,R[2327],E,E,297,[[["self"],["exprlet"]],["exprlet"]]],[11,R[2328],E,E,297,[[["self"],["exprlit"]],["exprlit"]]],[11,R[2329],E,E,297,[[[R[2480]],["self"]],[R[2480]]]],[11,R[2330],E,E,297,[[[R[2256]],["self"]],[R[2256]]]],[11,R[2331],E,E,297,[[["self"],[R[2257]]],[R[2257]]]],[11,R[2332],E,E,297,[[[R[2059]],["self"]],[R[2059]]]],[11,R[2333],E,E,297,[[[R[2258]],["self"]],[R[2258]]]],[11,R[2334],E,E,297,[[["self"],[R[2481]]],[R[2481]]]],[11,R[2335],E,E,297,[[[R[2259]],["self"]],[R[2259]]]],[11,R[2336],E,E,297,[[[R[2064]],["self"]],[R[2064]]]],[11,R[2337],E,E,297,[[["self"],[R[2260]]],[R[2260]]]],[11,R[2338],E,E,297,[[["self"],[R[2261]]],[R[2261]]]],[11,R[2339],E,E,297,[[["self"],[R[2262]]],[R[2262]]]],[11,R[2340],E,E,297,[[["self"],["exprtry"]],["exprtry"]]],[11,R[2341],E,E,297,[[["self"],[R[2070]]],[R[2070]]]],[11,R[2342],E,E,297,[[["self"],[R[2263]]],[R[2263]]]],[11,R[2343],E,E,297,[[["self"],[R[2482]]],[R[2482]]]],[11,R[2344],E,E,297,[[[R[2264]],["self"]],[R[2264]]]],[11,R[2345],E,E,297,[[["self"],[R[2265]]],[R[2265]]]],[11,R[2346],E,E,297,[[["self"],[R[2266]]],[R[2266]]]],[11,R[2347],E,E,297,[[["self"],[R[2267]]],[R[2267]]]],[11,R[2515],E,E,297,[[["self"],["field"]],["field"]]],[11,R[2348],E,E,297,[[["self"],[R[2496]]],[R[2496]]]],[11,R[2349],E,E,297,[[["self"],[R[2268]]],[R[2268]]]],[11,R[2350],E,E,297,[[["self"],["fields"]],["fields"]]],[11,R[2351],E,E,297,[[["self"],[R[2082]]],[R[2082]]]],[11,R[2352],E,E,297,[[["self"],[R[2084]]],[R[2084]]]],[11,"fold_file",E,E,297,[[["self"],["file"]],["file"]]],[11,R[2353],E,E,297,[[["self"],["fnarg"]],["fnarg"]]],[11,R[2354],E,E,297,[[["self"],[R[2087]]],[R[2087]]]],[11,R[2355],E,E,297,[[["self"],[R[2089]]],[R[2089]]]],[11,R[2356],E,E,297,[[["self"],[R[2091]]],[R[2091]]]],[11,R[2357],E,E,297,[[["self"],[R[2093]]],[R[2093]]]],[11,R[2358],E,E,297,[[["self"],[R[2095]]],[R[2095]]]],[11,R[2359],E,E,297,[[[R[2097]],["self"]],[R[2097]]]],[11,R[2360],E,E,297,[[["self"],[R[2099]]],[R[2099]]]],[11,R[2361],E,E,297,[[["self"],[R[2101]]],[R[2101]]]],[11,R[2362],E,E,297,[[["self"],[R[1860]]],[R[1860]]]],[11,R[2516],E,E,297,[[["self"],["ident"]],["ident"]]],[11,R[2363],E,E,297,[[["self"],[R[2487]]],[R[2487]]]],[11,R[2364],E,E,297,[[["self"],[R[2106]]],[R[2106]]]],[11,R[2365],E,E,297,[[[R[2108]],["self"]],[R[2108]]]],[11,R[2366],E,E,297,[[[R[2110]],["self"]],[R[2110]]]],[11,R[2367],E,E,297,[[["self"],[R[2112]]],[R[2112]]]],[11,R[2517],E,E,297,[[["index"],["self"]],["index"]]],[11,"fold_item",E,E,297,[[["item"],["self"]],["item"]]],[11,R[2368],E,E,297,[[[R[2269]],["self"]],[R[2269]]]],[11,R[2369],E,E,297,[[["self"],[R[2483]]],[R[2483]]]],[11,R[2370],E,E,297,[[["self"],[R[2117]]],[R[2117]]]],[11,R[2371],E,E,297,[[["self"],["itemfn"]],["itemfn"]]],[11,R[2372],E,E,297,[[["self"],[R[2120]]],[R[2120]]]],[11,R[2373],E,E,297,[[["self"],[R[2484]]],[R[2484]]]],[11,R[2374],E,E,297,[[["self"],[R[2270]]],[R[2270]]]],[11,R[2375],E,E,297,[[["self"],[R[2271]]],[R[2271]]]],[11,R[2376],E,E,297,[[["itemmod"],["self"]],["itemmod"]]],[11,R[2377],E,E,297,[[["self"],[R[2272]]],[R[2272]]]],[11,R[2378],E,E,297,[[[R[2273]],["self"]],[R[2273]]]],[11,R[2379],E,E,297,[[["self"],[R[2274]]],[R[2274]]]],[11,R[2380],E,E,297,[[[R[2129]],["self"]],[R[2129]]]],[11,R[2381],E,E,297,[[["self"],[R[2485]]],[R[2485]]]],[11,R[2382],E,E,297,[[["self"],[R[2275]]],[R[2275]]]],[11,R[2383],E,E,297,[[["self"],["itemuse"]],["itemuse"]]],[11,R[2518],E,E,297,[[["self"],["label"]],["label"]]],[11,R[2384],E,E,297,[[[R[2000]],["self"]],[R[2000]]]],[11,R[2385],E,E,297,[[["self"],[R[2136]]],[R[2136]]]],[11,"fold_lit",E,E,297,[[["lit"],["self"]],["lit"]]],[11,R[2386],E,E,297,[[["self"],["litbool"]],["litbool"]]],[11,R[2387],E,E,297,[[["self"],["litbyte"]],["litbyte"]]],[11,R[2388],E,E,297,[[[R[2276]],["self"]],[R[2276]]]],[11,R[2389],E,E,297,[[["litchar"],["self"]],["litchar"]]],[11,R[2390],E,E,297,[[["self"],[R[2488]]],[R[2488]]]],[11,R[2391],E,E,297,[[["litint"],["self"]],["litint"]]],[11,R[2392],E,E,297,[[["litstr"],["self"]],["litstr"]]],[11,R[2519],E,E,297,[[["self"],["local"]],["local"]]],[11,R[2520],E,E,297,[[["self"],["macro"]],["macro"]]],[11,R[2393],E,E,297,[[["self"],[R[2147]]],[R[2147]]]],[11,R[2394],E,E,297,[[["self"],["member"]],["member"]]],[11,"fold_meta",E,E,297,[[["self"],["meta"]],["meta"]]],[11,R[2395],E,E,297,[[["self"],[R[2476]]],[R[2476]]]],[11,R[2396],E,E,297,[[["self"],[R[2151]]],[R[2151]]]],[11,R[2397],E,E,297,[[["self"],[R[2153]]],[R[2153]]]],[11,R[2398],E,E,297,[[["self"],[R[2277]]],[R[2277]]]],[11,R[2399],E,E,297,[[[R[2156]],["self"]],[R[2156]]]],[11,"fold_pat",E,E,297,[[["pat"],["self"]],["pat"]]],[11,R[2400],E,E,297,[[["self"],["patbox"]],["patbox"]]],[11,R[2401],E,E,297,[[[R[2491]],["self"]],[R[2491]]]],[11,R[2402],E,E,297,[[["self"],["patlit"]],["patlit"]]],[11,R[2403],E,E,297,[[["self"],[R[2492]]],[R[2492]]]],[11,R[2404],E,E,297,[[["self"],["pator"]],["pator"]]],[11,R[2405],E,E,297,[[["self"],["patpath"]],["patpath"]]],[11,R[2406],E,E,297,[[["self"],[R[2493]]],[R[2493]]]],[11,R[2407],E,E,297,[[["self"],[R[2165]]],[R[2165]]]],[11,R[2408],E,E,297,[[["self"],["patrest"]],["patrest"]]],[11,R[2409],E,E,297,[[[R[2494]],["self"]],[R[2494]]]],[11,R[2410],E,E,297,[[[R[2278]],["self"]],[R[2278]]]],[11,R[2411],E,E,297,[[["self"],[R[2495]]],[R[2495]]]],[11,R[2412],E,E,297,[[[R[2171]],["self"]],[R[2171]]]],[11,R[2413],E,E,297,[[["self"],["pattype"]],["pattype"]]],[11,R[2414],E,E,297,[[["self"],["patwild"]],["patwild"]]],[11,"fold_path",E,E,297,[[["self"],["path"]],["path"]]],[11,R[2415],E,E,297,[[["self"],[R[2175]]],[R[2175]]]],[11,R[2416],E,E,297,[[[R[2177]],["self"]],[R[2177]]]],[11,R[2417],E,E,297,[[["self"],[R[2179]]],[R[2179]]]],[11,R[2418],E,E,297,[[["self"],[R[2181]]],[R[2181]]]],[11,R[2419],E,E,297,[[["self"],[R[2183]]],[R[2183]]]],[11,R[2521],E,E,297,[[["self"],["qself"]],["qself"]]],[11,R[2420],E,E,297,[[["self"],[R[2186]]],[R[2186]]]],[11,R[2421],E,E,297,[[["self"],[R[2422]]],[R[2422]]]],[11,R[2423],E,E,297,[[[R[2279]],["self"]],[R[2279]]]],[11,R[2424],E,E,297,[[["self"],[R[188]]],[R[188]]]],[11,"fold_span",E,E,297,[[["span"],["self"]],["span"]]],[11,"fold_stmt",E,E,297,[[["self"],["stmt"]],["stmt"]]],[11,R[2425],E,E,297,[[["self"],[R[2280]]],[R[2280]]]],[11,R[2426],E,E,297,[[["self"],[R[2192]]],[R[2192]]]],[11,R[2427],E,E,297,[[["self"],[R[2281]]],[R[2281]]]],[11,R[2428],E,E,297,[[["self"],[R[2195]]],[R[2195]]]],[11,R[2429],E,E,297,[[["self"],[R[2197]]],[R[2197]]]],[11,R[2430],E,E,297,[[[R[2199]],["self"]],[R[2199]]]],[11,R[2431],E,E,297,[[["self"],[R[2201]]],[R[2201]]]],[11,"fold_type",E,E,297,[[["self"],["type"]],["type"]]],[11,R[2432],E,E,297,[[["self"],[R[2282]]],[R[2282]]]],[11,R[2433],E,E,297,[[[R[2283]],["self"]],[R[2283]]]],[11,R[2434],E,E,297,[[["self"],[R[2284]]],[R[2284]]]],[11,R[2435],E,E,297,[[["self"],[R[2206]]],[R[2206]]]],[11,R[2436],E,E,297,[[[R[2285]],["self"]],[R[2285]]]],[11,R[2437],E,E,297,[[["self"],[R[2286]]],[R[2286]]]],[11,R[2438],E,E,297,[[["self"],[R[2287]]],[R[2287]]]],[11,R[2439],E,E,297,[[["self"],[R[2288]]],[R[2288]]]],[11,R[2440],E,E,297,[[["self"],[R[2212]]],[R[2212]]]],[11,R[2441],E,E,297,[[["self"],[R[2289]]],[R[2289]]]],[11,R[2442],E,E,297,[[["self"],[R[2490]]],[R[2490]]]],[11,R[2443],E,E,297,[[["self"],["typeptr"]],["typeptr"]]],[11,R[2444],E,E,297,[[["self"],[R[2217]]],[R[2217]]]],[11,R[2445],E,E,297,[[["self"],[R[2290]]],[R[2290]]]],[11,R[2446],E,E,297,[[[R[2220]],["self"]],[R[2220]]]],[11,R[2447],E,E,297,[[["self"],[R[2291]]],[R[2291]]]],[11,R[2522],E,E,297,[[["self"],["unop"]],["unop"]]],[11,R[2448],E,E,297,[[["self"],["useglob"]],["useglob"]]],[11,R[2449],E,E,297,[[[R[2486]],["self"]],[R[2486]]]],[11,R[2450],E,E,297,[[["self"],["usename"]],["usename"]]],[11,R[2451],E,E,297,[[["self"],["usepath"]],["usepath"]]],[11,R[2452],E,E,297,[[["self"],[R[2292]]],[R[2292]]]],[11,R[2453],E,E,297,[[["usetree"],["self"]],["usetree"]]],[11,R[2454],E,E,297,[[["self"],[R[2455]]],[R[2455]]]],[11,R[2456],E,E,297,[[["variant"],["self"]],["variant"]]],[11,R[2457],E,E,297,[[["self"],[R[2477]]],[R[2477]]]],[11,R[2458],E,E,297,[[["self"],[R[2293]]],[R[2293]]]],[11,R[2459],E,E,297,[[[R[2234]],["self"]],[R[2234]]]],[11,R[2460],E,E,297,[[["self"],[R[2294]]],[R[2294]]]],[11,R[2461],E,E,297,[[["self"],[R[2012]]],[R[2012]]]],[11,R[2462],E,E,297,[[["self"],[R[2238]]],[R[2238]]]],[11,"peek",R[2474],R[2523],313,[[["self"],["peek"]],["bool"]]],[11,"error",E,R[2470],313,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,R[2524]],[3,"Field"],[3,R[2525]],[3,R[2526]],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,R[2527]],[3,"Arm"],[3,"FieldValue"],[3,"Label"],[3,R[2528]],[3,"ExprArray"],[3,"ExprAssign"],[3,R[2529]],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,R[2530]],[3,R[2531]],[3,"ExprField"],[3,R[2532]],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,R[2533]],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,R[2534]],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,R[2535]],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,R[2536]],[3,"ConstParam"],[3,"Generics"],[3,R[2537]],[3,R[2538]],[3,R[2539]],[3,R[2540]],[3,"TraitBound"],[3,"TypeParam"],[3,R[2541]],[3,R[2542]],[3,R[2543]],[3,R[2544]],[3,R[2545]],[3,R[2546]],[3,R[2547]],[3,R[2548]],[3,R[2549]],[3,"ItemConst"],[3,"ItemEnum"],[3,R[2550]],[3,"ItemFn"],[3,R[2551]],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,R[2552]],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,R[2884]],[3,R[2553]],[3,R[2554]],[3,R[2555]],[3,R[2556]],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,R[2557]],[3,"Block"],[3,"Local"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,R[2558]],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,R[2559]],[3,"TypeSlice"],[3,R[2560]],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,R[2561]],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,R[2562]],[3,"PatType"],[3,"PatWild"],[3,R[2563]],[3,"Binding"],[3,R[2564]],[3,R[2565]],[3,"Path"],[3,R[2566]],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,R[2567]],[4,R[2568]],[4,"Expr"],[4,"Member"],[4,R[2569]],[4,R[2570]],[4,R[2571]],[4,R[2572]],[4,"FnArg"],[4,R[2573]],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"Lit"],[4,"StrStyle"],[4,R[2574]],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"Stmt"],[4,"ReturnType"],[4,"Type"],[4,"Pat"],[4,R[2575]],[4,R[2576]],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,R[2577]],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,R[2578]],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,R[2579]],[8,"Spanned"],[8,"Visit"],[8,"Fold"],[8,R[2580]],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,R[2581]],[3,"Error"],[3,"Ident"],[3,R[2582]],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,R[339]],[3,"Iter"],[3,R[703]],[3,"Lookahead1"],[3,"Nothing"]]};
searchIndex["synstructure"]={"doc":"This crate provides helper types for matching against enum…","i":[[3,R[2789],"synstructure","Information about a specific binding. This contains both…",N,N],[12,"binding",E,"The name which this BindingInfo will bind to.",0,N],[12,"style",E,"The type of binding which this BindingInfo will create.",0,N],[3,"VariantAst",E,"This type is similar to `syn`'s `Variant` type, however…",N,N],[12,"attrs",E,E,1,N],[12,"ident",E,E,1,N],[12,"fields",E,E,1,N],[12,R[345],E,E,1,N],[3,R[2790],E,"A wrapper around a `syn::DeriveInput`'s variant which…",N,N],[12,"prefix",E,E,2,N],[3,"Structure",E,"A wrapper around a `syn::DeriveInput` which provides…",N,N],[4,"AddBounds",E,"Changes how bounds are added",N,N],[13,"Both",E,"Add for fields and generics",3,N],[13,"Fields",E,"Fields only",3,N],[13,"Generics",E,"Generics only",3,N],[13,"None",E,"None",3,N],[4,"BindStyle",E,"The type of binding to use when generating a pattern.",N,N],[13,"Move",E,"`x`",4,N],[13,"MoveMut",E,"`mut x`",4,N],[13,"Ref",E,"`ref x`",4,N],[13,"RefMut",E,"`ref mut x`",4,N],[5,"unpretty_print",E,"Dumps an unpretty version of a tokenstream. Takes any type…",N,[[["display"]],["string"]]],[8,R[2791],E,"Helper trait describing values which may be returned by…",N,N],[10,R[428],E,"Convert this result into a `Result` for further processing…",5,[[],[[R[3],[R[1152]]],[R[1152]]]]],[11,"into_stream",E,"Convert this result into a `proc_macro::TokenStream`,…",5,[[],[R[1152]]]],[11,"ast",E,R[2780],0,[[["self"]],["field"]]],[11,"pat",E,"Generates the pattern fragment for this field binding.",0,[[["self"]],[R[1152]]]],[11,R[2777],E,R[2778],0,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"bindings",E,"Returns a slice of the bindings in this Variant.",2,[[["self"]]]],[11,"bindings_mut",E,"Returns a mut slice of the bindings in this Variant.",2,[[["self"]]]],[11,"ast",E,"Returns a `VariantAst` object which contains references to…",2,[[["self"]],[R[2787]]]],[11,"omitted_bindings",E,"True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat",E,"Generates the match-arm pattern which could be used to…",2,[[["self"]],[R[1152]]]],[11,"construct",E,"Generates the token stream required to construct the…",2,[[["self"],["f"]],[R[1152]]]],[11,"each",E,R[2776],2,[[["self"],["f"]],[R[1152]]]],[11,"fold",E,R[2776],2,[[["i"],["self"],["f"]],[R[1152]]]],[11,"filter",E,"Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding",E,"Remove the binding at the given index.",2,[[["self"],["usize"]],["self"]]],[11,"bind_with",E,R[2781],2,[[["self"],["f"]],["self"]]],[11,R[2782],E,R[2783],2,[[["self"],["f"]],["self"]]],[11,R[2777],E,R[2778],2,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"new",E,R[2779],6,[[[R[2030]]],["self"]]],[11,"try_new",E,R[2779],6,[[[R[2030]]],[R[3]]]],[11,"variants",E,"Returns a slice of the variants in this Structure.",6,[[["self"]]]],[11,"variants_mut",E,"Returns a mut slice of the variants in this Structure.",6,[[["self"]]]],[11,"ast",E,R[2780],6,[[["self"]],[R[2030]]]],[11,"omitted_variants",E,"True if any variants were omitted due to a…",6,[[["self"]],["bool"]]],[11,"each",E,R[2776],6,[[["self"],["f"]],[R[1152]]]],[11,"fold",E,R[2776],6,[[["i"],["self"],["f"]],[R[1152]]]],[11,"each_variant",E,"Runs the passed-in function once for each variant, passing…",6,[[["self"],["f"]],[R[1152]]]],[11,"filter",E,"Filter the bindings created by this `Structure` object.…",6,[[["self"],["f"]],["self"]]],[11,"add_where_predicate",E,"Specify additional where predicate bounds which should be…",6,[[[R[2238]],["self"]],["self"]]],[11,"add_bounds",E,"Specify which bounds should be generated by…",6,[[["self"],[R[2785]]],["self"]]],[11,"filter_variants",E,"Filter the variants matched by this `Structure` object.…",6,[[["self"],["f"]],["self"]]],[11,"remove_variant",E,"Remove the variant at the given index.",6,[[["self"],["usize"]],["self"]]],[11,"bind_with",E,R[2781],6,[[["self"],["f"]],["self"]]],[11,R[2782],E,R[2783],6,[[["self"],["f"]],["self"]]],[11,R[2777],E,"Returns a list of the type parameters which are refrenced…",6,[[["self"]],[["vec",["ident"]],["ident"]]]],[11,"add_impl_generic",E,"Adds an `impl<>` generic parameter. This can be used when…",6,[[["self"],[R[2101]]],["self"]]],[11,"add_trait_bounds",E,"Add trait bounds for a trait with the given path for each…",6,[[[R[2785]],[R[2280]],["option"],["self"]]]],[11,"bound_impl",E,R[2784],6,[[["totokens"],["self"]],[R[1152]]]],[11,"unsafe_bound_impl",E,R[2784],6,[[["totokens"],["self"]],[R[1152]]]],[11,"unbound_impl",E,R[2784],6,[[["totokens"],["self"]],[R[1152]]]],[11,"unsafe_unbound_impl",E,R[2784],6,[[["totokens"],["self"]],[R[1152]]]],[11,"gen_impl",E,"Generate an impl block for the given struct. This impl…",6,[[[R[1152]],["self"]],[R[1152]]]],[14,"decl_derive",E,"The `decl_derive!` macro declares a custom derive wrapper.…",N,N],[14,"decl_attribute",E,"The `decl_attribute!` macro declares a custom attribute…",N,N],[14,"test_derive",E,"Run a test on a custom derive. This macro expands both the…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"clone",E,E,3,[[["self"]],[R[2785]]]],[11,"clone",E,E,4,[[["self"]],["bindstyle"]]],[11,"clone",E,E,0,[[["self"]],[R[2786]]]],[11,"clone",E,E,1,[[["self"]],[R[2787]]]],[11,"clone",E,E,2,[[["self"]],[R[2788]]]],[11,"clone",E,E,6,[[["self"]],["structure"]]],[11,"eq",E,E,3,[[[R[2785]],["self"]],["bool"]]],[11,"eq",E,E,4,[[["bindstyle"],["self"]],["bool"]]],[11,"eq",E,E,0,[[[R[2786]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[2786]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[2787]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2787]]],["bool"]]],[11,"eq",E,E,2,[[[R[2788]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[2788]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["structure"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["structure"]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,R[2501],E,E,4,[[[R[1152]],["self"]]]],[11,R[2501],E,E,0,[[[R[1152]],["self"]]]]],"p":[[3,R[2789]],[3,"VariantAst"],[3,R[2790]],[4,"AddBounds"],[4,"BindStyle"],[8,R[2791]],[3,"Structure"]]};
searchIndex["thread_local"]={"doc":"Per-object thread-local storage","i":[[3,R[929],"thread_local","Thread-local variable wrapper",N,N],[3,R[703],E,"Mutable iterator over the contents of a `ThreadLocal`.",N,N],[3,R[339],E,"An iterator that moves out of a `ThreadLocal`.",N,N],[3,R[930],E,"Wrapper around `ThreadLocal` which adds a fast path for a…",N,N],[6,"CachedIterMut",E,"Mutable iterator over the contents of a `CachedThreadLocal`.",N,N],[6,"CachedIntoIter",E,"An iterator that moves out of a `CachedThreadLocal`.",N,N],[11,"new",E,"Creates a new empty `ThreadLocal`.",0,[[],[R[927]]]],[11,"get",E,R[921],0,[[["self"]],[[T],["option"]]]],[11,"get_or",E,R[920],0,[[["self"],["f"]],[T]]],[11,R[922],E,R[920],0,[[["self"],["f"]],[[R[3]],[T]]]],[11,R[628],E,R[923],0,[[["self"]],["itermut"]]],[11,"clear",E,R[924],0,[[["self"]]]],[11,R[925],E,R[926],0,[[["self"]],[T]]],[11,"new",E,"Creates a new empty `CachedThreadLocal`.",1,[[],[R[928]]]],[11,"get",E,R[921],1,[[["self"]],[[T],["option"]]]],[11,"get_or",E,R[920],1,[[["self"],["f"]],[T]]],[11,R[922],E,R[920],1,[[["self"],["f"]],[[R[3]],[T]]]],[11,R[628],E,R[923],1,[[["self"]],["cacheditermut"]]],[11,"clear",E,R[924],1,[[["self"]]]],[11,R[925],E,R[926],1,[[["self"]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[211],E,E,0,[[],["i"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[211],E,E,2,[[],["i"]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[211],E,E,3,[[],["i"]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[211],E,E,1,[[],["i"]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[["box"],["option",["box"]]]]],[11,R[292],E,E,2,[[["self"]]]],[11,"next",E,E,3,[[["self"]],[["box"],["option",["box"]]]]],[11,R[292],E,E,3,[[["self"]]]],[11,R[211],E,E,0,[[],[R[485]]]],[11,R[211],E,E,1,[[],["cachedintoiter"]]],[11,R[90],E,E,0,[[],[R[927]]]],[11,R[90],E,E,1,[[],[R[928]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]]],"p":[[3,R[929]],[3,R[930]],[3,R[703]],[3,R[339]]]};
searchIndex["tiny_keccak"]={"doc":"Keccak derived functions specified in [`FIPS-202`],…","i":[[3,"Keccak","tiny_keccak","The `Keccak` hash functions defined in [`Keccak SHA3…",N,N],[5,"keccakf",E,"`keccak-f[1600, 24]`",N,[[]]],[11,"v224",E,"Creates new [`Keccak`] hasher with a security level of 224…",0,[[],["keccak"]]],[11,"v256",E,"Creates new [`Keccak`] hasher with a security level of 256…",0,[[],["keccak"]]],[11,"v384",E,"Creates new [`Keccak`] hasher with a security level of 384…",0,[[],["keccak"]]],[11,"v512",E,"Creates new [`Keccak`] hasher with a security level of 512…",0,[[],["keccak"]]],[8,"Hasher",E,R[1381],N,N],[10,"update",E,R[1382],1,[[["self"]]]],[10,"finalize",E,R[1383],1,[[]]],[8,"IntoXof",E,"A trait used to convert [`Hasher`] into it's [`Xof`]…",N,N],[16,"Xof",E,"A type implementing [`Xof`], eXtendable-output function…",2,N],[10,"into_xof",E,"A method used to convert type into [`Xof`].",2,[[]]],[8,"Xof",E,"Extendable-output function (`XOF`) is a function on bit…",N,N],[10,"squeeze",E,"A method used to retrieve another part of hash function…",3,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"update",E,R[1382],0,[[["self"]]]],[11,"finalize",E,R[1383],0,[[]]],[11,"clone",E,E,0,[[["self"]],["keccak"]]]],"p":[[3,"Keccak"],[8,"Hasher"],[8,"IntoXof"],[8,"Xof"]]};
searchIndex["toml"]={"doc":"A [TOML]-parsing library","i":[[3,"Spanned","toml","A spanned value, indicating the range at which it is…",N,N],[0,"map",E,"A map of String to toml::Value.",N,N],[3,"Map",R[3254],"Represents a JSON key/value type.",N,N],[3,R[731],E,"A vacant Entry. It is part of the [`Entry`] enum.",N,N],[3,R[732],E,"An occupied Entry. It is part of the [`Entry`] enum.",N,N],[3,"Iter",E,"An iterator over a toml::Map's entries.",N,N],[3,R[703],E,"A mutable iterator over a toml::Map's entries.",N,N],[3,R[339],E,"An owning iterator over a toml::Map's entries.",N,N],[3,"Keys",E,"An iterator over a toml::Map's keys.",N,N],[3,"Values",E,"An iterator over a toml::Map's values.",N,N],[4,"Entry",E,R[1516],N,N],[13,"Vacant",E,"A vacant Entry.",0,N],[13,"Occupied",E,"An occupied Entry.",0,N],[11,"new",E,"Makes a new empty Map.",1,[[],["self"]]],[11,R[287],E,"Makes a new empty Map with the given initial capacity.",1,[[["usize"]],["self"]]],[11,"clear",E,R[3243],1,[[["self"]]]],[11,"get",E,R[1550],1,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,R[610],E,R[3244],1,[[["self"],["q"]],["bool"]]],[11,R[471],E,R[1552],1,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"insert",E,R[1553],1,[[["self"],["string"],["value"]],[["option",["value"]],["value"]]]],[11,"remove",E,R[1554],1,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"entry",E,R[1555],1,[[["self"],["s"]],["entry"]]],[11,"len",E,R[1556],1,[[["self"]],["usize"]]],[11,R[340],E,R[3245],1,[[["self"]],["bool"]]],[11,"iter",E,"Gets an iterator over the entries of the map.",1,[[["self"]],["iter"]]],[11,R[628],E,"Gets a mutable iterator over the entries of the map.",1,[[["self"]],["itermut"]]],[11,"keys",E,"Gets an iterator over the keys of the map.",1,[[["self"]],["keys"]]],[11,"values",E,"Gets an iterator over the values of the map.",1,[[["self"]],["values"]]],[11,"key",E,R[1557],0,[[["self"]],["string"]]],[11,R[3246],E,R[612],0,[[["value"]],["value"]]],[11,R[1531],E,R[1532],0,[[["f"]],["value"]]],[11,"key",E,R[1559],2,[[["self"]],["string"]]],[11,"insert",E,R[1530],2,[[["value"]],["value"]]],[11,"key",E,R[1534],3,[[["self"]],["string"]]],[11,"get",E,R[1536],3,[[["self"]],["value"]]],[11,R[471],E,R[1537],3,[[["self"]],["value"]]],[11,"into_mut",E,R[3247],3,[[],["value"]]],[11,"insert",E,R[3248],3,[[["self"],["value"]],["value"]]],[11,"remove",E,R[3249],3,[[],["value"]]],[0,"value","toml","Definition of a TOML value",N,N],[3,"Datetime",R[3253],"A parsed TOML datetime value",N,N],[3,R[3260],E,"Error returned from parsing a `Datetime` in the `FromStr`…",N,N],[4,"Value",E,"Representation of a TOML value.",N,N],[13,"String",E,"Represents a TOML string",4,N],[13,"Integer",E,"Represents a TOML integer",4,N],[13,"Float",E,"Represents a TOML float",4,N],[13,"Boolean",E,"Represents a TOML boolean",4,N],[13,"Datetime",E,"Represents a TOML datetime",4,N],[13,"Array",E,"Represents a TOML array",4,N],[13,"Table",E,"Represents a TOML table",4,N],[6,"Array",E,"Type representing a TOML array, payload of the…",N,N],[6,"Table",E,"Type representing a TOML table, payload of the…",N,N],[8,"Index",E,"Types that can be used to index a `toml::Value`",N,N],[11,R[20],E,"Convert a `T` into `toml::Value` which is an enum that can…",4,[[[T]],[["value"],["error"],[R[3],["value","error"]]]]],[11,R[21],E,"Interpret a `toml::Value` as an instance of type `T`.",4,[[],[[R[3],["error"]],["error"]]]],[11,"get",E,"Index into a TOML array or map. A string index can be used…",4,[[["self"],["index"]],[["value"],["option",["value"]]]]],[11,R[471],E,"Mutably index into a TOML array or map. A string index can…",4,[[["self"],["index"]],[["option",["value"]],["value"]]]],[11,"as_integer",E,"Extracts the integer value if it is an integer.",4,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"is_integer",E,"Tests whether this value is an integer.",4,[[["self"]],["bool"]]],[11,"as_float",E,"Extracts the float value if it is a float.",4,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"is_float",E,"Tests whether this value is a float.",4,[[["self"]],["bool"]]],[11,"as_bool",E,"Extracts the boolean value if it is a boolean.",4,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"is_bool",E,"Tests whether this value is a boolean.",4,[[["self"]],["bool"]]],[11,"as_str",E,"Extracts the string of this value if it is a string.",4,[[["self"]],[["option",["str"]],["str"]]]],[11,"is_str",E,"Tests if this value is a string.",4,[[["self"]],["bool"]]],[11,"as_datetime",E,"Extracts the datetime value if it is a datetime.",4,[[["self"]],[["option",[R[3256]]],[R[3256]]]]],[11,"is_datetime",E,"Tests whether this value is a datetime.",4,[[["self"]],["bool"]]],[11,"as_array",E,R[3250],4,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"as_array_mut",E,R[3250],4,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"is_array",E,"Tests whether this value is an array.",4,[[["self"]],["bool"]]],[11,"as_table",E,R[3251],4,[[["self"]],[["table"],["option",["table"]]]]],[11,"as_table_mut",E,R[3251],4,[[["self"]],[["table"],["option",["table"]]]]],[11,"is_table",E,"Tests whether this value is a table.",4,[[["self"]],["bool"]]],[11,"same_type",E,"Tests whether this and another value have the same type.",4,[[["value"],["self"]],["bool"]]],[11,"type_str",E,"Returns a human-readable representation of the type of…",4,[[["self"]],["str"]]],[0,"ser","toml","Serializing Rust structures into TOML.",N,N],[3,R[3099],R[3255],"Serialization implementation for TOML.",N,N],[4,"Error",E,"Errors that can occur when serializing a type.",N,N],[13,"UnsupportedType",E,"Indicates that a Rust type was requested to be serialized…",5,N],[13,"KeyNotString",E,"The key of all TOML maps must be strings, but…",5,N],[13,"ArrayMixedType",E,"Arrays in TOML must have a homogenous type, but a…",5,N],[13,"ValueAfterTable",E,"All values in a TOML table must be emitted before further…",5,N],[13,"DateInvalid",E,"A serialized date was invalid.",5,N],[13,"NumberInvalid",E,"A serialized number was invalid.",5,N],[13,"UnsupportedNone",E,"None was attempted to be serialized, but it's not supported.",5,N],[13,"Custom",E,"A custom error which could be generated when serializing a…",5,N],[5,"to_vec",E,"Serialize the given data structure as a TOML byte vector.",N,[[[T]],[["vec",["u8"]],[R[3],["vec","error"]],["error"]]]],[5,R[78],E,"Serialize the given data structure as a String of TOML.",N,[[[T]],[[R[3],["string","error"]],["string"],["error"]]]],[5,"to_string_pretty",E,"Serialize the given data structure as a \"pretty\" String of…",N,[[[T]],[[R[3],["string","error"]],["string"],["error"]]]],[5,"tables_last",E,"Convenience function to serialize items in a map in an…",N,[[["i"],["s"]],[R[3]]]],[11,"new",E,"Creates a new serializer which will emit TOML into the…",6,[[["string"]],["serializer"]]],[11,"pretty",E,"Instantiate a \"pretty\" formatter",6,[[["string"]],["serializer"]]],[11,"pretty_string",E,"Enable or Disable pretty strings",6,[[["self"],["bool"]],["self"]]],[11,"pretty_string_literal",E,"Enable or Disable Literal strings for pretty strings",6,[[["self"],["bool"]],["self"]]],[11,"pretty_array",E,"Enable or Disable pretty arrays",6,[[["self"],["bool"]],["self"]]],[11,"pretty_array_indent",E,"Set the indent for pretty arrays",6,[[["self"],["usize"]],["self"]]],[11,"pretty_array_trailing_comma",E,"Specify whether to use a trailing comma when serializing…",6,[[["self"],["bool"]],["self"]]],[0,"de","toml","Deserializing TOML into Rust structures.",N,N],[3,"Error",R[3258],"Errors that can occur when deserializing a type.",N,N],[3,R[2924],E,"Deserialization implementation for TOML.",N,N],[5,R[768],E,"Deserializes a byte slice into a type.",N,[[],[[R[3],["error"]],["error"]]]],[5,R[457],E,"Deserializes a string into a type.",N,[[["str"]],[[R[3],["error"]],["error"]]]],[11,"new",E,"Creates a new deserializer which will be deserializing the…",7,[[["str"]],[R[4348]]]],[11,"end",E,"The `Deserializer::end` method should be called after a…",7,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"set_require_newline_after_table",E,R[3252],7,[[["self"],["bool"]]]],[11,"set_allow_duplicate_after_longer_table",E,R[3252],7,[[["self"],["bool"]]]],[11,"line_col",E,"Produces a (line, column) pair of the position of the…",8,[[["self"]],["option"]]],[11,"start","toml","Access the start of the span of the contained value.",9,[[["self"]],["usize"]]],[11,"end",E,"Access the end of the span of the contained value.",9,[[["self"]],["usize"]]],[11,"span",E,"Get the span of the contained value.",9,[[["self"]]]],[11,R[109],E,"Consumes the spanned value and returns the contained value.",9,[[],[T]]],[11,"get_ref",E,"Returns a reference to the contained value.",9,[[["self"]],[T]]],[11,R[471],E,"Returns a mutable reference to the contained value.",9,[[["self"]],[T]]],[14,"toml",E,"Construct a [`toml::Value`] from TOML syntax.",N,N],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",R[3254],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[211],E,E,1,[[],["i"]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[211],E,E,10,[[],["i"]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[211],E,E,11,[[],["i"]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[211],E,E,12,[[],["i"]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[211],E,E,13,[[],["i"]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[211],E,E,14,[[],["i"]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",R[3253],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[78],E,E,15,[[["self"]],["string"]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[78],E,E,16,[[["self"]],["string"]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[78],E,E,4,[[["self"]],["string"]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",R[3255],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[["self"]],["string"]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",R[3258],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[78],E,E,8,[[["self"]],["string"]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"from",R[3253],E,4,[[["str"]],["value"]]],[11,"from",E,E,4,[[["vec"]],["value"]]],[11,"from",E,E,4,[[[R[501]]],["value"]]],[11,"from",E,E,4,[[["hashmap"]],["value"]]],[11,"from",E,E,4,[[["string"]],["value"]]],[11,"from",E,E,4,[[["i64"]],["value"]]],[11,"from",E,E,4,[[["i32"]],["value"]]],[11,"from",E,E,4,[[["i8"]],["value"]]],[11,"from",E,E,4,[[["u8"]],["value"]]],[11,"from",E,E,4,[[["u32"]],["value"]]],[11,"from",E,E,4,[[["f64"]],["value"]]],[11,"from",E,E,4,[[["f32"]],["value"]]],[11,"from",E,E,4,[[["bool"]],["value"]]],[11,"from",E,E,4,[[[R[3256]]],["value"]]],[11,"from",E,E,4,[[["table"]],["value"]]],[11,"next",R[3254],E,10,[[["self"]],["option"]]],[11,R[292],E,E,10,[[["self"]]]],[11,"next",E,E,11,[[["self"]],["option"]]],[11,R[292],E,E,11,[[["self"]]]],[11,"next",E,E,12,[[["self"]],["option"]]],[11,R[292],E,E,12,[[["self"]]]],[11,"next",E,E,13,[[["self"]],["option"]]],[11,R[292],E,E,13,[[["self"]]]],[11,"next",E,E,14,[[["self"]],["option"]]],[11,R[292],E,E,14,[[["self"]]]],[11,"extend",E,E,1,[[["self"],[T]]]],[11,R[211],E,E,1,[[]]],[11,R[295],E,E,10,[[["self"]],["option"]]],[11,R[295],E,E,11,[[["self"]],["option"]]],[11,R[295],E,E,12,[[["self"]],["option"]]],[11,R[295],E,E,13,[[["self"]],["option"]]],[11,R[295],E,E,14,[[["self"]],["option"]]],[11,"len",E,E,10,[[["self"]],["usize"]]],[11,"len",E,E,11,[[["self"]],["usize"]]],[11,"len",E,E,12,[[["self"]],["usize"]]],[11,"len",E,E,13,[[["self"]],["usize"]]],[11,"len",E,E,14,[[["self"]],["usize"]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",R[3253],E,4,[[["self"]],["value"]]],[11,"clone",E,E,15,[[["self"]],[R[3256]]]],[11,"clone",E,E,16,[[["self"]],[R[3257]]]],[11,"clone",R[3255],E,5,[[["self"]],["error"]]],[11,"clone",R[3258],E,8,[[["self"]],["error"]]],[11,"clone","toml",E,9,[[["self"]],["spanned"]]],[11,R[90],R[3254],E,1,[[],["self"]]],[11,"cmp","toml",E,9,[[["self"]],[R[105]]]],[11,"eq",R[3254],E,1,[[["self"]],["bool"]]],[11,"eq",R[3253],E,4,[[["value"],["self"]],["bool"]]],[11,"ne",E,E,4,[[["value"],["self"]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[3256]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[3256]]],["bool"]]],[11,"eq",R[3255],E,5,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,5,[[["error"],["self"]],["bool"]]],[11,"eq",R[3258],E,8,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["error"]],["bool"]]],[11,"eq","toml",E,9,[[["self"]],["bool"]]],[11,R[106],E,E,9,[[["self"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",R[3253],E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3255],E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3258],E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3254],E,1,[[["self"],[R[37]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[3253],E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3255],E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3258],E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt","toml",E,9,[[["self"],[R[37]]],[R[3]]]],[11,R[457],R[3253],E,4,[[["str"]],[["value"],[R[3],["value"]]]]],[11,R[457],E,E,15,[[["str"]],[[R[3],[R[3256],R[3257]]],[R[3256]],[R[3257]]]]],[11,"index",R[3254],E,1,[[["self"],["q"]],["value"]]],[11,"index",R[3253],E,4,[[["i"],["self"]],["value"]]],[11,R[350],R[3254],E,1,[[["self"],["q"]],["value"]]],[11,R[350],R[3253],E,4,[[["self"],["i"]],["value"]]],[11,"hash","toml",E,9,[[["self"],["h"]]]],[11,R[293],R[3254],E,1,[[[T]],["self"]]],[11,R[45],"toml",E,9,[[["self"]],["str"]]],[11,R[38],R[3253],E,16,[[["self"]],["str"]]],[11,R[38],R[3255],E,5,[[["self"]],["str"]]],[11,R[38],R[3258],E,8,[[["self"]],["str"]]],[11,R[2940],R[3253],E,4,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[2990],E,E,4,[[["str"],["v"]],[[R[3],["error"]],["error"]]]],[11,R[2974],E,E,4,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[2980],E,E,4,[[["str"],["v"]],[[R[3],["error"]],["error"]]]],[11,R[2942],E,E,4,[[["v"]],[R[3]]]],[11,R[2954],E,E,4,[[["v"]],[R[3]]]],[11,R[2956],E,E,4,[[["v"]],[R[3]]]],[11,R[2958],E,E,4,[[["v"]],[R[3]]]],[11,R[2960],E,E,4,[[["v"]],[R[3]]]],[11,R[2944],E,E,4,[[["v"]],[R[3]]]],[11,R[2946],E,E,4,[[["v"]],[R[3]]]],[11,R[2948],E,E,4,[[["v"]],[R[3]]]],[11,R[2950],E,E,4,[[["v"]],[R[3]]]],[11,R[2964],E,E,4,[[["v"]],[R[3]]]],[11,R[2966],E,E,4,[[["v"]],[R[3]]]],[11,R[2968],E,E,4,[[["v"]],[R[3]]]],[11,R[2970],E,E,4,[[["v"]],[R[3]]]],[11,R[2971],E,E,4,[[["v"]],[R[3]]]],[11,R[2976],E,E,4,[[["v"]],[R[3]]]],[11,R[2982],E,E,4,[[["v"]],[R[3]]]],[11,R[2972],E,E,4,[[["v"]],[R[3]]]],[11,R[2973],E,E,4,[[["v"]],[R[3]]]],[11,R[2986],E,E,4,[[["v"]],[R[3]]]],[11,R[2978],E,E,4,[[["str"],["v"]],[R[3]]]],[11,R[2984],E,E,4,[[["str"],["usize"],["v"]],[R[3]]]],[11,R[2988],E,E,4,[[["str"],["v"]],[R[3]]]],[11,R[2983],E,E,4,[[["usize"],["v"]],[R[3]]]],[11,R[2994],E,E,4,[[["v"]],[R[3]]]],[11,R[2992],E,E,4,[[["v"]],[R[3]]]],[11,R[3259],E,E,4,[[],["self"]]],[11,"custom",R[3255],E,5,[[["display"]],["error"]]],[11,R[132],R[3254],E,1,[[["s"],["self"]],[R[3]]]],[11,R[132],R[3253],E,4,[[["s"],["self"]],[R[3]]]],[11,R[132],E,E,15,[[["s"],["self"]],[R[3]]]],[11,R[132],"toml",E,9,[[["s"],["self"]],[R[3]]]],[11,R[173],R[3254],E,1,[[["d"]],[R[3]]]],[11,R[173],R[3253],E,4,[[["d"]],[[R[3],["value"]],["value"]]]],[11,R[173],E,E,15,[[["d"]],[[R[3256]],[R[3],[R[3256]]]]]],[11,R[173],"toml",E,9,[[["d"]],[["spanned"],[R[3],["spanned"]]]]],[11,"custom",R[3258],E,8,[[["display"]],["error"]]]],"p":[[4,"Entry"],[3,"Map"],[3,R[731]],[3,R[732]],[4,"Value"],[4,"Error"],[3,R[3099]],[3,R[2924]],[3,"Error"],[3,"Spanned"],[3,"Iter"],[3,R[703]],[3,R[339]],[3,"Keys"],[3,"Values"],[3,"Datetime"],[3,R[3260]]]};
searchIndex["tracing"]={"doc":"A scoped, structured logging and diagnostics system.","i":[[3,R[992],"tracing",R[936],N,N],[3,"Event",E,R[940],N,N],[8,"Value",E,R[3134],N,N],[10,"record",E,R[3135],0,[[["field"],["self"],["visit"]]]],[8,R[971],E,R[972],N,N],[11,R[952],E,R[953],1,[[[R[939]],["self"]],[R[954]]]],[10,"enabled",E,R[973],1,[[["self"],[R[939]]],["bool"]]],[10,R[974],E,R[975],1,[[[R[955]],["self"]],["id"]]],[10,"record",E,R[956],1,[[["record"],["self"],["id"]]]],[10,R[957],E,R[958],1,[[["self"],["id"]]]],[10,"event",E,R[959],1,[[["self"],["event"]]]],[10,"enter",E,R[976],1,[[["self"],["id"]]]],[10,"exit",E,R[960],1,[[["self"],["id"]]]],[11,R[961],E,R[962],1,[[["self"],["id"]],["id"]]],[11,R[963],E,R[977],1,[[["id"],["self"]]]],[11,R[964],E,R[978],1,[[["id"],["self"]],["bool"]]],[11,R[965],E,R[966],1,[[["self"]],["current"]]],[11,R[979],E,R[980],1,[[["self"],[R[46]]],["option"]]],[0,"dispatcher",E,R[3151],N,N],[3,R[992],R[3144],R[936],N,N],[3,R[996],E,R[3138],N,N],[5,R[3140],E,R[3152],N,[[[R[937]]],[T]]],[5,R[3142],E,R[3153],N,[[[R[937]]],[R[3143]]]],[5,R[3141],E,R[3154],N,[[[R[937]]],[[R[938]],[R[3],[R[938]]]]]],[3,R[997],E,R[3139],N,N],[5,R[925],E,R[3155],N,[[["f"]],[T]]],[0,"event","tracing",R[3165],N,N],[3,"Event",R[3145],R[940],N,N],[3,"Level","tracing",R[948],N,N],[3,R[993],E,R[947],N,N],[23,"instrument",E,R[3150],N,N],[3,"Span",E,R[3137],N,N],[0,"field",E,"Structured data associated with `Span`s and `Event`s.",N,N],[3,"Field",R[3148],R[943],N,N],[3,"FieldSet",E,R[3175],N,N],[3,"ValueSet",E,R[3176],N,N],[3,"Iter",E,R[3177],N,N],[8,"Visit",E,R[3182],N,N],[11,"record_i64",E,R[3183],2,[[["field"],["self"],["i64"]]]],[11,"record_u64",E,R[3184],2,[[["field"],["self"],["u64"]]]],[11,R[3185],E,R[3186],2,[[["field"],["self"],["bool"]]]],[11,"record_str",E,R[3187],2,[[["field"],["self"],["str"]]]],[11,R[3188],E,R[3189],2,[[["field"],["self"],["error"]]]],[10,R[3190],E,R[3191],2,[[["field"],["self"],["debug"]]]],[8,"Value",E,R[3134],N,N],[10,"record",E,R[3135],0,[[["field"],["self"],["visit"]]]],[3,R[998],E,R[3178],N,N],[3,R[999],E,R[3179],N,N],[5,"display",E,R[3180],N,[[[T]],[R[988]]]],[5,"debug",E,R[3181],N,[[[T]],[R[989]]]],[8,"AsField",E,"Trait implemented to allow a type to be used as a field key.",N,N],[10,"as_field",E,"Attempts to convert `&self` into a `Field` with the…",3,[[["self"],[R[939]]],[["option",["field"]],["field"]]]],[0,"level_filters","tracing","Trace verbosity level filtering.",N,N],[3,R[1172],R[3149],"A filter comparable to trace verbosity `Level`.",N,N],[17,R[3136],E,"The statically configured maximum trace level.",N,N],[18,"OFF",E,"The \"off\" level.",4,N],[18,"ERROR",E,R[1176],4,N],[18,"WARN",E,R[1177],4,N],[18,"INFO",E,R[1178],4,N],[18,"DEBUG",E,R[1179],4,N],[18,"TRACE",E,R[1180],4,N],[11,"from_level",E,"Returns a `LevelFilter` that enables spans and events with…",4,[[["level"]],["self"]]],[11,"into_level",E,"Returns the most verbose [`Level`] that this filter…",4,[[],[["level"],["option",["level"]]]]],[0,"span","tracing","Spans represent periods of time in which a program was…",N,N],[3,R[994],R[3147],R[3211],N,N],[3,"Id",E,R[3210],N,N],[3,"Record",E,R[3212],N,N],[3,"Span",E,R[3137],N,N],[3,"Entered",E,"A guard representing a span which has been entered and is…",N,N],[8,"AsId",E,"Trait implemented by types which have a span `Id`.",N,N],[10,"as_id",E,"Returns the `Id` of the span that `self` corresponds to,…",5,[[["self"]],[["option",["id"]],["id"]]]],[11,"new",E,"Constructs a new `Span` with the given [metadata] and set…",6,[[[R[939]],[R[941]]],["span"]]],[11,"new_root",E,"Constructs a new `Span` as the root of its own trace tree,…",6,[[[R[939]],[R[941]]],["span"]]],[11,"child_of",E,"Constructs a new `Span` as child of the given parent span,…",6,[[[R[939]],[R[941]]],["span"]]],[11,"new_disabled",E,"Constructs a new disabled span with the given `Metadata`.",6,[[[R[939]]],["span"]]],[11,"none",E,"Constructs a new span that is completely disabled.",6,[[],["span"]]],[11,"current",E,"Returns a handle to the span [considered by the…",6,[[],["span"]]],[11,"enter",E,"Enters this span, returning a guard that will exit the…",6,[[["self"]],["entered"]]],[11,"in_scope",E,"Executes the given function in the context of this span.",6,[[["fnonce"],["self"]],[T]]],[11,"field",E,"Returns a `Field` for the field with the given `name`, if…",6,[[["self"],["q"]],[["option",["field"]],["field"]]]],[11,"has_field",E,"Returns true if this `Span` has a field for the given…",6,[[["self"],["q"]],["bool"]]],[11,"record",E,"Visits that the field described by `field` has the value…",6,[[["v"],["self"],["q"]],["self"]]],[11,"record_all",E,"Visit all the fields in the span",6,[[[R[941]],["self"]],["self"]]],[11,"is_disabled",E,"Returns `true` if this span was disabled by the subscriber…",6,[[["self"]],["bool"]]],[11,"is_none",E,"Returns `true` if this span was constructed by…",6,[[["self"]],["bool"]]],[11,"follows_from",E,"Indicates that the span with the given ID has an indirect…",6,[[["self"]],["self"]]],[11,"id",E,"Returns this span's `Id`, if it is enabled.",6,[[["self"]],[["option",["id"]],["id"]]]],[11,R[939],E,"Returns this span's `Metadata`, if it is enabled.",6,[[["self"]],[[R[939]],["option",[R[939]]]]]],[0,"subscriber","tracing","Collects and records trace data.",N,N],[8,R[971],R[3146],R[972],N,N],[11,R[952],E,R[953],1,[[[R[939]],["self"]],[R[954]]]],[10,"enabled",E,R[973],1,[[["self"],[R[939]]],["bool"]]],[10,R[974],E,R[975],1,[[[R[955]],["self"]],["id"]]],[10,"record",E,R[956],1,[[["record"],["self"],["id"]]]],[10,R[957],E,R[958],1,[[["self"],["id"]]]],[10,"event",E,R[959],1,[[["self"],["event"]]]],[10,"enter",E,R[976],1,[[["self"],["id"]]]],[10,"exit",E,R[960],1,[[["self"],["id"]]]],[11,R[961],E,R[962],1,[[["self"],["id"]],["id"]]],[11,R[963],E,R[977],1,[[["id"],["self"]]]],[11,R[964],E,R[978],1,[[["id"],["self"]],["bool"]]],[11,R[965],E,R[966],1,[[["self"]],["current"]]],[11,R[979],E,R[980],1,[[["self"],[R[46]]],["option"]]],[3,"Interest",E,R[3228],N,N],[3,R[996],E,R[3138],N,N],[3,R[997],E,R[3139],N,N],[5,R[3140],E,"Sets this subscriber as the default for the duration of a…",N,[[["s"]],[T]]],[5,R[3141],E,"Sets this subscriber as the global default for the…",N,[[["s"]],[[R[3],[R[938]]],[R[938]]]]],[5,R[3142],E,"Sets the subscriber as the default for the duration of the…",N,[[["s"]],[R[3143]]]],[14,"span","tracing","Constructs a new span.",N,N],[14,"trace_span",E,"Constructs a span at the trace level.",N,N],[14,"debug_span",E,"Constructs a span at the debug level.",N,N],[14,"info_span",E,"Constructs a span at the info level.",N,N],[14,"warn_span",E,"Constructs a span at the warn level.",N,N],[14,"error_span",E,"Constructs a span at the error level.",N,N],[14,"event",E,"Constructs a new `Event`.",N,N],[14,"trace",E,"Constructs an event at the trace level.",N,N],[14,"debug",E,"Constructs an event at the debug level.",N,N],[14,"info",E,"Constructs an event at the info level.",N,N],[14,"warn",E,"Constructs an event at the warn level.",N,N],[14,"error",E,"Constructs an event at the error level.",N,N],[11,"into",R[3144],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",R[3145],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",R[3146],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[78],E,E,10,[[["self"]],["string"]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into","tracing",E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[78],E,E,11,[[["self"]],["string"]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",R[3147],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",R[3148],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"],[T]]]],[11,R[78],E,E,13,[[["self"]],["string"]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[78],E,E,14,[[["self"]],["string"]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[78],E,E,15,[[["self"]],["string"]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[211],E,E,16,[[],["i"]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"],[T]]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"into",R[3149],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",R[3147],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[24],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"],[T]]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"into",R[3146],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,"clone",E,E,23,[[["self"]],[R[954]]]],[11,"clone","tracing",E,11,[[["self"]],["level"]]],[11,"clone",R[3148],E,17,[[["self"]],[R[988]]]],[11,"clone",R[3144],E,7,[[["self"]],[R[937]]]],[11,"clone",R[3147],E,20,[[["self"]],["id"]]],[11,"clone",R[3148],E,13,[[["self"]],["field"]]],[11,"clone",E,E,18,[[["self"]],[R[989]]]],[11,"drop",R[3146],E,9,[[["self"]]]],[11,"record",R[3148],E,18,[[["field"],["self"],["visit"]]]],[11,"record",E,E,17,[[["field"],["self"],["visit"]]]],[11,R[457],"tracing",E,11,[[["str"]],[["level"],[R[3],["level",R[990]]],[R[990]]]]],[11,"fmt",R[3148],E,15,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,13,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt","tracing",E,11,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3146],E,10,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3148],E,14,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,R[106],"tracing",E,11,[[["self"],["level"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,11,[[["self"],["level"]],["bool"]]],[11,"le",E,E,11,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,11,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,11,[[["self"],["level"]],["bool"]]],[11,R[90],R[3144],R[3238],7,[[],[R[937]]]],[11,"from",E,E,7,[[["s"]],[R[937]]]],[11,"fmt",R[3148],E,18,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,13,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3145],E,8,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3146],E,10,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3148],E,15,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3144],E,7,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3146],E,23,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3148],E,14,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3147],E,19,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3148],E,16,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3147],E,20,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt","tracing",E,12,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,11,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3147],E,21,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3148],E,17,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[3146],E,9,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"hash",R[3147],E,20,[[["self"],["__h"]]]],[11,"hash",R[3148],E,13,[[["self"],["h"]]]],[11,"as_ref",E,E,13,[[["self"]],["str"]]],[11,"eq",E,E,13,[[["field"],["self"]],["bool"]]],[11,"eq",R[3147],E,20,[[["self"],["id"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["id"]],["bool"]]],[11,"eq","tracing",E,11,[[["self"],["level"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["level"]],["bool"]]],[11,"next",R[3148],E,16,[[["self"]],[["option",["field"]],["field"]]]],[11,"cmp","tracing",E,11,[[["self"],["level"]],[R[105]]]],[11,"as_field",R[3148],E,13,[[["self"],[R[939]]],[["option",["field"]],["field"]]]],[11,"drop",R[3147],E,6,[[["self"]]]],[11,"drop",E,E,22,[[["self"]]]],[11,"into",E,E,6,[[],[["option",["id"]],["id"]]]],[11,"from",R[3149],E,4,[[["level"]],["self"]]],[11,"clone",E,E,4,[[["self"]],[R[1161]]]],[11,"clone",R[3147],E,6,[[["self"]],["span"]]],[11,"cmp",R[3149],E,4,[[["self"],[R[1161]]],[R[105]]]],[11,"eq",E,E,4,[[["self"],[R[1161]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[1161]]],["bool"]]],[11,"eq","tracing",E,11,[[["self"],[R[1161]]],["bool"]]],[11,"eq",R[3147],E,6,[[["self"]],["bool"]]],[11,R[106],R[3149],E,4,[[["self"],[R[1161]]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,4,[[["self"],[R[1161]]],["bool"]]],[11,"le",E,E,4,[[["self"],[R[1161]]],["bool"]]],[11,"gt",E,E,4,[[["self"],[R[1161]]],["bool"]]],[11,"ge",E,E,4,[[["self"],[R[1161]]],["bool"]]],[11,R[106],"tracing",E,11,[[["self"],[R[1161]]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",R[3149],E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3147],E,22,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"hash",E,E,6,[[["self"],["h"]]]],[11,"none",R[3144],R[3156],7,[[],[R[937]]]],[11,"new",E,R[3157],7,[[["s"]],[R[937]]]],[11,R[952],E,R[953],7,[[[R[939]],["self"]],[R[954]]]],[11,R[974],E,R[3158],7,[[[R[955]],["self"]],["id"]]],[11,"record",E,R[956],7,[[["record"],["self"],["id"]]]],[11,R[957],E,R[958],7,[[["self"],["id"]]]],[11,"enabled",E,R[3159],7,[[["self"],[R[939]]],["bool"]]],[11,"event",E,R[959],7,[[["self"],["event"]]]],[11,"enter",E,R[3160],7,[[["self"],["id"]]]],[11,"exit",E,R[960],7,[[["self"],["id"]]]],[11,R[961],E,R[962],7,[[["self"],["id"]],["id"]]],[11,R[963],E,R[3161],7,[[["id"],["self"]]]],[11,R[964],E,R[3162],7,[[["id"],["self"]],["bool"]]],[11,R[965],E,R[966],7,[[["self"]],["current"]]],[11,"is",E,R[3163],7,[[["self"]],["bool"]]],[11,R[515],E,R[3164],7,[[["self"]],[[T],["option"]]]],[11,R[937],R[3145],R[942],8,[[[R[939]],[R[941]]]]],[11,"new",E,R[3166],8,[[[R[939]],[R[941]]],["event"]]],[11,R[3167],E,R[3168],8,[[[R[939]],[R[941]]],["event"]]],[11,"child_of",E,R[942],8,[[[R[939]],[R[941]]]]],[11,"record",E,R[3169],8,[[["self"],["visit"]]]],[11,"fields",E,R[3170],8,[[["self"]],["iter"]]],[11,R[939],E,R[3171],8,[[["self"]],[R[939]]]],[11,"is_root",E,R[3172],8,[[["self"]],["bool"]]],[11,R[950],E,R[3173],8,[[["self"]],["bool"]]],[11,"parent",E,R[3174],8,[[["self"]],[["option",["id"]],["id"]]]],[11,"is",R[3146],R[3229],1,[[["self"]],["bool"]]],[11,R[515],E,R[3230],1,[[["self"]],[[T],["option"]]]],[18,"ERROR","tracing",R[1176],11,N],[18,"WARN",E,R[1177],11,N],[18,"INFO",E,R[1178],11,N],[18,"DEBUG",E,R[1179],11,N],[18,"TRACE",E,R[1180],11,N],[11,"new",E,R[3199],12,[[["option",["str"]],["str"],["u32"],["kind"],["option",["u32"]],["level"],["str"],["fieldset"]],[R[939]]]],[11,"fields",E,R[3200],12,[[["self"]],["fieldset"]]],[11,"level",E,R[3201],12,[[["self"]],["level"]]],[11,"name",E,R[3202],12,[[["self"]],["str"]]],[11,"target",E,R[3203],12,[[["self"]],["str"]]],[11,R[1165],E,R[3204],12,[[["self"]],[["option",["str"]],["str"]]]],[11,"file",E,R[3205],12,[[["self"]],[["option",["str"]],["str"]]]],[11,"line",E,R[3206],12,[[["self"]],[["u32"],["option",["u32"]]]]],[11,R[944],E,R[3207],12,[[["self"]],[R[945]]]],[11,"is_event",E,R[3208],12,[[["self"]],["bool"]]],[11,"is_span",E,R[3209],12,[[["self"]],["bool"]]],[11,R[944],R[3148],R[946],13,[[["self"]],[R[945]]]],[11,"name",E,R[3192],13,[[["self"]],["str"]]],[11,"new",E,R[3193],14,[[[R[945]]],["fieldset"]]],[11,"field",E,R[3194],14,[[["self"],["q"]],[["option",["field"]],["field"]]]],[11,R[114],E,R[3195],14,[[["field"],["self"]],["bool"]]],[11,"iter",E,R[3196],14,[[["self"]],["iter"]]],[11,"len",E,R[3197],14,[[["self"]],["usize"]]],[11,R[340],E,R[3198],14,[[["self"]],["bool"]]],[11,R[944],E,R[946],15,[[["self"]],[R[945]]]],[11,"new",R[3147],R[949],19,[[[R[939]],[R[941]]],[R[955]]]],[11,"new_root",E,R[3215],19,[[[R[939]],[R[941]]],[R[955]]]],[11,"child_of",E,R[949],19,[[["id"],[R[939]],[R[941]]],[R[955]]]],[11,R[939],E,R[3216],19,[[["self"]],[R[939]]]],[11,"values",E,R[3217],19,[[["self"]],[R[941]]]],[11,"is_root",E,R[3218],19,[[["self"]],["bool"]]],[11,R[950],E,R[3219],19,[[["self"]],["bool"]]],[11,"parent",E,R[3220],19,[[["self"]],[["option",["id"]],["id"]]]],[11,"record",E,R[3221],19,[[["self"],["visit"]]]],[11,R[114],E,R[3222],19,[[["field"],["self"]],["bool"]]],[11,R[340],E,R[3223],19,[[["self"]],["bool"]]],[11,R[2771],E,R[3213],20,[[["u64"]],["id"]]],[11,"into_u64",E,R[3214],20,[[["self"]],["u64"]]],[11,"new",E,R[3224],21,[[[R[941]]],["record"]]],[11,"record",E,R[3225],21,[[["self"],["visit"]]]],[11,R[114],E,R[3226],21,[[["field"],["self"]],["bool"]]],[11,R[340],E,R[3227],21,[[["self"]],["bool"]]],[11,"never",R[3146],R[3231],23,[[],[R[954]]]],[11,"sometimes",E,R[3232],23,[[],[R[954]]]],[11,"always",E,R[3233],23,[[],[R[954]]]],[11,"is_never",E,R[3234],23,[[["self"]],["bool"]]],[11,R[3235],E,R[3236],23,[[["self"]],["bool"]]],[11,"is_always",E,R[3237],23,[[["self"]],["bool"]]]],"p":[[8,"Value"],[8,R[971]],[8,"Visit"],[8,"AsField"],[3,R[1172]],[8,"AsId"],[3,"Span"],[3,R[992]],[3,"Event"],[3,R[996]],[3,R[997]],[3,"Level"],[3,R[993]],[3,"Field"],[3,"FieldSet"],[3,"ValueSet"],[3,"Iter"],[3,R[998]],[3,R[999]],[3,R[994]],[3,"Id"],[3,"Record"],[3,"Entered"],[3,"Interest"]]};
searchIndex["tracing_attributes"]={"doc":"A procedural macro attribute for instrumenting functions…","i":[[23,"instrument","tracing_attributes",R[3150],N,N]],"p":[]};
searchIndex["tracing_core"]={"doc":"Core primitives for `tracing`.","i":[[3,R[992],R[935],R[936],N,N],[3,"Event",E,R[940],N,N],[3,"Field",E,R[943],N,N],[3,"Level",E,R[948],N,N],[3,R[993],E,R[947],N,N],[0,R[944],E,"Callsites represent the source locations from which spans…",N,N],[3,R[995],R[985],"Uniquely identifies a [`Callsite`]",N,N],[5,"rebuild_interest_cache",E,"Clear and reregister interest on every [`Callsite`]",N,[[]]],[5,"register",E,"Register a new `Callsite` with the global registry.",N,[[[R[944]]]]],[8,R[991],E,R[967],N,N],[10,R[968],E,R[969],0,[[["self"],[R[954]]]]],[10,R[939],E,R[970],0,[[["self"]],[R[939]]]],[0,"dispatcher",R[935],R[3151],N,N],[3,R[992],R[981],R[936],N,N],[3,R[996],E,R[3138],N,N],[3,R[997],E,R[3139],N,N],[5,R[3140],E,R[3152],N,[[[R[937]]],[T]]],[5,R[3142],E,R[3153],N,[[[R[937]]],[R[3143]]]],[5,R[3141],E,R[3154],N,[[[R[937]]],[[R[3],[R[938]]],[R[938]]]]],[5,R[925],E,R[3155],N,[[["f"]],[T]]],[11,"none",E,R[3156],1,[[],["self"]]],[11,"new",E,R[3157],1,[[["s"]],["self"]]],[11,R[952],E,R[953],1,[[["self"],[R[939]]],[R[954]]]],[11,R[974],E,R[3158],1,[[[R[955]],["self"]],["id"]]],[11,"record",E,R[956],1,[[["id"],["self"],["record"]]]],[11,R[957],E,R[958],1,[[["id"],["self"]]]],[11,"enabled",E,R[3159],1,[[[R[939]],["self"]],["bool"]]],[11,"event",E,R[959],1,[[["self"],["event"]]]],[11,"enter",E,R[3160],1,[[["id"],["self"]]]],[11,"exit",E,R[960],1,[[["id"],["self"]]]],[11,R[961],E,R[962],1,[[["id"],["self"]],["id"]]],[11,R[963],E,R[3161],1,[[["self"],["id"]]]],[11,R[964],E,R[3162],1,[[["self"],["id"]],["bool"]]],[11,R[965],E,R[966],1,[[["self"]],["current"]]],[11,"is",E,R[3163],1,[[["self"]],["bool"]]],[11,R[515],E,R[3164],1,[[["self"]],[[T],["option"]]]],[0,"event",R[935],R[3165],N,N],[3,"Event",R[982],R[940],N,N],[11,R[937],E,R[942],2,[[[R[941]],[R[939]]]]],[11,"new",E,R[3166],2,[[[R[941]],[R[939]]],["self"]]],[11,R[3167],E,R[3168],2,[[[R[941]],[R[939]]],["self"]]],[11,"child_of",E,R[942],2,[[[R[941]],[R[939]]]]],[11,"record",E,R[3169],2,[[["self"],["visit"]]]],[11,"fields",E,R[3170],2,[[["self"]],["iter"]]],[11,R[939],E,R[3171],2,[[["self"]],[R[939]]]],[11,"is_root",E,R[3172],2,[[["self"]],["bool"]]],[11,R[950],E,R[3173],2,[[["self"]],["bool"]]],[11,"parent",E,R[3174],2,[[["self"]],[["id"],["option",["id"]]]]],[0,"field",R[935],"Span and `Event` key-value data.",N,N],[3,"Field",R[983],R[943],N,N],[3,"FieldSet",E,R[3175],N,N],[3,"ValueSet",E,R[3176],N,N],[3,"Iter",E,R[3177],N,N],[3,R[998],E,R[3178],N,N],[3,R[999],E,R[3179],N,N],[5,"display",E,R[3180],N,[[[T]],[R[988]]]],[5,"debug",E,R[3181],N,[[[T]],[R[989]]]],[8,"Visit",E,R[3182],N,N],[11,"record_i64",E,R[3183],3,[[["i64"],["self"],["field"]]]],[11,"record_u64",E,R[3184],3,[[["self"],["u64"],["field"]]]],[11,R[3185],E,R[3186],3,[[["bool"],["self"],["field"]]]],[11,"record_str",E,R[3187],3,[[["str"],["self"],["field"]]]],[11,R[3188],E,R[3189],3,[[["error"],["self"],["field"]]]],[10,R[3190],E,R[3191],3,[[["debug"],["self"],["field"]]]],[8,"Value",E,R[3134],N,N],[10,"record",E,R[3135],4,[[["visit"],["self"],["field"]]]],[11,R[944],E,R[946],5,[[["self"]],[R[945]]]],[11,"name",E,R[3192],5,[[["self"]],["str"]]],[11,"new",E,R[3193],6,[[[R[945]]],["self"]]],[11,"field",E,R[3194],6,[[["self"],["q"]],[["option",["field"]],["field"]]]],[11,R[114],E,R[3195],6,[[["self"],["field"]],["bool"]]],[11,"iter",E,R[3196],6,[[["self"]],["iter"]]],[11,"len",E,R[3197],6,[[["self"]],["usize"]]],[11,R[340],E,R[3198],6,[[["self"]],["bool"]]],[11,R[944],E,R[946],7,[[["self"]],[R[945]]]],[0,R[939],R[935],"Metadata describing trace data.",N,N],[3,R[993],R[984],R[947],N,N],[3,"Kind",E,"Indicates whether the callsite is a span or event.",N,N],[3,"Level",E,R[948],N,N],[3,R[1000],E,"Returned if parsing a `Level` fails.",N,N],[11,"new",E,R[3199],8,[[["str"],["u32"],["level"],["option",["u32"]],["kind"],["fieldset"],["option",["str"]],["str"]],["self"]]],[11,"fields",E,R[3200],8,[[["self"]],["fieldset"]]],[11,"level",E,R[3201],8,[[["self"]],["level"]]],[11,"name",E,R[3202],8,[[["self"]],["str"]]],[11,"target",E,R[3203],8,[[["self"]],["str"]]],[11,R[1165],E,R[3204],8,[[["self"]],[["option",["str"]],["str"]]]],[11,"file",E,R[3205],8,[[["self"]],[["option",["str"]],["str"]]]],[11,"line",E,R[3206],8,[[["self"]],[["u32"],["option",["u32"]]]]],[11,R[944],E,R[3207],8,[[["self"]],[R[945]]]],[11,"is_event",E,R[3208],8,[[["self"]],["bool"]]],[11,"is_span",E,R[3209],8,[[["self"]],["bool"]]],[18,"EVENT",E,"`Event` callsite",9,N],[18,"SPAN",E,"`Span` callsite",9,N],[11,"is_span",E,"Return true if the callsite kind is `Span`",9,[[["self"]],["bool"]]],[11,"is_event",E,"Return true if the callsite kind is `Event`",9,[[["self"]],["bool"]]],[18,"ERROR",E,R[1176],10,N],[18,"WARN",E,R[1177],10,N],[18,"INFO",E,R[1178],10,N],[18,"DEBUG",E,R[1179],10,N],[18,"TRACE",E,R[1180],10,N],[0,"span",R[935],"Spans represent periods of time in the execution of a…",N,N],[3,"Id",R[986],R[3210],N,N],[3,R[994],E,R[3211],N,N],[3,"Record",E,R[3212],N,N],[3,"Current",E,"Indicates what [the `Subscriber` considers] the \"current\"…",N,N],[11,R[2771],E,R[3213],11,[[["u64"]],["self"]]],[11,"into_u64",E,R[3214],11,[[["self"]],["u64"]]],[11,"new",E,R[949],12,[[[R[941]],[R[939]]],["self"]]],[11,"new_root",E,R[3215],12,[[[R[941]],[R[939]]],["self"]]],[11,"child_of",E,R[949],12,[[[R[941]],["id"],[R[939]]],["self"]]],[11,R[939],E,R[3216],12,[[["self"]],[R[939]]]],[11,"values",E,R[3217],12,[[["self"]],[R[941]]]],[11,"is_root",E,R[3218],12,[[["self"]],["bool"]]],[11,R[950],E,R[3219],12,[[["self"]],["bool"]]],[11,"parent",E,R[3220],12,[[["self"]],[["id"],["option",["id"]]]]],[11,"record",E,R[3221],12,[[["self"],["visit"]]]],[11,R[114],E,R[3222],12,[[["field"],["self"]],["bool"]]],[11,R[340],E,R[3223],12,[[["self"]],["bool"]]],[11,"new",E,R[3224],13,[[[R[941]]],["self"]]],[11,"record",E,R[3225],13,[[["self"],["visit"]]]],[11,R[114],E,R[3226],13,[[["field"],["self"]],["bool"]]],[11,R[340],E,R[3227],13,[[["self"]],["bool"]]],[11,"new",E,R[951],14,[[["id"],[R[939]]],["self"]]],[11,"none",E,R[951],14,[[],["self"]]],[11,"is_known",E,"Returns `true` if the `Subscriber` that constructed this…",14,[[["self"]],["bool"]]],[11,R[109],E,"Consumes `self` and returns the span `Id` and `Metadata`…",14,[[],["option"]]],[11,"id",E,"Borrows the `Id` of the current span, if one exists and is…",14,[[["self"]],[["id"],["option",["id"]]]]],[11,R[939],E,"Borrows the `Metadata` of the current span, if one exists…",14,[[["self"]],[["option",[R[939]]],[R[939]]]]],[0,"subscriber",R[935],"Subscribers collect and record trace data.",N,N],[3,"Interest",R[987],R[3228],N,N],[8,R[971],E,R[972],N,N],[11,R[952],E,R[953],15,[[["self"],[R[939]]],[R[954]]]],[10,"enabled",E,R[973],15,[[[R[939]],["self"]],["bool"]]],[10,R[974],E,R[975],15,[[[R[955]],["self"]],["id"]]],[10,"record",E,R[956],15,[[["id"],["self"],["record"]]]],[10,R[957],E,R[958],15,[[["id"],["self"]]]],[10,"event",E,R[959],15,[[["self"],["event"]]]],[10,"enter",E,R[976],15,[[["id"],["self"]]]],[10,"exit",E,R[960],15,[[["id"],["self"]]]],[11,R[961],E,R[962],15,[[["id"],["self"]],["id"]]],[11,R[963],E,R[977],15,[[["self"],["id"]]]],[11,R[964],E,R[978],15,[[["self"],["id"]],["bool"]]],[11,R[965],E,R[966],15,[[["self"]],["current"]]],[11,R[979],E,R[980],15,[[["self"],[R[46]]],["option"]]],[11,"is",E,R[3229],15,[[["self"]],["bool"]]],[11,R[515],E,R[3230],15,[[["self"]],[[T],["option"]]]],[11,"never",E,R[3231],16,[[],["self"]]],[11,"sometimes",E,R[3232],16,[[],["self"]]],[11,"always",E,R[3233],16,[[],["self"]]],[11,"is_never",E,R[3234],16,[[["self"]],["bool"]]],[11,R[3235],E,R[3236],16,[[["self"]],["bool"]]],[11,"is_always",E,R[3237],16,[[["self"]],["bool"]]],[8,R[991],R[935],R[967],N,N],[10,R[968],E,R[969],0,[[["self"],[R[954]]]]],[10,R[939],E,R[970],0,[[["self"]],[R[939]]]],[8,R[971],E,R[972],N,N],[11,R[952],E,R[953],15,[[["self"],[R[939]]],[R[954]]]],[10,"enabled",E,R[973],15,[[[R[939]],["self"]],["bool"]]],[10,R[974],E,R[975],15,[[[R[955]],["self"]],["id"]]],[10,"record",E,R[956],15,[[["id"],["self"],["record"]]]],[10,R[957],E,R[958],15,[[["id"],["self"]]]],[10,"event",E,R[959],15,[[["self"],["event"]]]],[10,"enter",E,R[976],15,[[["id"],["self"]]]],[10,"exit",E,R[960],15,[[["id"],["self"]]]],[11,R[961],E,R[962],15,[[["id"],["self"]],["id"]]],[11,R[963],E,R[977],15,[[["self"],["id"]]]],[11,R[964],E,R[978],15,[[["self"],["id"]],["bool"]]],[11,R[965],E,R[966],15,[[["self"]],["current"]]],[11,R[979],E,R[980],15,[[["self"],[R[46]]],["option"]]],[14,"identify_callsite",E,"Statically constructs an [`Identifier`] for the provided…",N,N],[14,R[939],E,"Statically constructs new span [metadata].",N,N],[11,"into",R[981],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",R[982],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",R[983],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[24],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[["self"]],["string"]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",R[984],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[24],E,E,10,[[["self"]],[T]]],[11,R[25],E,E,10,[[["self"],[T]]]],[11,R[78],E,E,10,[[["self"]],["string"]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",R[985],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"],[T]]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"into",R[981],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[78],E,E,19,[[["self"]],["string"]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"into",R[983],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[78],E,E,6,[[["self"]],["string"]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[78],E,E,7,[[["self"]],["string"]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[211],E,E,20,[[],["i"]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[24],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"],[T]]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[24],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"],[T]]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"into",R[984],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[78],E,E,23,[[["self"]],["string"]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,"into",R[986],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"into",R[987],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"record",R[983],E,21,[[["visit"],["self"],["field"]]]],[11,"record",E,E,22,[[["visit"],["self"],["field"]]]],[11,"drop",R[981],E,18,[[["self"]]]],[11,"as_ref",R[983],E,5,[[["self"]],["str"]]],[11,"into",R[986],E,14,[[],[["id"],["option",["id"]]]]],[11,"from",R[981],E,1,[[["s"]],["self"]]],[11,"next",R[983],E,20,[[["self"]],[["option",["field"]],["field"]]]],[11,"clone",R[985],E,17,[[["self"]],[R[945]]]],[11,"clone",R[981],E,1,[[["self"]],[R[937]]]],[11,"clone",R[983],E,21,[[["self"]],[R[988]]]],[11,"clone",E,E,22,[[["self"]],[R[989]]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",R[984],E,9,[[["self"]],["kind"]]],[11,"clone",E,E,10,[[["self"]],["level"]]],[11,"clone",R[986],E,11,[[["self"]],["id"]]],[11,"clone",R[987],E,16,[[["self"]],[R[954]]]],[11,R[90],R[981],R[3238],1,[[],["self"]]],[11,"cmp",R[984],E,10,[[["level"],["self"]],[R[105]]]],[11,"eq",R[985],E,17,[[[R[945]],["self"]],["bool"]]],[11,"eq",R[983],E,5,[[["self"]],["bool"]]],[11,"eq",R[984],E,9,[[["kind"],["self"]],["bool"]]],[11,"ne",E,E,9,[[["kind"],["self"]],["bool"]]],[11,"eq",E,E,10,[[["level"],["self"]],["bool"]]],[11,"ne",E,E,10,[[["level"],["self"]],["bool"]]],[11,"eq",R[986],E,11,[[["self"],["id"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["id"]],["bool"]]],[11,R[106],R[984],E,10,[[["level"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,10,[[["level"],["self"]],["bool"]]],[11,"le",E,E,10,[[["level"],["self"]],["bool"]]],[11,"gt",E,E,10,[[["level"],["self"]],["bool"]]],[11,"ge",E,E,10,[[["level"],["self"]],["bool"]]],[11,"fmt",R[981],E,19,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[983],E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[984],E,10,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[985],E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[981],E,18,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[982],E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[983],E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[984],E,9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[986],E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[987],E,16,[[["self"],[R[37]]],[R[3]]]],[11,R[457],R[984],E,10,[[["str"]],[[R[3],[R[990]]],[R[990]]]]],[11,"hash",R[985],E,17,[[["self"],["h"]]]],[11,"hash",R[983],E,5,[[["self"],["h"]]]],[11,"hash",R[986],E,11,[[["self"],["__h"]]]]],"p":[[8,R[991]],[3,R[992]],[3,"Event"],[8,"Visit"],[8,"Value"],[3,"Field"],[3,"FieldSet"],[3,"ValueSet"],[3,R[993]],[3,"Kind"],[3,"Level"],[3,"Id"],[3,R[994]],[3,"Record"],[3,"Current"],[8,R[971]],[3,"Interest"],[3,R[995]],[3,R[996]],[3,R[997]],[3,"Iter"],[3,R[998]],[3,R[999]],[3,R[1000]]]};
searchIndex["trie_db"]={"doc":"Trie interface and implementation.","i":[[8,"HashDB","trie_db",R[3415],N,N],[10,"get",E,R[112],0,[[["self"]],["option"]]],[10,R[114],E,R[113],0,[[["self"]],["bool"]]],[10,"insert",E,R[3416],0,[[["self"]]]],[10,"emplace",E,R[3417],0,[[["self"],[T]]]],[10,"remove",E,R[115],0,[[["self"]]]],[8,R[117],E,R[3418],N,N],[10,"get",E,R[112],1,[[["self"]],["option"]]],[10,R[114],E,R[113],1,[[["self"]],["bool"]]],[8,"Hasher",E,R[1338],N,N],[16,"Out",E,R[1339],2,N],[16,R[3936],E,R[1340],2,N],[18,"LENGTH",E,R[1341],2,N],[10,"hash",E,R[1342],2,[[]]],[3,"FatDB",E,R[3431],N,N],[3,R[3470],E,"Itarator over inserted pairs of key values.",N,N],[3,"FatDBMut",E,R[3432],N,N],[3,"Lookup",E,"Trie lookup helper object.",N,N],[12,"db",E,"database to query from.",3,N],[12,"query",E,"Query object to record nodes and transform data.",3,N],[12,"hash",E,"Hash to start at",3,N],[3,R[3472],E,"Nibble-orientated view onto byte-slice, allowing…",N,N],[3,"NibbleVec",E,"Owning, nibble-oriented byte vector. Counterpart to…",N,N],[3,R[3462],E,"Get trie root and insert visited node in a hash_db. As for…",N,N],[12,"root",E,E,4,N],[3,"TrieRoot",E,"Calculate the trie root of the trie.",N,N],[12,"root",E,R[3419],5,N],[3,R[3463],E,"Get the trie root node encoding.",N,N],[12,"root",E,"The resulting encoded root.",6,N],[3,R[3471],E,"Iterator for going through all nodes in the trie in…",N,N],[3,R[3464],E,"Calculate the trie root of the trie. Print a debug trace.",N,N],[12,"root",E,R[3419],7,N],[3,R[3476],E,"Trie factory.",N,N],[4,R[4025],E,"Trie Errors.",N,N],[13,"InvalidStateRoot",E,"Attempted to create a trie with a state root not in the DB.",8,N],[13,"IncompleteDatabase",E,"Trie item not found in the database,",8,N],[13,"ValueAtIncompleteKey",E,"A value was found in the trie with a nibble key that was…",8,N],[13,"DecoderError",E,"Corrupt Trie item",8,N],[13,"InvalidHash",E,E,8,N],[4,"TrieSpec",E,"Trie types",N,N],[13,"Generic",E,"Generic trie.",9,N],[13,"Secure",E,"Secure trie.",9,N],[13,"Fat",E,"Secure trie with fat database.",9,N],[4,"TrieKinds",E,"All different kinds of tries. This is used to prevent a…",N,N],[13,"Generic",E,"A generic trie db.",10,N],[13,"Secure",E,"A secure trie db.",10,N],[13,"Fat",E,"A fat trie db.",10,N],[5,"trie_visit",E,"Function visiting trie from key value inputs with a…",N,[[["i"],["f"]]]],[5,"decode_compact",E,"Reconstructs a partial trie DB from a compact…",N,[[["db"]],[[R[3],[R[3426],"cerror"]],["cerror"],[R[3426]]]]],[5,"encode_compact",E,"Generates a compact representation of the partial trie…",N,[[["triedb"]],[["vec",["vec"]],[R[3],["vec",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[0,"node",E,E,N,N],[3,R[3466],R[3421],"A `NibbleSlicePlan` is a blueprint for decoding a nibble…",N,N],[3,"OwnedNode",E,"An `OwnedNode` is an owned type from which a `Node` can be…",N,N],[4,"NodeHandle",E,"A reference to a trie node which may be stored within…",N,N],[13,"Hash",E,E,11,N],[13,"Inline",E,E,11,N],[4,"Node",E,"Type of node in the trie and essential information thereof.",N,N],[13,"Empty",E,R[3420],12,N],[13,"Leaf",E,"Leaf node; has key slice and value. Value may not be empty.",12,N],[13,R[3492],E,"Extension node; has key slice and node data. Data may not…",12,N],[13,"Branch",E,R[3423],12,N],[13,R[3424],E,R[3425],12,N],[4,R[3465],E,"A `NodeHandlePlan` is a decoding plan for constructing a…",N,N],[13,"Hash",E,E,13,N],[13,"Inline",E,E,13,N],[4,"NodePlan",E,"A `NodePlan` is a blueprint for decoding a node from a…",N,N],[13,"Empty",E,R[3420],14,N],[13,"Leaf",E,"Leaf node; has a partial key plan and value.",14,N],[12,"partial",R[3422],E,14,N],[12,"value",E,E,14,N],[13,R[3492],R[3421],"Extension node; has a partial key plan and child data.",14,N],[12,"partial",R[3422],E,14,N],[12,"child",E,E,14,N],[13,"Branch",R[3421],R[3423],14,N],[12,"value",R[3422],E,14,N],[12,"children",E,E,14,N],[13,R[3424],R[3421],R[3425],14,N],[12,"partial",R[3422],E,14,N],[12,"value",E,E,14,N],[12,"children",E,E,14,N],[5,"decode_hash",R[3421],"Read a hash from a slice into a Hasher output. Returns…",N,[[],["option"]]],[6,"NodeKey",E,"Partial node key type: offset and owned value of a…",N,N],[11,"build",E,"Build a node handle by decoding a byte slice according to…",13,[[["self"]],[R[3457]]]],[11,"new",E,"Construct a nibble slice decode plan.",15,[[["range",["usize"]],["usize"]],["self"]]],[11,"len",E,"Returns the nibble length of the slice.",15,[[["self"]],["usize"]]],[11,"build",E,"Build a nibble slice by decoding a byte slice according to…",15,[[["self"]],[R[3439]]]],[11,"build",E,"Build a node by decoding a byte slice according to the…",14,[[["self"]],["node"]]],[11,"new",E,"Construct an `OwnedNode` by decoding an owned data source…",16,[[["d"]],[R[3]]]],[11,"data",E,"Returns a reference to the backing data.",16,[[["self"]]]],[11,"node_plan",E,"Returns a reference to the node decode plan.",16,[[["self"]],[R[4024]]]],[11,"node",E,"Construct a `Node` by borrowing data from this struct.",16,[[["self"]],["node"]]],[0,"triedb","trie_db",E,N,N],[3,"TrieDB",R[3449],R[3428],N,N],[3,R[3467],E,"Iterator for going through all values in the trie in…",N,N],[11,"new",E,R[3429],17,[[[R[3435]],[R[3426]]],[[R[3426]],["cerror"],[R[3],[R[3426],"cerror"]]]]],[11,"db",E,R[3430],17,[[["self"]],[R[3435]]]],[11,"new",E,R[3437],18,[[["triedb"]],[[R[3],[R[3427],R[3426],"cerror"]],["cerror"],[R[3427]],[R[3426]]]]],[0,"triedbmut","trie_db","In-memory trie representation.",N,N],[3,R[4026],R[3450],R[3428],N,N],[4,R[3468],E,"Used to build a collection of child nodes from a…",N,N],[13,"Hash",E,E,19,N],[13,"Inline",E,E,19,N],[11,"new",E,"Create a new trie with backing database `db` and empty…",20,[[["hashdb"],[R[3426]]],["self"]]],[11,R[3434],E,R[3429],20,[[["hashdb"],[R[3426]]],[[R[3426]],["cerror"],[R[3],[R[3426],"cerror"]]]]],[11,"db",E,R[3430],20,[[["self"]],["hashdb"]]],[11,"db_mut",E,"Get the backing database mutably.",20,[[["self"]],["hashdb"]]],[11,"commit",E,"Commit the in-memory changes to disk, freeing their…",20,[[["self"]]]],[0,"sectriedb","trie_db",E,N,N],[3,"SecTrieDB",R[3451],R[3431],N,N],[11,"new",E,R[3433],21,[[[R[3435]],[R[3426]]],[[R[3426]],["cerror"],[R[3],[R[3426],"cerror"]]]]],[11,"raw",E,"Get a reference to the underlying raw `TrieDB` struct.",21,[[["self"]],["triedb"]]],[11,"raw_mut",E,"Get a mutable reference to the underlying raw `TrieDB`…",21,[[["self"]],["triedb"]]],[0,"sectriedbmut","trie_db",E,N,N],[3,R[3469],R[3452],R[3432],N,N],[11,"new",E,R[3433],22,[[["hashdb"],[R[3426]]],["self"]]],[11,R[3434],E,R[3436],22,[[["hashdb"],[R[3426]]],[[R[3426]],["cerror"],[R[3],[R[3426],"cerror"]]]]],[11,"db",E,R[3430],22,[[["self"]],["hashdb"]]],[11,"db_mut",E,R[3430],22,[[["self"]],["hashdb"]]],[0,"recorder","trie_db","Trie query recorder.",N,N],[3,"Record",R[3453],"A record of a visited node.",N,N],[12,"depth",E,"The depth of this node.",23,N],[12,"data",E,"The raw data of the node.",23,N],[12,"hash",E,"The hash of the data.",23,N],[3,"Recorder",E,"Records trie nodes as they pass it.",N,N],[11,"new",E,R[3969],24,[[],["self"]]],[11,"with_depth",E,R[3970],24,[[["u32"]],["self"]]],[11,"record",E,R[3971],24,[[["u32"],["self"],["ho"]]]],[11,"drain",E,R[3972],24,[[["self"]],[["vec",["record"]],["record"]]]],[11,"new","trie_db",R[3433],25,[[[R[3435]],[R[3426]]],[[R[3426]],["cerror"],[R[3],[R[3426],"cerror"]]]]],[11,"db",E,R[3430],25,[[["self"]],[R[3435]]]],[11,"new",E,"Creates new iterator.",26,[[["triedb"]],[[R[3426]],["cerror"],[R[3],[R[3426],"cerror"]]]]],[11,"new",E,R[3433],27,[[["hashdb"],[R[3426]]],["self"]]],[11,R[3434],E,R[3436],27,[[["hashdb"],[R[3426]]],[[R[3426]],["cerror"],[R[3],[R[3426],"cerror"]]]]],[11,"db",E,R[3430],27,[[["self"]],["hashdb"]]],[11,"db_mut",E,R[3430],27,[[["self"]],["hashdb"]]],[11,"new",E,E,4,[[["db"]],["self"]]],[11,"new",E,R[3437],28,[[["triedb"]],[[R[3],[R[3438],R[3426],"cerror"]],[R[3438]],["cerror"],[R[3426]]]]],[11,"look_up",E,"Look up the given key. If the value is found, it will be…",3,[[[R[3439]]],[["option"],[R[3],["option",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"new",E,"Make a new `NibbleVec`.",29,[[],["self"]]],[11,"len",E,"Length of the `NibbleVec`.",29,[[["self"]],["usize"]]],[11,R[340],E,"Retrurns true if `NibbleVec` has zero length.",29,[[["self"]],["bool"]]],[11,"at",E,"Try to get the nibble at the given offset.",29,[[["self"],["usize"]],["u8"]]],[11,"push",E,"Push a nibble onto the `NibbleVec`. Ignores the high 4 bits.",29,[[["self"],["u8"]]]],[11,"pop",E,"Try to pop a nibble off the `NibbleVec`. Fails if len == 0.",29,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"drop_lasts",E,"Remove then n last nibbles in a faster way than popping n…",29,[[["self"],["usize"]]]],[11,"as_prefix",E,"Get `Prefix` representation of this `NibbleVec`.",29,[[["self"]],["prefix"]]],[11,"append",E,"Append another `NibbleVec`. Can be slow (alignement of…",29,[[["self"],[R[3460]]]]],[11,"append_partial",E,"Append a `Partial`. Can be slow (alignement of partial).",29,[[["self"],["partial"]]]],[11,"inner",E,"Get the underlying byte slice.",29,[[["self"]]]],[11,"clear",E,"clear",29,[[["self"]]]],[11,"as_nibbleslice",E,"Try to treat this `NibbleVec` as a `NibbleSlice`. Works…",29,[[["self"]],[[R[3439]],["option",[R[3439]]]]]],[11,R[3440],E,R[3442],29,[[["self"]],["bool"]]],[11,"new",E,"Create a new nibble slice with the given byte-slice.",30,[[],["self"]]],[11,"new_offset",E,"Create a new nibble slice with the given byte-slice with a…",30,[[["usize"]],["self"]]],[11,"iter",E,"Get an iterator for the series of nibbles.",30,[[["self"]],["nibblesliceiterator"]]],[11,"from_stored",E,"Get nibble slice from a `NodeKey`.",30,[[["nodekey"]],[R[3439]]]],[11,"to_stored",E,R[3441],30,[[["self"]],["nodekey"]]],[11,"to_stored_range",E,R[3441],30,[[["self"],["usize"]],["nodekey"]]],[11,R[340],E,"Return true if the slice contains no nibbles.",30,[[["self"]],["bool"]]],[11,"len",E,"Get the length (in nibbles, naturally) of this slice.",30,[[["self"]],["usize"]]],[11,"at",E,"Get the nibble at position `i`.",30,[[["self"],["usize"]],["u8"]]],[11,"mid",E,"Return object which represents a view on to this slice…",30,[[["self"],["usize"]],[R[3439]]]],[11,"advance",E,"Advance the view on the slice by `i` nibbles.",30,[[["self"],["usize"]]]],[11,"back",E,"Move back to a previously valid fix offset position.",30,[[["self"],["usize"]],[R[3439]]]],[11,R[3440],E,R[3442],30,[[["self"]],["bool"]]],[11,"common_prefix",E,"How many of the same nibbles at the beginning do we match…",30,[[["self"]],["usize"]]],[11,"right",E,"Return `Partial` representation of this slice: first…",30,[[["self"]],["partial"]]],[11,"right_iter",E,"Return an iterator over `Partial` bytes representation.",30,[[["self"]]]],[11,"right_range_iter",E,"Return `Partial` bytes iterator over a range of byte..…",30,[[["self"],["usize"]]]],[11,"left",E,"Return left portion of `NibbleSlice`, if the slice…",30,[[["self"]],["prefix"]]],[11,"left_owned",E,"Owned version of a `Prefix` from a `left` method call.",30,[[["self"]]]],[0,"nibble_ops",E,"Utility methods to work on radix 16 nibble.",N,N],[5,"pad_left","trie_db::nibble_ops",R[3973],N,[[["u8"]],["u8"]]],[5,"pad_right",E,R[3974],N,[[["u8"]],["u8"]]],[5,"at_left",E,R[3975],N,[[["u8"]],["u8"]]],[5,R[3976],E,R[3977],N,[[["usize"]],["u8"]]],[5,"at",E,R[3978],N,[[[R[3439]],["usize"]],["u8"]]],[5,R[3979],E,R[3980],N,[[["u8"]],["u8"]]],[5,R[3981],E,R[3982],N,[[["usize"]],["usize"]]],[5,R[3983],E,R[3984],N,[[],["usize"]]],[5,R[3985],E,R[3986],N,[[["u8"]],["usize"]]],[5,"shift_key",E,R[3987],N,[[["usize"],["nodekey"]],["bool"]]],[17,R[3988],E,R[3989],N,N],[17,R[3990],E,R[3991],N,N],[17,R[3992],E,R[3993],N,N],[17,R[3994],E,R[3995],N,N],[17,R[3996],E,R[3997],N,N],[17,R[3998],E,R[3999],N,N],[6,"Partial","trie_db","Representation of a nible slice (right aligned). It…",N,N],[6,"DBValue",E,R[4139],N,N],[6,"Result",E,"Trie result type. Boxed to avoid copying around extra…",N,N],[6,"TrieItem",E,"Trie-Item type used for iterators over trie data.",N,N],[6,"TrieHash",E,"Alias accessor to hasher hash output type from a…",N,N],[6,"CError",E,"Alias accessor to `NodeCodec` associated `Error` type from…",N,N],[8,R[3485],E,E,N,N],[8,R[4027],E,"Trait for trie node encoding/decoding.",N,N],[16,"Error",E,"Codec error type.",31,N],[16,"HashOut",E,"Output type of encoded node hasher.",31,N],[10,R[4000],E,"Get the hashed null node.",31,[[]]],[10,R[4001],E,"Decode bytes to a `NodePlan`. Returns `Self::E` on failure.",31,[[],[[R[3],[R[4024]]],[R[4024]]]]],[11,"decode",E,R[3461],31,[[],[[R[3],["node"]],["node"]]]],[10,R[4002],E,"Check if the provided bytes correspond to the codecs…",31,[[],["bool"]]],[10,"empty_node",E,"Returns an encoded empty node.",31,[[]]],[10,"leaf_node",E,"Returns an encoded leaf node",31,[[["partial"]],[["vec",["u8"]],["u8"]]]],[10,R[4003],E,"Returns an encoded extension node Note that number_nibble…",31,[[[R[3443]],["usize"]],[["vec",["u8"]],["u8"]]]],[10,R[4004],E,"Returns an encoded branch node. Takes an iterator yielding…",31,[[["option"]],[["vec",["u8"]],["u8"]]]],[10,R[4005],E,"Returns an encoded branch node with a possible partial…",31,[[["usize"],["option"]],[["vec",["u8"]],["u8"]]]],[8,R[3473],E,"Visitor trait to implement when using `trie_visit`.",N,N],[10,"process",E,"Function call with prefix, encoded value and a boolean…",32,[[["bool"],["prefix"],["vec",["u8"]],["self"],["u8"]],[R[3443]]]],[8,"Query",E,"Description of what kind of query will be made to the trie.",N,N],[16,"Item",E,R[4006],33,N],[10,"decode",E,R[4007],33,[[]]],[11,"record",E,R[4008],33,[[["u32"],["self"]]]],[8,"Trie",E,R[3444],N,N],[10,"root",E,R[3445],34,[[["self"]],[R[3426]]]],[11,R[340],E,R[3446],34,[[["self"]],["bool"]]],[11,R[114],E,R[3447],34,[[["self"]],[["bool"],[R[3],["bool",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"get",E,R[3448],34,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[10,"get_with",E,R[4009],34,[[["query"],["self"]],[["option"],[R[3],["option",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[10,"iter",E,R[4010],34,[[["self"]],[[R[3],["box",R[3426],"cerror"]],["cerror"],["box",[R[3454]]],[R[3426]]]]],[8,"TrieMut",E,R[3444],N,N],[10,"root",E,R[3445],35,[[["self"]],[R[3426]]]],[10,R[340],E,R[3446],35,[[["self"]],["bool"]]],[11,R[114],E,R[3447],35,[[["self"]],[["bool"],[R[3],["bool",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[10,"get",E,R[3448],35,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[10,"insert",E,R[4011],35,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[10,"remove",E,R[4012],35,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[8,R[3474],E,"A trie iterator that also supports random access (`seek()`).",N,N],[10,"seek",E,R[3455],36,[[["self"]],[[R[3],[R[3426],"cerror"]],["cerror"],[R[3426]]]]],[8,R[4013],E,"Trait with definition of trie layout. Contains all…",N,N],[18,R[4014],E,R[4015],37,N],[16,"Hash",E,R[4016],37,N],[16,"Codec",E,R[4017],37,N],[8,R[3475],E,"This trait associates a trie definition with preferred…",N,N],[11,"trie_build",E,R[4018],38,[[["db"],["i"]]]],[11,R[4028],E,R[4019],38,[[["i"]]]],[11,R[3965],E,R[4020],38,[[["i"]],[["vec",["u8"]],["u8"]]]],[11,R[3966],E,R[4021],38,[[["u32"]],[["vec",["u8"]],["u8"]]]],[11,R[4022],E,R[4023],38,[[["i"]]]],[11,"new",E,"Creates new factory.",39,[[["triespec"],["l"]],["self"]]],[11,"readonly",E,"Create new immutable instance of Trie.",39,[[[R[3426]],["self"],[R[3435]]],[[R[3],["triekinds",R[3426],"cerror"]],["triekinds"],["cerror"],[R[3426]]]]],[11,"create",E,"Create new mutable instance of Trie.",39,[[[R[3426]],["self"],["hashdb"]],[["box",["triemut"]],["triemut"]]]],[11,R[3434],E,"Create new mutable instance of trie and check for errors.",39,[[[R[3426]],["self"],["hashdb"]],[["box",["triemut"]],[R[3],["box",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"is_fat",E,"Returns true iff the trie DB is a fat DB (allows…",39,[[["self"]],["bool"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[20],E,E,25,[[[U]],[R[3]]]],[11,R[21],E,E,25,[[],[R[3]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[22],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[46]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[211],E,E,26,[[],["i"]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[24],E,E,30,[[["self"]],[T]]],[11,R[25],E,E,30,[[["self"],[T]]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[24],E,E,29,[[["self"]],[T]]],[11,R[25],E,E,29,[[["self"],[T]]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[211],E,E,28,[[],["i"]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[24],E,E,39,[[["self"]],[T]]],[11,R[25],E,E,39,[[["self"],[T]]]],[11,R[20],E,E,39,[[[U]],[R[3]]]],[11,R[21],E,E,39,[[],[R[3]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[["self"]],[T]]],[11,R[26],E,E,39,[[["self"]],[R[46]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"],[T]]]],[11,R[78],E,E,8,[[["self"]],["string"]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"],[T]]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into",R[3421],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[25],E,E,11,[[["self"],[T]]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"],[T]]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"],[T]]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"],[T]]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"into",R[3449],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[211],E,E,18,[[],["i"]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"into",R[3450],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"],[T]]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"into",R[3451],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"into",R[3452],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"into",R[3453],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,"process","trie_db",E,4,[[["bool"],["prefix"],["vec",["u8"]],["self"],["u8"]],[R[3443]]]],[11,"process",E,E,5,[[["bool"],["prefix"],["vec",["u8"]],["self"],["u8"]],[R[3443]]]],[11,"process",E,E,7,[[["bool"],["prefix"],["vec",["u8"]],["self"],["u8"]],[R[3443]]]],[11,"process",E,E,6,[[["bool"],["prefix"],["vec",["u8"]],["self"],["u8"]],[R[3443]]]],[11,"root",R[3449],E,17,[[["self"]],[R[3426]]]],[11,"get_with",E,E,17,[[["query"],["self"]],[["option"],[R[3],["option",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"iter",E,E,17,[[["self"]],[[R[3],["box",R[3426],"cerror"]],["cerror"],["box",[R[3454]]],[R[3426]]]]],[11,"root",R[3451],E,21,[[["self"]],[R[3426]]]],[11,R[114],E,E,21,[[["self"]],[["bool"],[R[3],["bool",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"get_with",E,E,21,[[["query"],["self"]],[["option"],[R[3],["option",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"iter",E,E,21,[[["self"]],[[R[3],["box",R[3426],"cerror"]],["cerror"],["box",[R[3454]]],[R[3426]]]]],[11,"root","trie_db",E,25,[[["self"]],[R[3426]]]],[11,R[114],E,E,25,[[["self"]],[["bool"],[R[3],["bool",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"get_with",E,E,25,[[["query"],["self"]],[["option"],[R[3],["option",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"iter",E,E,25,[[["self"]],[[R[3],["box",R[3426],"cerror"]],["cerror"],["box",[R[3454]]],[R[3426]]]]],[11,"root",E,E,10,[[["self"]],[R[3426]]]],[11,R[340],E,E,10,[[["self"]],["bool"]]],[11,R[114],E,E,10,[[["self"]],[["bool"],[R[3],["bool",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"get_with",E,E,10,[[["query"],["self"]],[["option"],[R[3],["option",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"iter",E,E,10,[[["self"]],[[R[3],["box",R[3426],"cerror"]],["cerror"],["box",[R[3454]]],[R[3426]]]]],[11,"root",R[3450],E,20,[[["self"]],[R[3426]]]],[11,R[340],E,E,20,[[["self"]],["bool"]]],[11,"get",E,E,20,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[11,"insert",E,E,20,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[11,"remove",E,E,20,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[11,"root",R[3452],E,22,[[["self"]],[R[3426]]]],[11,R[340],E,E,22,[[["self"]],["bool"]]],[11,R[114],E,E,22,[[["self"]],[["bool"],[R[3],["bool",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"get",E,E,22,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[11,"insert",E,E,22,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[11,"remove",E,E,22,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[11,"root","trie_db",E,27,[[["self"]],[R[3426]]]],[11,R[340],E,E,27,[[["self"]],["bool"]]],[11,R[114],E,E,27,[[["self"]],[["bool"],[R[3],["bool",R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"get",E,E,27,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[11,"insert",E,E,27,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[11,"remove",E,E,27,[[["self"]],[["cerror"],["option",["dbvalue"]],[R[3],["option",R[3426],"cerror"]],[R[3426]]]]],[11,"seek",R[3449],R[3455],18,[[["self"]],[[R[3],[R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"seek","trie_db",E,26,[[["self"]],[[R[3],[R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"seek",E,E,28,[[["self"]],[[R[3],[R[3426],"cerror"]],["cerror"],[R[3426]]]]],[11,"drop",R[3450],E,20,[[["self"]]]],[11,"into","trie_db",E,30,[[],["nodekey"]]],[11,"from",E,E,29,[[[R[3439]]],["self"]]],[11,"next",R[3449],E,18,[[["self"]],["option"]]],[11,"next","trie_db",E,26,[[["self"]],["option"]]],[11,"next",E,E,28,[[["self"]],["option"]]],[11,"clone",R[3421],E,11,[[["self"]],[R[3457]]]],[11,"clone",E,E,12,[[["self"]],["node"]]],[11,"clone",E,E,13,[[["self"]],[R[3458]]]],[11,"clone",E,E,15,[[["self"]],[R[3459]]]],[11,"clone",E,E,14,[[["self"]],[R[4024]]]],[11,"clone",R[3450],E,19,[[["self"]],[R[3443]]]],[11,"clone",R[3453],E,23,[[["self"]],["record"]]],[11,"clone","trie_db",E,29,[[["self"]],[R[3460]]]],[11,"clone",E,E,30,[[["self"]],[R[3439]]]],[11,"clone",E,E,8,[[["self"]],[R[3954]]]],[11,"clone",E,E,9,[[["self"]],["triespec"]]],[11,"clone",E,E,39,[[["self"]],[R[3456]]]],[11,R[90],R[3453],E,24,[[],["self"]]],[11,R[90],"trie_db",E,5,[[],["self"]]],[11,R[90],E,E,6,[[],["self"]]],[11,R[90],E,E,7,[[],["self"]]],[11,R[90],E,E,29,[[],["self"]]],[11,R[90],E,E,9,[[],["triespec"]]],[11,R[90],E,E,39,[[],[R[3456]]]],[11,"cmp",E,E,30,[[["self"]],[R[105]]]],[11,"eq",R[3421],E,11,[[["self"],[R[3457]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[3457]]],["bool"]]],[11,"eq",E,E,12,[[["node"],["self"]],["bool"]]],[11,"ne",E,E,12,[[["node"],["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[3458]],["self"]],["bool"]]],[11,"ne",E,E,13,[[[R[3458]],["self"]],["bool"]]],[11,"eq",E,E,15,[[[R[3459]],["self"]],["bool"]]],[11,"ne",E,E,15,[[[R[3459]],["self"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[4024]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[4024]]],["bool"]]],[11,"eq",E,E,16,[[["self"],["ownednode"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["ownednode"]],["bool"]]],[11,"eq",R[3453],E,23,[[["record"],["self"]],["bool"]]],[11,"ne",E,E,23,[[["record"],["self"]],["bool"]]],[11,"eq","trie_db",E,30,[[["self"]],["bool"]]],[11,"eq",E,E,29,[[[R[3460]],["self"]],["bool"]]],[11,"ne",E,E,29,[[[R[3460]],["self"]],["bool"]]],[11,"eq",E,E,8,[[[R[3954]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[3954]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["triespec"],["self"]],["bool"]]],[11,R[106],E,E,30,[[["self"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3421],E,11,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3449],E,17,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[3453],E,23,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[37]]],[R[3]]]],[11,"fmt","trie_db",E,30,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[37]]],[R[3]]]],[11,R[20],R[3450],E,19,[[["encodednodehandle"]],[[R[3],["vec"]],["vec",["u8"]]]]],[11,R[38],"trie_db",E,8,[[["self"]],["str"]]],[11,"decode",E,R[3461],31,[[],[[R[3],["node"]],["node"]]]]],"p":[[8,"HashDB"],[8,R[117]],[8,"Hasher"],[3,"Lookup"],[3,R[3462]],[3,"TrieRoot"],[3,R[3463]],[3,R[3464]],[4,R[4025]],[4,"TrieSpec"],[4,"TrieKinds"],[4,"NodeHandle"],[4,"Node"],[4,R[3465]],[4,"NodePlan"],[3,R[3466]],[3,"OwnedNode"],[3,"TrieDB"],[3,R[3467]],[4,R[3468]],[3,R[4026]],[3,"SecTrieDB"],[3,R[3469]],[3,"Record"],[3,"Recorder"],[3,"FatDB"],[3,R[3470]],[3,"FatDBMut"],[3,R[3471]],[3,"NibbleVec"],[3,R[3472]],[8,R[4027]],[8,R[3473]],[8,"Query"],[8,"Trie"],[8,"TrieMut"],[8,R[3474]],[8,R[4013]],[8,R[3475]],[3,R[3476]]]};
searchIndex["trie_root"]={"doc":"Generates trie root.","i":[[8,"Hasher",R[4028],R[1338],N,N],[16,"Out",E,R[1339],0,N],[16,R[3936],E,R[1340],0,N],[18,"LENGTH",E,R[1341],0,N],[10,"hash",E,R[1342],0,[[]]],[5,R[4028],E,"Generates a trie root hash for a vector of key-value tuples",N,[[["i"]]]],[5,"trie_root_no_extension",E,"Variant of `trie_root` for patricia trie without extension…",N,[[["i"]]]],[5,"unhashed_trie",E,"Method similar to `trie_root` but returning the root…",N,[[["i"]],[["vec",["u8"]],["u8"]]]],[5,"unhashed_trie_no_extension",E,"Variant of `unhashed_trie` for patricia trie without…",N,[[["i"]],[["vec",["u8"]],["u8"]]]],[5,"sec_trie_root",E,"Generates a key-hashed (secure) trie root hash for a…",N,[[["i"]]]],[8,R[4029],E,"Byte-stream oriented trait for constructing closed-form…",N,N],[10,"new",E,"Construct a new `TrieStream`",1,[[],["self"]]],[10,R[4030],E,"Append an Empty node",1,[[["self"]]]],[10,R[4031],E,"Start a new Branch node, possibly with a value; takes a…",1,[[["option"],["self"]]]],[11,"append_empty_child",E,"Append an empty child node. Optional.",1,[[["self"]]]],[11,"end_branch",E,"Wrap up a Branch node portion of a `TrieStream` and append…",1,[[["self"],["option"]]]],[10,R[4032],E,"Append a Leaf node",1,[[["self"]]]],[10,R[4033],E,"Append an Extension node",1,[[["self"]]]],[10,R[4034],E,"Append a Branch of Extension substream",1,[[["self"]]]],[10,"out",E,"Return the finished `TrieStream` as a vector of bytes.",1,[[],[["vec",["u8"]],["u8"]]]]],"p":[[8,"Hasher"],[8,R[4029]]]};
searchIndex["twox_hash"]={"doc":"A Rust implementation of the [XXHash] algorithm.","i":[[3,R[2900],"twox_hash",R[2895],N,N],[3,R[2901],E,R[2895],N,N],[3,"XxHash64",E,"Calculates the 64-bit hash.",N,N],[3,"XxHash32",E,"Calculates the 32-bit hash. Care should be taken when…",N,N],[11,"with_seed",E,R[2896],0,[[["u64"]],["xxhash64"]]],[11,"seed",E,E,0,[[["self"]],["u64"]]],[11,"total_len",E,E,0,[[["self"]],["u64"]]],[11,"with_seed",E,R[2896],1,[[["u32"]],["xxhash32"]]],[11,"seed",E,E,1,[[["self"]],["u32"]]],[11,"total_len",E,E,1,[[["self"]],["u32"]]],[6,"XxHash",E,R[2897],N,N],[6,"RandomXxHashBuilder",E,R[2897],N,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"],[T]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"],[T]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"eq",E,E,0,[[["xxhash64"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["xxhash64"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["xxhash32"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["xxhash32"]],["bool"]]],[11,"finish",E,E,0,[[["self"]],["u64"]]],[11,"write",E,E,0,[[["self"]]]],[11,"finish",E,E,1,[[["self"]],["u64"]]],[11,"write",E,E,1,[[["self"]]]],[11,R[427],E,E,2,[[["self"]],["xxhash64"]]],[11,R[427],E,E,3,[[["self"]],["xxhash32"]]],[11,"clone",E,E,0,[[["self"]],["xxhash64"]]],[11,"clone",E,E,1,[[["self"]],["xxhash32"]]],[11,"clone",E,E,2,[[["self"]],[R[2898]]]],[11,"clone",E,E,3,[[["self"]],[R[2899]]]],[11,R[90],E,E,0,[[],["xxhash64"]]],[11,R[90],E,E,1,[[],["xxhash32"]]],[11,R[90],E,E,2,[[],[R[2898]]]],[11,R[90],E,E,3,[[],[R[2899]]]]],"p":[[3,"XxHash64"],[3,"XxHash32"],[3,R[2900]],[3,R[2901]]]};
searchIndex["typenum"]={"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater","typenum",R[1384],N,N],[3,"Less",E,R[1384],N,N],[3,"Equal",E,R[1384],N,N],[0,"consts",E,"Type aliases for many constants.",N,N],[6,"True","typenum::consts",E,N,N],[6,"False",E,E,N,N],[6,"U0",E,E,N,N],[6,"U1",E,E,N,N],[6,"P1",E,E,N,N],[6,"N1",E,E,N,N],[6,"U2",E,E,N,N],[6,"P2",E,E,N,N],[6,"N2",E,E,N,N],[6,"U3",E,E,N,N],[6,"P3",E,E,N,N],[6,"N3",E,E,N,N],[6,"U4",E,E,N,N],[6,"P4",E,E,N,N],[6,"N4",E,E,N,N],[6,"U5",E,E,N,N],[6,"P5",E,E,N,N],[6,"N5",E,E,N,N],[6,"U6",E,E,N,N],[6,"P6",E,E,N,N],[6,"N6",E,E,N,N],[6,"U7",E,E,N,N],[6,"P7",E,E,N,N],[6,"N7",E,E,N,N],[6,"U8",E,E,N,N],[6,"P8",E,E,N,N],[6,"N8",E,E,N,N],[6,"U9",E,E,N,N],[6,"P9",E,E,N,N],[6,"N9",E,E,N,N],[6,"U10",E,E,N,N],[6,"P10",E,E,N,N],[6,"N10",E,E,N,N],[6,"U11",E,E,N,N],[6,"P11",E,E,N,N],[6,"N11",E,E,N,N],[6,"U12",E,E,N,N],[6,"P12",E,E,N,N],[6,"N12",E,E,N,N],[6,"U13",E,E,N,N],[6,"P13",E,E,N,N],[6,"N13",E,E,N,N],[6,"U14",E,E,N,N],[6,"P14",E,E,N,N],[6,"N14",E,E,N,N],[6,"U15",E,E,N,N],[6,"P15",E,E,N,N],[6,"N15",E,E,N,N],[6,"U16",E,E,N,N],[6,"P16",E,E,N,N],[6,"N16",E,E,N,N],[6,"U17",E,E,N,N],[6,"P17",E,E,N,N],[6,"N17",E,E,N,N],[6,"U18",E,E,N,N],[6,"P18",E,E,N,N],[6,"N18",E,E,N,N],[6,"U19",E,E,N,N],[6,"P19",E,E,N,N],[6,"N19",E,E,N,N],[6,"U20",E,E,N,N],[6,"P20",E,E,N,N],[6,"N20",E,E,N,N],[6,"U21",E,E,N,N],[6,"P21",E,E,N,N],[6,"N21",E,E,N,N],[6,"U22",E,E,N,N],[6,"P22",E,E,N,N],[6,"N22",E,E,N,N],[6,"U23",E,E,N,N],[6,"P23",E,E,N,N],[6,"N23",E,E,N,N],[6,"U24",E,E,N,N],[6,"P24",E,E,N,N],[6,"N24",E,E,N,N],[6,"U25",E,E,N,N],[6,"P25",E,E,N,N],[6,"N25",E,E,N,N],[6,"U26",E,E,N,N],[6,"P26",E,E,N,N],[6,"N26",E,E,N,N],[6,"U27",E,E,N,N],[6,"P27",E,E,N,N],[6,"N27",E,E,N,N],[6,"U28",E,E,N,N],[6,"P28",E,E,N,N],[6,"N28",E,E,N,N],[6,"U29",E,E,N,N],[6,"P29",E,E,N,N],[6,"N29",E,E,N,N],[6,"U30",E,E,N,N],[6,"P30",E,E,N,N],[6,"N30",E,E,N,N],[6,"U31",E,E,N,N],[6,"P31",E,E,N,N],[6,"N31",E,E,N,N],[6,"U32",E,E,N,N],[6,"P32",E,E,N,N],[6,"N32",E,E,N,N],[6,"U33",E,E,N,N],[6,"P33",E,E,N,N],[6,"N33",E,E,N,N],[6,"U34",E,E,N,N],[6,"P34",E,E,N,N],[6,"N34",E,E,N,N],[6,"U35",E,E,N,N],[6,"P35",E,E,N,N],[6,"N35",E,E,N,N],[6,"U36",E,E,N,N],[6,"P36",E,E,N,N],[6,"N36",E,E,N,N],[6,"U37",E,E,N,N],[6,"P37",E,E,N,N],[6,"N37",E,E,N,N],[6,"U38",E,E,N,N],[6,"P38",E,E,N,N],[6,"N38",E,E,N,N],[6,"U39",E,E,N,N],[6,"P39",E,E,N,N],[6,"N39",E,E,N,N],[6,"U40",E,E,N,N],[6,"P40",E,E,N,N],[6,"N40",E,E,N,N],[6,"U41",E,E,N,N],[6,"P41",E,E,N,N],[6,"N41",E,E,N,N],[6,"U42",E,E,N,N],[6,"P42",E,E,N,N],[6,"N42",E,E,N,N],[6,"U43",E,E,N,N],[6,"P43",E,E,N,N],[6,"N43",E,E,N,N],[6,"U44",E,E,N,N],[6,"P44",E,E,N,N],[6,"N44",E,E,N,N],[6,"U45",E,E,N,N],[6,"P45",E,E,N,N],[6,"N45",E,E,N,N],[6,"U46",E,E,N,N],[6,"P46",E,E,N,N],[6,"N46",E,E,N,N],[6,"U47",E,E,N,N],[6,"P47",E,E,N,N],[6,"N47",E,E,N,N],[6,"U48",E,E,N,N],[6,"P48",E,E,N,N],[6,"N48",E,E,N,N],[6,"U49",E,E,N,N],[6,"P49",E,E,N,N],[6,"N49",E,E,N,N],[6,"U50",E,E,N,N],[6,"P50",E,E,N,N],[6,"N50",E,E,N,N],[6,"U51",E,E,N,N],[6,"P51",E,E,N,N],[6,"N51",E,E,N,N],[6,"U52",E,E,N,N],[6,"P52",E,E,N,N],[6,"N52",E,E,N,N],[6,"U53",E,E,N,N],[6,"P53",E,E,N,N],[6,"N53",E,E,N,N],[6,"U54",E,E,N,N],[6,"P54",E,E,N,N],[6,"N54",E,E,N,N],[6,"U55",E,E,N,N],[6,"P55",E,E,N,N],[6,"N55",E,E,N,N],[6,"U56",E,E,N,N],[6,"P56",E,E,N,N],[6,"N56",E,E,N,N],[6,"U57",E,E,N,N],[6,"P57",E,E,N,N],[6,"N57",E,E,N,N],[6,"U58",E,E,N,N],[6,"P58",E,E,N,N],[6,"N58",E,E,N,N],[6,"U59",E,E,N,N],[6,"P59",E,E,N,N],[6,"N59",E,E,N,N],[6,"U60",E,E,N,N],[6,"P60",E,E,N,N],[6,"N60",E,E,N,N],[6,"U61",E,E,N,N],[6,"P61",E,E,N,N],[6,"N61",E,E,N,N],[6,"U62",E,E,N,N],[6,"P62",E,E,N,N],[6,"N62",E,E,N,N],[6,"U63",E,E,N,N],[6,"P63",E,E,N,N],[6,"N63",E,E,N,N],[6,"U64",E,E,N,N],[6,"P64",E,E,N,N],[6,"N64",E,E,N,N],[6,"U65",E,E,N,N],[6,"P65",E,E,N,N],[6,"N65",E,E,N,N],[6,"U66",E,E,N,N],[6,"P66",E,E,N,N],[6,"N66",E,E,N,N],[6,"U67",E,E,N,N],[6,"P67",E,E,N,N],[6,"N67",E,E,N,N],[6,"U68",E,E,N,N],[6,"P68",E,E,N,N],[6,"N68",E,E,N,N],[6,"U69",E,E,N,N],[6,"P69",E,E,N,N],[6,"N69",E,E,N,N],[6,"U70",E,E,N,N],[6,"P70",E,E,N,N],[6,"N70",E,E,N,N],[6,"U71",E,E,N,N],[6,"P71",E,E,N,N],[6,"N71",E,E,N,N],[6,"U72",E,E,N,N],[6,"P72",E,E,N,N],[6,"N72",E,E,N,N],[6,"U73",E,E,N,N],[6,"P73",E,E,N,N],[6,"N73",E,E,N,N],[6,"U74",E,E,N,N],[6,"P74",E,E,N,N],[6,"N74",E,E,N,N],[6,"U75",E,E,N,N],[6,"P75",E,E,N,N],[6,"N75",E,E,N,N],[6,"U76",E,E,N,N],[6,"P76",E,E,N,N],[6,"N76",E,E,N,N],[6,"U77",E,E,N,N],[6,"P77",E,E,N,N],[6,"N77",E,E,N,N],[6,"U78",E,E,N,N],[6,"P78",E,E,N,N],[6,"N78",E,E,N,N],[6,"U79",E,E,N,N],[6,"P79",E,E,N,N],[6,"N79",E,E,N,N],[6,"U80",E,E,N,N],[6,"P80",E,E,N,N],[6,"N80",E,E,N,N],[6,"U81",E,E,N,N],[6,"P81",E,E,N,N],[6,"N81",E,E,N,N],[6,"U82",E,E,N,N],[6,"P82",E,E,N,N],[6,"N82",E,E,N,N],[6,"U83",E,E,N,N],[6,"P83",E,E,N,N],[6,"N83",E,E,N,N],[6,"U84",E,E,N,N],[6,"P84",E,E,N,N],[6,"N84",E,E,N,N],[6,"U85",E,E,N,N],[6,"P85",E,E,N,N],[6,"N85",E,E,N,N],[6,"U86",E,E,N,N],[6,"P86",E,E,N,N],[6,"N86",E,E,N,N],[6,"U87",E,E,N,N],[6,"P87",E,E,N,N],[6,"N87",E,E,N,N],[6,"U88",E,E,N,N],[6,"P88",E,E,N,N],[6,"N88",E,E,N,N],[6,"U89",E,E,N,N],[6,"P89",E,E,N,N],[6,"N89",E,E,N,N],[6,"U90",E,E,N,N],[6,"P90",E,E,N,N],[6,"N90",E,E,N,N],[6,"U91",E,E,N,N],[6,"P91",E,E,N,N],[6,"N91",E,E,N,N],[6,"U92",E,E,N,N],[6,"P92",E,E,N,N],[6,"N92",E,E,N,N],[6,"U93",E,E,N,N],[6,"P93",E,E,N,N],[6,"N93",E,E,N,N],[6,"U94",E,E,N,N],[6,"P94",E,E,N,N],[6,"N94",E,E,N,N],[6,"U95",E,E,N,N],[6,"P95",E,E,N,N],[6,"N95",E,E,N,N],[6,"U96",E,E,N,N],[6,"P96",E,E,N,N],[6,"N96",E,E,N,N],[6,"U97",E,E,N,N],[6,"P97",E,E,N,N],[6,"N97",E,E,N,N],[6,"U98",E,E,N,N],[6,"P98",E,E,N,N],[6,"N98",E,E,N,N],[6,"U99",E,E,N,N],[6,"P99",E,E,N,N],[6,"N99",E,E,N,N],[6,"U100",E,E,N,N],[6,"P100",E,E,N,N],[6,"N100",E,E,N,N],[6,"U101",E,E,N,N],[6,"P101",E,E,N,N],[6,"N101",E,E,N,N],[6,"U102",E,E,N,N],[6,"P102",E,E,N,N],[6,"N102",E,E,N,N],[6,"U103",E,E,N,N],[6,"P103",E,E,N,N],[6,"N103",E,E,N,N],[6,"U104",E,E,N,N],[6,"P104",E,E,N,N],[6,"N104",E,E,N,N],[6,"U105",E,E,N,N],[6,"P105",E,E,N,N],[6,"N105",E,E,N,N],[6,"U106",E,E,N,N],[6,"P106",E,E,N,N],[6,"N106",E,E,N,N],[6,"U107",E,E,N,N],[6,"P107",E,E,N,N],[6,"N107",E,E,N,N],[6,"U108",E,E,N,N],[6,"P108",E,E,N,N],[6,"N108",E,E,N,N],[6,"U109",E,E,N,N],[6,"P109",E,E,N,N],[6,"N109",E,E,N,N],[6,"U110",E,E,N,N],[6,"P110",E,E,N,N],[6,"N110",E,E,N,N],[6,"U111",E,E,N,N],[6,"P111",E,E,N,N],[6,"N111",E,E,N,N],[6,"U112",E,E,N,N],[6,"P112",E,E,N,N],[6,"N112",E,E,N,N],[6,"U113",E,E,N,N],[6,"P113",E,E,N,N],[6,"N113",E,E,N,N],[6,"U114",E,E,N,N],[6,"P114",E,E,N,N],[6,"N114",E,E,N,N],[6,"U115",E,E,N,N],[6,"P115",E,E,N,N],[6,"N115",E,E,N,N],[6,"U116",E,E,N,N],[6,"P116",E,E,N,N],[6,"N116",E,E,N,N],[6,"U117",E,E,N,N],[6,"P117",E,E,N,N],[6,"N117",E,E,N,N],[6,"U118",E,E,N,N],[6,"P118",E,E,N,N],[6,"N118",E,E,N,N],[6,"U119",E,E,N,N],[6,"P119",E,E,N,N],[6,"N119",E,E,N,N],[6,"U120",E,E,N,N],[6,"P120",E,E,N,N],[6,"N120",E,E,N,N],[6,"U121",E,E,N,N],[6,"P121",E,E,N,N],[6,"N121",E,E,N,N],[6,"U122",E,E,N,N],[6,"P122",E,E,N,N],[6,"N122",E,E,N,N],[6,"U123",E,E,N,N],[6,"P123",E,E,N,N],[6,"N123",E,E,N,N],[6,"U124",E,E,N,N],[6,"P124",E,E,N,N],[6,"N124",E,E,N,N],[6,"U125",E,E,N,N],[6,"P125",E,E,N,N],[6,"N125",E,E,N,N],[6,"U126",E,E,N,N],[6,"P126",E,E,N,N],[6,"N126",E,E,N,N],[6,"U127",E,E,N,N],[6,"P127",E,E,N,N],[6,"N127",E,E,N,N],[6,"U128",E,E,N,N],[6,"P128",E,E,N,N],[6,"N128",E,E,N,N],[6,"U129",E,E,N,N],[6,"P129",E,E,N,N],[6,"N129",E,E,N,N],[6,"U130",E,E,N,N],[6,"P130",E,E,N,N],[6,"N130",E,E,N,N],[6,"U131",E,E,N,N],[6,"P131",E,E,N,N],[6,"N131",E,E,N,N],[6,"U132",E,E,N,N],[6,"P132",E,E,N,N],[6,"N132",E,E,N,N],[6,"U133",E,E,N,N],[6,"P133",E,E,N,N],[6,"N133",E,E,N,N],[6,"U134",E,E,N,N],[6,"P134",E,E,N,N],[6,"N134",E,E,N,N],[6,"U135",E,E,N,N],[6,"P135",E,E,N,N],[6,"N135",E,E,N,N],[6,"U136",E,E,N,N],[6,"P136",E,E,N,N],[6,"N136",E,E,N,N],[6,"U137",E,E,N,N],[6,"P137",E,E,N,N],[6,"N137",E,E,N,N],[6,"U138",E,E,N,N],[6,"P138",E,E,N,N],[6,"N138",E,E,N,N],[6,"U139",E,E,N,N],[6,"P139",E,E,N,N],[6,"N139",E,E,N,N],[6,"U140",E,E,N,N],[6,"P140",E,E,N,N],[6,"N140",E,E,N,N],[6,"U141",E,E,N,N],[6,"P141",E,E,N,N],[6,"N141",E,E,N,N],[6,"U142",E,E,N,N],[6,"P142",E,E,N,N],[6,"N142",E,E,N,N],[6,"U143",E,E,N,N],[6,"P143",E,E,N,N],[6,"N143",E,E,N,N],[6,"U144",E,E,N,N],[6,"P144",E,E,N,N],[6,"N144",E,E,N,N],[6,"U145",E,E,N,N],[6,"P145",E,E,N,N],[6,"N145",E,E,N,N],[6,"U146",E,E,N,N],[6,"P146",E,E,N,N],[6,"N146",E,E,N,N],[6,"U147",E,E,N,N],[6,"P147",E,E,N,N],[6,"N147",E,E,N,N],[6,"U148",E,E,N,N],[6,"P148",E,E,N,N],[6,"N148",E,E,N,N],[6,"U149",E,E,N,N],[6,"P149",E,E,N,N],[6,"N149",E,E,N,N],[6,"U150",E,E,N,N],[6,"P150",E,E,N,N],[6,"N150",E,E,N,N],[6,"U151",E,E,N,N],[6,"P151",E,E,N,N],[6,"N151",E,E,N,N],[6,"U152",E,E,N,N],[6,"P152",E,E,N,N],[6,"N152",E,E,N,N],[6,"U153",E,E,N,N],[6,"P153",E,E,N,N],[6,"N153",E,E,N,N],[6,"U154",E,E,N,N],[6,"P154",E,E,N,N],[6,"N154",E,E,N,N],[6,"U155",E,E,N,N],[6,"P155",E,E,N,N],[6,"N155",E,E,N,N],[6,"U156",E,E,N,N],[6,"P156",E,E,N,N],[6,"N156",E,E,N,N],[6,"U157",E,E,N,N],[6,"P157",E,E,N,N],[6,"N157",E,E,N,N],[6,"U158",E,E,N,N],[6,"P158",E,E,N,N],[6,"N158",E,E,N,N],[6,"U159",E,E,N,N],[6,"P159",E,E,N,N],[6,"N159",E,E,N,N],[6,"U160",E,E,N,N],[6,"P160",E,E,N,N],[6,"N160",E,E,N,N],[6,"U161",E,E,N,N],[6,"P161",E,E,N,N],[6,"N161",E,E,N,N],[6,"U162",E,E,N,N],[6,"P162",E,E,N,N],[6,"N162",E,E,N,N],[6,"U163",E,E,N,N],[6,"P163",E,E,N,N],[6,"N163",E,E,N,N],[6,"U164",E,E,N,N],[6,"P164",E,E,N,N],[6,"N164",E,E,N,N],[6,"U165",E,E,N,N],[6,"P165",E,E,N,N],[6,"N165",E,E,N,N],[6,"U166",E,E,N,N],[6,"P166",E,E,N,N],[6,"N166",E,E,N,N],[6,"U167",E,E,N,N],[6,"P167",E,E,N,N],[6,"N167",E,E,N,N],[6,"U168",E,E,N,N],[6,"P168",E,E,N,N],[6,"N168",E,E,N,N],[6,"U169",E,E,N,N],[6,"P169",E,E,N,N],[6,"N169",E,E,N,N],[6,"U170",E,E,N,N],[6,"P170",E,E,N,N],[6,"N170",E,E,N,N],[6,"U171",E,E,N,N],[6,"P171",E,E,N,N],[6,"N171",E,E,N,N],[6,"U172",E,E,N,N],[6,"P172",E,E,N,N],[6,"N172",E,E,N,N],[6,"U173",E,E,N,N],[6,"P173",E,E,N,N],[6,"N173",E,E,N,N],[6,"U174",E,E,N,N],[6,"P174",E,E,N,N],[6,"N174",E,E,N,N],[6,"U175",E,E,N,N],[6,"P175",E,E,N,N],[6,"N175",E,E,N,N],[6,"U176",E,E,N,N],[6,"P176",E,E,N,N],[6,"N176",E,E,N,N],[6,"U177",E,E,N,N],[6,"P177",E,E,N,N],[6,"N177",E,E,N,N],[6,"U178",E,E,N,N],[6,"P178",E,E,N,N],[6,"N178",E,E,N,N],[6,"U179",E,E,N,N],[6,"P179",E,E,N,N],[6,"N179",E,E,N,N],[6,"U180",E,E,N,N],[6,"P180",E,E,N,N],[6,"N180",E,E,N,N],[6,"U181",E,E,N,N],[6,"P181",E,E,N,N],[6,"N181",E,E,N,N],[6,"U182",E,E,N,N],[6,"P182",E,E,N,N],[6,"N182",E,E,N,N],[6,"U183",E,E,N,N],[6,"P183",E,E,N,N],[6,"N183",E,E,N,N],[6,"U184",E,E,N,N],[6,"P184",E,E,N,N],[6,"N184",E,E,N,N],[6,"U185",E,E,N,N],[6,"P185",E,E,N,N],[6,"N185",E,E,N,N],[6,"U186",E,E,N,N],[6,"P186",E,E,N,N],[6,"N186",E,E,N,N],[6,"U187",E,E,N,N],[6,"P187",E,E,N,N],[6,"N187",E,E,N,N],[6,"U188",E,E,N,N],[6,"P188",E,E,N,N],[6,"N188",E,E,N,N],[6,"U189",E,E,N,N],[6,"P189",E,E,N,N],[6,"N189",E,E,N,N],[6,"U190",E,E,N,N],[6,"P190",E,E,N,N],[6,"N190",E,E,N,N],[6,"U191",E,E,N,N],[6,"P191",E,E,N,N],[6,"N191",E,E,N,N],[6,"U192",E,E,N,N],[6,"P192",E,E,N,N],[6,"N192",E,E,N,N],[6,"U193",E,E,N,N],[6,"P193",E,E,N,N],[6,"N193",E,E,N,N],[6,"U194",E,E,N,N],[6,"P194",E,E,N,N],[6,"N194",E,E,N,N],[6,"U195",E,E,N,N],[6,"P195",E,E,N,N],[6,"N195",E,E,N,N],[6,"U196",E,E,N,N],[6,"P196",E,E,N,N],[6,"N196",E,E,N,N],[6,"U197",E,E,N,N],[6,"P197",E,E,N,N],[6,"N197",E,E,N,N],[6,"U198",E,E,N,N],[6,"P198",E,E,N,N],[6,"N198",E,E,N,N],[6,"U199",E,E,N,N],[6,"P199",E,E,N,N],[6,"N199",E,E,N,N],[6,"U200",E,E,N,N],[6,"P200",E,E,N,N],[6,"N200",E,E,N,N],[6,"U201",E,E,N,N],[6,"P201",E,E,N,N],[6,"N201",E,E,N,N],[6,"U202",E,E,N,N],[6,"P202",E,E,N,N],[6,"N202",E,E,N,N],[6,"U203",E,E,N,N],[6,"P203",E,E,N,N],[6,"N203",E,E,N,N],[6,"U204",E,E,N,N],[6,"P204",E,E,N,N],[6,"N204",E,E,N,N],[6,"U205",E,E,N,N],[6,"P205",E,E,N,N],[6,"N205",E,E,N,N],[6,"U206",E,E,N,N],[6,"P206",E,E,N,N],[6,"N206",E,E,N,N],[6,"U207",E,E,N,N],[6,"P207",E,E,N,N],[6,"N207",E,E,N,N],[6,"U208",E,E,N,N],[6,"P208",E,E,N,N],[6,"N208",E,E,N,N],[6,"U209",E,E,N,N],[6,"P209",E,E,N,N],[6,"N209",E,E,N,N],[6,"U210",E,E,N,N],[6,"P210",E,E,N,N],[6,"N210",E,E,N,N],[6,"U211",E,E,N,N],[6,"P211",E,E,N,N],[6,"N211",E,E,N,N],[6,"U212",E,E,N,N],[6,"P212",E,E,N,N],[6,"N212",E,E,N,N],[6,"U213",E,E,N,N],[6,"P213",E,E,N,N],[6,"N213",E,E,N,N],[6,"U214",E,E,N,N],[6,"P214",E,E,N,N],[6,"N214",E,E,N,N],[6,"U215",E,E,N,N],[6,"P215",E,E,N,N],[6,"N215",E,E,N,N],[6,"U216",E,E,N,N],[6,"P216",E,E,N,N],[6,"N216",E,E,N,N],[6,"U217",E,E,N,N],[6,"P217",E,E,N,N],[6,"N217",E,E,N,N],[6,"U218",E,E,N,N],[6,"P218",E,E,N,N],[6,"N218",E,E,N,N],[6,"U219",E,E,N,N],[6,"P219",E,E,N,N],[6,"N219",E,E,N,N],[6,"U220",E,E,N,N],[6,"P220",E,E,N,N],[6,"N220",E,E,N,N],[6,"U221",E,E,N,N],[6,"P221",E,E,N,N],[6,"N221",E,E,N,N],[6,"U222",E,E,N,N],[6,"P222",E,E,N,N],[6,"N222",E,E,N,N],[6,"U223",E,E,N,N],[6,"P223",E,E,N,N],[6,"N223",E,E,N,N],[6,"U224",E,E,N,N],[6,"P224",E,E,N,N],[6,"N224",E,E,N,N],[6,"U225",E,E,N,N],[6,"P225",E,E,N,N],[6,"N225",E,E,N,N],[6,"U226",E,E,N,N],[6,"P226",E,E,N,N],[6,"N226",E,E,N,N],[6,"U227",E,E,N,N],[6,"P227",E,E,N,N],[6,"N227",E,E,N,N],[6,"U228",E,E,N,N],[6,"P228",E,E,N,N],[6,"N228",E,E,N,N],[6,"U229",E,E,N,N],[6,"P229",E,E,N,N],[6,"N229",E,E,N,N],[6,"U230",E,E,N,N],[6,"P230",E,E,N,N],[6,"N230",E,E,N,N],[6,"U231",E,E,N,N],[6,"P231",E,E,N,N],[6,"N231",E,E,N,N],[6,"U232",E,E,N,N],[6,"P232",E,E,N,N],[6,"N232",E,E,N,N],[6,"U233",E,E,N,N],[6,"P233",E,E,N,N],[6,"N233",E,E,N,N],[6,"U234",E,E,N,N],[6,"P234",E,E,N,N],[6,"N234",E,E,N,N],[6,"U235",E,E,N,N],[6,"P235",E,E,N,N],[6,"N235",E,E,N,N],[6,"U236",E,E,N,N],[6,"P236",E,E,N,N],[6,"N236",E,E,N,N],[6,"U237",E,E,N,N],[6,"P237",E,E,N,N],[6,"N237",E,E,N,N],[6,"U238",E,E,N,N],[6,"P238",E,E,N,N],[6,"N238",E,E,N,N],[6,"U239",E,E,N,N],[6,"P239",E,E,N,N],[6,"N239",E,E,N,N],[6,"U240",E,E,N,N],[6,"P240",E,E,N,N],[6,"N240",E,E,N,N],[6,"U241",E,E,N,N],[6,"P241",E,E,N,N],[6,"N241",E,E,N,N],[6,"U242",E,E,N,N],[6,"P242",E,E,N,N],[6,"N242",E,E,N,N],[6,"U243",E,E,N,N],[6,"P243",E,E,N,N],[6,"N243",E,E,N,N],[6,"U244",E,E,N,N],[6,"P244",E,E,N,N],[6,"N244",E,E,N,N],[6,"U245",E,E,N,N],[6,"P245",E,E,N,N],[6,"N245",E,E,N,N],[6,"U246",E,E,N,N],[6,"P246",E,E,N,N],[6,"N246",E,E,N,N],[6,"U247",E,E,N,N],[6,"P247",E,E,N,N],[6,"N247",E,E,N,N],[6,"U248",E,E,N,N],[6,"P248",E,E,N,N],[6,"N248",E,E,N,N],[6,"U249",E,E,N,N],[6,"P249",E,E,N,N],[6,"N249",E,E,N,N],[6,"U250",E,E,N,N],[6,"P250",E,E,N,N],[6,"N250",E,E,N,N],[6,"U251",E,E,N,N],[6,"P251",E,E,N,N],[6,"N251",E,E,N,N],[6,"U252",E,E,N,N],[6,"P252",E,E,N,N],[6,"N252",E,E,N,N],[6,"U253",E,E,N,N],[6,"P253",E,E,N,N],[6,"N253",E,E,N,N],[6,"U254",E,E,N,N],[6,"P254",E,E,N,N],[6,"N254",E,E,N,N],[6,"U255",E,E,N,N],[6,"P255",E,E,N,N],[6,"N255",E,E,N,N],[6,"U256",E,E,N,N],[6,"P256",E,E,N,N],[6,"N256",E,E,N,N],[6,"U257",E,E,N,N],[6,"P257",E,E,N,N],[6,"N257",E,E,N,N],[6,"U258",E,E,N,N],[6,"P258",E,E,N,N],[6,"N258",E,E,N,N],[6,"U259",E,E,N,N],[6,"P259",E,E,N,N],[6,"N259",E,E,N,N],[6,"U260",E,E,N,N],[6,"P260",E,E,N,N],[6,"N260",E,E,N,N],[6,"U261",E,E,N,N],[6,"P261",E,E,N,N],[6,"N261",E,E,N,N],[6,"U262",E,E,N,N],[6,"P262",E,E,N,N],[6,"N262",E,E,N,N],[6,"U263",E,E,N,N],[6,"P263",E,E,N,N],[6,"N263",E,E,N,N],[6,"U264",E,E,N,N],[6,"P264",E,E,N,N],[6,"N264",E,E,N,N],[6,"U265",E,E,N,N],[6,"P265",E,E,N,N],[6,"N265",E,E,N,N],[6,"U266",E,E,N,N],[6,"P266",E,E,N,N],[6,"N266",E,E,N,N],[6,"U267",E,E,N,N],[6,"P267",E,E,N,N],[6,"N267",E,E,N,N],[6,"U268",E,E,N,N],[6,"P268",E,E,N,N],[6,"N268",E,E,N,N],[6,"U269",E,E,N,N],[6,"P269",E,E,N,N],[6,"N269",E,E,N,N],[6,"U270",E,E,N,N],[6,"P270",E,E,N,N],[6,"N270",E,E,N,N],[6,"U271",E,E,N,N],[6,"P271",E,E,N,N],[6,"N271",E,E,N,N],[6,"U272",E,E,N,N],[6,"P272",E,E,N,N],[6,"N272",E,E,N,N],[6,"U273",E,E,N,N],[6,"P273",E,E,N,N],[6,"N273",E,E,N,N],[6,"U274",E,E,N,N],[6,"P274",E,E,N,N],[6,"N274",E,E,N,N],[6,"U275",E,E,N,N],[6,"P275",E,E,N,N],[6,"N275",E,E,N,N],[6,"U276",E,E,N,N],[6,"P276",E,E,N,N],[6,"N276",E,E,N,N],[6,"U277",E,E,N,N],[6,"P277",E,E,N,N],[6,"N277",E,E,N,N],[6,"U278",E,E,N,N],[6,"P278",E,E,N,N],[6,"N278",E,E,N,N],[6,"U279",E,E,N,N],[6,"P279",E,E,N,N],[6,"N279",E,E,N,N],[6,"U280",E,E,N,N],[6,"P280",E,E,N,N],[6,"N280",E,E,N,N],[6,"U281",E,E,N,N],[6,"P281",E,E,N,N],[6,"N281",E,E,N,N],[6,"U282",E,E,N,N],[6,"P282",E,E,N,N],[6,"N282",E,E,N,N],[6,"U283",E,E,N,N],[6,"P283",E,E,N,N],[6,"N283",E,E,N,N],[6,"U284",E,E,N,N],[6,"P284",E,E,N,N],[6,"N284",E,E,N,N],[6,"U285",E,E,N,N],[6,"P285",E,E,N,N],[6,"N285",E,E,N,N],[6,"U286",E,E,N,N],[6,"P286",E,E,N,N],[6,"N286",E,E,N,N],[6,"U287",E,E,N,N],[6,"P287",E,E,N,N],[6,"N287",E,E,N,N],[6,"U288",E,E,N,N],[6,"P288",E,E,N,N],[6,"N288",E,E,N,N],[6,"U289",E,E,N,N],[6,"P289",E,E,N,N],[6,"N289",E,E,N,N],[6,"U290",E,E,N,N],[6,"P290",E,E,N,N],[6,"N290",E,E,N,N],[6,"U291",E,E,N,N],[6,"P291",E,E,N,N],[6,"N291",E,E,N,N],[6,"U292",E,E,N,N],[6,"P292",E,E,N,N],[6,"N292",E,E,N,N],[6,"U293",E,E,N,N],[6,"P293",E,E,N,N],[6,"N293",E,E,N,N],[6,"U294",E,E,N,N],[6,"P294",E,E,N,N],[6,"N294",E,E,N,N],[6,"U295",E,E,N,N],[6,"P295",E,E,N,N],[6,"N295",E,E,N,N],[6,"U296",E,E,N,N],[6,"P296",E,E,N,N],[6,"N296",E,E,N,N],[6,"U297",E,E,N,N],[6,"P297",E,E,N,N],[6,"N297",E,E,N,N],[6,"U298",E,E,N,N],[6,"P298",E,E,N,N],[6,"N298",E,E,N,N],[6,"U299",E,E,N,N],[6,"P299",E,E,N,N],[6,"N299",E,E,N,N],[6,"U300",E,E,N,N],[6,"P300",E,E,N,N],[6,"N300",E,E,N,N],[6,"U301",E,E,N,N],[6,"P301",E,E,N,N],[6,"N301",E,E,N,N],[6,"U302",E,E,N,N],[6,"P302",E,E,N,N],[6,"N302",E,E,N,N],[6,"U303",E,E,N,N],[6,"P303",E,E,N,N],[6,"N303",E,E,N,N],[6,"U304",E,E,N,N],[6,"P304",E,E,N,N],[6,"N304",E,E,N,N],[6,"U305",E,E,N,N],[6,"P305",E,E,N,N],[6,"N305",E,E,N,N],[6,"U306",E,E,N,N],[6,"P306",E,E,N,N],[6,"N306",E,E,N,N],[6,"U307",E,E,N,N],[6,"P307",E,E,N,N],[6,"N307",E,E,N,N],[6,"U308",E,E,N,N],[6,"P308",E,E,N,N],[6,"N308",E,E,N,N],[6,"U309",E,E,N,N],[6,"P309",E,E,N,N],[6,"N309",E,E,N,N],[6,"U310",E,E,N,N],[6,"P310",E,E,N,N],[6,"N310",E,E,N,N],[6,"U311",E,E,N,N],[6,"P311",E,E,N,N],[6,"N311",E,E,N,N],[6,"U312",E,E,N,N],[6,"P312",E,E,N,N],[6,"N312",E,E,N,N],[6,"U313",E,E,N,N],[6,"P313",E,E,N,N],[6,"N313",E,E,N,N],[6,"U314",E,E,N,N],[6,"P314",E,E,N,N],[6,"N314",E,E,N,N],[6,"U315",E,E,N,N],[6,"P315",E,E,N,N],[6,"N315",E,E,N,N],[6,"U316",E,E,N,N],[6,"P316",E,E,N,N],[6,"N316",E,E,N,N],[6,"U317",E,E,N,N],[6,"P317",E,E,N,N],[6,"N317",E,E,N,N],[6,"U318",E,E,N,N],[6,"P318",E,E,N,N],[6,"N318",E,E,N,N],[6,"U319",E,E,N,N],[6,"P319",E,E,N,N],[6,"N319",E,E,N,N],[6,"U320",E,E,N,N],[6,"P320",E,E,N,N],[6,"N320",E,E,N,N],[6,"U321",E,E,N,N],[6,"P321",E,E,N,N],[6,"N321",E,E,N,N],[6,"U322",E,E,N,N],[6,"P322",E,E,N,N],[6,"N322",E,E,N,N],[6,"U323",E,E,N,N],[6,"P323",E,E,N,N],[6,"N323",E,E,N,N],[6,"U324",E,E,N,N],[6,"P324",E,E,N,N],[6,"N324",E,E,N,N],[6,"U325",E,E,N,N],[6,"P325",E,E,N,N],[6,"N325",E,E,N,N],[6,"U326",E,E,N,N],[6,"P326",E,E,N,N],[6,"N326",E,E,N,N],[6,"U327",E,E,N,N],[6,"P327",E,E,N,N],[6,"N327",E,E,N,N],[6,"U328",E,E,N,N],[6,"P328",E,E,N,N],[6,"N328",E,E,N,N],[6,"U329",E,E,N,N],[6,"P329",E,E,N,N],[6,"N329",E,E,N,N],[6,"U330",E,E,N,N],[6,"P330",E,E,N,N],[6,"N330",E,E,N,N],[6,"U331",E,E,N,N],[6,"P331",E,E,N,N],[6,"N331",E,E,N,N],[6,"U332",E,E,N,N],[6,"P332",E,E,N,N],[6,"N332",E,E,N,N],[6,"U333",E,E,N,N],[6,"P333",E,E,N,N],[6,"N333",E,E,N,N],[6,"U334",E,E,N,N],[6,"P334",E,E,N,N],[6,"N334",E,E,N,N],[6,"U335",E,E,N,N],[6,"P335",E,E,N,N],[6,"N335",E,E,N,N],[6,"U336",E,E,N,N],[6,"P336",E,E,N,N],[6,"N336",E,E,N,N],[6,"U337",E,E,N,N],[6,"P337",E,E,N,N],[6,"N337",E,E,N,N],[6,"U338",E,E,N,N],[6,"P338",E,E,N,N],[6,"N338",E,E,N,N],[6,"U339",E,E,N,N],[6,"P339",E,E,N,N],[6,"N339",E,E,N,N],[6,"U340",E,E,N,N],[6,"P340",E,E,N,N],[6,"N340",E,E,N,N],[6,"U341",E,E,N,N],[6,"P341",E,E,N,N],[6,"N341",E,E,N,N],[6,"U342",E,E,N,N],[6,"P342",E,E,N,N],[6,"N342",E,E,N,N],[6,"U343",E,E,N,N],[6,"P343",E,E,N,N],[6,"N343",E,E,N,N],[6,"U344",E,E,N,N],[6,"P344",E,E,N,N],[6,"N344",E,E,N,N],[6,"U345",E,E,N,N],[6,"P345",E,E,N,N],[6,"N345",E,E,N,N],[6,"U346",E,E,N,N],[6,"P346",E,E,N,N],[6,"N346",E,E,N,N],[6,"U347",E,E,N,N],[6,"P347",E,E,N,N],[6,"N347",E,E,N,N],[6,"U348",E,E,N,N],[6,"P348",E,E,N,N],[6,"N348",E,E,N,N],[6,"U349",E,E,N,N],[6,"P349",E,E,N,N],[6,"N349",E,E,N,N],[6,"U350",E,E,N,N],[6,"P350",E,E,N,N],[6,"N350",E,E,N,N],[6,"U351",E,E,N,N],[6,"P351",E,E,N,N],[6,"N351",E,E,N,N],[6,"U352",E,E,N,N],[6,"P352",E,E,N,N],[6,"N352",E,E,N,N],[6,"U353",E,E,N,N],[6,"P353",E,E,N,N],[6,"N353",E,E,N,N],[6,"U354",E,E,N,N],[6,"P354",E,E,N,N],[6,"N354",E,E,N,N],[6,"U355",E,E,N,N],[6,"P355",E,E,N,N],[6,"N355",E,E,N,N],[6,"U356",E,E,N,N],[6,"P356",E,E,N,N],[6,"N356",E,E,N,N],[6,"U357",E,E,N,N],[6,"P357",E,E,N,N],[6,"N357",E,E,N,N],[6,"U358",E,E,N,N],[6,"P358",E,E,N,N],[6,"N358",E,E,N,N],[6,"U359",E,E,N,N],[6,"P359",E,E,N,N],[6,"N359",E,E,N,N],[6,"U360",E,E,N,N],[6,"P360",E,E,N,N],[6,"N360",E,E,N,N],[6,"U361",E,E,N,N],[6,"P361",E,E,N,N],[6,"N361",E,E,N,N],[6,"U362",E,E,N,N],[6,"P362",E,E,N,N],[6,"N362",E,E,N,N],[6,"U363",E,E,N,N],[6,"P363",E,E,N,N],[6,"N363",E,E,N,N],[6,"U364",E,E,N,N],[6,"P364",E,E,N,N],[6,"N364",E,E,N,N],[6,"U365",E,E,N,N],[6,"P365",E,E,N,N],[6,"N365",E,E,N,N],[6,"U366",E,E,N,N],[6,"P366",E,E,N,N],[6,"N366",E,E,N,N],[6,"U367",E,E,N,N],[6,"P367",E,E,N,N],[6,"N367",E,E,N,N],[6,"U368",E,E,N,N],[6,"P368",E,E,N,N],[6,"N368",E,E,N,N],[6,"U369",E,E,N,N],[6,"P369",E,E,N,N],[6,"N369",E,E,N,N],[6,"U370",E,E,N,N],[6,"P370",E,E,N,N],[6,"N370",E,E,N,N],[6,"U371",E,E,N,N],[6,"P371",E,E,N,N],[6,"N371",E,E,N,N],[6,"U372",E,E,N,N],[6,"P372",E,E,N,N],[6,"N372",E,E,N,N],[6,"U373",E,E,N,N],[6,"P373",E,E,N,N],[6,"N373",E,E,N,N],[6,"U374",E,E,N,N],[6,"P374",E,E,N,N],[6,"N374",E,E,N,N],[6,"U375",E,E,N,N],[6,"P375",E,E,N,N],[6,"N375",E,E,N,N],[6,"U376",E,E,N,N],[6,"P376",E,E,N,N],[6,"N376",E,E,N,N],[6,"U377",E,E,N,N],[6,"P377",E,E,N,N],[6,"N377",E,E,N,N],[6,"U378",E,E,N,N],[6,"P378",E,E,N,N],[6,"N378",E,E,N,N],[6,"U379",E,E,N,N],[6,"P379",E,E,N,N],[6,"N379",E,E,N,N],[6,"U380",E,E,N,N],[6,"P380",E,E,N,N],[6,"N380",E,E,N,N],[6,"U381",E,E,N,N],[6,"P381",E,E,N,N],[6,"N381",E,E,N,N],[6,"U382",E,E,N,N],[6,"P382",E,E,N,N],[6,"N382",E,E,N,N],[6,"U383",E,E,N,N],[6,"P383",E,E,N,N],[6,"N383",E,E,N,N],[6,"U384",E,E,N,N],[6,"P384",E,E,N,N],[6,"N384",E,E,N,N],[6,"U385",E,E,N,N],[6,"P385",E,E,N,N],[6,"N385",E,E,N,N],[6,"U386",E,E,N,N],[6,"P386",E,E,N,N],[6,"N386",E,E,N,N],[6,"U387",E,E,N,N],[6,"P387",E,E,N,N],[6,"N387",E,E,N,N],[6,"U388",E,E,N,N],[6,"P388",E,E,N,N],[6,"N388",E,E,N,N],[6,"U389",E,E,N,N],[6,"P389",E,E,N,N],[6,"N389",E,E,N,N],[6,"U390",E,E,N,N],[6,"P390",E,E,N,N],[6,"N390",E,E,N,N],[6,"U391",E,E,N,N],[6,"P391",E,E,N,N],[6,"N391",E,E,N,N],[6,"U392",E,E,N,N],[6,"P392",E,E,N,N],[6,"N392",E,E,N,N],[6,"U393",E,E,N,N],[6,"P393",E,E,N,N],[6,"N393",E,E,N,N],[6,"U394",E,E,N,N],[6,"P394",E,E,N,N],[6,"N394",E,E,N,N],[6,"U395",E,E,N,N],[6,"P395",E,E,N,N],[6,"N395",E,E,N,N],[6,"U396",E,E,N,N],[6,"P396",E,E,N,N],[6,"N396",E,E,N,N],[6,"U397",E,E,N,N],[6,"P397",E,E,N,N],[6,"N397",E,E,N,N],[6,"U398",E,E,N,N],[6,"P398",E,E,N,N],[6,"N398",E,E,N,N],[6,"U399",E,E,N,N],[6,"P399",E,E,N,N],[6,"N399",E,E,N,N],[6,"U400",E,E,N,N],[6,"P400",E,E,N,N],[6,"N400",E,E,N,N],[6,"U401",E,E,N,N],[6,"P401",E,E,N,N],[6,"N401",E,E,N,N],[6,"U402",E,E,N,N],[6,"P402",E,E,N,N],[6,"N402",E,E,N,N],[6,"U403",E,E,N,N],[6,"P403",E,E,N,N],[6,"N403",E,E,N,N],[6,"U404",E,E,N,N],[6,"P404",E,E,N,N],[6,"N404",E,E,N,N],[6,"U405",E,E,N,N],[6,"P405",E,E,N,N],[6,"N405",E,E,N,N],[6,"U406",E,E,N,N],[6,"P406",E,E,N,N],[6,"N406",E,E,N,N],[6,"U407",E,E,N,N],[6,"P407",E,E,N,N],[6,"N407",E,E,N,N],[6,"U408",E,E,N,N],[6,"P408",E,E,N,N],[6,"N408",E,E,N,N],[6,"U409",E,E,N,N],[6,"P409",E,E,N,N],[6,"N409",E,E,N,N],[6,"U410",E,E,N,N],[6,"P410",E,E,N,N],[6,"N410",E,E,N,N],[6,"U411",E,E,N,N],[6,"P411",E,E,N,N],[6,"N411",E,E,N,N],[6,"U412",E,E,N,N],[6,"P412",E,E,N,N],[6,"N412",E,E,N,N],[6,"U413",E,E,N,N],[6,"P413",E,E,N,N],[6,"N413",E,E,N,N],[6,"U414",E,E,N,N],[6,"P414",E,E,N,N],[6,"N414",E,E,N,N],[6,"U415",E,E,N,N],[6,"P415",E,E,N,N],[6,"N415",E,E,N,N],[6,"U416",E,E,N,N],[6,"P416",E,E,N,N],[6,"N416",E,E,N,N],[6,"U417",E,E,N,N],[6,"P417",E,E,N,N],[6,"N417",E,E,N,N],[6,"U418",E,E,N,N],[6,"P418",E,E,N,N],[6,"N418",E,E,N,N],[6,"U419",E,E,N,N],[6,"P419",E,E,N,N],[6,"N419",E,E,N,N],[6,"U420",E,E,N,N],[6,"P420",E,E,N,N],[6,"N420",E,E,N,N],[6,"U421",E,E,N,N],[6,"P421",E,E,N,N],[6,"N421",E,E,N,N],[6,"U422",E,E,N,N],[6,"P422",E,E,N,N],[6,"N422",E,E,N,N],[6,"U423",E,E,N,N],[6,"P423",E,E,N,N],[6,"N423",E,E,N,N],[6,"U424",E,E,N,N],[6,"P424",E,E,N,N],[6,"N424",E,E,N,N],[6,"U425",E,E,N,N],[6,"P425",E,E,N,N],[6,"N425",E,E,N,N],[6,"U426",E,E,N,N],[6,"P426",E,E,N,N],[6,"N426",E,E,N,N],[6,"U427",E,E,N,N],[6,"P427",E,E,N,N],[6,"N427",E,E,N,N],[6,"U428",E,E,N,N],[6,"P428",E,E,N,N],[6,"N428",E,E,N,N],[6,"U429",E,E,N,N],[6,"P429",E,E,N,N],[6,"N429",E,E,N,N],[6,"U430",E,E,N,N],[6,"P430",E,E,N,N],[6,"N430",E,E,N,N],[6,"U431",E,E,N,N],[6,"P431",E,E,N,N],[6,"N431",E,E,N,N],[6,"U432",E,E,N,N],[6,"P432",E,E,N,N],[6,"N432",E,E,N,N],[6,"U433",E,E,N,N],[6,"P433",E,E,N,N],[6,"N433",E,E,N,N],[6,"U434",E,E,N,N],[6,"P434",E,E,N,N],[6,"N434",E,E,N,N],[6,"U435",E,E,N,N],[6,"P435",E,E,N,N],[6,"N435",E,E,N,N],[6,"U436",E,E,N,N],[6,"P436",E,E,N,N],[6,"N436",E,E,N,N],[6,"U437",E,E,N,N],[6,"P437",E,E,N,N],[6,"N437",E,E,N,N],[6,"U438",E,E,N,N],[6,"P438",E,E,N,N],[6,"N438",E,E,N,N],[6,"U439",E,E,N,N],[6,"P439",E,E,N,N],[6,"N439",E,E,N,N],[6,"U440",E,E,N,N],[6,"P440",E,E,N,N],[6,"N440",E,E,N,N],[6,"U441",E,E,N,N],[6,"P441",E,E,N,N],[6,"N441",E,E,N,N],[6,"U442",E,E,N,N],[6,"P442",E,E,N,N],[6,"N442",E,E,N,N],[6,"U443",E,E,N,N],[6,"P443",E,E,N,N],[6,"N443",E,E,N,N],[6,"U444",E,E,N,N],[6,"P444",E,E,N,N],[6,"N444",E,E,N,N],[6,"U445",E,E,N,N],[6,"P445",E,E,N,N],[6,"N445",E,E,N,N],[6,"U446",E,E,N,N],[6,"P446",E,E,N,N],[6,"N446",E,E,N,N],[6,"U447",E,E,N,N],[6,"P447",E,E,N,N],[6,"N447",E,E,N,N],[6,"U448",E,E,N,N],[6,"P448",E,E,N,N],[6,"N448",E,E,N,N],[6,"U449",E,E,N,N],[6,"P449",E,E,N,N],[6,"N449",E,E,N,N],[6,"U450",E,E,N,N],[6,"P450",E,E,N,N],[6,"N450",E,E,N,N],[6,"U451",E,E,N,N],[6,"P451",E,E,N,N],[6,"N451",E,E,N,N],[6,"U452",E,E,N,N],[6,"P452",E,E,N,N],[6,"N452",E,E,N,N],[6,"U453",E,E,N,N],[6,"P453",E,E,N,N],[6,"N453",E,E,N,N],[6,"U454",E,E,N,N],[6,"P454",E,E,N,N],[6,"N454",E,E,N,N],[6,"U455",E,E,N,N],[6,"P455",E,E,N,N],[6,"N455",E,E,N,N],[6,"U456",E,E,N,N],[6,"P456",E,E,N,N],[6,"N456",E,E,N,N],[6,"U457",E,E,N,N],[6,"P457",E,E,N,N],[6,"N457",E,E,N,N],[6,"U458",E,E,N,N],[6,"P458",E,E,N,N],[6,"N458",E,E,N,N],[6,"U459",E,E,N,N],[6,"P459",E,E,N,N],[6,"N459",E,E,N,N],[6,"U460",E,E,N,N],[6,"P460",E,E,N,N],[6,"N460",E,E,N,N],[6,"U461",E,E,N,N],[6,"P461",E,E,N,N],[6,"N461",E,E,N,N],[6,"U462",E,E,N,N],[6,"P462",E,E,N,N],[6,"N462",E,E,N,N],[6,"U463",E,E,N,N],[6,"P463",E,E,N,N],[6,"N463",E,E,N,N],[6,"U464",E,E,N,N],[6,"P464",E,E,N,N],[6,"N464",E,E,N,N],[6,"U465",E,E,N,N],[6,"P465",E,E,N,N],[6,"N465",E,E,N,N],[6,"U466",E,E,N,N],[6,"P466",E,E,N,N],[6,"N466",E,E,N,N],[6,"U467",E,E,N,N],[6,"P467",E,E,N,N],[6,"N467",E,E,N,N],[6,"U468",E,E,N,N],[6,"P468",E,E,N,N],[6,"N468",E,E,N,N],[6,"U469",E,E,N,N],[6,"P469",E,E,N,N],[6,"N469",E,E,N,N],[6,"U470",E,E,N,N],[6,"P470",E,E,N,N],[6,"N470",E,E,N,N],[6,"U471",E,E,N,N],[6,"P471",E,E,N,N],[6,"N471",E,E,N,N],[6,"U472",E,E,N,N],[6,"P472",E,E,N,N],[6,"N472",E,E,N,N],[6,"U473",E,E,N,N],[6,"P473",E,E,N,N],[6,"N473",E,E,N,N],[6,"U474",E,E,N,N],[6,"P474",E,E,N,N],[6,"N474",E,E,N,N],[6,"U475",E,E,N,N],[6,"P475",E,E,N,N],[6,"N475",E,E,N,N],[6,"U476",E,E,N,N],[6,"P476",E,E,N,N],[6,"N476",E,E,N,N],[6,"U477",E,E,N,N],[6,"P477",E,E,N,N],[6,"N477",E,E,N,N],[6,"U478",E,E,N,N],[6,"P478",E,E,N,N],[6,"N478",E,E,N,N],[6,"U479",E,E,N,N],[6,"P479",E,E,N,N],[6,"N479",E,E,N,N],[6,"U480",E,E,N,N],[6,"P480",E,E,N,N],[6,"N480",E,E,N,N],[6,"U481",E,E,N,N],[6,"P481",E,E,N,N],[6,"N481",E,E,N,N],[6,"U482",E,E,N,N],[6,"P482",E,E,N,N],[6,"N482",E,E,N,N],[6,"U483",E,E,N,N],[6,"P483",E,E,N,N],[6,"N483",E,E,N,N],[6,"U484",E,E,N,N],[6,"P484",E,E,N,N],[6,"N484",E,E,N,N],[6,"U485",E,E,N,N],[6,"P485",E,E,N,N],[6,"N485",E,E,N,N],[6,"U486",E,E,N,N],[6,"P486",E,E,N,N],[6,"N486",E,E,N,N],[6,"U487",E,E,N,N],[6,"P487",E,E,N,N],[6,"N487",E,E,N,N],[6,"U488",E,E,N,N],[6,"P488",E,E,N,N],[6,"N488",E,E,N,N],[6,"U489",E,E,N,N],[6,"P489",E,E,N,N],[6,"N489",E,E,N,N],[6,"U490",E,E,N,N],[6,"P490",E,E,N,N],[6,"N490",E,E,N,N],[6,"U491",E,E,N,N],[6,"P491",E,E,N,N],[6,"N491",E,E,N,N],[6,"U492",E,E,N,N],[6,"P492",E,E,N,N],[6,"N492",E,E,N,N],[6,"U493",E,E,N,N],[6,"P493",E,E,N,N],[6,"N493",E,E,N,N],[6,"U494",E,E,N,N],[6,"P494",E,E,N,N],[6,"N494",E,E,N,N],[6,"U495",E,E,N,N],[6,"P495",E,E,N,N],[6,"N495",E,E,N,N],[6,"U496",E,E,N,N],[6,"P496",E,E,N,N],[6,"N496",E,E,N,N],[6,"U497",E,E,N,N],[6,"P497",E,E,N,N],[6,"N497",E,E,N,N],[6,"U498",E,E,N,N],[6,"P498",E,E,N,N],[6,"N498",E,E,N,N],[6,"U499",E,E,N,N],[6,"P499",E,E,N,N],[6,"N499",E,E,N,N],[6,"U500",E,E,N,N],[6,"P500",E,E,N,N],[6,"N500",E,E,N,N],[6,"U501",E,E,N,N],[6,"P501",E,E,N,N],[6,"N501",E,E,N,N],[6,"U502",E,E,N,N],[6,"P502",E,E,N,N],[6,"N502",E,E,N,N],[6,"U503",E,E,N,N],[6,"P503",E,E,N,N],[6,"N503",E,E,N,N],[6,"U504",E,E,N,N],[6,"P504",E,E,N,N],[6,"N504",E,E,N,N],[6,"U505",E,E,N,N],[6,"P505",E,E,N,N],[6,"N505",E,E,N,N],[6,"U506",E,E,N,N],[6,"P506",E,E,N,N],[6,"N506",E,E,N,N],[6,"U507",E,E,N,N],[6,"P507",E,E,N,N],[6,"N507",E,E,N,N],[6,"U508",E,E,N,N],[6,"P508",E,E,N,N],[6,"N508",E,E,N,N],[6,"U509",E,E,N,N],[6,"P509",E,E,N,N],[6,"N509",E,E,N,N],[6,"U510",E,E,N,N],[6,"P510",E,E,N,N],[6,"N510",E,E,N,N],[6,"U511",E,E,N,N],[6,"P511",E,E,N,N],[6,"N511",E,E,N,N],[6,"U512",E,E,N,N],[6,"P512",E,E,N,N],[6,"N512",E,E,N,N],[6,"U513",E,E,N,N],[6,"P513",E,E,N,N],[6,"N513",E,E,N,N],[6,"U514",E,E,N,N],[6,"P514",E,E,N,N],[6,"N514",E,E,N,N],[6,"U515",E,E,N,N],[6,"P515",E,E,N,N],[6,"N515",E,E,N,N],[6,"U516",E,E,N,N],[6,"P516",E,E,N,N],[6,"N516",E,E,N,N],[6,"U517",E,E,N,N],[6,"P517",E,E,N,N],[6,"N517",E,E,N,N],[6,"U518",E,E,N,N],[6,"P518",E,E,N,N],[6,"N518",E,E,N,N],[6,"U519",E,E,N,N],[6,"P519",E,E,N,N],[6,"N519",E,E,N,N],[6,"U520",E,E,N,N],[6,"P520",E,E,N,N],[6,"N520",E,E,N,N],[6,"U521",E,E,N,N],[6,"P521",E,E,N,N],[6,"N521",E,E,N,N],[6,"U522",E,E,N,N],[6,"P522",E,E,N,N],[6,"N522",E,E,N,N],[6,"U523",E,E,N,N],[6,"P523",E,E,N,N],[6,"N523",E,E,N,N],[6,"U524",E,E,N,N],[6,"P524",E,E,N,N],[6,"N524",E,E,N,N],[6,"U525",E,E,N,N],[6,"P525",E,E,N,N],[6,"N525",E,E,N,N],[6,"U526",E,E,N,N],[6,"P526",E,E,N,N],[6,"N526",E,E,N,N],[6,"U527",E,E,N,N],[6,"P527",E,E,N,N],[6,"N527",E,E,N,N],[6,"U528",E,E,N,N],[6,"P528",E,E,N,N],[6,"N528",E,E,N,N],[6,"U529",E,E,N,N],[6,"P529",E,E,N,N],[6,"N529",E,E,N,N],[6,"U530",E,E,N,N],[6,"P530",E,E,N,N],[6,"N530",E,E,N,N],[6,"U531",E,E,N,N],[6,"P531",E,E,N,N],[6,"N531",E,E,N,N],[6,"U532",E,E,N,N],[6,"P532",E,E,N,N],[6,"N532",E,E,N,N],[6,"U533",E,E,N,N],[6,"P533",E,E,N,N],[6,"N533",E,E,N,N],[6,"U534",E,E,N,N],[6,"P534",E,E,N,N],[6,"N534",E,E,N,N],[6,"U535",E,E,N,N],[6,"P535",E,E,N,N],[6,"N535",E,E,N,N],[6,"U536",E,E,N,N],[6,"P536",E,E,N,N],[6,"N536",E,E,N,N],[6,"U537",E,E,N,N],[6,"P537",E,E,N,N],[6,"N537",E,E,N,N],[6,"U538",E,E,N,N],[6,"P538",E,E,N,N],[6,"N538",E,E,N,N],[6,"U539",E,E,N,N],[6,"P539",E,E,N,N],[6,"N539",E,E,N,N],[6,"U540",E,E,N,N],[6,"P540",E,E,N,N],[6,"N540",E,E,N,N],[6,"U541",E,E,N,N],[6,"P541",E,E,N,N],[6,"N541",E,E,N,N],[6,"U542",E,E,N,N],[6,"P542",E,E,N,N],[6,"N542",E,E,N,N],[6,"U543",E,E,N,N],[6,"P543",E,E,N,N],[6,"N543",E,E,N,N],[6,"U544",E,E,N,N],[6,"P544",E,E,N,N],[6,"N544",E,E,N,N],[6,"U545",E,E,N,N],[6,"P545",E,E,N,N],[6,"N545",E,E,N,N],[6,"U546",E,E,N,N],[6,"P546",E,E,N,N],[6,"N546",E,E,N,N],[6,"U547",E,E,N,N],[6,"P547",E,E,N,N],[6,"N547",E,E,N,N],[6,"U548",E,E,N,N],[6,"P548",E,E,N,N],[6,"N548",E,E,N,N],[6,"U549",E,E,N,N],[6,"P549",E,E,N,N],[6,"N549",E,E,N,N],[6,"U550",E,E,N,N],[6,"P550",E,E,N,N],[6,"N550",E,E,N,N],[6,"U551",E,E,N,N],[6,"P551",E,E,N,N],[6,"N551",E,E,N,N],[6,"U552",E,E,N,N],[6,"P552",E,E,N,N],[6,"N552",E,E,N,N],[6,"U553",E,E,N,N],[6,"P553",E,E,N,N],[6,"N553",E,E,N,N],[6,"U554",E,E,N,N],[6,"P554",E,E,N,N],[6,"N554",E,E,N,N],[6,"U555",E,E,N,N],[6,"P555",E,E,N,N],[6,"N555",E,E,N,N],[6,"U556",E,E,N,N],[6,"P556",E,E,N,N],[6,"N556",E,E,N,N],[6,"U557",E,E,N,N],[6,"P557",E,E,N,N],[6,"N557",E,E,N,N],[6,"U558",E,E,N,N],[6,"P558",E,E,N,N],[6,"N558",E,E,N,N],[6,"U559",E,E,N,N],[6,"P559",E,E,N,N],[6,"N559",E,E,N,N],[6,"U560",E,E,N,N],[6,"P560",E,E,N,N],[6,"N560",E,E,N,N],[6,"U561",E,E,N,N],[6,"P561",E,E,N,N],[6,"N561",E,E,N,N],[6,"U562",E,E,N,N],[6,"P562",E,E,N,N],[6,"N562",E,E,N,N],[6,"U563",E,E,N,N],[6,"P563",E,E,N,N],[6,"N563",E,E,N,N],[6,"U564",E,E,N,N],[6,"P564",E,E,N,N],[6,"N564",E,E,N,N],[6,"U565",E,E,N,N],[6,"P565",E,E,N,N],[6,"N565",E,E,N,N],[6,"U566",E,E,N,N],[6,"P566",E,E,N,N],[6,"N566",E,E,N,N],[6,"U567",E,E,N,N],[6,"P567",E,E,N,N],[6,"N567",E,E,N,N],[6,"U568",E,E,N,N],[6,"P568",E,E,N,N],[6,"N568",E,E,N,N],[6,"U569",E,E,N,N],[6,"P569",E,E,N,N],[6,"N569",E,E,N,N],[6,"U570",E,E,N,N],[6,"P570",E,E,N,N],[6,"N570",E,E,N,N],[6,"U571",E,E,N,N],[6,"P571",E,E,N,N],[6,"N571",E,E,N,N],[6,"U572",E,E,N,N],[6,"P572",E,E,N,N],[6,"N572",E,E,N,N],[6,"U573",E,E,N,N],[6,"P573",E,E,N,N],[6,"N573",E,E,N,N],[6,"U574",E,E,N,N],[6,"P574",E,E,N,N],[6,"N574",E,E,N,N],[6,"U575",E,E,N,N],[6,"P575",E,E,N,N],[6,"N575",E,E,N,N],[6,"U576",E,E,N,N],[6,"P576",E,E,N,N],[6,"N576",E,E,N,N],[6,"U577",E,E,N,N],[6,"P577",E,E,N,N],[6,"N577",E,E,N,N],[6,"U578",E,E,N,N],[6,"P578",E,E,N,N],[6,"N578",E,E,N,N],[6,"U579",E,E,N,N],[6,"P579",E,E,N,N],[6,"N579",E,E,N,N],[6,"U580",E,E,N,N],[6,"P580",E,E,N,N],[6,"N580",E,E,N,N],[6,"U581",E,E,N,N],[6,"P581",E,E,N,N],[6,"N581",E,E,N,N],[6,"U582",E,E,N,N],[6,"P582",E,E,N,N],[6,"N582",E,E,N,N],[6,"U583",E,E,N,N],[6,"P583",E,E,N,N],[6,"N583",E,E,N,N],[6,"U584",E,E,N,N],[6,"P584",E,E,N,N],[6,"N584",E,E,N,N],[6,"U585",E,E,N,N],[6,"P585",E,E,N,N],[6,"N585",E,E,N,N],[6,"U586",E,E,N,N],[6,"P586",E,E,N,N],[6,"N586",E,E,N,N],[6,"U587",E,E,N,N],[6,"P587",E,E,N,N],[6,"N587",E,E,N,N],[6,"U588",E,E,N,N],[6,"P588",E,E,N,N],[6,"N588",E,E,N,N],[6,"U589",E,E,N,N],[6,"P589",E,E,N,N],[6,"N589",E,E,N,N],[6,"U590",E,E,N,N],[6,"P590",E,E,N,N],[6,"N590",E,E,N,N],[6,"U591",E,E,N,N],[6,"P591",E,E,N,N],[6,"N591",E,E,N,N],[6,"U592",E,E,N,N],[6,"P592",E,E,N,N],[6,"N592",E,E,N,N],[6,"U593",E,E,N,N],[6,"P593",E,E,N,N],[6,"N593",E,E,N,N],[6,"U594",E,E,N,N],[6,"P594",E,E,N,N],[6,"N594",E,E,N,N],[6,"U595",E,E,N,N],[6,"P595",E,E,N,N],[6,"N595",E,E,N,N],[6,"U596",E,E,N,N],[6,"P596",E,E,N,N],[6,"N596",E,E,N,N],[6,"U597",E,E,N,N],[6,"P597",E,E,N,N],[6,"N597",E,E,N,N],[6,"U598",E,E,N,N],[6,"P598",E,E,N,N],[6,"N598",E,E,N,N],[6,"U599",E,E,N,N],[6,"P599",E,E,N,N],[6,"N599",E,E,N,N],[6,"U600",E,E,N,N],[6,"P600",E,E,N,N],[6,"N600",E,E,N,N],[6,"U601",E,E,N,N],[6,"P601",E,E,N,N],[6,"N601",E,E,N,N],[6,"U602",E,E,N,N],[6,"P602",E,E,N,N],[6,"N602",E,E,N,N],[6,"U603",E,E,N,N],[6,"P603",E,E,N,N],[6,"N603",E,E,N,N],[6,"U604",E,E,N,N],[6,"P604",E,E,N,N],[6,"N604",E,E,N,N],[6,"U605",E,E,N,N],[6,"P605",E,E,N,N],[6,"N605",E,E,N,N],[6,"U606",E,E,N,N],[6,"P606",E,E,N,N],[6,"N606",E,E,N,N],[6,"U607",E,E,N,N],[6,"P607",E,E,N,N],[6,"N607",E,E,N,N],[6,"U608",E,E,N,N],[6,"P608",E,E,N,N],[6,"N608",E,E,N,N],[6,"U609",E,E,N,N],[6,"P609",E,E,N,N],[6,"N609",E,E,N,N],[6,"U610",E,E,N,N],[6,"P610",E,E,N,N],[6,"N610",E,E,N,N],[6,"U611",E,E,N,N],[6,"P611",E,E,N,N],[6,"N611",E,E,N,N],[6,"U612",E,E,N,N],[6,"P612",E,E,N,N],[6,"N612",E,E,N,N],[6,"U613",E,E,N,N],[6,"P613",E,E,N,N],[6,"N613",E,E,N,N],[6,"U614",E,E,N,N],[6,"P614",E,E,N,N],[6,"N614",E,E,N,N],[6,"U615",E,E,N,N],[6,"P615",E,E,N,N],[6,"N615",E,E,N,N],[6,"U616",E,E,N,N],[6,"P616",E,E,N,N],[6,"N616",E,E,N,N],[6,"U617",E,E,N,N],[6,"P617",E,E,N,N],[6,"N617",E,E,N,N],[6,"U618",E,E,N,N],[6,"P618",E,E,N,N],[6,"N618",E,E,N,N],[6,"U619",E,E,N,N],[6,"P619",E,E,N,N],[6,"N619",E,E,N,N],[6,"U620",E,E,N,N],[6,"P620",E,E,N,N],[6,"N620",E,E,N,N],[6,"U621",E,E,N,N],[6,"P621",E,E,N,N],[6,"N621",E,E,N,N],[6,"U622",E,E,N,N],[6,"P622",E,E,N,N],[6,"N622",E,E,N,N],[6,"U623",E,E,N,N],[6,"P623",E,E,N,N],[6,"N623",E,E,N,N],[6,"U624",E,E,N,N],[6,"P624",E,E,N,N],[6,"N624",E,E,N,N],[6,"U625",E,E,N,N],[6,"P625",E,E,N,N],[6,"N625",E,E,N,N],[6,"U626",E,E,N,N],[6,"P626",E,E,N,N],[6,"N626",E,E,N,N],[6,"U627",E,E,N,N],[6,"P627",E,E,N,N],[6,"N627",E,E,N,N],[6,"U628",E,E,N,N],[6,"P628",E,E,N,N],[6,"N628",E,E,N,N],[6,"U629",E,E,N,N],[6,"P629",E,E,N,N],[6,"N629",E,E,N,N],[6,"U630",E,E,N,N],[6,"P630",E,E,N,N],[6,"N630",E,E,N,N],[6,"U631",E,E,N,N],[6,"P631",E,E,N,N],[6,"N631",E,E,N,N],[6,"U632",E,E,N,N],[6,"P632",E,E,N,N],[6,"N632",E,E,N,N],[6,"U633",E,E,N,N],[6,"P633",E,E,N,N],[6,"N633",E,E,N,N],[6,"U634",E,E,N,N],[6,"P634",E,E,N,N],[6,"N634",E,E,N,N],[6,"U635",E,E,N,N],[6,"P635",E,E,N,N],[6,"N635",E,E,N,N],[6,"U636",E,E,N,N],[6,"P636",E,E,N,N],[6,"N636",E,E,N,N],[6,"U637",E,E,N,N],[6,"P637",E,E,N,N],[6,"N637",E,E,N,N],[6,"U638",E,E,N,N],[6,"P638",E,E,N,N],[6,"N638",E,E,N,N],[6,"U639",E,E,N,N],[6,"P639",E,E,N,N],[6,"N639",E,E,N,N],[6,"U640",E,E,N,N],[6,"P640",E,E,N,N],[6,"N640",E,E,N,N],[6,"U641",E,E,N,N],[6,"P641",E,E,N,N],[6,"N641",E,E,N,N],[6,"U642",E,E,N,N],[6,"P642",E,E,N,N],[6,"N642",E,E,N,N],[6,"U643",E,E,N,N],[6,"P643",E,E,N,N],[6,"N643",E,E,N,N],[6,"U644",E,E,N,N],[6,"P644",E,E,N,N],[6,"N644",E,E,N,N],[6,"U645",E,E,N,N],[6,"P645",E,E,N,N],[6,"N645",E,E,N,N],[6,"U646",E,E,N,N],[6,"P646",E,E,N,N],[6,"N646",E,E,N,N],[6,"U647",E,E,N,N],[6,"P647",E,E,N,N],[6,"N647",E,E,N,N],[6,"U648",E,E,N,N],[6,"P648",E,E,N,N],[6,"N648",E,E,N,N],[6,"U649",E,E,N,N],[6,"P649",E,E,N,N],[6,"N649",E,E,N,N],[6,"U650",E,E,N,N],[6,"P650",E,E,N,N],[6,"N650",E,E,N,N],[6,"U651",E,E,N,N],[6,"P651",E,E,N,N],[6,"N651",E,E,N,N],[6,"U652",E,E,N,N],[6,"P652",E,E,N,N],[6,"N652",E,E,N,N],[6,"U653",E,E,N,N],[6,"P653",E,E,N,N],[6,"N653",E,E,N,N],[6,"U654",E,E,N,N],[6,"P654",E,E,N,N],[6,"N654",E,E,N,N],[6,"U655",E,E,N,N],[6,"P655",E,E,N,N],[6,"N655",E,E,N,N],[6,"U656",E,E,N,N],[6,"P656",E,E,N,N],[6,"N656",E,E,N,N],[6,"U657",E,E,N,N],[6,"P657",E,E,N,N],[6,"N657",E,E,N,N],[6,"U658",E,E,N,N],[6,"P658",E,E,N,N],[6,"N658",E,E,N,N],[6,"U659",E,E,N,N],[6,"P659",E,E,N,N],[6,"N659",E,E,N,N],[6,"U660",E,E,N,N],[6,"P660",E,E,N,N],[6,"N660",E,E,N,N],[6,"U661",E,E,N,N],[6,"P661",E,E,N,N],[6,"N661",E,E,N,N],[6,"U662",E,E,N,N],[6,"P662",E,E,N,N],[6,"N662",E,E,N,N],[6,"U663",E,E,N,N],[6,"P663",E,E,N,N],[6,"N663",E,E,N,N],[6,"U664",E,E,N,N],[6,"P664",E,E,N,N],[6,"N664",E,E,N,N],[6,"U665",E,E,N,N],[6,"P665",E,E,N,N],[6,"N665",E,E,N,N],[6,"U666",E,E,N,N],[6,"P666",E,E,N,N],[6,"N666",E,E,N,N],[6,"U667",E,E,N,N],[6,"P667",E,E,N,N],[6,"N667",E,E,N,N],[6,"U668",E,E,N,N],[6,"P668",E,E,N,N],[6,"N668",E,E,N,N],[6,"U669",E,E,N,N],[6,"P669",E,E,N,N],[6,"N669",E,E,N,N],[6,"U670",E,E,N,N],[6,"P670",E,E,N,N],[6,"N670",E,E,N,N],[6,"U671",E,E,N,N],[6,"P671",E,E,N,N],[6,"N671",E,E,N,N],[6,"U672",E,E,N,N],[6,"P672",E,E,N,N],[6,"N672",E,E,N,N],[6,"U673",E,E,N,N],[6,"P673",E,E,N,N],[6,"N673",E,E,N,N],[6,"U674",E,E,N,N],[6,"P674",E,E,N,N],[6,"N674",E,E,N,N],[6,"U675",E,E,N,N],[6,"P675",E,E,N,N],[6,"N675",E,E,N,N],[6,"U676",E,E,N,N],[6,"P676",E,E,N,N],[6,"N676",E,E,N,N],[6,"U677",E,E,N,N],[6,"P677",E,E,N,N],[6,"N677",E,E,N,N],[6,"U678",E,E,N,N],[6,"P678",E,E,N,N],[6,"N678",E,E,N,N],[6,"U679",E,E,N,N],[6,"P679",E,E,N,N],[6,"N679",E,E,N,N],[6,"U680",E,E,N,N],[6,"P680",E,E,N,N],[6,"N680",E,E,N,N],[6,"U681",E,E,N,N],[6,"P681",E,E,N,N],[6,"N681",E,E,N,N],[6,"U682",E,E,N,N],[6,"P682",E,E,N,N],[6,"N682",E,E,N,N],[6,"U683",E,E,N,N],[6,"P683",E,E,N,N],[6,"N683",E,E,N,N],[6,"U684",E,E,N,N],[6,"P684",E,E,N,N],[6,"N684",E,E,N,N],[6,"U685",E,E,N,N],[6,"P685",E,E,N,N],[6,"N685",E,E,N,N],[6,"U686",E,E,N,N],[6,"P686",E,E,N,N],[6,"N686",E,E,N,N],[6,"U687",E,E,N,N],[6,"P687",E,E,N,N],[6,"N687",E,E,N,N],[6,"U688",E,E,N,N],[6,"P688",E,E,N,N],[6,"N688",E,E,N,N],[6,"U689",E,E,N,N],[6,"P689",E,E,N,N],[6,"N689",E,E,N,N],[6,"U690",E,E,N,N],[6,"P690",E,E,N,N],[6,"N690",E,E,N,N],[6,"U691",E,E,N,N],[6,"P691",E,E,N,N],[6,"N691",E,E,N,N],[6,"U692",E,E,N,N],[6,"P692",E,E,N,N],[6,"N692",E,E,N,N],[6,"U693",E,E,N,N],[6,"P693",E,E,N,N],[6,"N693",E,E,N,N],[6,"U694",E,E,N,N],[6,"P694",E,E,N,N],[6,"N694",E,E,N,N],[6,"U695",E,E,N,N],[6,"P695",E,E,N,N],[6,"N695",E,E,N,N],[6,"U696",E,E,N,N],[6,"P696",E,E,N,N],[6,"N696",E,E,N,N],[6,"U697",E,E,N,N],[6,"P697",E,E,N,N],[6,"N697",E,E,N,N],[6,"U698",E,E,N,N],[6,"P698",E,E,N,N],[6,"N698",E,E,N,N],[6,"U699",E,E,N,N],[6,"P699",E,E,N,N],[6,"N699",E,E,N,N],[6,"U700",E,E,N,N],[6,"P700",E,E,N,N],[6,"N700",E,E,N,N],[6,"U701",E,E,N,N],[6,"P701",E,E,N,N],[6,"N701",E,E,N,N],[6,"U702",E,E,N,N],[6,"P702",E,E,N,N],[6,"N702",E,E,N,N],[6,"U703",E,E,N,N],[6,"P703",E,E,N,N],[6,"N703",E,E,N,N],[6,"U704",E,E,N,N],[6,"P704",E,E,N,N],[6,"N704",E,E,N,N],[6,"U705",E,E,N,N],[6,"P705",E,E,N,N],[6,"N705",E,E,N,N],[6,"U706",E,E,N,N],[6,"P706",E,E,N,N],[6,"N706",E,E,N,N],[6,"U707",E,E,N,N],[6,"P707",E,E,N,N],[6,"N707",E,E,N,N],[6,"U708",E,E,N,N],[6,"P708",E,E,N,N],[6,"N708",E,E,N,N],[6,"U709",E,E,N,N],[6,"P709",E,E,N,N],[6,"N709",E,E,N,N],[6,"U710",E,E,N,N],[6,"P710",E,E,N,N],[6,"N710",E,E,N,N],[6,"U711",E,E,N,N],[6,"P711",E,E,N,N],[6,"N711",E,E,N,N],[6,"U712",E,E,N,N],[6,"P712",E,E,N,N],[6,"N712",E,E,N,N],[6,"U713",E,E,N,N],[6,"P713",E,E,N,N],[6,"N713",E,E,N,N],[6,"U714",E,E,N,N],[6,"P714",E,E,N,N],[6,"N714",E,E,N,N],[6,"U715",E,E,N,N],[6,"P715",E,E,N,N],[6,"N715",E,E,N,N],[6,"U716",E,E,N,N],[6,"P716",E,E,N,N],[6,"N716",E,E,N,N],[6,"U717",E,E,N,N],[6,"P717",E,E,N,N],[6,"N717",E,E,N,N],[6,"U718",E,E,N,N],[6,"P718",E,E,N,N],[6,"N718",E,E,N,N],[6,"U719",E,E,N,N],[6,"P719",E,E,N,N],[6,"N719",E,E,N,N],[6,"U720",E,E,N,N],[6,"P720",E,E,N,N],[6,"N720",E,E,N,N],[6,"U721",E,E,N,N],[6,"P721",E,E,N,N],[6,"N721",E,E,N,N],[6,"U722",E,E,N,N],[6,"P722",E,E,N,N],[6,"N722",E,E,N,N],[6,"U723",E,E,N,N],[6,"P723",E,E,N,N],[6,"N723",E,E,N,N],[6,"U724",E,E,N,N],[6,"P724",E,E,N,N],[6,"N724",E,E,N,N],[6,"U725",E,E,N,N],[6,"P725",E,E,N,N],[6,"N725",E,E,N,N],[6,"U726",E,E,N,N],[6,"P726",E,E,N,N],[6,"N726",E,E,N,N],[6,"U727",E,E,N,N],[6,"P727",E,E,N,N],[6,"N727",E,E,N,N],[6,"U728",E,E,N,N],[6,"P728",E,E,N,N],[6,"N728",E,E,N,N],[6,"U729",E,E,N,N],[6,"P729",E,E,N,N],[6,"N729",E,E,N,N],[6,"U730",E,E,N,N],[6,"P730",E,E,N,N],[6,"N730",E,E,N,N],[6,"U731",E,E,N,N],[6,"P731",E,E,N,N],[6,"N731",E,E,N,N],[6,"U732",E,E,N,N],[6,"P732",E,E,N,N],[6,"N732",E,E,N,N],[6,"U733",E,E,N,N],[6,"P733",E,E,N,N],[6,"N733",E,E,N,N],[6,"U734",E,E,N,N],[6,"P734",E,E,N,N],[6,"N734",E,E,N,N],[6,"U735",E,E,N,N],[6,"P735",E,E,N,N],[6,"N735",E,E,N,N],[6,"U736",E,E,N,N],[6,"P736",E,E,N,N],[6,"N736",E,E,N,N],[6,"U737",E,E,N,N],[6,"P737",E,E,N,N],[6,"N737",E,E,N,N],[6,"U738",E,E,N,N],[6,"P738",E,E,N,N],[6,"N738",E,E,N,N],[6,"U739",E,E,N,N],[6,"P739",E,E,N,N],[6,"N739",E,E,N,N],[6,"U740",E,E,N,N],[6,"P740",E,E,N,N],[6,"N740",E,E,N,N],[6,"U741",E,E,N,N],[6,"P741",E,E,N,N],[6,"N741",E,E,N,N],[6,"U742",E,E,N,N],[6,"P742",E,E,N,N],[6,"N742",E,E,N,N],[6,"U743",E,E,N,N],[6,"P743",E,E,N,N],[6,"N743",E,E,N,N],[6,"U744",E,E,N,N],[6,"P744",E,E,N,N],[6,"N744",E,E,N,N],[6,"U745",E,E,N,N],[6,"P745",E,E,N,N],[6,"N745",E,E,N,N],[6,"U746",E,E,N,N],[6,"P746",E,E,N,N],[6,"N746",E,E,N,N],[6,"U747",E,E,N,N],[6,"P747",E,E,N,N],[6,"N747",E,E,N,N],[6,"U748",E,E,N,N],[6,"P748",E,E,N,N],[6,"N748",E,E,N,N],[6,"U749",E,E,N,N],[6,"P749",E,E,N,N],[6,"N749",E,E,N,N],[6,"U750",E,E,N,N],[6,"P750",E,E,N,N],[6,"N750",E,E,N,N],[6,"U751",E,E,N,N],[6,"P751",E,E,N,N],[6,"N751",E,E,N,N],[6,"U752",E,E,N,N],[6,"P752",E,E,N,N],[6,"N752",E,E,N,N],[6,"U753",E,E,N,N],[6,"P753",E,E,N,N],[6,"N753",E,E,N,N],[6,"U754",E,E,N,N],[6,"P754",E,E,N,N],[6,"N754",E,E,N,N],[6,"U755",E,E,N,N],[6,"P755",E,E,N,N],[6,"N755",E,E,N,N],[6,"U756",E,E,N,N],[6,"P756",E,E,N,N],[6,"N756",E,E,N,N],[6,"U757",E,E,N,N],[6,"P757",E,E,N,N],[6,"N757",E,E,N,N],[6,"U758",E,E,N,N],[6,"P758",E,E,N,N],[6,"N758",E,E,N,N],[6,"U759",E,E,N,N],[6,"P759",E,E,N,N],[6,"N759",E,E,N,N],[6,"U760",E,E,N,N],[6,"P760",E,E,N,N],[6,"N760",E,E,N,N],[6,"U761",E,E,N,N],[6,"P761",E,E,N,N],[6,"N761",E,E,N,N],[6,"U762",E,E,N,N],[6,"P762",E,E,N,N],[6,"N762",E,E,N,N],[6,"U763",E,E,N,N],[6,"P763",E,E,N,N],[6,"N763",E,E,N,N],[6,"U764",E,E,N,N],[6,"P764",E,E,N,N],[6,"N764",E,E,N,N],[6,"U765",E,E,N,N],[6,"P765",E,E,N,N],[6,"N765",E,E,N,N],[6,"U766",E,E,N,N],[6,"P766",E,E,N,N],[6,"N766",E,E,N,N],[6,"U767",E,E,N,N],[6,"P767",E,E,N,N],[6,"N767",E,E,N,N],[6,"U768",E,E,N,N],[6,"P768",E,E,N,N],[6,"N768",E,E,N,N],[6,"U769",E,E,N,N],[6,"P769",E,E,N,N],[6,"N769",E,E,N,N],[6,"U770",E,E,N,N],[6,"P770",E,E,N,N],[6,"N770",E,E,N,N],[6,"U771",E,E,N,N],[6,"P771",E,E,N,N],[6,"N771",E,E,N,N],[6,"U772",E,E,N,N],[6,"P772",E,E,N,N],[6,"N772",E,E,N,N],[6,"U773",E,E,N,N],[6,"P773",E,E,N,N],[6,"N773",E,E,N,N],[6,"U774",E,E,N,N],[6,"P774",E,E,N,N],[6,"N774",E,E,N,N],[6,"U775",E,E,N,N],[6,"P775",E,E,N,N],[6,"N775",E,E,N,N],[6,"U776",E,E,N,N],[6,"P776",E,E,N,N],[6,"N776",E,E,N,N],[6,"U777",E,E,N,N],[6,"P777",E,E,N,N],[6,"N777",E,E,N,N],[6,"U778",E,E,N,N],[6,"P778",E,E,N,N],[6,"N778",E,E,N,N],[6,"U779",E,E,N,N],[6,"P779",E,E,N,N],[6,"N779",E,E,N,N],[6,"U780",E,E,N,N],[6,"P780",E,E,N,N],[6,"N780",E,E,N,N],[6,"U781",E,E,N,N],[6,"P781",E,E,N,N],[6,"N781",E,E,N,N],[6,"U782",E,E,N,N],[6,"P782",E,E,N,N],[6,"N782",E,E,N,N],[6,"U783",E,E,N,N],[6,"P783",E,E,N,N],[6,"N783",E,E,N,N],[6,"U784",E,E,N,N],[6,"P784",E,E,N,N],[6,"N784",E,E,N,N],[6,"U785",E,E,N,N],[6,"P785",E,E,N,N],[6,"N785",E,E,N,N],[6,"U786",E,E,N,N],[6,"P786",E,E,N,N],[6,"N786",E,E,N,N],[6,"U787",E,E,N,N],[6,"P787",E,E,N,N],[6,"N787",E,E,N,N],[6,"U788",E,E,N,N],[6,"P788",E,E,N,N],[6,"N788",E,E,N,N],[6,"U789",E,E,N,N],[6,"P789",E,E,N,N],[6,"N789",E,E,N,N],[6,"U790",E,E,N,N],[6,"P790",E,E,N,N],[6,"N790",E,E,N,N],[6,"U791",E,E,N,N],[6,"P791",E,E,N,N],[6,"N791",E,E,N,N],[6,"U792",E,E,N,N],[6,"P792",E,E,N,N],[6,"N792",E,E,N,N],[6,"U793",E,E,N,N],[6,"P793",E,E,N,N],[6,"N793",E,E,N,N],[6,"U794",E,E,N,N],[6,"P794",E,E,N,N],[6,"N794",E,E,N,N],[6,"U795",E,E,N,N],[6,"P795",E,E,N,N],[6,"N795",E,E,N,N],[6,"U796",E,E,N,N],[6,"P796",E,E,N,N],[6,"N796",E,E,N,N],[6,"U797",E,E,N,N],[6,"P797",E,E,N,N],[6,"N797",E,E,N,N],[6,"U798",E,E,N,N],[6,"P798",E,E,N,N],[6,"N798",E,E,N,N],[6,"U799",E,E,N,N],[6,"P799",E,E,N,N],[6,"N799",E,E,N,N],[6,"U800",E,E,N,N],[6,"P800",E,E,N,N],[6,"N800",E,E,N,N],[6,"U801",E,E,N,N],[6,"P801",E,E,N,N],[6,"N801",E,E,N,N],[6,"U802",E,E,N,N],[6,"P802",E,E,N,N],[6,"N802",E,E,N,N],[6,"U803",E,E,N,N],[6,"P803",E,E,N,N],[6,"N803",E,E,N,N],[6,"U804",E,E,N,N],[6,"P804",E,E,N,N],[6,"N804",E,E,N,N],[6,"U805",E,E,N,N],[6,"P805",E,E,N,N],[6,"N805",E,E,N,N],[6,"U806",E,E,N,N],[6,"P806",E,E,N,N],[6,"N806",E,E,N,N],[6,"U807",E,E,N,N],[6,"P807",E,E,N,N],[6,"N807",E,E,N,N],[6,"U808",E,E,N,N],[6,"P808",E,E,N,N],[6,"N808",E,E,N,N],[6,"U809",E,E,N,N],[6,"P809",E,E,N,N],[6,"N809",E,E,N,N],[6,"U810",E,E,N,N],[6,"P810",E,E,N,N],[6,"N810",E,E,N,N],[6,"U811",E,E,N,N],[6,"P811",E,E,N,N],[6,"N811",E,E,N,N],[6,"U812",E,E,N,N],[6,"P812",E,E,N,N],[6,"N812",E,E,N,N],[6,"U813",E,E,N,N],[6,"P813",E,E,N,N],[6,"N813",E,E,N,N],[6,"U814",E,E,N,N],[6,"P814",E,E,N,N],[6,"N814",E,E,N,N],[6,"U815",E,E,N,N],[6,"P815",E,E,N,N],[6,"N815",E,E,N,N],[6,"U816",E,E,N,N],[6,"P816",E,E,N,N],[6,"N816",E,E,N,N],[6,"U817",E,E,N,N],[6,"P817",E,E,N,N],[6,"N817",E,E,N,N],[6,"U818",E,E,N,N],[6,"P818",E,E,N,N],[6,"N818",E,E,N,N],[6,"U819",E,E,N,N],[6,"P819",E,E,N,N],[6,"N819",E,E,N,N],[6,"U820",E,E,N,N],[6,"P820",E,E,N,N],[6,"N820",E,E,N,N],[6,"U821",E,E,N,N],[6,"P821",E,E,N,N],[6,"N821",E,E,N,N],[6,"U822",E,E,N,N],[6,"P822",E,E,N,N],[6,"N822",E,E,N,N],[6,"U823",E,E,N,N],[6,"P823",E,E,N,N],[6,"N823",E,E,N,N],[6,"U824",E,E,N,N],[6,"P824",E,E,N,N],[6,"N824",E,E,N,N],[6,"U825",E,E,N,N],[6,"P825",E,E,N,N],[6,"N825",E,E,N,N],[6,"U826",E,E,N,N],[6,"P826",E,E,N,N],[6,"N826",E,E,N,N],[6,"U827",E,E,N,N],[6,"P827",E,E,N,N],[6,"N827",E,E,N,N],[6,"U828",E,E,N,N],[6,"P828",E,E,N,N],[6,"N828",E,E,N,N],[6,"U829",E,E,N,N],[6,"P829",E,E,N,N],[6,"N829",E,E,N,N],[6,"U830",E,E,N,N],[6,"P830",E,E,N,N],[6,"N830",E,E,N,N],[6,"U831",E,E,N,N],[6,"P831",E,E,N,N],[6,"N831",E,E,N,N],[6,"U832",E,E,N,N],[6,"P832",E,E,N,N],[6,"N832",E,E,N,N],[6,"U833",E,E,N,N],[6,"P833",E,E,N,N],[6,"N833",E,E,N,N],[6,"U834",E,E,N,N],[6,"P834",E,E,N,N],[6,"N834",E,E,N,N],[6,"U835",E,E,N,N],[6,"P835",E,E,N,N],[6,"N835",E,E,N,N],[6,"U836",E,E,N,N],[6,"P836",E,E,N,N],[6,"N836",E,E,N,N],[6,"U837",E,E,N,N],[6,"P837",E,E,N,N],[6,"N837",E,E,N,N],[6,"U838",E,E,N,N],[6,"P838",E,E,N,N],[6,"N838",E,E,N,N],[6,"U839",E,E,N,N],[6,"P839",E,E,N,N],[6,"N839",E,E,N,N],[6,"U840",E,E,N,N],[6,"P840",E,E,N,N],[6,"N840",E,E,N,N],[6,"U841",E,E,N,N],[6,"P841",E,E,N,N],[6,"N841",E,E,N,N],[6,"U842",E,E,N,N],[6,"P842",E,E,N,N],[6,"N842",E,E,N,N],[6,"U843",E,E,N,N],[6,"P843",E,E,N,N],[6,"N843",E,E,N,N],[6,"U844",E,E,N,N],[6,"P844",E,E,N,N],[6,"N844",E,E,N,N],[6,"U845",E,E,N,N],[6,"P845",E,E,N,N],[6,"N845",E,E,N,N],[6,"U846",E,E,N,N],[6,"P846",E,E,N,N],[6,"N846",E,E,N,N],[6,"U847",E,E,N,N],[6,"P847",E,E,N,N],[6,"N847",E,E,N,N],[6,"U848",E,E,N,N],[6,"P848",E,E,N,N],[6,"N848",E,E,N,N],[6,"U849",E,E,N,N],[6,"P849",E,E,N,N],[6,"N849",E,E,N,N],[6,"U850",E,E,N,N],[6,"P850",E,E,N,N],[6,"N850",E,E,N,N],[6,"U851",E,E,N,N],[6,"P851",E,E,N,N],[6,"N851",E,E,N,N],[6,"U852",E,E,N,N],[6,"P852",E,E,N,N],[6,"N852",E,E,N,N],[6,"U853",E,E,N,N],[6,"P853",E,E,N,N],[6,"N853",E,E,N,N],[6,"U854",E,E,N,N],[6,"P854",E,E,N,N],[6,"N854",E,E,N,N],[6,"U855",E,E,N,N],[6,"P855",E,E,N,N],[6,"N855",E,E,N,N],[6,"U856",E,E,N,N],[6,"P856",E,E,N,N],[6,"N856",E,E,N,N],[6,"U857",E,E,N,N],[6,"P857",E,E,N,N],[6,"N857",E,E,N,N],[6,"U858",E,E,N,N],[6,"P858",E,E,N,N],[6,"N858",E,E,N,N],[6,"U859",E,E,N,N],[6,"P859",E,E,N,N],[6,"N859",E,E,N,N],[6,"U860",E,E,N,N],[6,"P860",E,E,N,N],[6,"N860",E,E,N,N],[6,"U861",E,E,N,N],[6,"P861",E,E,N,N],[6,"N861",E,E,N,N],[6,"U862",E,E,N,N],[6,"P862",E,E,N,N],[6,"N862",E,E,N,N],[6,"U863",E,E,N,N],[6,"P863",E,E,N,N],[6,"N863",E,E,N,N],[6,"U864",E,E,N,N],[6,"P864",E,E,N,N],[6,"N864",E,E,N,N],[6,"U865",E,E,N,N],[6,"P865",E,E,N,N],[6,"N865",E,E,N,N],[6,"U866",E,E,N,N],[6,"P866",E,E,N,N],[6,"N866",E,E,N,N],[6,"U867",E,E,N,N],[6,"P867",E,E,N,N],[6,"N867",E,E,N,N],[6,"U868",E,E,N,N],[6,"P868",E,E,N,N],[6,"N868",E,E,N,N],[6,"U869",E,E,N,N],[6,"P869",E,E,N,N],[6,"N869",E,E,N,N],[6,"U870",E,E,N,N],[6,"P870",E,E,N,N],[6,"N870",E,E,N,N],[6,"U871",E,E,N,N],[6,"P871",E,E,N,N],[6,"N871",E,E,N,N],[6,"U872",E,E,N,N],[6,"P872",E,E,N,N],[6,"N872",E,E,N,N],[6,"U873",E,E,N,N],[6,"P873",E,E,N,N],[6,"N873",E,E,N,N],[6,"U874",E,E,N,N],[6,"P874",E,E,N,N],[6,"N874",E,E,N,N],[6,"U875",E,E,N,N],[6,"P875",E,E,N,N],[6,"N875",E,E,N,N],[6,"U876",E,E,N,N],[6,"P876",E,E,N,N],[6,"N876",E,E,N,N],[6,"U877",E,E,N,N],[6,"P877",E,E,N,N],[6,"N877",E,E,N,N],[6,"U878",E,E,N,N],[6,"P878",E,E,N,N],[6,"N878",E,E,N,N],[6,"U879",E,E,N,N],[6,"P879",E,E,N,N],[6,"N879",E,E,N,N],[6,"U880",E,E,N,N],[6,"P880",E,E,N,N],[6,"N880",E,E,N,N],[6,"U881",E,E,N,N],[6,"P881",E,E,N,N],[6,"N881",E,E,N,N],[6,"U882",E,E,N,N],[6,"P882",E,E,N,N],[6,"N882",E,E,N,N],[6,"U883",E,E,N,N],[6,"P883",E,E,N,N],[6,"N883",E,E,N,N],[6,"U884",E,E,N,N],[6,"P884",E,E,N,N],[6,"N884",E,E,N,N],[6,"U885",E,E,N,N],[6,"P885",E,E,N,N],[6,"N885",E,E,N,N],[6,"U886",E,E,N,N],[6,"P886",E,E,N,N],[6,"N886",E,E,N,N],[6,"U887",E,E,N,N],[6,"P887",E,E,N,N],[6,"N887",E,E,N,N],[6,"U888",E,E,N,N],[6,"P888",E,E,N,N],[6,"N888",E,E,N,N],[6,"U889",E,E,N,N],[6,"P889",E,E,N,N],[6,"N889",E,E,N,N],[6,"U890",E,E,N,N],[6,"P890",E,E,N,N],[6,"N890",E,E,N,N],[6,"U891",E,E,N,N],[6,"P891",E,E,N,N],[6,"N891",E,E,N,N],[6,"U892",E,E,N,N],[6,"P892",E,E,N,N],[6,"N892",E,E,N,N],[6,"U893",E,E,N,N],[6,"P893",E,E,N,N],[6,"N893",E,E,N,N],[6,"U894",E,E,N,N],[6,"P894",E,E,N,N],[6,"N894",E,E,N,N],[6,"U895",E,E,N,N],[6,"P895",E,E,N,N],[6,"N895",E,E,N,N],[6,"U896",E,E,N,N],[6,"P896",E,E,N,N],[6,"N896",E,E,N,N],[6,"U897",E,E,N,N],[6,"P897",E,E,N,N],[6,"N897",E,E,N,N],[6,"U898",E,E,N,N],[6,"P898",E,E,N,N],[6,"N898",E,E,N,N],[6,"U899",E,E,N,N],[6,"P899",E,E,N,N],[6,"N899",E,E,N,N],[6,"U900",E,E,N,N],[6,"P900",E,E,N,N],[6,"N900",E,E,N,N],[6,"U901",E,E,N,N],[6,"P901",E,E,N,N],[6,"N901",E,E,N,N],[6,"U902",E,E,N,N],[6,"P902",E,E,N,N],[6,"N902",E,E,N,N],[6,"U903",E,E,N,N],[6,"P903",E,E,N,N],[6,"N903",E,E,N,N],[6,"U904",E,E,N,N],[6,"P904",E,E,N,N],[6,"N904",E,E,N,N],[6,"U905",E,E,N,N],[6,"P905",E,E,N,N],[6,"N905",E,E,N,N],[6,"U906",E,E,N,N],[6,"P906",E,E,N,N],[6,"N906",E,E,N,N],[6,"U907",E,E,N,N],[6,"P907",E,E,N,N],[6,"N907",E,E,N,N],[6,"U908",E,E,N,N],[6,"P908",E,E,N,N],[6,"N908",E,E,N,N],[6,"U909",E,E,N,N],[6,"P909",E,E,N,N],[6,"N909",E,E,N,N],[6,"U910",E,E,N,N],[6,"P910",E,E,N,N],[6,"N910",E,E,N,N],[6,"U911",E,E,N,N],[6,"P911",E,E,N,N],[6,"N911",E,E,N,N],[6,"U912",E,E,N,N],[6,"P912",E,E,N,N],[6,"N912",E,E,N,N],[6,"U913",E,E,N,N],[6,"P913",E,E,N,N],[6,"N913",E,E,N,N],[6,"U914",E,E,N,N],[6,"P914",E,E,N,N],[6,"N914",E,E,N,N],[6,"U915",E,E,N,N],[6,"P915",E,E,N,N],[6,"N915",E,E,N,N],[6,"U916",E,E,N,N],[6,"P916",E,E,N,N],[6,"N916",E,E,N,N],[6,"U917",E,E,N,N],[6,"P917",E,E,N,N],[6,"N917",E,E,N,N],[6,"U918",E,E,N,N],[6,"P918",E,E,N,N],[6,"N918",E,E,N,N],[6,"U919",E,E,N,N],[6,"P919",E,E,N,N],[6,"N919",E,E,N,N],[6,"U920",E,E,N,N],[6,"P920",E,E,N,N],[6,"N920",E,E,N,N],[6,"U921",E,E,N,N],[6,"P921",E,E,N,N],[6,"N921",E,E,N,N],[6,"U922",E,E,N,N],[6,"P922",E,E,N,N],[6,"N922",E,E,N,N],[6,"U923",E,E,N,N],[6,"P923",E,E,N,N],[6,"N923",E,E,N,N],[6,"U924",E,E,N,N],[6,"P924",E,E,N,N],[6,"N924",E,E,N,N],[6,"U925",E,E,N,N],[6,"P925",E,E,N,N],[6,"N925",E,E,N,N],[6,"U926",E,E,N,N],[6,"P926",E,E,N,N],[6,"N926",E,E,N,N],[6,"U927",E,E,N,N],[6,"P927",E,E,N,N],[6,"N927",E,E,N,N],[6,"U928",E,E,N,N],[6,"P928",E,E,N,N],[6,"N928",E,E,N,N],[6,"U929",E,E,N,N],[6,"P929",E,E,N,N],[6,"N929",E,E,N,N],[6,"U930",E,E,N,N],[6,"P930",E,E,N,N],[6,"N930",E,E,N,N],[6,"U931",E,E,N,N],[6,"P931",E,E,N,N],[6,"N931",E,E,N,N],[6,"U932",E,E,N,N],[6,"P932",E,E,N,N],[6,"N932",E,E,N,N],[6,"U933",E,E,N,N],[6,"P933",E,E,N,N],[6,"N933",E,E,N,N],[6,"U934",E,E,N,N],[6,"P934",E,E,N,N],[6,"N934",E,E,N,N],[6,"U935",E,E,N,N],[6,"P935",E,E,N,N],[6,"N935",E,E,N,N],[6,"U936",E,E,N,N],[6,"P936",E,E,N,N],[6,"N936",E,E,N,N],[6,"U937",E,E,N,N],[6,"P937",E,E,N,N],[6,"N937",E,E,N,N],[6,"U938",E,E,N,N],[6,"P938",E,E,N,N],[6,"N938",E,E,N,N],[6,"U939",E,E,N,N],[6,"P939",E,E,N,N],[6,"N939",E,E,N,N],[6,"U940",E,E,N,N],[6,"P940",E,E,N,N],[6,"N940",E,E,N,N],[6,"U941",E,E,N,N],[6,"P941",E,E,N,N],[6,"N941",E,E,N,N],[6,"U942",E,E,N,N],[6,"P942",E,E,N,N],[6,"N942",E,E,N,N],[6,"U943",E,E,N,N],[6,"P943",E,E,N,N],[6,"N943",E,E,N,N],[6,"U944",E,E,N,N],[6,"P944",E,E,N,N],[6,"N944",E,E,N,N],[6,"U945",E,E,N,N],[6,"P945",E,E,N,N],[6,"N945",E,E,N,N],[6,"U946",E,E,N,N],[6,"P946",E,E,N,N],[6,"N946",E,E,N,N],[6,"U947",E,E,N,N],[6,"P947",E,E,N,N],[6,"N947",E,E,N,N],[6,"U948",E,E,N,N],[6,"P948",E,E,N,N],[6,"N948",E,E,N,N],[6,"U949",E,E,N,N],[6,"P949",E,E,N,N],[6,"N949",E,E,N,N],[6,"U950",E,E,N,N],[6,"P950",E,E,N,N],[6,"N950",E,E,N,N],[6,"U951",E,E,N,N],[6,"P951",E,E,N,N],[6,"N951",E,E,N,N],[6,"U952",E,E,N,N],[6,"P952",E,E,N,N],[6,"N952",E,E,N,N],[6,"U953",E,E,N,N],[6,"P953",E,E,N,N],[6,"N953",E,E,N,N],[6,"U954",E,E,N,N],[6,"P954",E,E,N,N],[6,"N954",E,E,N,N],[6,"U955",E,E,N,N],[6,"P955",E,E,N,N],[6,"N955",E,E,N,N],[6,"U956",E,E,N,N],[6,"P956",E,E,N,N],[6,"N956",E,E,N,N],[6,"U957",E,E,N,N],[6,"P957",E,E,N,N],[6,"N957",E,E,N,N],[6,"U958",E,E,N,N],[6,"P958",E,E,N,N],[6,"N958",E,E,N,N],[6,"U959",E,E,N,N],[6,"P959",E,E,N,N],[6,"N959",E,E,N,N],[6,"U960",E,E,N,N],[6,"P960",E,E,N,N],[6,"N960",E,E,N,N],[6,"U961",E,E,N,N],[6,"P961",E,E,N,N],[6,"N961",E,E,N,N],[6,"U962",E,E,N,N],[6,"P962",E,E,N,N],[6,"N962",E,E,N,N],[6,"U963",E,E,N,N],[6,"P963",E,E,N,N],[6,"N963",E,E,N,N],[6,"U964",E,E,N,N],[6,"P964",E,E,N,N],[6,"N964",E,E,N,N],[6,"U965",E,E,N,N],[6,"P965",E,E,N,N],[6,"N965",E,E,N,N],[6,"U966",E,E,N,N],[6,"P966",E,E,N,N],[6,"N966",E,E,N,N],[6,"U967",E,E,N,N],[6,"P967",E,E,N,N],[6,"N967",E,E,N,N],[6,"U968",E,E,N,N],[6,"P968",E,E,N,N],[6,"N968",E,E,N,N],[6,"U969",E,E,N,N],[6,"P969",E,E,N,N],[6,"N969",E,E,N,N],[6,"U970",E,E,N,N],[6,"P970",E,E,N,N],[6,"N970",E,E,N,N],[6,"U971",E,E,N,N],[6,"P971",E,E,N,N],[6,"N971",E,E,N,N],[6,"U972",E,E,N,N],[6,"P972",E,E,N,N],[6,"N972",E,E,N,N],[6,"U973",E,E,N,N],[6,"P973",E,E,N,N],[6,"N973",E,E,N,N],[6,"U974",E,E,N,N],[6,"P974",E,E,N,N],[6,"N974",E,E,N,N],[6,"U975",E,E,N,N],[6,"P975",E,E,N,N],[6,"N975",E,E,N,N],[6,"U976",E,E,N,N],[6,"P976",E,E,N,N],[6,"N976",E,E,N,N],[6,"U977",E,E,N,N],[6,"P977",E,E,N,N],[6,"N977",E,E,N,N],[6,"U978",E,E,N,N],[6,"P978",E,E,N,N],[6,"N978",E,E,N,N],[6,"U979",E,E,N,N],[6,"P979",E,E,N,N],[6,"N979",E,E,N,N],[6,"U980",E,E,N,N],[6,"P980",E,E,N,N],[6,"N980",E,E,N,N],[6,"U981",E,E,N,N],[6,"P981",E,E,N,N],[6,"N981",E,E,N,N],[6,"U982",E,E,N,N],[6,"P982",E,E,N,N],[6,"N982",E,E,N,N],[6,"U983",E,E,N,N],[6,"P983",E,E,N,N],[6,"N983",E,E,N,N],[6,"U984",E,E,N,N],[6,"P984",E,E,N,N],[6,"N984",E,E,N,N],[6,"U985",E,E,N,N],[6,"P985",E,E,N,N],[6,"N985",E,E,N,N],[6,"U986",E,E,N,N],[6,"P986",E,E,N,N],[6,"N986",E,E,N,N],[6,"U987",E,E,N,N],[6,"P987",E,E,N,N],[6,"N987",E,E,N,N],[6,"U988",E,E,N,N],[6,"P988",E,E,N,N],[6,"N988",E,E,N,N],[6,"U989",E,E,N,N],[6,"P989",E,E,N,N],[6,"N989",E,E,N,N],[6,"U990",E,E,N,N],[6,"P990",E,E,N,N],[6,"N990",E,E,N,N],[6,"U991",E,E,N,N],[6,"P991",E,E,N,N],[6,"N991",E,E,N,N],[6,"U992",E,E,N,N],[6,"P992",E,E,N,N],[6,"N992",E,E,N,N],[6,"U993",E,E,N,N],[6,"P993",E,E,N,N],[6,"N993",E,E,N,N],[6,"U994",E,E,N,N],[6,"P994",E,E,N,N],[6,"N994",E,E,N,N],[6,"U995",E,E,N,N],[6,"P995",E,E,N,N],[6,"N995",E,E,N,N],[6,"U996",E,E,N,N],[6,"P996",E,E,N,N],[6,"N996",E,E,N,N],[6,"U997",E,E,N,N],[6,"P997",E,E,N,N],[6,"N997",E,E,N,N],[6,"U998",E,E,N,N],[6,"P998",E,E,N,N],[6,"N998",E,E,N,N],[6,"U999",E,E,N,N],[6,"P999",E,E,N,N],[6,"N999",E,E,N,N],[6,"U1000",E,E,N,N],[6,"P1000",E,E,N,N],[6,"N1000",E,E,N,N],[6,"U1001",E,E,N,N],[6,"P1001",E,E,N,N],[6,"N1001",E,E,N,N],[6,"U1002",E,E,N,N],[6,"P1002",E,E,N,N],[6,"N1002",E,E,N,N],[6,"U1003",E,E,N,N],[6,"P1003",E,E,N,N],[6,"N1003",E,E,N,N],[6,"U1004",E,E,N,N],[6,"P1004",E,E,N,N],[6,"N1004",E,E,N,N],[6,"U1005",E,E,N,N],[6,"P1005",E,E,N,N],[6,"N1005",E,E,N,N],[6,"U1006",E,E,N,N],[6,"P1006",E,E,N,N],[6,"N1006",E,E,N,N],[6,"U1007",E,E,N,N],[6,"P1007",E,E,N,N],[6,"N1007",E,E,N,N],[6,"U1008",E,E,N,N],[6,"P1008",E,E,N,N],[6,"N1008",E,E,N,N],[6,"U1009",E,E,N,N],[6,"P1009",E,E,N,N],[6,"N1009",E,E,N,N],[6,"U1010",E,E,N,N],[6,"P1010",E,E,N,N],[6,"N1010",E,E,N,N],[6,"U1011",E,E,N,N],[6,"P1011",E,E,N,N],[6,"N1011",E,E,N,N],[6,"U1012",E,E,N,N],[6,"P1012",E,E,N,N],[6,"N1012",E,E,N,N],[6,"U1013",E,E,N,N],[6,"P1013",E,E,N,N],[6,"N1013",E,E,N,N],[6,"U1014",E,E,N,N],[6,"P1014",E,E,N,N],[6,"N1014",E,E,N,N],[6,"U1015",E,E,N,N],[6,"P1015",E,E,N,N],[6,"N1015",E,E,N,N],[6,"U1016",E,E,N,N],[6,"P1016",E,E,N,N],[6,"N1016",E,E,N,N],[6,"U1017",E,E,N,N],[6,"P1017",E,E,N,N],[6,"N1017",E,E,N,N],[6,"U1018",E,E,N,N],[6,"P1018",E,E,N,N],[6,"N1018",E,E,N,N],[6,"U1019",E,E,N,N],[6,"P1019",E,E,N,N],[6,"N1019",E,E,N,N],[6,"U1020",E,E,N,N],[6,"P1020",E,E,N,N],[6,"N1020",E,E,N,N],[6,"U1021",E,E,N,N],[6,"P1021",E,E,N,N],[6,"N1021",E,E,N,N],[6,"U1022",E,E,N,N],[6,"P1022",E,E,N,N],[6,"N1022",E,E,N,N],[6,"U1023",E,E,N,N],[6,"P1023",E,E,N,N],[6,"N1023",E,E,N,N],[6,"U1024",E,E,N,N],[6,"P1024",E,E,N,N],[6,"N1024",E,E,N,N],[6,"U2048",E,E,N,N],[6,"P2048",E,E,N,N],[6,"N2048",E,E,N,N],[6,"U4096",E,E,N,N],[6,"P4096",E,E,N,N],[6,"N4096",E,E,N,N],[6,"U8192",E,E,N,N],[6,"P8192",E,E,N,N],[6,"N8192",E,E,N,N],[6,"U16384",E,E,N,N],[6,"P16384",E,E,N,N],[6,"N16384",E,E,N,N],[6,"U32768",E,E,N,N],[6,"P32768",E,E,N,N],[6,"N32768",E,E,N,N],[6,"U65536",E,E,N,N],[6,"P65536",E,E,N,N],[6,"N65536",E,E,N,N],[6,"U131072",E,E,N,N],[6,"P131072",E,E,N,N],[6,"N131072",E,E,N,N],[6,"U262144",E,E,N,N],[6,"P262144",E,E,N,N],[6,"N262144",E,E,N,N],[6,"U524288",E,E,N,N],[6,"P524288",E,E,N,N],[6,"N524288",E,E,N,N],[6,"U1048576",E,E,N,N],[6,"P1048576",E,E,N,N],[6,"N1048576",E,E,N,N],[6,"U2097152",E,E,N,N],[6,"P2097152",E,E,N,N],[6,"N2097152",E,E,N,N],[6,"U4194304",E,E,N,N],[6,"P4194304",E,E,N,N],[6,"N4194304",E,E,N,N],[6,"U8388608",E,E,N,N],[6,"P8388608",E,E,N,N],[6,"N8388608",E,E,N,N],[6,"U16777216",E,E,N,N],[6,"P16777216",E,E,N,N],[6,"N16777216",E,E,N,N],[6,"U33554432",E,E,N,N],[6,"P33554432",E,E,N,N],[6,"N33554432",E,E,N,N],[6,"U67108864",E,E,N,N],[6,"P67108864",E,E,N,N],[6,"N67108864",E,E,N,N],[6,"U134217728",E,E,N,N],[6,"P134217728",E,E,N,N],[6,"N134217728",E,E,N,N],[6,"U268435456",E,E,N,N],[6,"P268435456",E,E,N,N],[6,"N268435456",E,E,N,N],[6,"U536870912",E,E,N,N],[6,"P536870912",E,E,N,N],[6,"N536870912",E,E,N,N],[6,"U1073741824",E,E,N,N],[6,"P1073741824",E,E,N,N],[6,"N1073741824",E,E,N,N],[6,"U2147483648",E,E,N,N],[6,"P2147483648",E,E,N,N],[6,"N2147483648",E,E,N,N],[6,"U4294967296",E,E,N,N],[6,"P4294967296",E,E,N,N],[6,"N4294967296",E,E,N,N],[6,"U8589934592",E,E,N,N],[6,"P8589934592",E,E,N,N],[6,"N8589934592",E,E,N,N],[6,"U17179869184",E,E,N,N],[6,"P17179869184",E,E,N,N],[6,"N17179869184",E,E,N,N],[6,"U34359738368",E,E,N,N],[6,"P34359738368",E,E,N,N],[6,"N34359738368",E,E,N,N],[6,"U68719476736",E,E,N,N],[6,"P68719476736",E,E,N,N],[6,"N68719476736",E,E,N,N],[6,"U137438953472",E,E,N,N],[6,"P137438953472",E,E,N,N],[6,"N137438953472",E,E,N,N],[6,"U274877906944",E,E,N,N],[6,"P274877906944",E,E,N,N],[6,"N274877906944",E,E,N,N],[6,"U549755813888",E,E,N,N],[6,"P549755813888",E,E,N,N],[6,"N549755813888",E,E,N,N],[6,"U1099511627776",E,E,N,N],[6,"P1099511627776",E,E,N,N],[6,"N1099511627776",E,E,N,N],[6,"U2199023255552",E,E,N,N],[6,"P2199023255552",E,E,N,N],[6,"N2199023255552",E,E,N,N],[6,"U4398046511104",E,E,N,N],[6,"P4398046511104",E,E,N,N],[6,"N4398046511104",E,E,N,N],[6,"U8796093022208",E,E,N,N],[6,"P8796093022208",E,E,N,N],[6,"N8796093022208",E,E,N,N],[6,"U17592186044416",E,E,N,N],[6,"P17592186044416",E,E,N,N],[6,"N17592186044416",E,E,N,N],[6,"U35184372088832",E,E,N,N],[6,"P35184372088832",E,E,N,N],[6,"N35184372088832",E,E,N,N],[6,"U70368744177664",E,E,N,N],[6,"P70368744177664",E,E,N,N],[6,"N70368744177664",E,E,N,N],[6,"U140737488355328",E,E,N,N],[6,"P140737488355328",E,E,N,N],[6,"N140737488355328",E,E,N,N],[6,"U281474976710656",E,E,N,N],[6,"P281474976710656",E,E,N,N],[6,"N281474976710656",E,E,N,N],[6,"U562949953421312",E,E,N,N],[6,"P562949953421312",E,E,N,N],[6,"N562949953421312",E,E,N,N],[6,"U1125899906842624",E,E,N,N],[6,"P1125899906842624",E,E,N,N],[6,"N1125899906842624",E,E,N,N],[6,"U2251799813685248",E,E,N,N],[6,"P2251799813685248",E,E,N,N],[6,"N2251799813685248",E,E,N,N],[6,"U4503599627370496",E,E,N,N],[6,"P4503599627370496",E,E,N,N],[6,"N4503599627370496",E,E,N,N],[6,"U9007199254740992",E,E,N,N],[6,"P9007199254740992",E,E,N,N],[6,"N9007199254740992",E,E,N,N],[6,"U18014398509481984",E,E,N,N],[6,"P18014398509481984",E,E,N,N],[6,"N18014398509481984",E,E,N,N],[6,"U36028797018963968",E,E,N,N],[6,"P36028797018963968",E,E,N,N],[6,"N36028797018963968",E,E,N,N],[6,"U72057594037927936",E,E,N,N],[6,"P72057594037927936",E,E,N,N],[6,"N72057594037927936",E,E,N,N],[6,"U144115188075855872",E,E,N,N],[6,"P144115188075855872",E,E,N,N],[6,"N144115188075855872",E,E,N,N],[6,"U288230376151711744",E,E,N,N],[6,"P288230376151711744",E,E,N,N],[6,"N288230376151711744",E,E,N,N],[6,"U576460752303423488",E,E,N,N],[6,"P576460752303423488",E,E,N,N],[6,"N576460752303423488",E,E,N,N],[6,"U1152921504606846976",E,E,N,N],[6,"P1152921504606846976",E,E,N,N],[6,"N1152921504606846976",E,E,N,N],[6,"U2305843009213693952",E,E,N,N],[6,"P2305843009213693952",E,E,N,N],[6,"N2305843009213693952",E,E,N,N],[6,"U4611686018427387904",E,E,N,N],[6,"P4611686018427387904",E,E,N,N],[6,"N4611686018427387904",E,E,N,N],[6,"U9223372036854775808",E,E,N,N],[6,"U10000",E,E,N,N],[6,"P10000",E,E,N,N],[6,"N10000",E,E,N,N],[6,"U100000",E,E,N,N],[6,"P100000",E,E,N,N],[6,"N100000",E,E,N,N],[6,"U1000000",E,E,N,N],[6,"P1000000",E,E,N,N],[6,"N1000000",E,E,N,N],[6,"U10000000",E,E,N,N],[6,"P10000000",E,E,N,N],[6,"N10000000",E,E,N,N],[6,"U100000000",E,E,N,N],[6,"P100000000",E,E,N,N],[6,"N100000000",E,E,N,N],[6,"U1000000000",E,E,N,N],[6,"P1000000000",E,E,N,N],[6,"N1000000000",E,E,N,N],[6,"U10000000000",E,E,N,N],[6,"P10000000000",E,E,N,N],[6,"N10000000000",E,E,N,N],[6,"U100000000000",E,E,N,N],[6,"P100000000000",E,E,N,N],[6,"N100000000000",E,E,N,N],[6,"U1000000000000",E,E,N,N],[6,"P1000000000000",E,E,N,N],[6,"N1000000000000",E,E,N,N],[6,"U10000000000000",E,E,N,N],[6,"P10000000000000",E,E,N,N],[6,"N10000000000000",E,E,N,N],[6,"U100000000000000",E,E,N,N],[6,"P100000000000000",E,E,N,N],[6,"N100000000000000",E,E,N,N],[6,"U1000000000000000",E,E,N,N],[6,"P1000000000000000",E,E,N,N],[6,"N1000000000000000",E,E,N,N],[6,"U10000000000000000",E,E,N,N],[6,"P10000000000000000",E,E,N,N],[6,"N10000000000000000",E,E,N,N],[6,"U100000000000000000",E,E,N,N],[6,"P100000000000000000",E,E,N,N],[6,"N100000000000000000",E,E,N,N],[6,"U1000000000000000000",E,E,N,N],[6,"P1000000000000000000",E,E,N,N],[6,"N1000000000000000000",E,E,N,N],[6,"U10000000000000000000",E,E,N,N],[0,"bit","typenum","Type-level bits.",N,N],[3,"B0",R[1391],"The type-level bit 0.",N,N],[3,"B1",E,"The type-level bit 1.",N,N],[11,"new",E,R[1385],0,[[],["b0"]]],[11,"new",E,R[1385],1,[[],["b1"]]],[0,"int","typenum","Type-level signed integers.",N,N],[3,"PInt",R[1396],"Type-level signed integers with positive sign.",N,N],[3,"NInt",E,"Type-level signed integers with negative sign.",N,N],[3,"Z0",E,"The type-level signed integer 0.",N,N],[11,"new",E,R[1386],2,[[],["pint"]]],[11,"new",E,R[1386],3,[[],["nint"]]],[11,"new",E,"Instantiates a singleton representing the integer 0.",4,[[],["z0"]]],[0,"marker_traits","typenum","All of the marker traits used in typenum.",N,N],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",N,N],[8,"Ord",E,"A Marker trait for the types `Greater`, `Equal`, and `Less`.",N,N],[10,R[1401],E,E,5,[[],[R[105]]]],[8,"Bit",E,"The marker trait for compile time bits.",N,N],[18,"U8",E,E,6,N],[18,"BOOL",E,E,6,N],[10,"to_u8",E,E,6,[[],["u8"]]],[10,"to_bool",E,E,6,[[],["bool"]]],[8,"Unsigned",E,"The marker trait for compile time unsigned integers.",N,N],[18,"U8",E,E,7,N],[18,"U16",E,E,7,N],[18,"U32",E,E,7,N],[18,"U64",E,E,7,N],[18,"USIZE",E,E,7,N],[18,"I8",E,E,7,N],[18,"I16",E,E,7,N],[18,"I32",E,E,7,N],[18,"I64",E,E,7,N],[18,"ISIZE",E,E,7,N],[10,"to_u8",E,E,7,[[],["u8"]]],[10,"to_u16",E,E,7,[[],["u16"]]],[10,"to_u32",E,E,7,[[],["u32"]]],[10,"to_u64",E,E,7,[[],["u64"]]],[10,"to_usize",E,E,7,[[],["usize"]]],[10,"to_i8",E,E,7,[[],["i8"]]],[10,"to_i16",E,E,7,[[],["i16"]]],[10,"to_i32",E,E,7,[[],["i32"]]],[10,"to_i64",E,E,7,[[],["i64"]]],[10,R[1402],E,E,7,[[],["isize"]]],[8,"Integer",E,"The marker trait for compile time signed integers.",N,N],[18,"I8",E,E,8,N],[18,"I16",E,E,8,N],[18,"I32",E,E,8,N],[18,"I64",E,E,8,N],[18,"ISIZE",E,E,8,N],[10,"to_i8",E,E,8,[[],["i8"]]],[10,"to_i16",E,E,8,[[],["i16"]]],[10,"to_i32",E,E,8,[[],["i32"]]],[10,"to_i64",E,E,8,[[],["i64"]]],[10,R[1402],E,E,8,[[],["isize"]]],[8,"TypeArray",E,"The marker trait for type-level arrays of type-level…",N,N],[8,"PowerOfTwo",E,"The marker trait for type-level numbers which are a power…",N,N],[0,"operator_aliases","typenum","Aliases for the type operators used in this crate. Their…",N,N],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",N,N],[6,"Or",E,"Alias for the associated type of `BitOr`: `Or<A, B> = <A…",N,N],[6,"Xor",E,"Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",N,N],[6,"Shleft",E,"Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",N,N],[6,"Shright",E,"Alias for the associated type of `Shr`: `Shright<A, B> =…",N,N],[6,"Sum",E,"Alias for the associated type of `Add`: `Sum<A, B> = <A as…",N,N],[6,"Diff",E,"Alias for the associated type of `Sub`: `Diff<A, B> = <A…",N,N],[6,"Prod",E,"Alias for the associated type of `Mul`: `Prod<A, B> = <A…",N,N],[6,"Quot",E,"Alias for the associated type of `Div`: `Quot<A, B> = <A…",N,N],[6,"Mod",E,"Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",N,N],[6,"PartialQuot",E,"Alias for the associated type of `PartialDiv`:…",N,N],[6,"Negate",E,"Alias for the associated type of `Neg`: `Negate<A> = <A as…",N,N],[6,"AbsVal",E,"Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",N,N],[6,"Exp",E,"Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",N,N],[6,"Add1",E,"Alias to make it easy to add 1: `Add1<A> = <A as…",N,N],[6,"Sub1",E,"Alias to make it easy to subtract 1: `Sub1<A> = <A as…",N,N],[6,"Double",E,"Alias to make it easy to multiply by 2. `Double<A> =…",N,N],[6,"Square",E,"Alias to make it easy to square. `Square<A> = <A as…",N,N],[6,"Cube",E,"Alias to make it easy to cube. `Cube<A> = <Square<A> as…",N,N],[6,"Sqrt",E,"Alias for the associated type of `SquareRoot`: `Sqrt<A> =…",N,N],[6,"Compare",E,"Alias for the associated type of `Cmp`: `Compare<A, B> =…",N,N],[6,"Length",E,"Alias for the associated type of `Len`: `Length<A> = <A as…",N,N],[6,"Minimum",E,"Alias for the associated type of `Min`: `Minimum<A, B> =…",N,N],[6,"Maximum",E,"Alias for the associated type of `Max`: `Maximum<A, B> =…",N,N],[6,"Le",E,"Alias for the associated type of `IsLess`: `Le<A, B> = <A…",N,N],[6,"Eq",E,"Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",N,N],[6,"Gr",E,"Alias for the associated type of `IsGreater`: `Gr<A, B> =…",N,N],[6,"GrEq",E,"Alias for the associated type of `IsGreaterOrEqual`:…",N,N],[6,"LeEq",E,"Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",N,N],[6,"NotEq",E,"Alias for the associated type of `IsNotEqual`: `NotEq<A,…",N,N],[6,"Log2",E,"Alias for the associated type of `Logarithm2`: `Log2<A> =…",N,N],[0,"type_operators","typenum","Useful type operators that are not defined in `core::ops`.",N,N],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",N,N],[16,"Output",E,"Should always be `Self`",9,N],[8,"Abs",E,"A type operator that returns the absolute value.",N,N],[16,"Output",E,"The absolute value.",10,N],[8,"Pow",E,"A type operator that provides exponentiation by repeated…",N,N],[16,"Output",E,"The result of the exponentiation.",11,N],[10,"powi",E,R[1387],11,[[["exp"]]]],[8,"Cmp",E,"A type operator for comparing `Self` and `Rhs`. It…",N,N],[16,"Output",E,"The result of the comparison. It should only ever be one…",12,N],[8,"Len",E,"A type operator that gives the length of an `Array` or the…",N,N],[16,"Output",E,"The length as a type-level unsigned integer.",13,N],[10,"len",E,R[1387],13,[[["self"]]]],[8,"PartialDiv",E,"Division as a partial function. This type operator…",N,N],[16,"Output",E,"The type of the result of the division",14,N],[10,R[1397],E,"Method for performing the division",14,[[["rhs"]]]],[8,"Min",E,"A type operator that returns the minimum of `Self` and…",N,N],[16,"Output",E,"The type of the minimum of `Self` and `Rhs`",15,N],[10,"min",E,"Method returning the minimum",15,[[["rhs"]]]],[8,"Max",E,"A type operator that returns the maximum of `Self` and…",N,N],[16,"Output",E,"The type of the maximum of `Self` and `Rhs`",16,N],[10,"max",E,"Method returning the maximum",16,[[["rhs"]]]],[8,"IsLess",E,"A type operator that returns `True` if `Self < Rhs`,…",N,N],[16,"Output",E,R[1388],17,N],[10,"is_less",E,R[1389],17,[[["rhs"]]]],[8,"IsEqual",E,"A type operator that returns `True` if `Self == Rhs`,…",N,N],[16,"Output",E,R[1388],18,N],[10,R[1398],E,R[1389],18,[[["rhs"]]]],[8,"IsGreater",E,"A type operator that returns `True` if `Self > Rhs`,…",N,N],[16,"Output",E,R[1388],19,N],[10,R[1395],E,R[1389],19,[[["rhs"]]]],[8,R[1403],E,"A type operator that returns `True` if `Self <= Rhs`,…",N,N],[16,"Output",E,R[1388],20,N],[10,R[1392],E,R[1389],20,[[["rhs"]]]],[8,"IsNotEqual",E,"A type operator that returns `True` if `Self != Rhs`,…",N,N],[16,"Output",E,R[1388],21,N],[10,R[1393],E,R[1389],21,[[["rhs"]]]],[8,R[1404],E,"A type operator that returns `True` if `Self >= Rhs`,…",N,N],[16,"Output",E,R[1388],22,N],[10,R[1394],E,R[1389],22,[[["rhs"]]]],[8,"SquareRoot",E,"A type operator for taking the integer square root of…",N,N],[16,"Output",E,"The result of the integer square root.",23,N],[8,"Logarithm2",E,"A type operator for taking the integer binary logarithm of…",N,N],[16,"Output",E,"The result of the integer binary logarithm.",24,N],[0,"uint","typenum","Type-level unsigned integers.",N,N],[3,"UTerm",R[1399],"The terminating type for `UInt`; it always comes after the…",N,N],[3,"UInt",E,"`UInt` is defined recursively, where `B` is the least…",N,N],[6,"GetBitOut",E,E,N,N],[6,"SetBitOut",E,"Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",N,N],[8,"GetBit",E,E,N,N],[16,"Output",E,E,25,N],[8,"SetBit",E,"A type operator that, when implemented for unsigned…",N,N],[16,"Output",E,E,26,N],[11,"new",E,R[1390],27,[[],["uterm"]]],[11,"new",E,R[1390],28,[[],["uint"]]],[0,"array","typenum","A type-level array of type-level numbers.",N,N],[3,"ATerm",R[1400],"The terminating type for type arrays.",N,N],[3,"TArr",E,"`TArr` is a type that acts as an array of types. It is…",N,N],[14,"op","typenum","Convenient type operations.",N,N],[14,"cmp",E,"A convenience macro for comparing type numbers. Use `op!`…",N,N],[14,"tarr",E,"Create a new type-level arrray. Only usable on Rust 1.13.0…",N,N],[14,"assert_type_eq",E,"Asserts that two types are the same.",N,N],[14,"assert_type",E,"Asserts that a type is `True`, aka `B1`.",N,N],[11,"from",E,E,29,[[[T]],[T]]],[11,R[20],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,R[21],E,E,29,[[],[R[3]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[22],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[46]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[20],E,E,30,[[[U]],[R[3]]]],[11,"into",E,E,30,[[],[U]]],[11,R[21],E,E,30,[[],[R[3]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[22],E,E,30,[[["self"]],[T]]],[11,R[26],E,E,30,[[["self"]],[R[46]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[20],E,E,31,[[[U]],[R[3]]]],[11,"into",E,E,31,[[],[U]]],[11,R[21],E,E,31,[[],[R[3]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[22],E,E,31,[[["self"]],[T]]],[11,R[26],E,E,31,[[["self"]],[R[46]]]],[11,"is_less",R[1391],E,0,[[["b"]]]],[11,R[1398],E,E,0,[[["b"]]]],[11,R[1395],E,E,0,[[["b"]]]],[11,R[1392],E,E,0,[[["b"]]]],[11,R[1393],E,E,0,[[["b"]]]],[11,R[1394],E,E,0,[[["b"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"is_less",E,E,1,[[["b"]]]],[11,R[1398],E,E,1,[[["b"]]]],[11,R[1395],E,E,1,[[["b"]]]],[11,R[1392],E,E,1,[[["b"]]]],[11,R[1393],E,E,1,[[["b"]]]],[11,R[1394],E,E,1,[[["b"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"powi",R[1396],E,2,[[["n"]]]],[11,R[1397],E,E,2,[[["n"]]]],[11,"is_less",E,E,2,[[["b"]]]],[11,R[1398],E,E,2,[[["b"]]]],[11,R[1395],E,E,2,[[["b"]]]],[11,R[1392],E,E,2,[[["b"]]]],[11,R[1393],E,E,2,[[["b"]]]],[11,R[1394],E,E,2,[[["b"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"powi",E,E,3,[[["n"]]]],[11,R[1397],E,E,3,[[["n"]]]],[11,"is_less",E,E,3,[[["b"]]]],[11,R[1398],E,E,3,[[["b"]]]],[11,R[1395],E,E,3,[[["b"]]]],[11,R[1392],E,E,3,[[["b"]]]],[11,R[1393],E,E,3,[[["b"]]]],[11,R[1394],E,E,3,[[["b"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"powi",E,E,4,[[["n"]]]],[11,R[1397],E,E,4,[[["n"]]]],[11,"is_less",E,E,4,[[["b"]]]],[11,R[1398],E,E,4,[[["b"]]]],[11,R[1395],E,E,4,[[["b"]]]],[11,R[1392],E,E,4,[[["b"]]]],[11,R[1393],E,E,4,[[["b"]]]],[11,R[1394],E,E,4,[[["b"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"powi",R[1399],E,27,[[["n"]]]],[11,R[1397],E,E,27,[[["n"]]]],[11,"is_less",E,E,27,[[["b"]]]],[11,R[1398],E,E,27,[[["b"]]]],[11,R[1395],E,E,27,[[["b"]]]],[11,R[1392],E,E,27,[[["b"]]]],[11,R[1393],E,E,27,[[["b"]]]],[11,R[1394],E,E,27,[[["b"]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[20],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[21],E,E,27,[[],[R[3]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[46]]]],[11,"powi",E,E,28,[[["n"]]]],[11,R[1397],E,E,28,[[["n"]]]],[11,"is_less",E,E,28,[[["b"]]]],[11,R[1398],E,E,28,[[["b"]]]],[11,R[1395],E,E,28,[[["b"]]]],[11,R[1392],E,E,28,[[["b"]]]],[11,R[1393],E,E,28,[[["b"]]]],[11,R[1394],E,E,28,[[["b"]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[20],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,R[21],E,E,28,[[],[R[3]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[22],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[46]]]],[11,R[1397],R[1400],E,32,[[["n"]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[20],E,E,32,[[[U]],[R[3]]]],[11,"into",E,E,32,[[],[U]]],[11,R[21],E,E,32,[[],[R[3]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[22],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[46]]]],[11,R[1397],E,E,33,[[["n"]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,"into",E,E,33,[[],[U]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,R[1401],"typenum",E,29,[[],[R[105]]]],[11,R[1401],E,E,30,[[],[R[105]]]],[11,R[1401],E,E,31,[[],[R[105]]]],[11,"to_u8",R[1391],E,0,[[],["u8"]]],[11,"to_bool",E,E,0,[[],["bool"]]],[11,"to_u8",E,E,1,[[],["u8"]]],[11,"to_bool",E,E,1,[[],["bool"]]],[11,"to_u8",R[1399],E,27,[[],["u8"]]],[11,"to_u16",E,E,27,[[],["u16"]]],[11,"to_u32",E,E,27,[[],["u32"]]],[11,"to_u64",E,E,27,[[],["u64"]]],[11,"to_usize",E,E,27,[[],["usize"]]],[11,"to_i8",E,E,27,[[],["i8"]]],[11,"to_i16",E,E,27,[[],["i16"]]],[11,"to_i32",E,E,27,[[],["i32"]]],[11,"to_i64",E,E,27,[[],["i64"]]],[11,R[1402],E,E,27,[[],["isize"]]],[11,"to_u8",E,E,28,[[],["u8"]]],[11,"to_u16",E,E,28,[[],["u16"]]],[11,"to_u32",E,E,28,[[],["u32"]]],[11,"to_u64",E,E,28,[[],["u64"]]],[11,"to_usize",E,E,28,[[],["usize"]]],[11,"to_i8",E,E,28,[[],["i8"]]],[11,"to_i16",E,E,28,[[],["i16"]]],[11,"to_i32",E,E,28,[[],["i32"]]],[11,"to_i64",E,E,28,[[],["i64"]]],[11,R[1402],E,E,28,[[],["isize"]]],[11,"to_i8",R[1396],E,4,[[],["i8"]]],[11,"to_i16",E,E,4,[[],["i16"]]],[11,"to_i32",E,E,4,[[],["i32"]]],[11,"to_i64",E,E,4,[[],["i64"]]],[11,R[1402],E,E,4,[[],["isize"]]],[11,"to_i8",E,E,2,[[],["i8"]]],[11,"to_i16",E,E,2,[[],["i16"]]],[11,"to_i32",E,E,2,[[],["i32"]]],[11,"to_i64",E,E,2,[[],["i64"]]],[11,R[1402],E,E,2,[[],["isize"]]],[11,"to_i8",E,E,3,[[],["i8"]]],[11,"to_i16",E,E,3,[[],["i16"]]],[11,"to_i32",E,E,3,[[],["i32"]]],[11,"to_i64",E,E,3,[[],["i64"]]],[11,R[1402],E,E,3,[[],["isize"]]],[11,"powi",E,E,4,[[["z0"]]]],[11,"powi",E,E,4,[[["pint"]]]],[11,"powi",E,E,4,[[["nint"]]]],[11,"powi","typenum",E,34,[[["nint"]]]],[11,"powi",E,E,35,[[["uint",["b0"]],["nint",["uint"]]]]],[11,"powi",E,E,35,[[["uint",["b1"]],["nint",["uint"]]]]],[11,"powi",R[1396],E,2,[[["z0"]]]],[11,"powi",E,E,3,[[["z0"]]]],[11,"powi",E,E,2,[[["pint"]]]],[11,"powi",E,E,3,[[["pint",["uint"]],["uint",["b0"]]]]],[11,"powi",E,E,3,[[["pint",["uint"]],["uint",["b1"]]]]],[11,"len",R[1399],E,27,[[["self"]]]],[11,"len",E,E,28,[[["self"]]]],[11,"len",R[1400],E,32,[[["self"]]]],[11,"len",E,E,33,[[["self"]]]],[11,R[1397],R[1399],E,27,[[["uint"]]]],[11,R[1397],E,E,28,[[["uint"]]]],[11,R[1397],R[1400],E,32,[[["rhs"]]]],[11,R[1397],E,E,33,[[["rhs"]]]],[11,"min",R[1391],E,0,[[["b0"]],["b0"]]],[11,"min",E,E,0,[[["b1"]],["b0"]]],[11,"min",E,E,1,[[["b0"]],["b0"]]],[11,"min",E,E,1,[[["b1"]],["b1"]]],[11,"min",R[1396],E,4,[[["z0"]]]],[11,"min",E,E,4,[[["pint"]]]],[11,"min",E,E,4,[[["nint"]]]],[11,"min",E,E,2,[[["z0"]]]],[11,"min",E,E,3,[[["z0"]]]],[11,"min",E,E,2,[[["pint"]]]],[11,"min",E,E,3,[[["pint"]]]],[11,"min",E,E,2,[[["nint"]]]],[11,"min",E,E,3,[[["nint"]]]],[11,"min",R[1399],E,27,[[[U]]]],[11,"min",E,E,28,[[["ur"]]]],[11,"max",R[1391],E,0,[[["b0"]],["b0"]]],[11,"max",E,E,0,[[["b1"]],["b1"]]],[11,"max",E,E,1,[[["b0"]],["b1"]]],[11,"max",E,E,1,[[["b1"]],["b1"]]],[11,"max",R[1396],E,4,[[["z0"]]]],[11,"max",E,E,4,[[["pint"]]]],[11,"max",E,E,4,[[["nint"]]]],[11,"max",E,E,2,[[["z0"]]]],[11,"max",E,E,3,[[["z0"]]]],[11,"max",E,E,2,[[["pint"]]]],[11,"max",E,E,3,[[["pint"]]]],[11,"max",E,E,2,[[["nint"]]]],[11,"max",E,E,3,[[["nint"]]]],[11,"max",R[1399],E,27,[[[U]]]],[11,"max",E,E,28,[[["ur"]]]],[11,"fmt",R[1391],E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1396],E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1399],E,27,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1400],E,32,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[37]]],[R[3]]]],[11,"fmt","typenum",E,29,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[37]]],[R[3]]]],[11,"div",R[1396],E,4,[[["i"]]]],[11,"div",E,E,2,[[["pint"]]]],[11,"div",E,E,2,[[["nint"]]]],[11,"div",E,E,3,[[["pint"]]]],[11,"div",E,E,3,[[["nint"]]]],[11,"div",R[1399],E,27,[[["uint"]]]],[11,"div",E,E,28,[[["uint"]]]],[11,"div",R[1400],E,32,[[["rhs"]]]],[11,"div",E,E,33,[[["rhs"]]]],[11,"rem",R[1396],E,4,[[["i"]]]],[11,"rem",E,E,2,[[["pint"]]]],[11,"rem",E,E,2,[[["nint"]]]],[11,"rem",E,E,3,[[["pint"]]]],[11,"rem",E,E,3,[[["nint"]]]],[11,"rem",R[1399],E,27,[[["uint"]]]],[11,"rem",E,E,28,[[["uint"]]]],[11,"rem",R[1400],E,32,[[["rhs"]]]],[11,"rem",E,E,33,[[["rhs"]]]],[11,"sub",R[1396],E,4,[[["z0"]]]],[11,"sub",E,E,4,[[["pint"]]]],[11,"sub",E,E,4,[[["nint"]]]],[11,"sub",E,E,2,[[["z0"]]]],[11,"sub",E,E,3,[[["z0"]]]],[11,"sub",E,E,2,[[["nint"]]]],[11,"sub",E,E,3,[[["pint"]]]],[11,"sub",E,E,2,[[["pint"]]]],[11,"sub",E,E,3,[[["nint"]]]],[11,"sub",R[1399],E,27,[[["b0"]]]],[11,"sub",E,E,28,[[["b0"]]]],[11,"sub",E,E,28,[[["b1"]]]],[11,"sub",E,E,28,[[["b1"]]]],[11,"sub",E,E,28,[[["b1"]]]],[11,"sub",E,E,27,[[["uterm"]]]],[11,"sub",E,E,28,[[["ur"]]]],[11,"sub",R[1400],E,32,[[["aterm"]]]],[11,"sub",E,E,33,[[["tarr"]]]],[11,"eq",R[1391],E,0,[[["self"],["b0"]],["bool"]]],[11,"eq",E,E,1,[[["b1"],["self"]],["bool"]]],[11,"eq",R[1396],E,2,[[["pint"],["self"]],["bool"]]],[11,"ne",E,E,2,[[["pint"],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["nint"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["nint"]],["bool"]]],[11,"eq",E,E,4,[[["z0"],["self"]],["bool"]]],[11,"eq",R[1399],E,27,[[["uterm"],["self"]],["bool"]]],[11,"eq",E,E,28,[[["uint"],["self"]],["bool"]]],[11,"ne",E,E,28,[[["uint"],["self"]],["bool"]]],[11,"eq",R[1400],E,32,[[["self"],["aterm"]],["bool"]]],[11,"eq",E,E,33,[[["tarr"],["self"]],["bool"]]],[11,"ne",E,E,33,[[["tarr"],["self"]],["bool"]]],[11,"eq","typenum",E,29,[[["greater"],["self"]],["bool"]]],[11,"eq",E,E,30,[[["self"],["less"]],["bool"]]],[11,"eq",E,E,31,[[["equal"],["self"]],["bool"]]],[11,"cmp",R[1391],E,0,[[["self"],["b0"]],[R[105]]]],[11,"cmp",E,E,1,[[["b1"],["self"]],[R[105]]]],[11,"cmp",R[1396],E,2,[[["pint"],["self"]],[R[105]]]],[11,"cmp",E,E,3,[[["self"],["nint"]],[R[105]]]],[11,"cmp",E,E,4,[[["z0"],["self"]],[R[105]]]],[11,"cmp",R[1399],E,27,[[["uterm"],["self"]],[R[105]]]],[11,"cmp",E,E,28,[[["uint"],["self"]],[R[105]]]],[11,"cmp",R[1400],E,32,[[["self"],["aterm"]],[R[105]]]],[11,"cmp",E,E,33,[[["tarr"],["self"]],[R[105]]]],[11,"cmp","typenum",E,29,[[["greater"],["self"]],[R[105]]]],[11,"cmp",E,E,30,[[["self"],["less"]],[R[105]]]],[11,"cmp",E,E,31,[[["equal"],["self"]],[R[105]]]],[11,R[106],R[1391],E,0,[[["self"],["b0"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,1,[[["b1"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[1396],E,2,[[["pint"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,2,[[["pint"],["self"]],["bool"]]],[11,"le",E,E,2,[[["pint"],["self"]],["bool"]]],[11,"gt",E,E,2,[[["pint"],["self"]],["bool"]]],[11,"ge",E,E,2,[[["pint"],["self"]],["bool"]]],[11,R[106],E,E,3,[[["self"],["nint"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,3,[[["self"],["nint"]],["bool"]]],[11,"le",E,E,3,[[["self"],["nint"]],["bool"]]],[11,"gt",E,E,3,[[["self"],["nint"]],["bool"]]],[11,"ge",E,E,3,[[["self"],["nint"]],["bool"]]],[11,R[106],E,E,4,[[["z0"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],R[1399],E,27,[[["uterm"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,28,[[["uint"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,28,[[["uint"],["self"]],["bool"]]],[11,"le",E,E,28,[[["uint"],["self"]],["bool"]]],[11,"gt",E,E,28,[[["uint"],["self"]],["bool"]]],[11,"ge",E,E,28,[[["uint"],["self"]],["bool"]]],[11,R[106],R[1400],E,32,[[["self"],["aterm"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,33,[[["tarr"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,33,[[["tarr"],["self"]],["bool"]]],[11,"le",E,E,33,[[["tarr"],["self"]],["bool"]]],[11,"gt",E,E,33,[[["tarr"],["self"]],["bool"]]],[11,"ge",E,E,33,[[["tarr"],["self"]],["bool"]]],[11,R[106],"typenum",E,29,[[["greater"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,30,[[["self"],["less"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,31,[[["equal"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"add",R[1396],E,4,[[["i"]]]],[11,"add",E,E,2,[[["z0"]]]],[11,"add",E,E,3,[[["z0"]]]],[11,"add",E,E,2,[[["pint"]]]],[11,"add",E,E,3,[[["nint"]]]],[11,"add",E,E,2,[[["nint"]]]],[11,"add",E,E,3,[[["pint"]]]],[11,"add",R[1399],E,27,[[["b0"]]]],[11,"add",E,E,28,[[["b0"]]]],[11,"add",E,E,27,[[["b1"]]]],[11,"add",E,E,28,[[["b1"]]]],[11,"add",E,E,28,[[["b1"]]]],[11,"add",E,E,27,[[[U]]]],[11,"add",E,E,28,[[["uterm"]]]],[11,"add",E,E,28,[[["b0"],["uint",["b0"]]]]],[11,"add",E,E,28,[[["b1"],["uint",["b1"]]]]],[11,"add",E,E,28,[[["b0"],["uint",["b0"]]]]],[11,"add",E,E,28,[[["b1"],["uint",["b1"]]]]],[11,"add",R[1400],E,32,[[["aterm"]]]],[11,"add",E,E,33,[[["tarr"]]]],[11,"mul",R[1396],E,4,[[["i"]]]],[11,"mul",E,E,2,[[["z0"]]]],[11,"mul",E,E,3,[[["z0"]]]],[11,"mul",E,E,2,[[["pint"]]]],[11,"mul",E,E,3,[[["nint"]]]],[11,"mul",E,E,2,[[["nint"]]]],[11,"mul",E,E,3,[[["pint"]]]],[11,"mul",R[1399],E,28,[[["b0"]]]],[11,"mul",E,E,27,[[["b0"]]]],[11,"mul",E,E,27,[[["b1"]]]],[11,"mul",E,E,28,[[["b1"]]]],[11,"mul",E,E,28,[[["uterm"]]]],[11,"mul",E,E,27,[[[U]]]],[11,"mul",E,E,28,[[["uint"]]]],[11,"mul",E,E,28,[[["uint"]]]],[11,"mul",R[1400],E,32,[[["rhs"]]]],[11,"mul",E,E,33,[[["rhs"]]]],[11,"mul",R[1396],E,4,[[["aterm"]]]],[11,"mul",E,E,2,[[["aterm"]]]],[11,"mul",E,E,3,[[["aterm"]]]],[11,"mul",E,E,4,[[["tarr"]]]],[11,"mul",E,E,2,[[["tarr"]]]],[11,"mul",E,E,3,[[["tarr"]]]],[11,"neg",E,E,4,[[]]],[11,"neg",E,E,2,[[]]],[11,"neg",E,E,3,[[]]],[11,"neg",R[1400],E,32,[[]]],[11,"neg",E,E,33,[[]]],[11,"not",R[1391],E,0,[[]]],[11,"not",E,E,1,[[]]],[11,"bitand",E,E,0,[[["rhs"]]]],[11,"bitand",E,E,1,[[["b0"]]]],[11,"bitand",E,E,1,[[["b1"]]]],[11,"bitand",R[1399],E,27,[[["ur"]]]],[11,"bitand",E,E,28,[[["ur"]]]],[11,"bitor",R[1391],E,0,[[["b0"]]]],[11,"bitor",E,E,0,[[["b1"]]]],[11,"bitor",E,E,1,[[["rhs"]]]],[11,"bitor",R[1399],E,27,[[[U]]]],[11,"bitor",E,E,28,[[["uterm"]]]],[11,"bitor",E,E,28,[[["b0"],["uint",["b0"]]]]],[11,"bitor",E,E,28,[[["b1"],["uint",["b1"]]]]],[11,"bitor",E,E,28,[[["b0"],["uint",["b0"]]]]],[11,"bitor",E,E,28,[[["b1"],["uint",["b1"]]]]],[11,"bitxor",R[1391],E,0,[[["b0"]]]],[11,"bitxor",E,E,1,[[["b0"]]]],[11,"bitxor",E,E,0,[[["b1"]]]],[11,"bitxor",E,E,1,[[["b1"]]]],[11,"bitxor",R[1399],E,27,[[["ur"]]]],[11,"bitxor",E,E,28,[[["ur"]]]],[11,"shl",E,E,27,[[["b0"]]]],[11,"shl",E,E,27,[[["b1"]]]],[11,"shl",E,E,28,[[["b0"]]]],[11,"shl",E,E,28,[[["b1"]]]],[11,"shl",E,E,28,[[["uterm"]]]],[11,"shl",E,E,27,[[[U]]]],[11,"shl",E,E,28,[[["uint"]]]],[11,"shr",E,E,27,[[[U]]]],[11,"shr",E,E,28,[[["uterm"]]]],[11,"shr",E,E,27,[[["b0"]]]],[11,"shr",E,E,27,[[["b1"]]]],[11,"shr",E,E,28,[[["b0"]]]],[11,"shr",E,E,28,[[["b1"]]]],[11,"shr",E,E,28,[[["uint"]]]],[11,"hash",R[1391],E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",R[1396],E,2,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",R[1399],E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",R[1400],E,32,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash","typenum",E,29,[[["self"],["__h"]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"clone",R[1391],E,0,[[["self"]],["b0"]]],[11,"clone",E,E,1,[[["self"]],["b1"]]],[11,"clone",R[1396],E,2,[[["self"]],["pint"]]],[11,"clone",E,E,3,[[["self"]],["nint"]]],[11,"clone",E,E,4,[[["self"]],["z0"]]],[11,"clone",R[1399],E,27,[[["self"]],["uterm"]]],[11,"clone",E,E,28,[[["self"]],["uint"]]],[11,"clone",R[1400],E,32,[[["self"]],["aterm"]]],[11,"clone",E,E,33,[[["self"]],["tarr"]]],[11,"clone","typenum",E,29,[[["self"]],["greater"]]],[11,"clone",E,E,30,[[["self"]],["less"]]],[11,"clone",E,E,31,[[["self"]],["equal"]]],[11,R[90],R[1391],E,0,[[],["b0"]]],[11,R[90],E,E,1,[[],["b1"]]],[11,R[90],R[1396],E,2,[[],["pint"]]],[11,R[90],E,E,3,[[],["nint"]]],[11,R[90],E,E,4,[[],["z0"]]],[11,R[90],R[1399],E,27,[[],["uterm"]]],[11,R[90],E,E,28,[[],["uint"]]],[11,R[90],"typenum",E,29,[[],["greater"]]],[11,R[90],E,E,30,[[],["less"]]],[11,R[90],E,E,31,[[],["equal"]]]],"p":[[3,"B0"],[3,"B1"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,"PartialDiv"],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,"IsGreater"],[8,R[1403]],[8,"IsNotEqual"],[8,R[1404]],[8,"SquareRoot"],[8,"Logarithm2"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["uint"]={"doc":"Efficient large, fixed-size big integers and hashes.","i":[[14,"unroll","uint",R[1578],N,N],[4,R[1579],E,"Conversion from decimal string error",N,N],[13,"InvalidCharacter",E,"Char not from range 0-9",0,N],[13,"InvalidLength",E,"Value does not fit into type",0,N],[14,"construct_uint",E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"eq",E,E,0,[[["self"],[R[3617]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]]],"p":[[4,R[1579]]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,R[1],E,"Methods for determining if a character is a valid…",N,N],[10,"is_xid_start",E,"Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue",E,"Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,R[1]]]};
searchIndex["wasmi"]={"doc":"wasmi","i":[[3,"Trap","wasmi",R[2825],N,N],[3,R[2874],E,"Runtime representation of a function.",N,N],[3,R[2875],E,"A resumable invocation handle. This struct is returned by…",N,N],[3,"FuncRef",E,"Reference to a function (See [`FuncInstance`] for details).",N,N],[3,R[2876],E,"Runtime representation of a global variable (or `global`…",N,N],[3,"GlobalRef",E,"Reference to a global variable (See [`GlobalInstance`] for…",N,N],[3,R[2892],E,"Implementation of [`Externals`] that just traps on…",N,N],[3,R[2877],E,"Wrapper around slice of [`RuntimeValue`] for using it as…",N,N],[3,R[2878],E,"Convenience builder of [`ImportResolver`].",N,N],[3,R[2879],E,"Runtime representation of a linear memory (or `memory` for…",N,N],[3,"MemoryRef",E,"Reference to a memory (See [`MemoryInstance`] for details).",N,N],[3,R[2880],E,"A module instance is the runtime representation of a…",N,N],[3,"ModuleRef",E,"Reference to a [`ModuleInstance`].",N,N],[3,R[2881],E,"Mostly instantiated [`ModuleRef`].",N,N],[3,R[2882],E,"Used to recycle stacks instead of allocating them…",N,N],[3,R[2883],E,"Runtime representation of a table.",N,N],[3,"TableRef",E,"Reference to a table (See [`TableInstance`] for details).",N,N],[3,R[2885],E,"Description of a global variable.",N,N],[3,R[2887],E,"Description of a linear memory.",N,N],[3,R[2884],E,"Signature of a [function].",N,N],[3,R[2886],E,"Description of a table.",N,N],[3,"Module",E,"Deserialized module prepared for instantiation.",N,N],[4,"TrapKind",E,R[2825],N,N],[13,R[2826],E,"Wasm code executed `unreachable` opcode.",0,N],[13,"MemoryAccessOutOfBounds",E,"Attempt to load or store at the address which lies outside…",0,N],[13,"TableAccessOutOfBounds",E,"Attempt to access table element at index which lies…",0,N],[13,"ElemUninitialized",E,"Attempt to access table element which is uninitialized…",0,N],[13,"DivisionByZero",E,"Attempt to divide by zero.",0,N],[13,"InvalidConversionToInt",E,"Attempt to make a conversion to an int failed.",0,N],[13,"StackOverflow",E,"Stack overflow.",0,N],[13,"UnexpectedSignature",E,"Attempt to invoke a function with mismatching signature.",0,N],[13,"Host",E,"Error specified by the host.",0,N],[4,"Error",E,"Internal interpreter error.",N,N],[13,"Validation",E,"Module validation error. Might occur only at load time.",1,N],[13,"Instantiation",E,"Error while instantiating a module. Might occur when…",1,N],[13,R[122],E,"Function-level error.",1,N],[13,"Table",E,"Table-level error.",1,N],[13,"Memory",E,"Memory-level error.",1,N],[13,"Global",E,"Global-level error.",1,N],[13,"Value",E,"Value-level error.",1,N],[13,"Trap",E,"Trap.",1,N],[13,"Host",E,"Custom embedder error.",1,N],[4,R[2872],E,"A resumable invocation error.",N,N],[13,"Trap",E,"Trap happened.",2,N],[13,"NotResumable",E,"The invocation is not resumable.",2,N],[13,"AlreadyStarted",E,"The invocation has already been started.",2,N],[4,"ExternVal",E,"An external value is the runtime representation of an…",N,N],[13,"Func",E,"[Function][`FuncInstance`].",3,N],[13,"Table",E,"[Table][`TableInstance`].",3,N],[13,"Memory",E,"[Memory][`MemoryInstance`].",3,N],[13,"Global",E,"[Global][`GlobalInstance`].",3,N],[4,R[230],E,"Type of a value.",N,N],[13,"I32",E,"32-bit signed or unsigned integer.",4,N],[13,"I64",E,"64-bit signed or unsigned integer.",4,N],[13,"F32",E,"32-bit IEEE 754-2008 floating point number.",4,N],[13,"F64",E,"64-bit IEEE 754-2008 floating point number.",4,N],[4,"ValueError",E,"Error for `LittleEndianConvert`",N,N],[13,"InvalidLittleEndianBuffer",E,"The buffer is too short for the type being deserialized",5,N],[4,R[2873],E,"Runtime representation of a value.",N,N],[13,"I32",E,R[3937],6,N],[13,"I64",E,R[3938],6,N],[13,"F32",E,"Value of 32-bit IEEE 754-2008 floating point number.",6,N],[13,"F64",E,"Value of 64-bit IEEE 754-2008 floating point number.",6,N],[11,"alloc_host",E,"Allocate a function instance for a host function.",7,[[[R[188]],["usize"]],["funcref"]]],[11,R[188],E,"Returns [signature] of this function instance.",7,[[["self"]],[R[188]]]],[11,"invoke",E,"Invoke this function.",7,[[["funcref"],["e"]],[[R[3],["option","trap"]],["option",[R[2827]]],["trap"]]]],[11,"invoke_with_stack",E,"Invoke this function using recycled stacks.",7,[[["e"],["funcref"],[R[2838]]],[[R[3],["option","trap"]],["option",[R[2827]]],["trap"]]]],[11,"invoke_resumable",E,"Invoke the function, get a resumable handle. This handle…",7,[[["funcref"]],[[R[2828]],["trap"],[R[3],[R[2828],"trap"]]]]],[11,"is_resumable",E,"Whether this invocation is currently resumable.",8,[[["self"]],["bool"]]],[11,"resumable_value_type",E,"If the invocation is resumable, the expected return value…",8,[[["self"]],[[R[158]],["option",[R[158]]]]]],[11,"start_execution",E,"Start the invocation execution.",8,[[["self"],["e"]],[["option",[R[2827]]],[R[2829]],[R[3],["option",R[2829]]]]]],[11,"resume_execution",E,"Resume an execution if a previous trap of Host kind…",8,[[[R[2827]],["self"],["option",[R[2827]]],["e"]],[["option",[R[2827]]],[R[2829]],[R[3],["option",R[2829]]]]]],[11,"alloc",E,"Allocate a global variable instance.",9,[[[R[2827]],["bool"]],[R[2836]]]],[11,"set",E,"Change the value of this global variable.",9,[[[R[2827]],["self"]],[[R[3],["error"]],["error"]]]],[11,"get",E,"Get the value of this global variable.",9,[[["self"]],[R[2827]]]],[11,R[2842],E,"Returns if this global variable is mutable.",9,[[["self"]],["bool"]]],[11,R[206],E,"Returns value type of this global variable.",9,[[["self"]],[R[158]]]],[11,"nth_checked",E,R[2830],10,[[["self"],["usize"]],[[R[3],["trap"]],["trap"]]]],[11,"nth_value_checked",E,"Extract argument as a [`RuntimeValue`] by index `idx`.",10,[[["self"],["usize"]],[[R[2827]],["trap"],[R[3],[R[2827],"trap"]]]]],[11,"nth",E,R[2830],10,[[["self"],["usize"]],[T]]],[11,"len",E,"Total number of arguments",10,[[["self"]],["usize"]]],[11,"new",E,"Create an empty `ImportsBuilder`.",11,[[],["importsbuilder"]]],[11,"with_resolver",E,R[2831],11,[[["into",["string"]],["string"],[R[2832]]],["self"]]],[11,"push_resolver",E,R[2831],11,[[["into",["string"]],["string"],[R[2832]],["self"]]]],[11,"alloc",E,"Allocate a memory instance.",12,[[["pages"],["option",["pages"]]],[[R[3],[R[2835],"error"]],[R[2835]],["error"]]]],[11,"initial",E,"Returns number of pages this `MemoryInstance` was created…",12,[[["self"]],["pages"]]],[11,"maximum",E,"Returns maximum amount of pages this `MemoryInstance` can…",12,[[["self"]],[["option",["pages"]],["pages"]]]],[11,R[2841],E,"Returns current linear memory size.",12,[[["self"]],["pages"]]],[11,"get_value",E,"Get value from memory at given offset.",12,[[["u32"],["self"]],[[R[2833]],["error"],[R[3],["error"]]]]],[11,"get",E,"Copy data from memory at given offset.",12,[[["u32"],["self"],["usize"]],[["vec",["u8"]],[R[3],["vec","error"]],["error"]]]],[11,"get_into",E,"Copy data from given offset in the memory into `target`…",12,[[["u32"],["self"]],[[R[3],["error"]],["error"]]]],[11,"set",E,"Copy data in the memory at given offset.",12,[[["u32"],["self"]],[[R[3],["error"]],["error"]]]],[11,"set_value",E,"Copy value in the memory at given offset.",12,[[["u32"],["self"],[R[2833]]],[[R[3],["error"]],["error"]]]],[11,"grow",E,"Increases the size of the linear memory by given number of…",12,[[["pages"],["self"]],[["pages"],["error"],[R[3],["pages","error"]]]]],[11,"copy",E,"Copy contents of one memory region to another.",12,[[["self"],["usize"]],[[R[3],["error"]],["error"]]]],[11,R[2834],E,"Copy contents of one memory region to another…",12,[[["self"],["usize"]],[[R[3],["error"]],["error"]]]],[11,"transfer",E,"Copy memory between two (possibly distinct) memory…",12,[[["usize"],[R[2835]]],[[R[3],["error"]],["error"]]]],[11,"clear",E,"Fill the memory region with the specified value.",12,[[["usize"],["self"],["u8"]],[[R[3],["error"]],["error"]]]],[11,"zero",E,"Fill the specified memory region with zeroes.",12,[[["self"],["usize"]],[[R[3],["error"]],["error"]]]],[11,"erase",E,"Set every byte in the entire linear memory to 0,…",12,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"with_direct_access",E,"Provides direct access to the underlying memory buffer.",12,[[["fnonce"],["self"]],["r"]]],[11,"with_direct_access_mut",E,"Provides direct mutable access to the underlying memory…",12,[[["fnonce"],["self"]],["r"]]],[11,"as_func",E,"Get underlying function reference if this `ExternVal`…",3,[[["self"]],[["funcref"],["option",["funcref"]]]]],[11,"as_table",E,"Get underlying table reference if this `ExternVal`…",3,[[["self"]],[["option",[R[2863]]],[R[2863]]]]],[11,"as_memory",E,"Get underlying memory reference if this `ExternVal`…",3,[[["self"]],[["option",[R[2835]]],[R[2835]]]]],[11,"as_global",E,"Get underlying global variable reference if this…",3,[[["self"]],[[R[2836]],["option",[R[2836]]]]]],[11,"globals",E,"Access all globals. This is a non-standard API so it's…",13,[[["self"]],[["ref",["vec"]],["vec",[R[2836]]]]]],[11,"with_externvals",E,"Instantiate a module with given [external…",13,[[["module"],[R[3807]]],[[R[2837]],["error"],[R[3],[R[2837],"error"]]]]],[11,"new",E,"Instantiate a [module][`Module`].",13,[[["i"],["module"]],[["error"],[R[2837]],[R[3],[R[2837],"error"]]]]],[11,"invoke_export",E,"Invoke exported function by a name.",13,[[["str"],["e"],["self"]],[[R[3],["option","error"]],["option",[R[2827]]],["error"]]]],[11,"invoke_export_with_stack",E,"Invoke exported function by a name using recycled stacks.",13,[[["str"],["e"],[R[2838]],["self"]],[[R[3],["option","error"]],["option",[R[2827]]],["error"]]]],[11,"export_by_name",E,"Find export by a name.",13,[[["str"],["self"]],[["option",["externval"]],["externval"]]]],[11,"not_started_instance",E,"Returns not fully initialized instance.",14,[[["self"]],[R[2839]]]],[11,"run_start",E,"Executes `start` function (if any) and returns fully…",14,[[["e"]],[[R[2839]],["trap"],[R[3],[R[2839],"trap"]]]]],[11,"assert_no_start",E,"Returns fully instantiated module without running `start`…",14,[[],[R[2839]]]],[11,"has_start",E,"Whether or not the module has a `start` function.",14,[[["self"]],["bool"]]],[0,"nan_preserving_float",E,E,N,N],[3,"F32",R[2864],E,N,N],[3,"F64",E,E,N,N],[11,"from_bits",E,E,15,[[["u32"]],["self"]]],[11,"to_bits",E,E,15,[[],["u32"]]],[11,R[2840],E,E,15,[[["f32"]],["self"]]],[11,"to_float",E,E,15,[[],["f32"]]],[11,"is_nan",E,E,15,[[],["bool"]]],[11,"abs",E,E,15,[[],["self"]]],[11,"fract",E,E,15,[[],["self"]]],[11,"min",E,E,15,[[],["self"]]],[11,"max",E,E,15,[[],["self"]]],[11,"from_bits",E,E,16,[[["u64"]],["self"]]],[11,"to_bits",E,E,16,[[],["u64"]]],[11,R[2840],E,E,16,[[["f64"]],["self"]]],[11,"to_float",E,E,16,[[],["f64"]]],[11,"is_nan",E,E,16,[[],["bool"]]],[11,"abs",E,E,16,[[],["self"]]],[11,"fract",E,E,16,[[],["self"]]],[11,"min",E,E,16,[[],["self"]]],[11,"max",E,E,16,[[],["self"]]],[11,"with_limits","wasmi","Limit stacks created by this recycler to -…",17,[[["usize"]],["self"]]],[11,"clear",E,"Clears any values left on the stack to avoid leaking them…",17,[[["self"]]]],[11,"alloc",E,"Allocate a table instance.",18,[[["u32"],["option",["u32"]]],[["error"],[R[3],[R[2863],"error"]],[R[2863]]]]],[11,"initial_size",E,"Returns size this table was created with.",18,[[["self"]],["u32"]]],[11,"maximum_size",E,"Returns maximum size `TableInstance` can grow to.",18,[[["self"]],[["u32"],["option",["u32"]]]]],[11,R[2841],E,"Returns current size of the table.",18,[[["self"]],["u32"]]],[11,"grow",E,"Increases the size of the table by given number of elements.",18,[[["u32"],["self"]],[[R[3],["error"]],["error"]]]],[11,"get",E,"Get the specific value in the table",18,[[["u32"],["self"]],[["error"],["option",["funcref"]],[R[3],["option","error"]]]]],[11,"set",E,"Set the table element to the specified function.",18,[[["u32"],["funcref"],["option",["funcref"]],["self"]],[[R[3],["error"]],["error"]]]],[11,"new",E,"Creates new signature with givens parameter types and…",19,[[["cow"],["option",[R[158]]],["into",["cow"]],[R[158]]],[R[188]]]],[11,"params",E,"Returns parameter types of this signature.",19,[[["self"]]]],[11,R[199],E,"Returns return type of this signature.",19,[[["self"]],[[R[158]],["option",[R[158]]]]]],[11,R[206],E,"Returns [`ValueType`] of the requested global.",20,[[["self"]],[R[158]]]],[11,R[2842],E,"Returns whether the requested global mutable.",20,[[["self"]],["bool"]]],[11,"initial",E,"Returns initial size of the requested table.",21,[[["self"]],["u32"]]],[11,"maximum",E,"Returns maximum size of the requested table.",21,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"initial",E,"Returns initial size (in pages) of the requested memory.",22,[[["self"]],["u32"]]],[11,"maximum",E,"Returns maximum size (in pages) of the requested memory.",22,[[["self"]],[["u32"],["option",["u32"]]]]],[11,R[90],E,"Creates new default value of given type.",6,[[[R[158]]],["self"]]],[11,"decode_f32",E,"Creates new value by interpreting passed u32 as f32.",6,[[["u32"]],["self"]]],[11,"decode_f64",E,"Creates new value by interpreting passed u64 as f64.",6,[[["u64"]],["self"]]],[11,R[206],E,"Get variable type for this value.",6,[[["self"]],[R[158]]]],[11,R[21],E,"Returns `T` if this particular [`RuntimeValue`] contains…",6,[[],[["fromruntimevalue"],["option"]]]],[0,R[100],E,R[2843],N,N],[3,"Words",R[2865],R[2844],N,N],[12,"0",E,E,23,N],[3,"Pages",E,R[2845],N,N],[12,"0",E,E,24,N],[5,"size_of",E,R[2846],N,[[],["bytes"]]],[8,"ByteSize",E,R[2847],N,N],[10,R[104],E,R[2848],25,[[],["bytes"]]],[3,"Bytes",E,R[2849],N,N],[12,"0",E,E,26,N],[8,R[107],E,R[2850],N,N],[10,R[101],E,R[2851],27,[[],[T]]],[17,"LINEAR_MEMORY_PAGE_SIZE","wasmi","Size of a page of [linear memory][`MemoryInstance`] - 64KiB.",N,N],[17,"DEFAULT_CALL_STACK_LIMIT",E,"Maximum number of levels on the call stack.",N,N],[17,"DEFAULT_VALUE_STACK_LIMIT",E,"Maximum number of bytes on the value stack.",N,N],[8,"Externals",E,"Trait that allows to implement host functions.",N,N],[10,R[2866],E,"Perform invoke of a host function by specified `index`.",28,[[[R[2867]],["self"],["usize"]],[[R[3],["option","trap"]],["option",[R[2827]]],["trap"]]]],[8,R[3939],E,"Trait that allows the host to return custom error.",N,N],[8,R[2888],E,"Resolver of a module's dependencies.",N,N],[10,R[2852],E,R[2853],29,[[["str"],[R[188]],["self"]],[["funcref"],[R[3],["funcref","error"]],["error"]]]],[10,R[2854],E,R[2855],29,[[["str"],[R[2856]],["self"]],[[R[3],[R[2836],"error"]],[R[2836]],["error"]]]],[10,R[2857],E,R[2858],29,[[["str"],[R[2859]],["self"]],[[R[3],[R[2835],"error"]],[R[2835]],["error"]]]],[10,R[2860],E,R[2861],29,[[["str"],[R[2862]],["self"]],[["error"],[R[3],[R[2863],"error"]],[R[2863]]]]],[8,R[2889],E,"Version of [`ImportResolver`] specialized for a single…",N,N],[11,R[2852],E,R[2853],30,[[["str"],[R[188]],["self"]],[["funcref"],[R[3],["funcref","error"]],["error"]]]],[11,R[2854],E,R[2855],30,[[["str"],[R[2856]],["self"]],[[R[3],[R[2836],"error"]],[R[2836]],["error"]]]],[11,R[2857],E,R[2858],30,[[["str"],[R[2859]],["self"]],[[R[3],[R[2835],"error"]],[R[2835]],["error"]]]],[11,R[2860],E,R[2861],30,[[["str"],[R[2862]],["self"]],[["error"],[R[3],[R[2863],"error"]],[R[2863]]]]],[8,R[2890],E,"Trait for creating value from a [`RuntimeValue`].",N,N],[10,R[2868],E,"Create a value of type `Self` from a given [`RuntimeValue`].",31,[[[R[2827]]],["option"]]],[8,R[2891],E,"Convert from and to little endian.",N,N],[10,R[2869],E,"Convert to little endian buffer.",32,[[]]],[10,R[2870],E,"Convert from little endian buffer.",32,[[],[[R[3],["error"]],["error"]]]],[11,"new",E,"Create new trap.",33,[[["trapkind"]],["trap"]]],[11,"kind",E,"Returns kind of this trap.",33,[[["self"]],["trapkind"]]],[11,"is_host",E,"Whether this trap is specified by the host.",0,[[["self"]],["bool"]]],[11,"as_host_error",E,"Returns [`HostError`] if this `Error` represents some host…",1,[[["self"]],[["option",["hosterror"]],["hosterror"]]]],[11,"from_parity_wasm_module",E,"Create `Module` from `parity_wasm::elements::Module`.",34,[[["module"]],[[R[3],["module","error"]],["module"],["error"]]]],[11,"deny_floating_point",E,"Fail if the module contains any floating-point operations",34,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"from_buffer",E,"Create `Module` from a given buffer.",34,[[["asref"]],[[R[3],["module","error"]],["module"],["error"]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[78],E,E,33,[[["self"]],["string"]]],[11,R[20],E,E,33,[[[U]],[R[3]]]],[11,R[21],E,E,33,[[],[R[3]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[22],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[24],E,E,35,[[["self"]],[T]]],[11,R[25],E,E,35,[[["self"],[T]]]],[11,R[20],E,E,35,[[[U]],[R[3]]]],[11,R[21],E,E,35,[[],[R[3]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[22],E,E,35,[[["self"]],[T]]],[11,R[26],E,E,35,[[["self"]],[R[46]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[20],E,E,9,[[[U]],[R[3]]]],[11,R[21],E,E,9,[[],[R[3]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[46]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[24],E,E,36,[[["self"]],[T]]],[11,R[25],E,E,36,[[["self"],[T]]]],[11,R[20],E,E,36,[[[U]],[R[3]]]],[11,R[21],E,E,36,[[],[R[3]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[22],E,E,36,[[["self"]],[T]]],[11,R[26],E,E,36,[[["self"]],[R[46]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[20],E,E,37,[[[U]],[R[3]]]],[11,R[21],E,E,37,[[],[R[3]]]],[11,R[45],E,E,37,[[["self"]],[T]]],[11,R[22],E,E,37,[[["self"]],[T]]],[11,R[26],E,E,37,[[["self"]],[R[46]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[20],E,E,10,[[[U]],[R[3]]]],[11,R[21],E,E,10,[[],[R[3]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"]],[R[46]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[24],E,E,38,[[["self"]],[T]]],[11,R[25],E,E,38,[[["self"],[T]]]],[11,R[20],E,E,38,[[[U]],[R[3]]]],[11,R[21],E,E,38,[[],[R[3]]]],[11,R[45],E,E,38,[[["self"]],[T]]],[11,R[22],E,E,38,[[["self"]],[T]]],[11,R[26],E,E,38,[[["self"]],[R[46]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[24],E,E,39,[[["self"]],[T]]],[11,R[25],E,E,39,[[["self"],[T]]]],[11,R[20],E,E,39,[[[U]],[R[3]]]],[11,R[21],E,E,39,[[],[R[3]]]],[11,R[45],E,E,39,[[["self"]],[T]]],[11,R[22],E,E,39,[[["self"]],[T]]],[11,R[26],E,E,39,[[["self"]],[R[46]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[20],E,E,14,[[[U]],[R[3]]]],[11,R[21],E,E,14,[[],[R[3]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"]],[R[46]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[20],E,E,17,[[[U]],[R[3]]]],[11,R[21],E,E,17,[[],[R[3]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[22],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[46]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[20],E,E,18,[[[U]],[R[3]]]],[11,R[21],E,E,18,[[],[R[3]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[22],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[46]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[24],E,E,40,[[["self"]],[T]]],[11,R[25],E,E,40,[[["self"],[T]]]],[11,R[20],E,E,40,[[[U]],[R[3]]]],[11,R[21],E,E,40,[[],[R[3]]]],[11,R[45],E,E,40,[[["self"]],[T]]],[11,R[22],E,E,40,[[["self"]],[T]]],[11,R[26],E,E,40,[[["self"]],[R[46]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[20],E,E,20,[[[U]],[R[3]]]],[11,R[21],E,E,20,[[],[R[3]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[46]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[20],E,E,22,[[[U]],[R[3]]]],[11,R[21],E,E,22,[[],[R[3]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[22],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"]],[R[46]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[25],E,E,19,[[["self"],[T]]]],[11,R[20],E,E,19,[[[U]],[R[3]]]],[11,R[21],E,E,19,[[],[R[3]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[46]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[20],E,E,21,[[[U]],[R[3]]]],[11,R[21],E,E,21,[[],[R[3]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"]],[R[46]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[20],E,E,34,[[[U]],[R[3]]]],[11,R[21],E,E,34,[[],[R[3]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[22],E,E,34,[[["self"]],[T]]],[11,R[26],E,E,34,[[["self"]],[R[46]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[78],E,E,1,[[["self"]],["string"]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"],[T]]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",R[2864],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[24],E,E,15,[[["self"]],[T]]],[11,R[25],E,E,15,[[["self"],[T]]]],[11,R[20],E,E,15,[[[U]],[R[3]]]],[11,R[21],E,E,15,[[],[R[3]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[22],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"]],[R[46]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"],[T]]]],[11,R[20],E,E,16,[[[U]],[R[3]]]],[11,R[21],E,E,16,[[],[R[3]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[22],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"]],[R[46]]]],[11,"into",R[2865],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"],[T]]]],[11,R[20],E,E,23,[[[U]],[R[3]]]],[11,R[21],E,E,23,[[],[R[3]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[22],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"]],[R[46]]]],[11,R[101],E,E,23,[[],["words"]]],[11,R[101],E,E,23,[[],["bytes"]]],[11,R[101],E,E,23,[[],["pages"]]],[11,R[101],E,E,23,[[],["pages"]]],[11,R[101],E,E,23,[[],["words"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[24],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"],[T]]]],[11,R[20],E,E,24,[[[U]],[R[3]]]],[11,R[21],E,E,24,[[],[R[3]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[22],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[46]]]],[11,R[101],E,E,24,[[],["words"]]],[11,R[101],E,E,24,[[],["bytes"]]],[11,R[101],E,E,24,[[],["pages"]]],[11,R[101],E,E,24,[[],["pages"]]],[11,R[101],E,E,24,[[],["words"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[24],E,E,26,[[["self"]],[T]]],[11,R[25],E,E,26,[[["self"],[T]]]],[11,R[20],E,E,26,[[[U]],[R[3]]]],[11,R[21],E,E,26,[[],[R[3]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[22],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[46]]]],[11,R[101],E,E,26,[[],["words"]]],[11,R[101],E,E,26,[[],["bytes"]]],[11,R[101],E,E,26,[[],["pages"]]],[11,R[101],E,E,26,[[],["pages"]]],[11,R[101],E,E,26,[[],["words"]]],[11,"cmp",E,E,23,[[["words"],["self"]],[R[105]]]],[11,"cmp",E,E,26,[[["bytes"],["self"]],[R[105]]]],[11,"cmp",E,E,24,[[["pages"],["self"]],[R[105]]]],[11,"div",E,E,26,[[[T]],["bytes"]]],[11,"div",E,E,24,[[[T]],["pages"]]],[11,"div",E,E,23,[[[T]],["words"]]],[11,R[104],E,E,23,[[],["bytes"]]],[11,R[104],E,E,24,[[],["bytes"]]],[11,R[104],E,E,26,[[],["bytes"]]],[11,"eq",E,E,26,[[["bytes"],["self"]],["bool"]]],[11,"ne",E,E,26,[[["bytes"],["self"]],["bool"]]],[11,"eq",E,E,23,[[["words"],["self"]],["bool"]]],[11,"ne",E,E,23,[[["words"],["self"]],["bool"]]],[11,"eq",E,E,24,[[["pages"],["self"]],["bool"]]],[11,"ne",E,E,24,[[["pages"],["self"]],["bool"]]],[11,"add",E,E,23,[[[T]],["words"]]],[11,"add",E,E,24,[[[T]],["pages"]]],[11,"add",E,E,26,[[[T]],["bytes"]]],[11,R[106],E,E,24,[[["pages"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,24,[[["pages"],["self"]],["bool"]]],[11,"le",E,E,24,[[["pages"],["self"]],["bool"]]],[11,"gt",E,E,24,[[["pages"],["self"]],["bool"]]],[11,"ge",E,E,24,[[["pages"],["self"]],["bool"]]],[11,R[106],E,E,23,[[["words"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,23,[[["words"],["self"]],["bool"]]],[11,"le",E,E,23,[[["words"],["self"]],["bool"]]],[11,"gt",E,E,23,[[["words"],["self"]],["bool"]]],[11,"ge",E,E,23,[[["words"],["self"]],["bool"]]],[11,R[106],E,E,26,[[["bytes"],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"lt",E,E,26,[[["bytes"],["self"]],["bool"]]],[11,"le",E,E,26,[[["bytes"],["self"]],["bool"]]],[11,"gt",E,E,26,[[["bytes"],["self"]],["bool"]]],[11,"ge",E,E,26,[[["bytes"],["self"]],["bool"]]],[11,"fmt",E,E,23,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,26,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,24,[[[R[37]],["self"]],[["error"],[R[3],["error"]]]]],[11,"from",E,E,26,[[["pages"]],["bytes"]]],[11,"from",E,E,26,[[["words"]],["bytes"]]],[11,"from",E,E,26,[[["pages"]],["bytes"]]],[11,"from",E,E,26,[[["words"]],["bytes"]]],[11,"mul",E,E,24,[[[T]],["pages"]]],[11,"mul",E,E,23,[[[T]],["words"]]],[11,"mul",E,E,26,[[[T]],["bytes"]]],[11,"sub",E,E,23,[[[T]],["words"]]],[11,"sub",E,E,24,[[[T]],["pages"]]],[11,"sub",E,E,26,[[[T]],["bytes"]]],[11,"clone",E,E,24,[[["self"]],["pages"]]],[11,"clone",E,E,23,[[["self"]],["words"]]],[11,"clone",E,E,26,[[["self"]],["bytes"]]],[11,R[2866],"wasmi",E,37,[[[R[2867]],["self"],["usize"]],[[R[3],["option","trap"]],["option",[R[2827]]],["trap"]]]],[11,R[2852],E,E,11,[[["str"],[R[188]],["self"]],[["funcref"],[R[3],["funcref","error"]],["error"]]]],[11,R[2854],E,E,11,[[["str"],[R[2856]],["self"]],[[R[3],[R[2836],"error"]],[R[2836]],["error"]]]],[11,R[2857],E,E,11,[[["str"],[R[2859]],["self"]],[[R[3],[R[2835],"error"]],[R[2835]],["error"]]]],[11,R[2860],E,E,11,[[["str"],[R[2862]],["self"]],[["error"],[R[3],[R[2863],"error"]],[R[2863]]]]],[11,R[2852],E,E,39,[[["str"],[R[188]],["self"]],[["funcref"],[R[3],["funcref","error"]],["error"]]]],[11,R[2854],E,E,39,[[["str"],[R[2856]],["self"]],[[R[3],[R[2836],"error"]],[R[2836]],["error"]]]],[11,R[2857],E,E,39,[[["str"],[R[2859]],["self"]],[[R[3],[R[2835],"error"]],[R[2835]],["error"]]]],[11,R[2860],E,E,39,[[["str"],[R[2862]],["self"]],[["error"],[R[3],[R[2863],"error"]],[R[2863]]]]],[11,R[2868],R[2864],E,15,[[[R[2827]]],["option"]]],[11,R[2868],E,E,16,[[[R[2827]]],["option"]]],[11,R[2869],E,E,15,[[]]],[11,R[2870],E,E,15,[[],[[R[3],["error"]],["error"]]]],[11,R[2869],E,E,16,[[]]],[11,R[2870],E,E,16,[[],[[R[3],["error"]],["error"]]]],[11,"as_ref","wasmi",E,10,[[["self"]]]],[11,"into",E,E,1,[[],["string"]]],[11,"from",E,E,1,[[[U]],["self"]]],[11,"from",E,E,33,[[[U]],["self"]]],[11,"from",E,E,1,[[["trap"]],["error"]]],[11,"from",E,E,33,[[["trapkind"]],["trap"]]],[11,"from",E,E,1,[[["error"]],["error"]]],[11,"from",E,E,2,[[["trap"]],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",R[2864],E,15,[[["f32"]],["f32"]]],[11,"from",E,E,16,[[["f64"]],["f64"]]],[11,"from",E,E,15,[[["u32"]],["self"]]],[11,"from",E,E,16,[[["u64"]],["self"]]],[11,"from","wasmi",E,6,[[["i8"]],["self"]]],[11,"from",E,E,6,[[["i16"]],["self"]]],[11,"from",E,E,6,[[["i32"]],["self"]]],[11,"from",E,E,6,[[["i64"]],["self"]]],[11,"from",E,E,6,[[["u8"]],["self"]]],[11,"from",E,E,6,[[["u16"]],["self"]]],[11,"from",E,E,6,[[["u32"]],["self"]]],[11,"from",E,E,6,[[["u64"]],["self"]]],[11,"from",E,E,6,[[["f32"]],["self"]]],[11,"from",E,E,6,[[["f64"]],["self"]]],[11,"clone",E,E,35,[[["self"]],["funcref"]]],[11,"clone",E,E,36,[[["self"]],[R[2836]]]],[11,"clone",E,E,38,[[["self"]],[R[2835]]]],[11,"clone",E,E,39,[[["self"]],[R[2839]]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",R[2864],E,15,[[["self"]],["f32"]]],[11,"clone",E,E,16,[[["self"]],["f64"]]],[11,"clone","wasmi",E,40,[[["self"]],[R[2863]]]],[11,"clone",E,E,19,[[["self"]],[R[188]]]],[11,"clone",E,E,4,[[["self"]],[R[158]]]],[11,"clone",E,E,6,[[["self"]],[R[2827]]]],[11,R[90],E,E,11,[[],["self"]]],[11,R[90],E,E,17,[[],["self"]]],[11,"eq",R[2864],E,15,[[[T],["self"]],["bool"]]],[11,"eq",E,E,16,[[[T],["self"]],["bool"]]],[11,"eq","wasmi",E,19,[[[R[188]],["self"]],["bool"]]],[11,"ne",E,E,19,[[[R[188]],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[158]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[2827]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[2827]]],["bool"]]],[11,R[106],R[2864],E,15,[[[T],["self"]],[["option",[R[105]]],[R[105]]]]],[11,R[106],E,E,16,[[[T],["self"]],[["option",[R[105]]],[R[105]]]]],[11,"fmt","wasmi",E,33,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[2864],E,15,[[[R[37]],["self"]],[R[3]]]],[11,"fmt",E,E,16,[[[R[37]],["self"]],[R[3]]]],[11,"fmt","wasmi",E,40,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"div",R[2864],E,15,[[[T]],["self"]]],[11,"div",E,E,16,[[[T]],["self"]]],[11,"rem",E,E,15,[[[T]],["self"]]],[11,"rem",E,E,16,[[[T]],["self"]]],[11,"sub",E,E,15,[[[T]],["self"]]],[11,"sub",E,E,16,[[[T]],["self"]]],[11,"add",E,E,15,[[[T]],["self"]]],[11,"add",E,E,16,[[[T]],["self"]]],[11,"mul",E,E,15,[[[T]],["self"]]],[11,"mul",E,E,16,[[[T]],["self"]]],[11,"neg",E,E,15,[[],["self"]]],[11,"neg",E,E,16,[[],["self"]]],[11,"deref","wasmi",E,35,[[["self"]],["funcinstance"]]],[11,"deref",E,E,36,[[["self"]],["globalinstance"]]],[11,"deref",E,E,38,[[["self"]],["memoryinstance"]]],[11,"deref",E,E,39,[[["self"]],["moduleinstance"]]],[11,"deref",E,E,40,[[["self"]],["tableinstance"]]],[11,R[38],E,E,33,[[["self"]],["str"]]],[11,R[38],E,E,1,[[["self"]],["str"]]],[11,R[515],E,R[2871],41,[[["self"]],[[T],["option"]]]],[11,R[517],E,R[2871],41,[[["self"]],[[T],["option"]]]],[11,R[2852],E,R[2853],30,[[["str"],[R[188]],["self"]],[["funcref"],[R[3],["funcref","error"]],["error"]]]],[11,R[2854],E,R[2855],30,[[["str"],[R[2856]],["self"]],[[R[3],[R[2836],"error"]],[R[2836]],["error"]]]],[11,R[2857],E,R[2858],30,[[["str"],[R[2859]],["self"]],[[R[3],[R[2835],"error"]],[R[2835]],["error"]]]],[11,R[2860],E,R[2861],30,[[["str"],[R[2862]],["self"]],[["error"],[R[3],[R[2863],"error"]],[R[2863]]]]]],"p":[[4,"TrapKind"],[4,"Error"],[4,R[2872]],[4,"ExternVal"],[4,R[230]],[4,"ValueError"],[4,R[2873]],[3,R[2874]],[3,R[2875]],[3,R[2876]],[3,R[2877]],[3,R[2878]],[3,R[2879]],[3,R[2880]],[3,R[2881]],[3,"F32"],[3,"F64"],[3,R[2882]],[3,R[2883]],[3,R[2884]],[3,R[2885]],[3,R[2886]],[3,R[2887]],[3,"Words"],[3,"Pages"],[8,"ByteSize"],[3,"Bytes"],[8,R[107]],[8,"Externals"],[8,R[2888]],[8,R[2889]],[8,R[2890]],[8,R[2891]],[3,"Trap"],[3,"Module"],[3,"FuncRef"],[3,"GlobalRef"],[3,R[2892]],[3,"MemoryRef"],[3,"ModuleRef"],[3,"TableRef"],[8,R[3939]]]};
searchIndex["wasmi_validation"]={"doc":E,"i":[[3,"Error",R[1347],E,N,N],[12,"0",E,E,0,N],[3,R[1370],E,"A module validator that just validates modules and…",N,N],[3,R[1371],E,"A function validator that just validates modules and…",N,N],[5,"validate_module",E,E,N,[[["module"]],[[R[3],["error"]],["error"]]]],[5,"validate_memory",E,E,N,[[["u32"],["option",["u32"]]],[[R[3],["string"]],["string"]]]],[0,"stack",E,E,N,N],[3,"Error",R[1355],E,N,N],[3,R[1364],E,"Stack with limit.",N,N],[11,"with_limit",E,E,1,[[["usize"]],["self"]]],[11,R[340],E,E,1,[[["self"]],["bool"]]],[11,"len",E,E,1,[[["self"]],["usize"]]],[11,"top",E,E,1,[[["self"]],[[T],[R[3],["error"]],["error"]]]],[11,"top_mut",E,E,1,[[["self"]],[["error"],[R[3],["error"]],[T]]]],[11,"get",E,E,1,[[["self"],["usize"]],[[T],[R[3],["error"]],["error"]]]],[11,"push",E,E,1,[[["self"],[T]],[[R[3],["error"]],["error"]]]],[11,"pop",E,E,1,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"resize",E,E,1,[[["self"],["usize"],[T]]]],[0,"context",R[1347],E,N,N],[3,R[1365],R[1356],E,N,N],[12,"memories",E,E,2,N],[12,"tables",E,E,2,N],[12,"globals",E,E,2,N],[12,"types",E,E,2,N],[12,R[1348],E,E,2,N],[3,R[1366],E,E,N,N],[11,"memories",E,E,2,[[["self"]]]],[11,"tables",E,E,2,[[["self"]]]],[11,"globals",E,E,2,[[["self"]]]],[11,"types",E,E,2,[[["self"]]]],[11,R[1348],E,E,2,[[["self"]]]],[11,"require_memory",E,E,2,[[["u32"],["self"]],[[R[3],["error"]],["error"]]]],[11,"require_table",E,E,2,[[["u32"],["self"]],[[R[150]],["error"],[R[3],[R[150],"error"]]]]],[11,"require_function",E,E,2,[[["u32"],["self"]],[[R[3],["error"]],["error"]]]],[11,"require_function_type",E,E,2,[[["u32"],["self"]],[[R[3],["error"]],["error"]]]],[11,"require_global",E,E,2,[[["u32"],["option",["bool"]],["self"],["bool"]],[[R[3],[R[163],"error"]],["error"],[R[163]]]]],[11,"new",E,E,3,[[],[R[1361]]]],[11,R[1349],E,E,3,[[[R[151]],["self"]]]],[11,"push_table",E,E,3,[[["self"],[R[150]]]]],[11,"push_global",E,E,3,[[["self"],[R[163]]]]],[11,"set_types",E,E,3,[[["self"],["vec",[R[220]]],[R[220]]]]],[11,"push_func_type_index",E,E,3,[[["self"],["u32"]]]],[11,"build",E,E,3,[[],[R[1350]]]],[0,"func",R[1347],E,N,N],[3,"BlockFrame",R[1357],"Control stack frame.",N,N],[12,"started_with",E,"The opcode that started this block frame.",4,N],[12,"block_type",E,"A signature, which is a block signature type indicating…",4,N],[12,"value_stack_len",E,"A limit integer value, which is an index into the value…",4,N],[12,"polymorphic_stack",E,"Boolean which signals whether value stack became…",4,N],[3,R[1367],E,"Function validation context.",N,N],[12,"module",E,"Wasm module",5,N],[12,"locals",E,"Local variables.",5,N],[12,"value_stack",E,"Value stack.",5,N],[12,"frame_stack",E,"Frame stack.",5,N],[12,R[199],E,"Function return type.",5,N],[4,R[1368],E,"An opcode that opened the particular frame.",N,N],[13,"Block",E,E,6,N],[13,"If",E,E,6,N],[13,"Else",E,E,6,N],[13,"Loop",E,E,6,N],[4,R[1369],E,"Value type on the stack.",N,N],[13,"Any",E,"Any value type.",7,N],[13,"Specific",E,"Concrete value type.",7,N],[5,"drive",E,E,N,[[[R[1350]],[R[203]],["func"]],[[R[3],["error"]],["error"]]]],[5,"top_label",E,"Returns the top most frame from the frame stack.",N,[[[R[1351]]],[R[1352]]]],[5,"require_label",E,E,N,[[[R[1351]],["u32"]],[[R[1352]],["error"],[R[3],[R[1352],"error"]]]]],[11,"step",E,E,5,[[["self"],[R[165]]],[[R[3],["error"]],["error"]]]],[0,"util",R[1347],E,N,N],[3,"Locals",R[1358],"Locals are the concatenation of a slice of function…",N,N],[11,"new",E,"Create a new wrapper around declared variables and…",8,[[],[["locals"],["error"],[R[3],["locals","error"]]]]],[11,"param_count",E,"Returns parameter count.",8,[[["self"]],["u32"]]],[11,"count",E,"Returns total count of all declared locals and paramaterers.",8,[[["self"]],["u32"]]],[11,"type_of_local",E,"Returns the type of a local variable (either a declared…",8,[[["u32"],["self"]],[[R[158]],["error"],[R[3],[R[158],"error"]]]]],[17,"DEFAULT_MEMORY_INDEX",R[1347],"Index of default linear memory.",N,N],[17,"DEFAULT_TABLE_INDEX",E,"Index of default table.",N,N],[17,"LINEAR_MEMORY_MAX_PAGES",E,"Maximal number of pages that a wasm instance supports.",N,N],[8,"Validator",E,E,N,N],[16,"Output",E,E,9,N],[16,R[1353],E,E,9,N],[10,"new",E,E,9,[[["module"]],["self"]]],[10,R[1359],E,E,9,[[["self"],["u32"]]]],[10,"finish",E,E,9,[[]]],[8,R[1353],E,E,N,N],[16,"Output",E,E,10,N],[10,"new",E,E,10,[[[R[1354]],[R[203]]],["self"]]],[10,R[1360],E,E,10,[[["self"],[R[1354]],[R[165]]],[[R[3],["error"]],["error"]]]],[10,"finish",E,E,10,[[]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[78],E,E,0,[[["self"]],["string"]]],[11,R[20],E,E,0,[[[U]],[R[3]]]],[11,R[21],E,E,0,[[],[R[3]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"]],[R[46]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[20],E,E,11,[[[U]],[R[3]]]],[11,R[21],E,E,11,[[],[R[3]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[46]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[20],E,E,12,[[[U]],[R[3]]]],[11,R[21],E,E,12,[[],[R[3]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[46]]]],[11,"into",R[1355],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[78],E,E,13,[[["self"]],["string"]]],[11,R[20],E,E,13,[[[U]],[R[3]]]],[11,R[21],E,E,13,[[],[R[3]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"]],[R[46]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[20],E,E,1,[[[U]],[R[3]]]],[11,R[21],E,E,1,[[],[R[3]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[46]]]],[11,"into",R[1356],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[20],E,E,3,[[[U]],[R[3]]]],[11,R[21],E,E,3,[[],[R[3]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"]],[R[46]]]],[11,"into",R[1357],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"],[T]]]],[11,R[20],E,E,4,[[[U]],[R[3]]]],[11,R[21],E,E,4,[[],[R[3]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[46]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[20],E,E,5,[[[U]],[R[3]]]],[11,R[21],E,E,5,[[],[R[3]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"]],[R[46]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"],[T]]]],[11,R[20],E,E,6,[[[U]],[R[3]]]],[11,R[21],E,E,6,[[],[R[3]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"]],[R[46]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"],[T]]]],[11,R[20],E,E,7,[[[U]],[R[3]]]],[11,R[21],E,E,7,[[],[R[3]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[46]]]],[11,"into",R[1358],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[20],E,E,8,[[[U]],[R[3]]]],[11,R[21],E,E,8,[[],[R[3]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"]],[R[46]]]],[11,"new",R[1347],E,11,[[["module"]],["plainvalidator"]]],[11,R[1359],E,E,11,[[["self"],["u32"]]]],[11,"finish",E,E,11,[[]]],[11,"new",E,E,12,[[[R[1354]],[R[203]]],["plainfuncvalidator"]]],[11,R[1360],E,E,12,[[["self"],[R[1354]],[R[165]]],[[R[3],["error"]],["error"]]]],[11,"finish",E,E,12,[[]]],[11,"from",R[1357],E,7,[[[R[158]]],["self"]]],[11,"from",R[1347],E,0,[[["error"]],["error"]]],[11,"clone",R[1357],E,4,[[["self"]],[R[1352]]]],[11,"clone",E,E,6,[[["self"]],[R[1362]]]],[11,"clone",E,E,7,[[["self"]],[R[1363]]]],[11,R[90],R[1356],E,2,[[],[R[1350]]]],[11,R[90],E,E,3,[[],[R[1361]]]],[11,"eq",R[1357],E,6,[[[R[1362]],["self"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[1363]]],["bool"]]],[11,"eq",E,E,7,[[[R[158]],["self"]],["bool"]]],[11,"fmt",R[1355],E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1347],E,0,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1355],E,13,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1356],E,2,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1357],E,4,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1358],E,8,[[["self"],[R[37]]],[R[3]]]],[11,"fmt",R[1347],E,0,[[["self"],[R[37]]],[R[3]]]],[11,R[38],R[1355],E,13,[[["self"]],["str"]]],[11,R[38],R[1347],E,0,[[["self"]],["str"]]]],"p":[[3,"Error"],[3,R[1364]],[3,R[1365]],[3,R[1366]],[3,"BlockFrame"],[3,R[1367]],[4,R[1368]],[4,R[1369]],[3,"Locals"],[8,"Validator"],[8,R[1353]],[3,R[1370]],[3,R[1371]],[3,"Error"]]};
searchIndex["zeroize"]={"doc":"Securely zero memory with a simple trait ([Zeroize]) built…","i":[[24,"Zeroize","zeroize",E,N,N],[3,R[108],E,"`Zeroizing` is a a wrapper for any `Z: Zeroize` type which…",N,N],[8,"Zeroize",E,"Trait for securely erasing types from memory",N,N],[10,"zeroize",E,"Zero out this object from memory using Rust intrinsics…",0,[[["self"]]]],[8,"DefaultIsZeroes",E,"Marker trait for types whose `Default` is the desired…",N,N],[8,"TryZeroize",E,"Fallible trait for representing cases where zeroization…",N,N],[10,"try_zeroize",E,"Try to zero out this object from memory using Rust…",1,[[["self"]],["bool"]]],[11,"new",E,"Move value inside a `Zeroizing` wrapper which ensures it…",2,[[["z"]],["self"]]],[11,"zeroize",E,E,2,[[["self"]]]],[11,"from",E,E,2,[[],[T]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[20],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[21],E,E,2,[[],[R[3]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[46]]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"],[T]]]],[11,"zeroize",E,E,2,[[["self"]]]],[11,"from",E,E,2,[[["z"]],[R[2903]]]],[11,"fmt",E,E,2,[[["self"],[R[37]]],[R[3]]]],[11,"eq",E,E,2,[[[R[2903]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[2903]],["self"]],["bool"]]],[11,"deref",E,E,2,[[["self"]],["z"]]],[11,R[99],E,E,2,[[["self"]],["z"]]],[11,"drop",E,E,2,[[["self"]]]],[11,"clone",E,E,2,[[["self"]],[R[2903]]]]],"p":[[8,"Zeroize"],[8,"TryZeroize"],[3,R[108]]]};
searchIndex["zeroize_derive"]={"doc":"Custom derive support for `zeroize`","i":[[24,"Zeroize","zeroize_derive",E,N,N]],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);